{"Commerce": {"togo420": {"tool_desc": "Our Cannabis API is built both for efficiency and simplicity.", "apis": [["Our Catalogue", "This endpoint allows developers to view our inventory catalogue with inventory quantities, product images, product descriptions, etc."]]}, "GST advance": {"tool_desc": "get data from GST and also get owner details with Turnover details", "apis": [["GST", "Used to verify GST Number"]]}, "Ebay Search Result": {"tool_desc": "API Returns necessary information from Ebay search page results, such as the price, title, shipping cost and direct url to the product", "apis": [["Search on ebay", "Enter anything you want to search for on Ebay website."]]}, "Aliexpress True API": {"tool_desc": "Fetching data from AliExpress instantly using an powerful oracle server.", "apis": [["Hot Products", "Get hot products by search value, you can set maximum search price too. You will get up to 50 results."], ["Product by ID", "Get entirely a single product and all possible values comes from it including images, videos and all product data."]]}, "Name compare": {"tool_desc": "IDfy\u2019s Name Compare API ensures that the documents provided to you belong to the individuals you expect them to.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Check Disposable Email": {"tool_desc": "Easily check if a certain e-mail address is valid.", "apis": [["checkDisposableEmail", "REST API to lookup disposable email"], ["emailValidation", "Clean your email list database with our free email checker and verifier"], ["newlyRegisteredDomains", "REST API to lookup newly registered domains"], ["whois", "REST API to WhoIS lookup data"]]}, "Shoes collections": {"tool_desc": "This api provides you 30 random shoes ..", "apis": [["Get a specific item", "This will return a specific item from the collection ..,simpily write the id of the product and you will get the product"], ["Get all the shoes", "This end point return the collection of shoes"]]}, "Patreon": {"tool_desc": "Search Creators and get their details and posts from Patreon (Unofficial)", "apis": [["Posts", "Get posts of a Creator with the `creator_id`. The `cursor` to the next page will be returned with this request."], ["Details", "Get the details and general information of a Creator with the `creator_id`."], ["Search for Creators", "Search for Creators on Patreon using the `search_query`."]]}, "ShopeeApi": {"tool_desc": "Shopee product search api & product details api", "apis": [["Search products", "Search product & Paginate"], ["Product details", "Get shopee product details"]]}, "Used GPU Pricing": {"tool_desc": "The API provides a simple endpoint that allows you to retrieve used prices of gpus on ebay.", "apis": [["Get Prices", "Retrieves used prices of all GPUs, the following prices are in USD."]]}, "sandbox mktplace eu - 04 orders": {"tool_desc": "sandbox.mktplace.eu - 04 orders", "apis": [["getthelistofcountriesregistered", "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html"], ["listoforders", "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html"]]}, "sandbox mktplace eu  01 products": {"tool_desc": "sandbox.mktplace.eu - 01 products", "apis": [["listofattributeandvalueoptions", "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html"], ["listcategoriesandsub-categories", "API Instructions:  https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html"]]}, "Etsy": {"tool_desc": "Buy and sell handmade or vintage items, art and supplies on Etsy, the world's most vibrant handmade marketplace.", "apis": [["findAllListingActive", "Finds all active Listings. (Note: the sort_on and sort_order options only work when combined with one of the search options: keywords, color, tags, location, etc.)"], ["getInterestingListings", "Collects the list of interesting listings"], ["getTrendingListings", "Collects the list of listings used to generate the trending listing page"], ["findAllCurrentFeaturedListings", "Finds FeaturedTreasury listings that are currently displayed on a regional homepage."]]}, "Face Compare": {"tool_desc": "This API compares and finds similarity between 2 face images.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "FSSAI License Verification": {"tool_desc": "Used to check if the vendor has a valid fssai certificate to produce and sell food and beverages.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Amazon_API_v2": {"tool_desc": "Amazon_API", "apis": [["/Smart_Phones", "<br /><br />\n<b>Authentication:</b> not required"], ["/Laptops", "<br /><br />\n<b>Authentication:</b> not required"], ["/BCAA", "<br /><br />\n<b>Authentication:</b> not required"], ["/Headphones", "<br /><br />\n<b>Authentication:</b> not required"]]}, "E-mail Check Invalid or Disposable Domain_v2": {"tool_desc": "Easily check if a certain e-mail address is valid.", "apis": [["mailcheck", "Check if e-mail domain is valid, or a disposable/temporary address. Invalid domains (typos, non-responding mailserver, etc) will return \"valid: false\", \"block: true\". Disposable e-mail domains will return \"valid: true\" (since it's a valid domain), but \"block: true\" and \"disposable: true\"."]]}, "789club New": {"tool_desc": "789CLUB \u2013 Nh\u00e0 c\u00e1i game b\u00e0i \u0111\u1ed5i th\u01b0\u1edfng m\u1edbi nh\u1ea5t.", "apis": [["789club New", "789CLUB \u2013 Nh\u00e0 c\u00e1i game b\u00e0i \u0111\u1ed5i th\u01b0\u1edfng m\u1edbi nh\u1ea5t. \u0110a d\u1ea1ng tr\u00f2 ch\u01a1i: game b\u00e0i, b\u1eafn c\u00e1, n\u1ed5 h\u0169. \nWebsite: https://789club.news/"]]}, "Flance AliExpress": {"tool_desc": "API to request the Aliexpress data for dropshipping activity.", "apis": [["product_id", "Get Aliexpress Data by Product Id"]]}, "Tokopedia Super API": {"tool_desc": "Unleash the Power of Tokopedia: Effortlessly Retrieve Shop and Product Information with Our API!", "apis": [["sortProductsMaster", "the list of available sorting methods"]]}, "sandbox ecombr com - 04 orders": {"tool_desc": "sandbox.ecombr.com - 04 orders", "apis": [["listoforders", "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html"], ["getthelistofcountriesregistered", "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html"]]}, "Amazon Live Data": {"tool_desc": "Get Amazon Live Data - Fast and reliable - The best for dropshipping", "apis": [["Get Asin", "This endpoint get data from Amazon ASIN. You have to select a supported locale (us, uk, de, fr, es, it)."]]}, "sandbox ecombr com - 01 products": {"tool_desc": "sandbox.ecombr.com - 01 products", "apis": [["listofattributeandvalueoptions", "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html"], ["listcategoriesandsub-categories", "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html"]]}, "Argaam Data APIs Free": {"tool_desc": "Free APIs By Argaam", "apis": [["Get Regular Commodities", "Get List of Regular Commodities with Quotes"]]}, "India - Pan card OCR": {"tool_desc": "This API allows you to extract text from an image of a PAN card.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "TokopediaApi": {"tool_desc": "Search & Product Details Api", "apis": [["Get Product Detail", "Get Product Detail By Provide Slug"]]}, "Cartify": {"tool_desc": "Welcome to our e-commerce API!", "apis": [["getOrders", "The endpoint retrieves all orders.\n\nSet the authorization to \"Bearer admin\" to authorize that the admin can check and confirm all orders.\n\nYou should get a JSON object with the following attributes;\nid (integer): The unique identifier for the order.\ndeliveryDate(Date): The date that the user wants the order to be delivered\ndestination(String): Location\nAlongside with the user who ordered the product"], ["getProducts", "This endpoint gets all products in the database.\n\nA list of products in the store, with the following attributes:\n\nid (integer): The unique identifier for the product.\ntitle (string): The name of the product.\ncategory (string): A description of the product.\nprice (number): The price of the product.\nimage_url (string): A URL to an image of the product."], ["getProductByName", "This endpoint filters through the products database and brings out results based on the preferences you want.\n\nFor a valid response, it takes a path parameter which is required which takes the name of the product you would want."], ["getProductByCategory", "Do you want to search for a product by category?\nUse the category of the product in the path parameter.\n\nFor example,\nAre you looking for Phones? Use Phones in your path parameter"], ["getOrdersbyEmail", "For a valid response, fill in the email of the user in the path parameter. This is helpful instead of looping from the userId since the users can't have or use the same email. To also verify that it is an authenticated user trying to get his/her order, fill in an authorization header that takes the token of the user.....\nFor example, \n\"Bearer <access_token>"], ["getAllUsers", "For a valid response, you would need to have an authorization header and set the role to *Bearer admin*."]]}, "Inventory and eCommerce hosted and self-hosted solution": {"tool_desc": "Use this API to establish an omni channel eCommerce website with a full front end JS GUI to interact with it.", "apis": [["Open variation", "Open the specified variation."], ["Open service", "Open the specified service id"], ["List Services", "List all of the services within your account"]]}, "mrautoparts": {"tool_desc": "find car parts and  low pricing", "apis": [["Disclaimer", "we do not guarantee  product safety or prices"], ["subscribe", "add email for additional savings"]]}, "Ebay": {"tool_desc": "Get Products from Ebay (Unofficial)", "apis": [["Product Details", "Get the product details for a given product id and a specific country.\nDefault country is `United States`.\nSpecify country with country name or country code.\n\nAllowed countries:\nDefault: `us`\n- Germany (de)\n- France (fr)\n- Australia (au)\n- Austria (at)\n- Canada (ca)\n- Hong Kong (hk)\n- Ireland (ie)\n- Italy (it)\n- Malaysia (my)\n- Netherlands (nl)\n- Singapore (sg)\n- Switzerland (ch)\n- United Kingdom (uk)"], ["Search Products", "Search for products on Ebay in specific country.\nReturns the `last_page` that can be scraped for the specific `search_query`.\nDefault country is `United States`.\nSpecify country with country name or country code.\n\nAllowed countries:\nDefault: `us`\n- Germany (de)\n- France (fr)\n- Australia (au)\n- Austria (at)\n- Canada (ca)\n- Hong Kong (hk)\n- Ireland (ie)\n- Italy (it)\n- Malaysia (my)\n- Netherlands (nl)\n- Singapore (sg)\n- Switzerland (ch)\n- United Kingdom (uk)"]]}, "resumeAPI": {"tool_desc": "Bunch of mein seld descriptions?", "apis": [["imtired", "imtiredss sada sd asdas"]]}, "Apfelpreise": {"tool_desc": "market data for used apple products", "apis": [["price", "Get latest average price for manufacturer number"]]}, "My Store": {"tool_desc": "My Store API", "apis": [["Get Products", "Get all products in the store"]]}}, "Mapping": {"uk.boundaries.io": {"tool_desc": "UK Postal Code(ex.", "apis": [["Retrieve UK Postal Sector Outline Boundaries", "example: Query by \"W41,W42\" sectors."], ["Retrieve UK Postal District Outline Boundaries", "example: Query by \"TW12\" district"], ["Query for Postal Code Unit Boundary( H3 Geo Boundary )", "Query for Postal Unit Boundary (ex. ZE1 0AE) \n\nhttps://eng.uber.com/"], ["Query for Postal Unit Boundary by H3Index", "Query for Postal Unit Boundary by H3Index\n\nIf  a Postal Unit code exists within this hexagon a boundary is returned.\nadjusting the resolution(0-16) increases the hexagon area.\n\nhttps://eng.uber.com/"]]}, "Offline MapTiles": {"tool_desc": "Download map tiles for offline use (intranet, offline devices).", "apis": [["/local/osm/v1/{z}/{x}/{y}.png", "Download OpenStreetMap standard tile"]]}, "Dargan": {"tool_desc": "Limitless radial search from UK postcodes with distance and coordinate information returned", "apis": [["Distance", "Gets the distance between 2 postcodes in KM"], ["Geocode", "Returns the latitude and longitude for a given postcode"], ["In Radius", "Find all postcodes within a certain radius (in KM) of a postcode"]]}, "TrueWay Places": {"tool_desc": "Search for places.", "apis": [["FindPlacesNearby", "Search for nearby places"], ["FindPlaceByText", "Search for places by text string"]]}, "Zip Code to State Converter": {"tool_desc": "A very simple API that accepts a US ZIP code as an input, and returns the state that it is in.", "apis": [["Exchange Zip Code for State", "The endpoint to pass a zip code as a query parameter and get the state the zip code is located in as a response."]]}, "de-boundaries-io": {"tool_desc": "A Germany PostalCode Boundaries API", "apis": [["Query for Postal Code Boundary By location", "Query for Postal Code By location"], ["Query for City Names by State", "Query for list of city names by a state name."], ["Query for City Boundary by Name", "Query for City Boundary by City Name"]]}, "Fast Routing": {"tool_desc": "Fast Routing API including turn-by-turn directions with worldwide coverage and high availability.", "apis": [["Get Route", "Get a driving route for cars (with turn-by-turn directions) by submitting (at least) a start- and endpoint."]]}, "Address Normalization and Geocoding": {"tool_desc": "Takes free text address input, standardizes and outputs rooftop latitude/longitude geocode coordinates.", "apis": [["Geocoding", "Returns standard, normalized address and geocode lat/long rooftop coordinates."]]}, "Forward & Reverse Geocoding": {"tool_desc": "", "apis": [["ForwardGeocoding", "Turn an address into latitude and longitude (e.g. to display on a map) by schematic input."], ["ReverseGeocoding", "Find address or place by latitude and longitude"], ["GeocodingSearch", "Free-form query forward geocoding."]]}, "Reverse Geocoding and Geolocation Service": {"tool_desc": "Find nearest or largest city information or timezone for any given point location (latitude/longitude).", "apis": [["GetTimezone", "Finds the local timezone for any given geo-location point by lat and long and returns timezone information with Timezone name, Timezone id and current local time."], ["GetNearestCities", "Returns a readable place name as nearest 3 cities with population, country and distance based on given latitude/longitude pair."], ["GetLargestCities", "Returns 5 largest cities within a given radial range with name, population, country and distance."]]}, "SpatialScale Route Engine": {"tool_desc": "The SpatialScale Route Engine provides turn by turn route directions, isochrone/travel time area generation,  and map matching web services covering Noth America.", "apis": [["Get Route", "Given a list of locations, the route service provides details about the trip,\nincluding locations, a summary with basic information about the entire trip, and a list of legs.\n\n**Locations**\n\nYou specify locations as an ordered list of two or more locations within a JSON array. Locations are visited in the order specified.\n\nA location must include a latitude and longitude in decimal degrees. The coordinates can come from many input sources, such as a GPS location, a point or a click on a map, a geocoding service, and so on.\n\nTo build a route, you need to specify two `break` locations. In addition, you can include `through`, `via` or `break_through` locations to influence the route path.\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Location parameters</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>lat</code></td>\n    <td>\nLatitude of the location in degrees. This is assumed to be both the routing location and the display location if no <code>display_lat</code> and <code>display_lon</code> are provided.\n    </td>\n</tr>\n<tr>\n    <td><code>lon</code></td>\n    <td>\nLongitude of the location in degrees. This is assumed to be both the routing location and the display location if no <code>display_lat</code> and <code>display_lon</code> are provided.\n    </td>\n</tr>\n<tr>\n    <td><code>type</code></td>\n    <td>\n\tType of location, either <code>break</code>, <code>through</code>, <code>via</code> or <code>break_through</code>. Each type controls two characteristics: whether or not to allow a u-turn at the location and whether or not to generate guidance/legs at the location. A <code>break</code> is a location at which we allows u-turns and generate legs and arrival/departure maneuvers. A <code>through</code> location is a location at which we neither allow u-turns nor generate legs or arrival/departure maneuvers. A <code>via</code> location is a location at which we allow u-turns but do not generate legs or arrival/departure maneuvers. A <code>break_through</code> location is a location at which we do not allow u-turns but do generate legs and arrival/departure maneuvers. If no type is provided, the type is assumed to be a <code>break</code>. The types of the first and last locations are ignored and are treated as breaks.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>\n\n**Costing models**\n\nThe routing service uses dynamic, run-time costing to generate the route path. The route request must include the name of the costing model and can include optional parameters available for the chosen costing model.\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Costing model</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>auto</code></td>\n    <td>\n\tStandard costing for driving routes by car, motorcycle, truck, and so on that obeys automobile driving rules, such as access and turn restrictions. <code>Auto</code> provides a short time path (though not guaranteed to be shortest time) and uses intersection costing to minimize turns and maneuvers or road name changes. Routes also tend to favor highways and higher classification roads, such as motorways and trunks.\n    </td>\n</tr>\n<tr>\n    <td><code>bicycle</code></td>\n    <td>\n\tStandard costing for travel by bicycle, with a slight preference for using <a href=\"http://wiki.openstreetmap.org/wiki/Key:cycleway\" target=\"_blank\">cycleways</a> or roads with bicycle lanes. Bicycle routes follow regular roads when needed, but avoid roads without bicycle access.\n    </td>\n</tr>\n<tr>\n    <td><code>bus</code></td>\n    <td>\n\tStandard costing for bus routes. Bus costing inherits the auto costing behaviors, but checks for bus access on the roads.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>"], ["Get Isochrone", "The isochrone service computes areas that are reachable within specified time intervals from a location,\nand returns the reachable regions as contours of polygons or lines that you can display on a map.\n\n**Costing parameters**\n\nThe isochrone service uses the auto, bicycle, pedestrian, and multimodal costing models available in the Turn-by-Turn service.\nRefer to the route costing models and costing options documentation for more on how to specify this input.\n\n**Other request parameters**\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Parameter</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>date_time</code></td>\n    <td>\n        The local date and time at the location. These parameters apply only for multimodal requests and are not used with other costing methods.\n        <ul>\n            <li><code>type</code></li>\n            <ul>\n                <li>0 - Current departure time for multimodal requests.</li>\n                <li>1 - Specified departure time for multimodal requests.</li>\n                <li>2 - Specified arrival time. Note: This is not yet implemented.</li>\n            </ul>\n            <li><code>value</code> - the date and time specified in ISO 8601 format (YYYY-MM-DDThh:mm) in the local time zone of departure or arrival. For example, \"2016-07-03T08:06\".\n            </li>\n        </ul>\n    </td>\n</tr>\n<tr>\n    <td><code>id</code></td>\n    <td>\n        Name of the isochrone request. If <code>id</code> is specified, the name is returned with the response.\n    </td>\n</tr>\n<tr>\n    <td><code>contours</code></td>\n    <td>\n        A JSON array of contour objects with the time in minutes or distance in kilometers and color to use for each isochrone contour. You can specify up to four contours (by default).\n        <ul>\n            <li><code>time</code> - A floating point value specifying the time in minutes for the contour.\n            </li>\n            <li><code>distance</code> - A floating point value specifying the distance in kilometers for the contour.\n            </li>\n            <li><code>color</code> -The color for the output of the contour. Specify it as a Hex value, but without the <code>#</code>, such as <code>\"color\":\"ff0000\"</code> for red. If no color is specified, the isochrone service will assign a default color to the output.\n            </li>\n        </ul>\n        You can only specify one metric per contour, i.e. time or distance.\n    </td>\n</tr>\n<tr>\n    <td><code>polygons</code></td>\n    <td>\n        A Boolean value to determine whether to return geojson polygons or linestrings as the contours. The default is <code>false</code>, which returns lines; when <code>true</code>, polygons are returned. Note: When <code>polygons</code> is <code>true</code>, any contour that forms a ring is returned as a polygon.\n    </td>\n</tr>\n<tr>\n    <td><code>generalize</code></td>\n    <td>\n        A floating point value in meters used as the tolerance for Douglas-Peucker generalization. Note: Generalization of contours can lead to self-intersections, as well as intersections of adjacent contours.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>"]]}, "Compare Route Names": {"tool_desc": "Calculates the coefficient of how similar are 2 strings containing the name (and type) of the route.", "apis": [["Compare Route Names", "Calculates the coefficient of how similar are 2 strings containing the name (and type) of the route. With a value of 0.9 and higher, it is possible to do auto-matching,at 0.2-0.9 - visual matching."]]}, "Places": {"tool_desc": "Over 10 million tourist attractions and facilities around the world", "apis": [["Geographic coordinates by placename", "Returns geographic coordinates for the given placename (city, village, etc.). The method returns the place whose name is most similar to the search string."], ["Places list by radius (Nearby Search)", "Method returns objects closest to the selected point optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format."], ["Places list by bounding box", "Method returns all objects (or number of objects) in the given boundary box optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format."], ["Place properties", "Returns detailed information about the object. Objects can contain different amount of information."], ["Autosuggest", "Method returns suggestions for search term closest to the selected point optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format."]]}, "NAVITIME Maps": {"tool_desc": "Get a JavaScript file or map as an image on web pages.", "apis": [["map_script", "Get a JavaScript file to control the tile map that runs on the browser."], ["map_image(GET)", "Get a static map image of the location, range and zoom value specified in the parameter."]]}, "Mexico ZIP Codes": {"tool_desc": "", "apis": [["Search zip codes", "Search for valid zip codes with starting digits"], ["Zip Code Information", "Retrieves the information of a particular zip code"]]}, "Reverse Geocode Locator (U.S)": {"tool_desc": "Enter coordinates (latitude, longitude) to look up the location info within the US.", "apis": [["Lookup Coordinates", "Convert US latitude and longitude coordinates into local city information"]]}, "Organizaci\u00f3n territorial de Espa\u00f1a": {"tool_desc": "Es una API completa que proporciona informaci\u00f3n detallada sobre municipios, provincias y comunidades aut\u00f3nomas en Espa\u00f1a.", "apis": [["Lista de municipios por provincia", "Lista todas lps municipios  de una provincia"], ["Lista de provincias por Comunidad Aut\u00f3noma", "Lista todas las provincias de una Comunidad Aut\u00f3noma"], ["Lista de provincias", "Lista el nombre y el id de todas las provincias de Espa\u00f1a"], ["Lista de Comunidades Aut\u00f3nomas", "Lista el nombre y el id de todas las Comunidades Aut\u00f3nomas de Espa\u00f1a"]]}, "Verify PAN Aadhaar link_v2": {"tool_desc": "Reduce the risk of fraud on your platform by onboarding only those individuals whose PAN is linked with their Aadhaar, in accordance with the laws of India.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Geocoding by API-Ninjas": {"tool_desc": "Convert city locations to latitude/longitude coordinates and vice versa.", "apis": [["/v1/geocoding", "API Ninjas Geocoding API endpoint."], ["/v1/reversegeocoding", "API Ninjas Reverse Geocoding API endpoint."]]}, "MapTiles": {"tool_desc": "Map Tiles for interactive online maps based on data by OpenStreetMap contributors with labels in English, French or Spanish.", "apis": [["getMapTilewithSpanishLabels", "Raster Map Tiles with Spanish Labels. Please see [tutorial](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials/openstreetmap-in-spanish---add-a-spanish-map-to-your-website-with-leaflet-js-and-maptiles-api) on how to use the Spanish world map."], ["getMapTilewithEnglishLabels", "Raster Map Tiles with English Labels. Please see our [tutorials page](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials) on how to use this."], ["getMapTilewithFrenchLabels", "Raster Map Tiles with French Labels"], ["getStandardMapTile", "Standard tiles with labels in local language for a place (untranslated and untransliterated) as known from OpenStreetMap"]]}, "MapFanAPI - Map": {"tool_desc": "MapFan API \u306e\u5730\u56f3API\u3067\u3059\u3002\u30b9\u30af\u30ed\u30fc\u30eb\u5730\u56f3\u306b\u5fc5\u8981\u306aWMTS\u5f62\u5f0f\u306e\u5730\u56f3\u753b\u50cf\u3084\u3001\u6307\u5b9a\u3055\u308c\u305f\u7def\u5ea6\u7d4c\u5ea6\u30fb\u30b5\u30a4\u30ba\u30fb\u7e2e\u5c3a\u306e\u9759\u6b62\u753b\u5730\u56f3\u753b\u50cf\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002", "apis": [["map", "## \u5730\u56f3\u753b\u50cf\u53d6\u5f97\nWMTS\u5f62\u5f0f\u306e\u5730\u56f3\u753b\u50cf\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n`tilematrix`, `tilerow`, `tilecol` \u3067\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u306e\u5730\u56f3\u753b\u50cf\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u672c\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u7528\u3044\u3066\u30b9\u30af\u30ed\u30fc\u30eb\u5730\u56f3\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u306b\u3064\u304d\u307e\u3057\u3066\u306f\u3001 [\u3053\u3061\u3089\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](https://rapidapi.com/ja/geotechnologies12-geotechnologies-default/api/mapfanapi-map/tutorials/leaflet%E3%81%AE%E3%82%BF%E3%82%A4%E3%83%AB%E3%83%AC%E3%82%A4%E3%83%A4%E3%83%BCurl%E3%81%AB%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B%EF%BC%88rapidapi%E3%81%AEmap%E3%82%A8%E3%83%B3%E3%83%89%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%81%AE%E5%88%A9%E7%94%A8%EF%BC%89) \u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002"], ["mapimage", "## \u30b5\u30a4\u30ba\u6307\u5b9a\u5730\u56f3\u753b\u50cf\u53d6\u5f97\n\u6307\u5b9a\u3055\u308c\u305f\u7def\u5ea6\u7d4c\u5ea6\u3001\u30b5\u30a4\u30ba\u3001\u7e2e\u5c3a\u306e\u5730\u56f3\u753b\u50cf\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n`size`, `lonlat`, `scale` \u3067\u6307\u5b9a\u3057\u305f\u753b\u50cf\u30b5\u30a4\u30ba\u3001\u4f4d\u7f6e\u3001\u30b9\u30b1\u30fc\u30eb\u306e\u5730\u56f3\u753b\u50cf\u3092\u8fd4\u3057\u307e\u3059\u3002\nresolution\u3067\u89e3\u50cf\u5ea6\u306b2\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001size\u3067\u6307\u5b9a\u3057\u305f\u753b\u50cf\u30b5\u30a4\u30ba\u306e2\u500d\u306e\u753b\u50cf\u30b5\u30a4\u30ba\u3067\u8fd4\u3055\u308c\u307e\u3059\u3002"]]}, "LocationIQ": {"tool_desc": "Affordable geocoding, routing and map tile APIs.", "apis": [["Matrix", "Computes duration of the fastest route between all pairs of supplied coordinates. Returns the durations or distances or both between the coordinate pairs. Note that the distances are not the shortest distance between two coordinates, but rather the distances of the fastest routes."], ["autocomplete", "The Autocomplete API is a variant of the Search API that returns place predictions in response to an HTTP request.  The request specifies a textual search string and optional geographic bounds.  The service can be used to provide autocomplete functionality for text-based geographic searches, by returning places such as businesses, addresses and points of interest as a user types. The Autocomplete API can match on full words as well as substrings. Applications can therefore send queries as the user types, to provide on-the-fly place predictions."], ["reverse", "Reverse geocoding is the process of converting a coordinate or location (latitude, longitude) to a readable address or place name. This permits the identification of nearby street addresses, places, and/or area subdivisions such as a neighborhood, county, state, or country."], ["balance", "The Balance API provides a count of request credits left in the user's account for the day. Balance is reset at midnight UTC everyday (00:00 UTC)."], ["search", "The Search API allows converting addresses, such as a street address, into geographic coordinates (latitude and longitude). These coordinates can serve various use-cases, from placing markers on a map to helping algorithms determine nearby bus stops. This process is also known as Forward Geocoding."], ["Matching", "Matching API matches or snaps given GPS points to the road network in the most plausible way.  Please note the request might result multiple sub-traces.  Large jumps in the timestamps (> 60s) or improbable transitions lead to trace splits if a complete matching could not be found. The algorithm might not be able to match all points. Outliers are removed if they can not be matched successfully."], ["Directions", "Finds the fastest route between coordinates in the supplied order."], ["Nearest", "Snaps a coordinate to the street network and returns the nearest n matches. Where coordinates only supports a single {longitude},{latitude} entry."]]}, "MapToolkit": {"tool_desc": "A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation", "apis": [["Routing Enhancement", "Create a routing along a specific cycleway"], ["Route Enhancement", "Enhance your GPX-file with elevation, surface and mapmatching"], ["Global Terrain Winter", "Global Terrain Tiles with winter colors."], ["Planet Vector Tiles", "Global planet vector tiles."], ["Planet & Contour Vectortiles", "Global Vectortiles combined with Contourlines."], ["Hillshading", "Global raster hillshading tiles."], ["Global Light Tiles", "Global mostly grayscale tiles."]]}, "Mapilion - Vector and Raster Map Tiles": {"tool_desc": "Mapilion provides you with vector and raster map tiles at scale.", "apis": [["Get Vector Tile", "Returns Vector tiles following the OpenMapTiles schema"], ["Get Hillshading Tile", "Returns special hillshading Raster tiles as PNG. Hillshading can be used as an overlay to create the look and feel of mountains. The version can be either v1 or v2."], ["Get Tile Json", "Returns the tile json for the give style. Currently there are three different types:\n- `v3` the OpenMapTiles compatible vector tiles\n- `hillshading-v1` Hillshading tiles Version 1\n- `hillshading-v2` Hillshading tiles Version 2"], ["Get Fonts", "Returns Fonts for vector tiles. This endpoint is typically used in your style.json."], ["Get Style Json", "Returns the style json for the given style. These are pre-configured styles to get started easily. For advanced use cases we recommend to extend these styles or create a new style. The following styles are currently available:\n- `osm-bright` Osm-Bright\n- `osm-bright-hillshading-v1` Osm-Bright with Hillshading V1 overlay\n- `osm-bright-hillshading-v2` Osm-Bright with Hillshading V2 overlay\n- `dark-matter` A dark map style."], ["Get Raster Tile", "Returns Raster tiles as PNG. These can be used in mapping libraries like Leaflet. The style-name can be one of:\n- `kurviger-liberty` a map style developed for Kurviger.de\n- `osm-bright` the default Osm Bright style"]]}, "ArcGIS Platform Geocoding": {"tool_desc": "The Geocoding service finds addresses, businesses, and places around the world.", "apis": [["Bulk geocoding", "Geocode an entire list of addresses in one request using the geocodeAddresses operation. Geocoding many addresses at once is also known as batch or bulk geocoding.\n\n![bulk geocoding](https://developers.arcgis.com/rest/geocode/api-reference/GUID-FD609701-B9B5-49DB-BFD9-A936280A09C6-web.png)\n\n[API reference `geocodeAddresses` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-geocode-addresses.htm)"], ["Autocomplete suggestions", "The ArcGIS World Geocoding Service includes a method that allows character-by-character autocomplete suggestions to be generated for user input in a client application. This capability facilitates the interactive search user experience by reducing the number of characters that need to be typed before a suggested match is obtained. The idea is that a client application can provide a list of suggestions that is updated with each character entered by a user until the place they are looking for is returned in the list.\n\n![Autocomplete diagram](https://developers.arcgis.com/rest/geocode/api-reference/GUID-9A754AFE-8154-46C3-8A31-3566963F971E-web.png)\n\n[API reference `suggest` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-suggest.htm)"], ["Search address", "The findAddressCandidates operation geocodes one location per request; the input address can be combined into a single input field or divided among multiple parameters.\n\n![geoceode screenshot](https://developers.arcgis.com/rest/geocode/api-reference/GUID-F2F78690-5FB5-4BF1-8633-26BF184C45A9-web.png)\n\n[API reference for `findAddressCandidates` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-find-address-candidates.htm)"]]}, "Heightmap from Latitude and Longitude": {"tool_desc": "You provide coordinates(latitude, longitude) and api returns height map.", "apis": [["get heightmap from two geopoints", "you provide two geopoints( latitude, longitude). Server returns image/png with heightmap within this borders."]]}, "TrueWay Geocoding": {"tool_desc": "Forward and Reverse Geocoding", "apis": [["ReverseGeocode", "Obtain address for location"], ["Geocode", "Obtain geocoordinates for address"]]}, "ca.boundaries.io": {"tool_desc": "CA Postal Code(ex.", "apis": [["Query by FSA Code", "Query by Postal FSA ( example T6H )"], ["Query for Hexagon by H3Index", "Create a h3 hexagon with any h3Index value in the world."], ["Query for LDU Boundary by Location and Resolution", "Query for LDU H3 Boundary by Location and Resolution"], ["Query for LDU Boundary by H3Index", "Query for Boundary by H3Index.\nQuery for a LDU boundary by H3 Index, if a LDU Postal Code does not exist within the H3 Index Hexagon, an empty FeatureCollection is returned.\n\n**H3Index resolution must be greater than 8.**"], ["Query for LDU boundary", "Query by a LDU Postal Code"]]}, "Geocode - Forward and Reverse": {"tool_desc": "Forward and reverse geocoding using Google Geocoding API.", "apis": [["Forward geocode", "Get lat,lng coordinates from an address."], ["Reverse geocode", "Get an address from a lat,lng coordinate."]]}, "MapFanAPI - Route": {"tool_desc": "MapFan API \u306e\u30eb\u30fc\u30c8\u691c\u7d22\uff08\u7d4c\u8def\u63a2\u7d22\uff09API\u3067\u3059\u3002\u30ab\u30fc\u30ca\u30d3\u3067\u5b9f\u7e3e\u306e\u3042\u308b\u672c\u683c\u7684\u306a\u30eb\u30fc\u30c8\u691c\u7d22\u3001\u5927\u578b\u8eca\u898f\u5236\u3084\u6b69\u884c\u8005\u5411\u3051\u306a\u3069\u7279\u6b8a\u306a\u72b6\u6cc1\u3092\u8003\u616e\u3057\u305f\u30eb\u30fc\u30c8\u691c\u7d22\u306b\u52a0\u3048\u3001\u6307\u5b9a\u4f4d\u7f6e\u4ed8\u8fd1\u306e\u9053\u8def\u306e\u9053\u8def\u540d\u30fb\u4ea4\u5dee\u70b9\u540d\u30fb\u4fe1\u53f7\u6709\u7121\u7b49\u306e\u9053\u8def\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002", "apis": [["calcroute", "## \u30eb\u30fc\u30c8\u691c\u7d22\n\u30eb\u30fc\u30c8\u691c\u7d22\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n#### \u6ce8\u8a18\n\u30eb\u30fc\u30c8\u691c\u7d22API\u3092\u5b9f\u884c\u3059\u308b\u969b\u3001\u8ddd\u96e2\u306e\u9577\u3055\u3084\u691c\u7d22\u6761\u4ef6\u306b\u3088\u3063\u3066\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u5374\u3055\u308c\u308b\u307e\u3067\u6642\u9593\u304c\u304b\u304b\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002"], ["multicalcroute", "## \u8907\u6570\u30eb\u30fc\u30c8\u691c\u7d22\n\u8907\u6570\u30eb\u30fc\u30c8\u691c\u7d22\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n\u4e00\u5ea6\u306eAPI\u306e\u5b9f\u884c\u3067\u3001\u4ee5\u4e0b3\u3064\u306e\u6761\u4ef6\u3067\u5b9f\u884c\u3057\u305f`calcroute`\u3068\u540c\u7b49\u306e\u30eb\u30fc\u30c8\u691c\u7d22\u7d50\u679c\u3092\u540c\u6642\u306b\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n|\u30eb\u30fc\u30c8\u756a\u53f7|\u5185\u5bb9|priority|tollway|\n|---|---|---|---|\n|1|\u6a19\u6e96|0\uff08\u6a19\u6e96\uff09|0\uff08\u6a19\u6e96\uff09|\n|2|\u6709\u6599\u56de\u907f|0\uff08\u6a19\u6e96\uff09|2\uff08\u56de\u907f\uff09|\n|3|\u8ddd\u96e2\u512a\u5148|1\uff08\u8ddd\u96e2\u512a\u5148\uff09|0\uff08\u6a19\u6e96\uff09|\n\n#### \u6ce8\u8a18\n- \u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u8a98\u5c0e\u30c7\u30fc\u30bf\u306f\u542b\u307e\u308c\u307e\u305b\u3093\u3002\u8a98\u5c0e\u30c7\u30fc\u30bf\u306f\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u306e`routeResultId`\u3092\u7528\u3044\u3066`calcroute`\u3092\u5b9f\u884c\u3057\u3066\u53d6\u5f97\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n- \u30eb\u30fc\u30c8\u691c\u7d22API\u3092\u5b9f\u884c\u3059\u308b\u969b\u3001\u8ddd\u96e2\u306e\u9577\u3055\u3084\u691c\u7d22\u6761\u4ef6\u306b\u3088\u3063\u3066\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u5374\u3055\u308c\u308b\u307e\u3067\u6642\u9593\u304c\u304b\u304b\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002"], ["altcalcroute", "## \u8907\u6570\u63a8\u5968\u30eb\u30fc\u30c8\u691c\u7d22\n\u8907\u6570\u63a8\u5968\u30eb\u30fc\u30c8\u691c\u7d22\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n1\u7d44\u306e\u30eb\u30fc\u30c8\u691c\u7d22\u6761\u4ef6\u306b\u5bfe\u3057\u3001`calcroute`\u306e\u7d50\u679c\u3092\u300c\u63a8\u59681\u300d\u3068\u3057\u3066\u3001\u305d\u306e\u4ed6\u306e\u30eb\u30fc\u30c8\u6848\u3092\u300c\u63a8\u59682\u300d\u300c\u63a8\u59683\u300d\u3068\u3057\u3066\u6700\u59273\u4ef6\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\u305d\u306e\u4ed6\u306e\u63a8\u5968\u30eb\u30fc\u30c8\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u3001\u300c\u63a8\u59682\u300d\u300c\u63a8\u59683\u300d\u306f\u8fd4\u5374\u3055\u308c\u307e\u305b\u3093\u3002\n\n#### \u6ce8\u8a18\n\u30eb\u30fc\u30c8\u691c\u7d22API\u3092\u5b9f\u884c\u3059\u308b\u969b\u3001\u8ddd\u96e2\u306e\u9577\u3055\u3084\u691c\u7d22\u6761\u4ef6\u306b\u3088\u3063\u3066\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u5374\u3055\u308c\u308b\u307e\u3067\u6642\u9593\u304c\u304b\u304b\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002"]]}, "Magical Taske": {"tool_desc": "Fetch sceneries and getaways in Kenya.", "apis": [["Fetch details of multiple records", "This endpoint fetches details of more than 1 record. Make sure you pass a valid record ids. If you pass in an invalid id, you will get an `Internal Sever Error 500` for the whole request.\n\nYou can request details of a maximum of 10 records at a go in this endpoint. The `id`s should be separated using a comma with no spaces."], ["Fetch by type and region", "You can make a request finer by combining region and type. This endpoint will return the records requested. You have to provide a limit of the number of records you want."], ["Fetch by region", "This endpoint fetches records by region as defined in the `ABOUT` section above. You have to provide region and a limit of the number of records returned."], ["Fetch by type", "This endpoint fetches records by type as defined in `ABOUT` section above. You have to provide type and a limit of the number of records returned."]]}, "Be Zips": {"tool_desc": "Zip code data for north america.", "apis": [["Search zip codes in mexico", "Perform a text search in zip codes in Mexico"], ["Get zip code in Mexico", "Get zip code data given a specific zip code"]]}, "Weather Forecast Map Tiles": {"tool_desc": "Generate weather forecast map tiles to overlay on any web map.", "apis": [["Get Weather Tile", "Get a transparent weather tile according to the [Web Tile Standard(https://en.wikipedia.org/wiki/Tiled_web_map)."]]}, "City List": {"tool_desc": "List of all countries and cities", "apis": [["getCity", "return list of citis"], ["getCountryList", "return list of all country include ISO code and ISO3 code and phonecode"]]}, "Places Nearby a Coordinates": {"tool_desc": "Find places nearby a given coordinates.", "apis": [["Nearby", "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nReturns up to 60 places per request."]]}}, "Music": {"YourVinylStore": {"tool_desc": "Best vinyl records in your collection.", "apis": [["Your Vinyl Store", "Best vinyl records in your collection"], ["Your Vinyl Store_copy", "Best vinyl records in your collection"]]}, "MusiclinkssApi": {"tool_desc": "Get music links of song or artist.", "apis": [["Search by url", "Given a **Spotify url**, this returns details about *tracks*, *albums* and *artists*."], ["Get artist's albums", "Given a **Spotify url**,  returns basic details about albums of artist."], ["Search by query", "Given a **query** and **type** of element, this returns details about *tracks*, *albums* and *artists*."]]}, "Billboard": {"tool_desc": "Billboard charts: Hot 100, Billboard 200, Billboard 200 Global, Artist 100 and more", "apis": [["Billboard Global Excl. US", "Billboard Global Excl. US. Available from SEPTEMBER 19, 2020"], ["Hot 100", "Provide the Hot 100 chart information"], ["Artist 100", "Provide the Artist 100 chart information."], ["Billboard 200", "Provide the Billboard 100 chart information."], ["Billboard Global 200", "Provide Billboard Global 200 chart information. Available from SEPTEMBER 19, 2020"]]}, "K-POP": {"tool_desc": "Get K-POP detailed songs, idol, group info!", "apis": [["girl-groups", "Get info of girl-groups"], ["songs", "Get K-POP songs info"], ["random song", "Get random K-POP song"], ["Idols", "Get idol individual info"]]}, "Latest Spotify Downloader": {"tool_desc": "Latest Spotify Downloader \u2014 Contact Us at spotify-support@logicsquares.com", "apis": [["Download Track", "Download a track by passing the details from the fetch track API"], ["Fetch Track Details", "Download a track mp3 file returned by the download endpoint"]]}, "Miza": {"tool_desc": "A multipurpose API that includes many image, video, and audio operations.", "apis": [["Retrieve file", "Retrieves a file hosted by the server. This link is usually obtained by replacing the /p/ path in the /merge and /edit endpoint responses with /f/ or /d/. The request fails if the file requested does not exist or has been deleted."], ["IP address check", "Retrieves the host (server) and remote (your) IP addresses. A fast and responsive endpoint that is also handy for checking whether the service is online."], ["Song download/convert", "Searches, downloads, converts, and uploads the song URL simultaneously, streaming the file with very little delay. Song URL may be from any platform supported by Youtube-DL/FFmpeg, which are used as part of the backend.\nThis endpoint is the fastest to respond out of all the available ones for song downloading, but will only support *mp3*, *opus*, *ogg*, and *wav* as output formats (no video downloading). Quality will be maximum by default, or 224kbps if conversion is required. For those wishing to use this API as a backend for their own Discord bot, the opus format output is compatible with direct playback through Discord's voice websocket.\nFor testing purposes, the *download* query key may be changed to *view*, which will stream the same file, but without the attachment disposition, allowing it to play as audio in a browser while being downloaded."], ["Song trimming/extending", "Trims a song or video, outputting as a URL (similar to the concatenation function). Like the output from concat, one must send a GET request to the URL returned in order to retrieve the actual output.\nSpecify trim start and end after the URL, optionally omitting them by replacing them with an empty string or dash (-). Accepts input in number of seconds, as well as time formats such as *2h30m* or *1:53:30*.\nIf the trim end passes the end of the song, it will automatically be extended by looping back from the beginning. This is *much* faster than concatenating multiple copies of the same song, as it skips re-encoding every single copy, allowing it to produce 10-hour extensions of songs or videos in seconds. Output format can additionally be specified after trim end.\nSee https://mizabot.xyz/downloader for more info as well as test usage of this endpoint."], ["Song search", "Searches for a song from popular song platforms.\nThe API will search YouTube for the item by default. Prepend *scsearch:* to the search term to specify a search from SoundCloud, *spsearch:* for Spotify, or *bcsearch:* for BandCamp.\nUnlike all other endpoints provided by this API, this endpoint can actually be used infinitely free of charge or quota. Simply direct your request directly to [http://i.mizabot.xyz/ytdl?search=](http://i.mizabot.xyz/ytdl?search=) instead of rapidapi's forwarded URL. This may be done for all other endpoints too, however there will be a rate limit in place."], ["Song concatenation", "Joins one or more audio or video files into a single file.\nInputs are specified by URLs specified by query parameters \"u1\", \"u2\", etc. These URLs may be playlists, which will perform the concat operation on all contained tracks.\nOutput format supports most video and audio formats. See https://mizabot.xyz/downloader for list of available formats, as well as test usage of this API.\nMay or may not be the same input format, codec, or framerate/resolution/aspect ratio (if it is a video), but will take much longer to provide a response compared to the download endpoint, because it must finish all conversion before it can begin streaming.\nRedirects to a URL which will return the output file. This download link will be reusable, but temporary."], ["Playlist extraction", "Produces information on all songs in a playlist (YouTube, Spotify, SoundCloud, etc), with much faster response time than most other available tools. Currently O(1) for YouTube, O(log n) for Spotify, and O(log n) for SoundCloud. See [this article](http://i.mizabot.xyz/f/Bc9AUlCRkA) for the algorithm behind the YouTube playlists specifically."]]}, "Bandamp Downloader API": {"tool_desc": "An all-in-one scraper to get everything from Bandcamp.", "apis": [["Download Bandcamp Track", "Supply any Bandcamp track URL & get downloadable links, alongwith:\n\n- Track name\n- Related Album Name\n- Track Published date\n- Duration\n- Thumbnail\n- Artist name\n- Downloadable Mp3 file link"], ["Get Album Details", "Fetch:\n- Album Name\n- 2. Album Description\n- 3. Album Thumbnail URL\n- 4. Artist Name\n- 3. Total Tracks Count\n- 4. Each Track URLs\n- 5. Each Track Names\n- 6. Each Track Durations"]]}, "Radio World - 75,000+ Worldwide FM Radio stations..": {"tool_desc": "This is one of the largest collection of FM Radios API from around the world.", "apis": [["getAllQuotes", "You will get all the quotes here based on.\n- limit\n- page"], ["getStationByCountry", "Getting all Stations by country based on.\n- country id\n- limit\n- page\n- order"], ["getHomePage", "*We have made an option for you to display result in your landing/home page. So you don't have to work hard to achieve this.*\nGet limited radios to show in landing/home page, based on.\n- limit"], ["getAllStation", "You will get all recent stations  here, based on.\n- limit (integer)\n- order (string)\n- page (integer)\n- random (boolean)"], ["searchStation", "Search Radio station by keywords.\n- keyword = radio name, country name\n- limit = item limitation per page ***default 10***\n- page = page number to be displayed ***default 1***\n- order = order by ASCENDING/DISASCENDING  *(use only ASC or DESC)* ***default ASC***"], ["getAllCountry", "Get all countries Name based on.\n- limit\n- page\n- order"]]}, "Genius - Song Lyrics": {"tool_desc": "Genius - Song Lyrics, Artists, Albums, Knowledge & More API", "apis": [["Annotation Details", "An annotation is a piece of content about a part of a document. The document may be a song (hosted on Genius) or a web page (hosted anywhere). The part of a document that an annotation is attached to is called a referent.\n\nAnnotation data returned from the API includes both the substance of the annotation and the necessary information for displaying it in its original context."], ["Web Page Lookup", "A web page is a single, publicly accessible page to which annotations may be attached. Web pages map 1-to-1 with unique, canonical URLs.\n\nInformation about a web page retrieved by the page's full URL (including protocol). The returned data includes Genius's ID for the page, which may be used to look up associated referents with the /referents endpoint.\n\nData is only available for pages that already have at least one annotation."], ["Referents", "Referents are the sections of a piece of content to which annotations are attached. Each referent is associated with a web page or a song and may have one or more annotations. Referents can be searched by the document they are attached to or by the user that created them.\n\nReferents by content item or user responsible for an included annotation.\n\nYou may pass only one of song_id and web_page_id, not both."], ["Artist Songs", "Documents (songs) for the artist specified."], ["Artist Details", "An artist is how Genius represents the creator of one or more songs (or other documents hosted on Genius). It's usually a musician or group of musicians."], ["Search", "The search capability covers all content hosted on Genius (all songs)."], ["Song Details", "A song is a document hosted on Genius. It's usually music lyrics.\n\nData for a song includes details about the document itself and information about all the referents that are attached to it, including the text to which they refer."], ["Multi Search", "The multi search capability covers all content hosted on Genius (all sections)."]]}, "Halsey Lyric Snippets": {"tool_desc": "An API that allows users to view short excerpts of Halsey's songs.", "apis": [["album by {id}", "returns album information when searched by {id}"], ["song by {id}", "returns song when searched by id"], ["random song & song's album information out of {artist}", "Returns album information and random song information"], ["random song out of {artist}", "This endpoint retrieves a random song by the specified artist and returns it in the response."], ["specified {song}", "This endpoint retrieves the specified song by name and returns it in the response."], ["all songs from {artist}", "This endpoint retrieves all songs by the specified artist and returns them in the response."], ["random song from a specific {artist} and specified {album}", "This endpoint retrieves a random song from the specified album by the specified artist and returns it in the response."], ["all songs from a specified {artist} and specified {album}", "This endpoint retrieves all songs from the specified album by the specified artist and returns them in the response."], ["specified {album} information from {artist}", "This endpoint retrieves the specified album by the specified artist and returns it in the response."], ["all albums from {artist}", "This endpoint retrieves all albums by the specified artist and returns them in the response.\nUse \"Halsey\" for Halsey's music"]]}, "getSongs": {"tool_desc": "top 10 Songs", "apis": [["Get top Songs", "tujhe dekha toh as of now"]]}, "Billboard-API": {"tool_desc": "Providing the Billboard chart rankings and information on titles, artists, lyrics, images, and more.", "apis": [["New Zealand Songs", "Provide the New Zealand Songs chart information"], ["BILLBOARD JAPAN HOT 100", "Provide the BILLBOARD JAPAN HOT 100 chart information"], ["U.K. Songs", "Provide the U.K. Songs chart information"], ["Turkey Songs", "Provide the Turkey Songs chart information"], ["Taiwan Songs", "Provide the Taiwan Songs chart information"], ["Switzerland Songs", "Provide the Switzerland Songs chart information"], ["Sweden Songs", "Provide the Sweden Songs chart information"], ["Spain Songs", "Provide the Spain Songs chart information"], ["South Korea Songs", "Provide the South Korea Songs chart information"], ["South Africa Songs", "Provide the South Africa Songs chart information"], ["Slovakia Songs", "Provide the Slovakia Songs chart information"], ["Singapore Songs", "Provide the Singapore Songs chart information"], ["Romania Songs", "Provide the Romania Songs chart information"], ["Portugal Songs", "Provide the Portugal Songs chart information"], ["Poland Songs", "Provide the Poland Songs chart information"], ["Philippines Songs", "Provide the Philippines Songs chart information"], ["Peru Songs", "Provide the Peru Songs chart information"], ["Norway Songs", "Provide the Norway Songs chart information"], ["Netherlands Songs", "Provide the Netherlands Songs chart information"], ["Mexico Songs", "Provide the Mexico Songs chart information"], ["Malaysia Songs", "Provide the Malaysia Songs chart information"], ["Luxembourg Songs", "Provide the Luxembourg Songs chart information"], ["Ireland Songs", "Provide the Ireland Songs chart information"], ["Indonesia Songs", "Provide the Indonesia Songs chart information"], ["India Songs", "Provide the India Songs chart information"], ["Iceland Songs", "Provide the Iceland Songs chart information"], ["Hungary Songs", "Provide the Hungary Songs chart information"], ["Hong Kong Songs", "Provide the Hong Kong Songs chart information"], ["Greece Songs", "Provide the Greece Songs chart information"], ["Germany Songs", "Provide the Germany Songs chart information"], ["France Songs", "Provide the France Songs chart information"], ["Finland Songs", "Provide the Finland Songs chart information"], ["Ecuador Songs", "Provide the Ecuador Songs chart information"], ["Denmark Songs", "Provide the Denmark Songs chart information"], ["Czech Republic Songs", "Provide the Czech Republic Songs chart information"], ["Croatia Songs", "Provide the Croatia Songs chart information"], ["Colombia Songs", "Provide the Colombia Songs chart information"], ["Chile Songs", "Provide the Chile Songs chart information"], ["Brazil Songs", "Provide the Brazil Songs chart information"], ["Bolivia Songs", "Provide the Bolivia Songs chart information"], ["Belgium Songs", "Provide the Belgium Songs chart information"], ["Austria Songs", "Provide the Austria Songs chart information"], ["Australia Songs", "Provide the Australia Songs chart information"], ["Adult Alternative Songs", "Provide the Greatest of All Time Adult Alternative Songs chart information"], ["Top R&B/Hip-Hop Artists", "Provide the Greatest of All Time Top R&B/Hip-Hop Artists chart information"], ["Hot Latin Songs Artists", "Provide the Greatest of All Time Hot Latin Songs Artists chart information"], ["Songs of the Summer", "Provide the Greatest of All Time Songs of the Summer chart information"], ["Hot 100 Women Artists", "Provide the Greatest of All Time Hot 100 Women Artists chart information"], ["Mainstream Rock Artists", "Provide the Greatest of All Time Mainstream Rock Artists chart information"], ["Mainstream Rock Songs", "Provide the Greatest of All Time Mainstream Rock Songs chart information"], ["Adult Alternative Artists", "Provide the Greatest of All Time Adult Alternative Artists chart information"], ["Alternative Artists", "Provide the Greatest of All Time Alternative Artists chart information"], ["Alternative Songs", "Provide the Greatest of All Time Alternative Songs chart information"], ["Top R&B/Hip-Hop Albums", "Provide the Greatest of All Time Top R&B/Hip-Hop Albums chart information"], ["Hot R&B/Hip-Hop Songs", "Provide the Greatest of All Time Hot R&B/Hip-Hop Songs chart information"], ["Top Dance Club Artists", "Provide the Greatest of All Time Top Dance Club Artists chart information"], ["Hot Latin Songs", "Provide the Greatest of All Time Hot Latin Songs chart information"], ["Latin Artists", "Provide the Greatest of All Time Latin Artists chart information"], ["Top Country Artists", "Provide the Greatest of All Time Top Country Artists chart information"], ["Top Country Albums", "Provide the Greatest of All Time Top Country Albums chart information"], ["Hot Country Songs", "Provide the Greatest of All Time Hot Country Songs chart information"], ["Adult Pop Songs Artists", "Provide the Greatest of All Time Adult Pop Songs Artists chart information"], ["Adult Pop Songs", "Provide the Greatest of All Time Adult Pop Songs chart information"], ["Pop Songs Artists", "Provide the Greatest of All Time Pop Songs Artists chart information"], ["Pop Songs", "Provide the Greatest of All Time Pop Songs chart information"], ["Top Holiday Albums", "Provide the Greatest of All Time Top Holiday Albums chart information"], ["Holiday 100 Songs", "Provide the Greatest of All Time Holiday 100 Songs chart information"], ["Songs of the '90s", "Provide the Greatest of All Time Songs of the '90s chart information"], ["Songs of the '80s", "Provide the Greatest of All Time Songs of the '80s chart information"], ["Billboard 200 Albums by Women", "Provide the Greatest of All Time Billboard 200 Albums by Women chart information"], ["Hot 100 Songs by Women", "Provide the Greatest of All Time Hot 100 Songs by Women chart information"], ["Billboard 200 Artists", "Provide the Greatest of All Time Billboard 200 Artists chart information"], ["Billboard 200 Albums (Greatest of All Time)", "Provide the Greatest of All Time Billboard 200 Albums chart information"], ["Hot 100 Artists", "Provide the Greatest of All Time Hot 100 Artists chart information"], ["Hot 100 Songs (Greatest of All Time)", "Provide the Greatest of All Time Hot 100 Songs chart information"], ["Artists", "Provide the Greatest of All Time Artists chart information"], ["HOT TRENDING SONGS POWERED BY TWITTER", "Provide the HOT TRENDING SONGS POWERED BY TWITTER chart information"], ["BILLBOARD U.S. AFROBEATS SONGS", "Provide the BILLBOARD U.S. AFROBEATS SONGS chart information"], ["ARTIST 100", "Provide the ARTIST 100 chart information"], ["HOT 100", "Provide the HOT 100 chart information"], ["Top Artists - Male", "Provide the YEAR-END Top Artists - Male chart information\n\nIf `year` is not supplied, will default to last year."], ["Top Artists - Female", "Provide the YEAR-END Top Artists - Female chart information\n\nIf `year` is not supplied, will default to last year."], ["Billboard 200 Albums", "Provide the YEAR-END Billboard 200 Albums chart information\n\nIf `year` is not supplied, will default to last year."], ["Top Labels", "Provide the YEAR-END Top Labels chart information\n\nIf `year` is not supplied, will default to last year."], ["Top New Artists", "Provide the YEAR-END Top New Artists chart information\n\nIf `year` is not supplied, will default to last year."], ["Top Artists - Duo/Group", "Provide the YEAR-END Top Artists - Duo/Group chart information\n\nIf `year` is not supplied, will default to last year."], ["Billboard Global 200 (YEAR-END)", "Provide the YEAR-END Billboard Global 200 chart information\n\nIf `year` is not supplied, will default to last year."], ["Top Artists", "Provide the YEAR-END Top Artists chart information\n\nIf `year` is not supplied, will default to last year."], ["Hot 100 Songs", "Provide the YEAR-END Hot 100 Songs chart information\n\nIf `year` is not supplied, will default to last year."], ["BILLBOARD GLOBAL 200", "Provide the BILLBOARD GLOBAL 200 chart information"], ["BILLBOARD 200", "Provide the BILLBOARD 200 chart information"]]}, "Spotify Web": {"tool_desc": "Spotify Data API for Millions of songs &amp; podcasts, artists, albums, playlists and more.", "apis": [["Get radio playlist", "Get artist or song radio"], ["Get tracks", "Get one or more tracks"], ["Artist discovered on", "Artist discovered on playlists (max 50)"], ["Artist appears on", "Get artist appears on albums (max 50)"], ["Artist discography overview", "Get artist discography overview"], ["Get artists", "Get one or more artists"], ["Get albums", "Get one or more albums"]]}, "Indie Songs : DistroKid & Unsigned": {"tool_desc": "Independent tracks with label numbers.", "apis": [["Get songs with ALL metadata and stats (play counts)", "Get all tracks with full metadata including recent Spotify play counts.\n\nAlso Apple song URL, Spotify song URL, Composer name, ISRC, Label, Release date, Genres, Apple IDs, Spotify IDs are included."], ["Get Top 50 indie songs", "Get TOP 50 indie songs based on their daily stream increase ratio"], ["Search indie songs by filters", "Search song by track name,  artist name, label, release date, ISRC, composer name, genre"], ["Get CSV of Top 50 Indie Songs", "Get TOP 50 indie songs by their daily stream increase in a CSV format using URL"]]}, "Youtube Music API (Detailed)": {"tool_desc": "Detailed Youtube Music API.", "apis": [["Get Watch Playlist", "Get a watch list of tracks. This watch playlist appears when you press play on a track in YouTube Music.\n\n\nList of watch playlist items. The counterpart key is optional and only appears if a song has a corresponding video counterpart (UI song/video switcher)."], ["Get Lyrics", "Returns lyrics of a song or video."], ["Get Song Related", "Gets related content for a song. Equivalent to the content shown in the \u201cRelated\u201d tab of the watch panel."], ["Get Song", "Returns metadata and streaming information about a song or video."], ["Get User Playlists", "Retrieve a list of playlists for a given user. Call this function again with the returned params to get the full list."], ["Get User", "Retrieve a user\u2019s page. A user may own videos or playlists."], ["Get Album", "Get information and tracks of an album."], ["Get Artist Albums", "Get information about an artist and their top releases (songs, albums, singles, videos, and related artists). The top lists contain pointers for getting the full list of releases"], ["Get Artist", "Get information about an artist and their top releases (songs, albums, singles, videos, and related artists). The top lists contain pointers for getting the full list of releases."], ["Trends", "Get latest charts data from YouTube Music: Top songs, top videos, top artists and top trending videos. Global charts have no Trending section, US charts have an extra Genres section with some Genre charts."], ["Search", "Search YouTube music Returns results within the provided category."]]}, "ReverbNation Song Downloader": {"tool_desc": "Get ReverbNation data of any paid song(s) with download URLs", "apis": [["Download ReverbNation Song", "Get song data & download URL of any paid song.\n(Fetch song name, artist, thumbnail, duration & mp3 downloadable link)"]]}, "Shazam API": {"tool_desc": "Identify any song.", "apis": [["charts/get-top-songs-in-world", "get top songs in world"], ["charts/get-top-songs-in_world_by_genre", "get top songs in world by gener"], ["charts/get-top-songs-in_country_by_genre", "get top songs in country by genre"], ["charts/get-top-songs-in-country", "get top osngs in country"], ["charts/get-top-songs-in-city", "return top songs in city"], ["artist/get-top-songs", "Get the top songs by artist according to Shazam"], ["artist/get-details", "Retrieving information from an artist profile"], ["songs/list-recommendations", "Similar songs based on song id"], ["songs/get-track-listening-count", "Returns the number of times a particular song has been played"], ["songs/get_details", "get details about song"], ["/search", "Search for songs, artists that match input term"]]}, "Spotify Scraper": {"tool_desc": "An all-in-one scraper for scraping everything on Spotify, and a highly available download solution for tracks, lyrics and episode previews.", "apis": [["Get Track Metadata", "This endpoint fetches full details of a track."], ["Get Track ID by Name", "This is a simplified version of the search endpoint that gets the ID of a track by its name."], ["Download Track Lyrics", "This endpoint allows downloading lyrics in different formats. You can also tweak the delay time of lyrics."], ["Download Track on YouTube (3 Quotas)", "Provides a solution to download a Spotify track on YouTube and returns URLs of audio files. (Powered by [Youtube Media Downloader](https://rapidapi.com/DataFanatic/api/youtube-media-downloader/). Get a better price by subscribing to and using it directly.)"], ["Download Track on SoundCloud (3-4 Quotas)", "Provides a solution to download a Spotify track on SoundCloud. HQ (4 Quotas) and SQ (3 Quotas) audios. (Tutorial: [How to Use SoundCloud Audio URLs](https://rapidapi.com/DataFanatic/api/soundcloud-scraper/tutorials/how-to-use-audio-urls)) (Powered by [SoundCloud Scraper](https://rapidapi.com/DataFanatic/api/soundcloud-scraper/). Get a better price by subscribing to and using it directly.)"], ["List User Public Playlists", "This endpoint lists public playlists of a user. Pagination scraping is supported."], ["Get User Profile", "This endpoint fetches a user's profile."], ["List User Recently Played Artists", "This endpoint lists recently played artists of a user."], ["List Related Artists", "This endpoint lists related artists of an artist."], ["List Artist Playlists/Featuring/DiscoveredOn", "This endpoint lists playlists associated with an artist."], ["List Artist Albums/Singles/Compilations/AppearsOn", "This endpoint lists albums associated with an artist. Pagination scraping is supported."], ["List Artist Concerts", "This endpoint lists all concerts of an artist."], ["Get Artist ID by Name", "This is a simplified version of the search endpoint that gets the ID of an artist by name."], ["List Genre Contents", "This endpoint lists sub-genres, playlists, podcasts, albums, etc. of a genre. Pagination scraping is supported."], ["Search", "This endpoint searches for albums, artists, episodes, genres, playlists, podcasts, and users. Pagination scraping is supported."], ["List Weekly Top Albums", "This endpoint lists weekly top albums at any time and in any country."], ["List Top Artists", "This endpoint lists weekly or daily top artists at any time and in any country."], ["List Daily Viral Tracks", "This endpoint lists daily viral tracks at any time and in any country."], ["List Top Tracks", "This endpoint lists weekly or daily top tracks at any time and in any country."], ["Get Artist Overview", "This endpoint fetches full details of an artist."], ["List Podcast Episodes", "This endpoint lists all episodes of a podcast."], ["Get Podcast Metadata", "This endpoint fetches full details of a podcast."], ["Get Episode (Downloadable Audio)", "This endpoint fetches full details of an episode. Downloadable URL of full audio is available for **some** of the episodes."], ["List User Followers", "This endpoint lists part of a user's followers."], ["List Playlist Tracks and Episodes", "This endpoint lists tracks and episodes in a playlist."], ["Get Playlist Metadata", "This endpoint fetches full details of a playlist."], ["List Album Tracks", "This endpoint lists tracks of an album. Pagination scraping is supported."], ["Get Album Metadata", "This endpoint fetches full details of an album."], ["Get Home Page Overview", "This endpoint fetches trending information displayed on the Spotify home page as an incognito visitor."]]}, "Spotify": {"tool_desc": "Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.", "apis": [["Get albums", "Get one or more albums"], ["Get radio playlist", "Get artist or song radio"], ["Get tracks", "Get one or more tracks"], ["Artist discovered on", "Artist discovered on playlists (max 50)"], ["Artist appears on", "Get artist appears on albums (max 50)"], ["Artist discography overview", "Get artist discography overview"], ["Get artists", "Get one or more artists"]]}, "Apple Music": {"tool_desc": "Fetches songs & album data from Apple Music", "apis": [["Album", "Get entire Playlist data of any album from Apple Music."], ["Single Track", "Get Single track data from Apple Music"]]}, "MusicData API": {"tool_desc": "Data for Youtube, Spotify music videos, tracks, albums, artist & more", "apis": [["/spotify/chart/{countryID}/{timeframe}", "Get global/country daily/weekly chart or total daily/weekly chart for Spotify. Read external docs for more information"], ["/spotify/toplist", "Spotify most streamed songs/album ....."], ["/spotify/artist/{artistID}", "Get specific Spotify artist details. \nAdd \"_info\" or leave blank for general information, \"_songs\" for all songs, \"_albums\" for all albums"], ["/spotify/topsongs/{year}", "Spotify most streamed songs of all time / of {year} . Leave {year} blank for all time results"], ["/spotify/topalbums", "Spotify most streamed albums of all time"], ["/spotify/topartist", "Spotify top artist by monthly listeners"], ["/youtube/milestone/{milestone}", "Fastest to Youtube music video to X views milestone. Note: X: 100 - 7000 (million views), X must increase by an increment of 100. E.g: 100, 200, 300,...etc"], ["/youtube/topartist_feat/{year}", "Youtube top artist including features in music videos by year"], ["/youtube/topartist/{year}", "Youtube top artist of all time / or at a specific year.\nLeave {year} blank for all time data, or specify a year."], ["/youtube/global", "Insight on weekly trending videos for each countries globally"], ["\u200b/youtube/weekly/{year}/{nthweek}", "Most viewed youtube music videos on ...nth week of  ....year  (E.g 21st week of 2019: /youtube/weekly/2019/21)"], ["/youtube/trending", "Trending Youtube music videos worldwide now"], ["/youtube/trending/countries/{countryID}", "Youtube trending music and non-music videos in all countries / or in a specific country. Leave {countryID} blank for all countries."], ["/youtube/video/{videoID}", "Specific Youtube music video statistics"], ["/youtube/topviews/published/{year}", "Top Youtube viewed videos that was published in year X (X: 2010 - now)"], ["/youtube/topcomments", "Top Youtube commented videos of all time"], ["/youtube/toplikes", "Top Youtube liked videos of all time"], ["/youtube/topviews/{year}", "Top Youtube viewed videos all time / on a specific year (2007 - now). Leave {year} blank for all time results"], ["/youtube/global/{countryID}/{timeframe}", "Weekly/Daily country Youtube chart for a specific country. Read external docs for more information"], ["/youtube/artist/{artistName}", "Get details about an artist"], ["/youtube/trending/overall", "Treding Youtube (including non-music) videos worldwide"], ["/youtube/24h", "Youtube most viewed music video past 24 hours"], ["/youtube/topviews/artist/{nationality}", "Youtube top viewed music video by X artist. (X: nationality of the artist). For example: \"/youtube/topviews/vietnamese\""], ["/youtube/weekly", "Most viewed Youtube music videos weekly"], ["/youtube/24h/{type}", "Youtube most viewed music video by content language type: (English, Spanish, Asian or Other)"]]}, "SoundCloud Charts API": {"tool_desc": "Get trending and top charts (New & Hot and other)", "apis": [["Trending and Top Charts", "Get trending (New & Hot) and top charts from SoundCloud"]]}, "Spotify Data API": {"tool_desc": "Fetch all available Spotify Data like Shows,Playlists, Episodes,Artists, Tracks, User playlists and more\n\nNote: Currently the API is deployed on server with basic plan with auto sleep thats why the Latency is so high .After first subscription I will upgrade the plan with always on service and the latency will be normal.", "apis": [["Get futured playlists", "Get futured playilsts by country from one of the countrys and timestamp date example 2022-10-20 :\nAD, AE, AG, AL, AM, AO, AR, AT, AU, AZ, \nBA, BB, BD, BE, BF, BG, BH, BI, BJ, BN, \nBO, BR, BS, BT, BW, BZ, CA, CD, CG, CH, \nCI, CL, CM, CO, CR, CV, CW, CY, CZ, DE, \nDJ, DK, DM, DO, DZ, EC, EE, EG, ES, ET, \nFI, FJ, FM, FR, GA, GB, GD, GE, GH, GM, \nGN, GQ, GR, GT, GW, GY, HK, HN, HR, HT, \nHU, ID, IE, IL, IN, IQ, IS, IT, JM, JO, \nJP, KE, KG, KH, KI, KM, KN, KR, KW, KZ, \nLA, LB, LC, LI, LK, LR, LS, LT, LU, LV, \nLY, MA, MC, MD, ME, MG, MH, MK, ML, MN, \nMO, MR, MT, MU, MV, MW, MX, MY, MZ, NA, \nNE, NG, NI, NL, NO, NP, NR, NZ, OM, PA, \nPE, PG, PH, PK, PL, PS, PT, PW, PY, QA, \nRO, RS, RW, SA, SB, SC, SE, SG, SI, SK, \nSL, SM, SN, SR, ST, SV, SZ, TD, TG, TH, \nTJ, TL, TN, TO, TR, TT, TV, TW, TZ, UA, \nUG, US, UY, UZ, VC, VE, VN, VU, WS, XK,\nZA, ZM, ZW"], ["Get user profile and public playlists", "Get useer profile and public playlists by user ID."], ["Get show episodes", "Get show episodes by show ID."], ["Get show", "Get show by show ID."], ["Get episode", "Get episode from episode ID."], ["Get track audo futures", "Get track audio futures data from track ID."], ["Get tracks", "Get tracks by tracks IDs separeted by comma MAX 50 tracks at a time."], ["Get playlist by category", "Get playlist from category, supported categories are :\npop, hip-hop, rock, latino, dance/electro, mood, indie, workout, country, r&b, k-pop,\nchill, sleep, party, decades, love, metal, jazz, gaming, folk&acoustic, focus, classics,\npunck, ambient, blues, afro, summer"], ["Get playlist tracks", "Get playlist tracks by playlist ID."], ["Get playlist", "Get playlist by ID."], ["Get new releases", "Get new releases albums from one of the countrys :\nAD, AE, AG, AL, AM, AO, AR, AT, AU, AZ, \nBA, BB, BD, BE, BF, BG, BH, BI, BJ, BN, \nBO, BR, BS, BT, BW, BZ, CA, CD, CG, CH, \nCI, CL, CM, CO, CR, CV, CW, CY, CZ, DE, \nDJ, DK, DM, DO, DZ, EC, EE, EG, ES, ET, \nFI, FJ, FM, FR, GA, GB, GD, GE, GH, GM, \nGN, GQ, GR, GT, GW, GY, HK, HN, HR, HT, \nHU, ID, IE, IL, IN, IQ, IS, IT, JM, JO, \nJP, KE, KG, KH, KI, KM, KN, KR, KW, KZ, \nLA, LB, LC, LI, LK, LR, LS, LT, LU, LV, \nLY, MA, MC, MD, ME, MG, MH, MK, ML, MN, \nMO, MR, MT, MU, MV, MW, MX, MY, MZ, NA, \nNE, NG, NI, NL, NO, NP, NR, NZ, OM, PA, \nPE, PG, PH, PK, PL, PS, PT, PW, PY, QA, \nRO, RS, RW, SA, SB, SC, SE, SG, SI, SK, \nSL, SM, SN, SR, ST, SV, SZ, TD, TG, TH, \nTJ, TL, TN, TO, TR, TT, TV, TW, TZ, UA, \nUG, US, UY, UZ, VC, VE, VN, VU, WS, XK,\nZA, ZM, ZW"], ["Get album tracks", "Get album tracks by album ID"], ["Get album", "Get album by album ID."], ["Get artist related artists", "Get artist related artist by artis id"], ["Get artist top tracks", "Get artist top tracks by artist id"], ["Get artist albums", "Get artist albums request from one of the groups : album, single, appears_on, compilation"], ["Get multiple artists", "Get multiple artist with one request max 5 at once. Each id separeted by ,"], ["Get artist", "Get artist by ID"], ["Search", "Search for a one of the types \"album\", \"artist\", \"playlist\", \"track\", \"show\", \"episode\""]]}, "MusicAPI": {"tool_desc": "Spotify, Apple Music, YouTube, Amazon, Tidal, and more.", "apis": [["/public/search/introspection", "Allows you to fetch all different enums needed for sending API requests"]]}, "SoundCloud Scraper": {"tool_desc": "An all-in-one SoundCloud scraper/downloader.", "apis": [["Get Track Metadata (1-3 Quotas)", "This endpoint fetches full details of a track on SoundCloud and helps you download uncut tracks of high and standard quality. (Tutorial: [How to Use Audio URLs](https://rapidapi.com/DataFanatic/api/soundcloud-scraper/tutorials/how-to-use-audio-urls))"], ["Search for Albums", "This endpoint searches for SoundCloud albums with optional filters. Pagination scraping is supported."], ["Search for Users", "This endpoint searches for SoundCloud users with optional filters. Pagination scraping is supported."], ["Search for Playlists", "This endpoint searches for SoundCloud playlists with optional filters. Pagination scraping is supported."], ["List User Followers", "This endpoint lists a user's followers."], ["List User Reposts (Tracks, Playlists)", "This endpoint lists reposts of a user. Pagination scraping is supported."], ["List User Playlists", "This endpoint lists the playlists of a user. Pagination scraping is supported."], ["List User Popular Tracks", "This endpoint lists all popular tracks of a user."], ["List User Likes (Tracks, Playlists)", "This endpoint lists tracks, playlists and albums liked by the specified user."], ["List User Comments", "This endpoint lists a user's comments."], ["Download Lyrics on Spotify (2 Quotas)", "This endpoint provides a solution to download a track's lyrics on Spotify. (Powered by [Spotify Scraper](https://rapidapi.com/DataFanatic/api/spotify-scraper/))"], ["List Track Comments", "This endpoint lists comments of a track. Pagination scraping is supported."], ["Search for (Go+) Tracks", "This endpoint searches for SoundCloud (Go+) tracks with optional filters. Pagination scraping is supported."], ["List User Followings", "This endpoint lists users that follow the specified user."], ["List User Albums", "This endpoint lists the albums of a user. Pagination scraping is supported."], ["List User Tracks", "This endpoint lists tracks of a user. Pagination scraping is supported."], ["Get User Profile", "This endpoint fetches a user's profile."], ["Get Station Details", "This endpoint fetches full details of a SoundCloud station, including all tracks."], ["List Playlist/Album Tracks", "This endpoint lists tracks of a playlist or album. Pagination scraping is supported."], ["Get Playlist/Album Metadata", "This endpoint fetches full details of a playlist or album, including all track IDs."], ["Get Home Page Overview", "This endpoint fetches trending information displayed on the SoundCloud home page as an incognito visitor."]]}, "Shazam": {"tool_desc": "Identify any song.", "apis": [["artists/get-latest-release", "Get latest release of an artist"], ["artists/get-summary", "Get summary information related to an artist"], ["songs/get-related-artist", "Get artist related to a song"], ["songs/v2/get-details", "Get details information of specific song"], ["songs/list-artist-top-tracks (Deprecated)", "List top tracks of specific artist"], ["albums/get-related-artist", "Get artist related to an album"], ["albums/get-details", "Get detailed album of an album"], ["shazam-songs/list-similarities", "Get similar (You may also like) songs"], ["shazam-songs/get-details", "Get mapping id information between systems to use with other endpoints."], ["artists/get-top-songs", "Get top songs of an artist"], ["artists/get-details", "Get detailed information of an artist"], ["charts/list", "List all available charts by cities, countries, and genres"], ["search", "Search for songs, artists that match input term"], ["auto-complete", "Get suggestions by word or phrase"], ["charts/track", "Get all popular songs in specific chart"]]}, "L-yrics": {"tool_desc": "Have you ever wished to read the words of a music you heard?", "apis": [["Main endpoint", "Get the song lyrics"]]}, "247NaijaBuzz": {"tool_desc": "It's about music and entertainment news update", "apis": [["247NaijaBuzz Media", "For Flash Music Download"]]}, "xmusic": {"tool_desc": "test apis xmusic", "apis": [["xmusic song info", "Test apis xmusic song info"]]}, "online-music": {"tool_desc": "Music site", "apis": [["online-music", "\u0421\u043b\u0443\u0448\u0430\u0442\u044c \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e \u043e\u043d\u043b\u0430\u0439\u043d \u043d\u0430 online-music.su. \u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0435\u0441\u043d\u0438 \u0440\u0443\u0441\u0441\u043a\u0438\u0445 \u0440\u0435\u0442\u0440\u043e \u0433\u0440\u0443\u043f\u043f \u0438 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u0435\u0439. \u0420\u0443cc\u043a\u0430\u044f \u0440\u0435\u0442\u0440\u043e \u043f\u043e\u043f-\u0440\u043e\u043a-\u0448\u0430\u043d\u0441\u043e\u043d \u043c\u0443\u0437\u044b\u043a\u0430 1970\u0445-2000\u0445, \u043b\u0443\u0447\u0448\u0430\u044f \u0437\u0430\u0431\u0443\u0433\u043e\u0440\u043d\u0430\u044f \u043c\u0443\u0437\u044b\u043a\u0430 \u0440\u0435\u0442\u0440\u043e \u044d\u043f\u043e\u0445\u0438."]]}, "GG": {"tool_desc": "Test purpose", "apis": [["confusing", "i don't know what i'm doing"]]}, "Spotify Top Charts 2022": {"tool_desc": "Dataset with global top chart songs during 2022.", "apis": [["Spotify Music", "Spotify top chart songs 2022"]]}, "Billboard_v2": {"tool_desc": "Billboard API: Billboard Hot 100, Billboard 200, Artist 100, Billboard Global 200, Top Artists, Year-End Hot 100 Songs, Year-End Billboard Global 200, Year-End Billboard 200 Albums, Year-End Top Artists, Greatest of All Time Artists, Greatest of All Time Songs of the Summer, Greatest of All Time Hot 100 Songs and much more!", "apis": [["Greatest of All Time Songs of the Summer", "Get the Greatest of All Time Songs of the Summer chart."], ["Greatest of All Time Artists", "Get the Greatest of All Time Artists chart."], ["Greatest of All Time Hot 100 Songs", "Get the Greatest of All Time Hot 100 Songs chart."], ["Year-End Top Artists", "Get the Year-End Top Artists chart."], ["Year-End Billboard Global 200", "Get the Year-End Billboard Global 200 chart."], ["Year-End Billboard 200 Albums", "Get the Year-End Billboard 200 Albums chart."], ["Year-End Hot 100 Songs", "Get the Year-End Hot 100 Songs chart."], ["Billboard Global 200", "Get the Billboard Global 200 chart."], ["Artist 100", "Get the Artist 100 chart."], ["Billboard 200", "Get the Billboard 200 chart."], ["Billboard Hot 100", "Get the Billboard Hot 100 chart."]]}, "Spotify_v3": {"tool_desc": "Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.", "apis": [["Get tracks", "Get one or more tracks"], ["Top 200 songs by country / global", "Information obtained from https://charts.spotify.com/"], ["Top 20 by Monthly Listeners", "Monthly listeners in millions."], ["Top 20 by followers", "Amount of followers in millions."], ["Get radio playlist", "Get artist or song radio"], ["Artist discovered on", "Artist discovered on playlists (max 50)"], ["Artist appears on", "Get artist appears on albums (max 50)"], ["Artist discography overview", "Get artist discography overview"], ["Get artists", "Get one or more artists"], ["Get Albums", "Get one or more albums"]]}, "Billboard API_v2": {"tool_desc": "Billboard charts API: Weekly Billboard Hot 100, Weekly Billboard 200, Weekly Artist 100, Weekly Billboard Weekly Global 200, Weekly Catalog Albums, Weekly Independent Albums, Weekly Billboard U.S.", "apis": [["Bolivia Songs", "Bolivia Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Slovakia Songs", "Slovakia Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Romania Songs", "Romania Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Austria Songs", "Austria Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Chile Songs", "Chile Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Iceland Songs", "Iceland Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Hungary Songs", "Hungary Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Brazil Songs", "Brazil Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Norway Songs", "Norway Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Croatia Czech Republic Songs", "Croatia Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Turkey Songs", "Turkey Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Switzerland Songs", "Switzerland Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["South Africa Songs", "South Africa Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Philippines Songs", "Philippines Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["France Songs", "France Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Mexico Songs", "Mexico Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Croatia Songs", "Croatia Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Singapore Songs", "Singapore Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["U.K Songs", "U.K Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Taiwan Songs", "Taiwan Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Sweden Songs", "Sweden Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Spain Songs", "Spain Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Philippines South Korea Songs", "South Korea Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Portugal Songs", "Portugal Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Poland Songs", "Poland Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Malaysia Songs", "Malaysia Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Ireland Songs", "Ireland Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Greece Songs", "Greece Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Peru Songs", "Peru Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["New Zealand Songs", "New Zealand Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Netherlands Songs", "Netherlands Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Luxembourg Songs", "Luxembourg Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Indonesia Songs", "Indonesia Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["India Songs", "India Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Hong Kong Songs", "Hong Kong Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Germany Songs", "Germany Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Finland Songs", "Finland Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Ecuador Songs", "Ecuador Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Colombia Songs", "Colombia Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Denmark Songs", "Denmark Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Belgium Songs", "Belgium Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Australia Songs", "Australia Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Billboard U.S. Afrobeats Songs", "Billboard U.S. Afrobeats Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Billboard Global 200", "Billboard Global 200 chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Billboard 200", "Billboard 200 chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Greatest of All Time Mainstream Rock Artists", "Greatest of All Time Mainstream Rock Artists chart.\nSee response example"], ["Greatest of All Time Mainstream Rock Songs", "Greatest of All Time Mainstream Rock Songs chart.\nSee response example"], ["Greatest of All Time Adult Alternative Artists", "Greatest of All Time Adult Alternative Artists chart.\nSee response example"], ["Greatest of All Time Adult Alternative Songs", "Greatest of All Time Adult Alternative Songs chart.\nSee response example"], ["Greatest of All Time Alternative Artists", "Greatest of All Time Alternative Artists chart.\nSee response example"], ["Greatest of All Time Alternative Songs", "Greatest of All Time Alternative Songs chart.\nSee response example"], ["Greatest of All Time Top R&B/Hip-Hop Artists", "Greatest of All Time Top R&B/Hip-Hop Artists chart.\nSee response example"], ["Greatest of All Time Top R&B/Hip-Hop Albums", "Greatest of All Time Top R&B/Hip-Hop Albums chart.\nSee response example"], ["Greatest of All Time Hot R&B/Hip-Hop Songs", "Greatest of All Time Hot R&B/Hip-Hop Songs chart.\nSee response example"], ["Greatest of All Time Top Dance Club Artists", "Greatest of All Time Top Dance Club Artists chart.\nSee response example"], ["Greatest of All Time Hot Latin Songs Artists", "Greatest of All Time Hot Latin Songs Artists chart.\nSee response example"], ["Greatest of All Time Hot Latin Songs", "Greatest of All Time Hot Latin Songs chart.\nSee response example"], ["Greatest of All Time Latin Artists", "Greatest of All Time Latin Artists chart.\nSee response example"], ["Greatest of All Time Top Country Artists", "Greatest of All Time Top Country Artists chart.\nSee response example"], ["Greatest of All Time Top Country Albums", "Greatest of All Time Top Country Albums chart.\nSee response example"], ["Greatest of All Time Hot Country Songs", "Greatest of All Time Hot Country Songs chart.\nSee response example"], ["Greatest of All Time Adult Pop Songs Artists", "Greatest of All Time Adult Pop Songs Artists chart.\nSee response example"], ["Greatest of All Time Adult Pop Songs", "Greatest of All Time Adult Pop Songs chart.\nSee response example"], ["Greatest of All Time Pop Songs Artists", "Greatest of All Time Pop Songs Artists chart.\nSee response example"], ["Greatest of All Time Pop Songs", "Greatest of All Time Pop Songs chart.\nSee response example"], ["Greatest of All Time Top Holiday Albums", "Greatest of All Time Top Holiday Albums chart.\nSee response example"], ["Greatest of All Time Holiday 100 Songs", "Greatest of All Time Holiday 100 Songs chart.\nSee response example"], ["Greatest of All Time Songs of the Summer", "Greatest of All Time Songs of the Summer chart.\nSee response example"], ["Greatest of All Time Songs of the '90s", "Greatest of All Time Songs of the '90s chart.\nSee response example"], ["Greatest of All Time Songs of the '80s", "Greatest of All Time Songs of the '80s chart.\nSee response example"], ["Greatest of All Time Billboard 200 Albums by Women", "Greatest of All Time Billboard 200 Albums by Women chart.\nSee response example"], ["Greatest of All Time Hot 100 Women Artists", "Greatest of All Time Hot 100 Women Artists chart.\nSee response example"], ["Greatest of All Time Hot 100 Songs by Women", "Greatest of All Time Hot 100 Songs by Women chart.\nSee response example"], ["Greatest of All Time Billboard 200 Artists", "Greatest of All Time Billboard 200 Artists chart.\nSee response example"], ["Greatest of All Time Billboard 200 Albums", "Greatest of All Time Billboard 200 Albums chart.\nSee response example"], ["Greatest of All Time Hot 100 Artists", "Greatest of All Time Hot 100 Artists chart.\nSee response example"], ["Greatest of All Time Hot 100 Songs", "Greatest of All Time Hot 100 Songs chart.\nSee response example"], ["Greatest of All Time Artists", "Greatest of All Time Artists chart see response example"], ["Year End Top Labels", "Year end Top Labels\nis yearly based. \n\nIf `year` is not supplied, will default to last year."], ["Year End Top New Artists", "Year end Top New Artists chart\nis yearly based. \n\nIf `year` is not supplied, will default to last year."], ["Year End Top Artists \u2013 Male", "Year end Top Artists \u2013 Male chart\nis yearly based. \n\nIf `year` is not supplied, will default to last year."], ["Year End Top Artists \u2013 Female", "Year end Top Top Artists \u2013 Female chart\nis yearly based. \n\nIf `year` is not supplied, will default to last year."], ["Year End Top Artists \u2013 Duo/Group", "Year end Top Artists \u2013 Duo/Group chart\nis yearly based. \n\nIf `year` is not supplied, will default to last year."], ["Year End Top Artists", "Year end Top Artists\nis yearly based. \n\nIf `year` is not supplied, will default to last year."], ["Year End Billboard Global 200", "Year end Billboard Global 200chart \nis yearly based. \n\nIf `year` is not supplied, will default to last year."], ["Year End Billboard 200 Albums", "Year end Billboard 200 Albums chart \nis yearly based. \n\nIf `year` is not supplied, will default to last year."], ["Year End Hot 100 Songs", "Year end Hot 100 Songs chart \nis yearly based. \n\nIf `year` is not supplied, will default to last year."], ["Independent Albums", "Independent Albums chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Catalog Albums", "Billboard U.S. Afrobeats Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Artist 100", "Artist 100 chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"], ["Billboard Hot 100", "Billboard Hot 100 chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week"]]}, "LANDR Mastering v1": {"tool_desc": "Give your users an instant and customized audio mastering solution by harnessing the power of LANDR\u2019s industry-leading, AI-driven mastering engine and its patented machine learning capabilities.", "apis": [["Preview_GetDownloadPath", "Rate Limits: 100 requests per minute"], ["Preview_GetTrackMasterStatus", "Rate Limits: 100 requests per minute"], ["Master_GetTrackMasterStatus", "Rate Limits: 100 requests per minute"], ["Master_GetDownloadPath", "Rate Limits: 100 requests per minute"], ["Webhook_GetWebhookConfiguration", "Get the webhook configuration."]]}, "Spotify _v2": {"tool_desc": "Get Spotify Tracks & Playlist Details", "apis": [["Audio Analysis", "Get audio analysis of any track"], ["Audio Features", "Get audio_features of any track"], ["Album Tracks", "Get all tracks of an specific Spotify album"], ["Artist Albums", "Fetch all albums of any Spotify artist"], ["Get Album Info (Single)", "Get single Spotify album info"], ["Artist Details (Single)", "Get Spotify artist details"], ["User details", "get user details of any Spotify user"], ["Get user Playlists", "Fetch all public playlists of a specific user."], ["New releases", "Get new releases based on country code."], ["Get Playlist Details", "Get playlist details like: playlist_name, description, thumbnail, likes_count, tracks_count & details of each individual songs (upto 100) like: song_name, url, artist_name, thumbnail &  duration."], ["Get Track Details (Single)", "Get track_name, thumbnail, duration & artist_name of any Spotify Track. Album/Podcast/Show not supported."]]}}, "Database": {"Portfolio": {"tool_desc": "Sami Malik Portfolio", "apis": [["api", "Auto generated using Swagger Inspector"]]}, "Dados CNPJ": {"tool_desc": "Busca os dados de um CNPJ diretamente na base de dados da Receita Federal.", "apis": [["CNPJ", "Buscar dados empresa pelo CNPJ"]]}, "Taekwondo_Athlete_World_Ranking": {"tool_desc": "Taekwondo_Athlete_World_Ranking", "apis": [["/GET_U-58_ATHLETE_RANKING", "<br /><br />\n<b>Authentication:</b> not required"], ["/GET_U-54_ATHLETE_RANKING", "<br /><br />\n<b>Authentication:</b> not required"]]}, "MongoDB Wix": {"tool_desc": "Adapter for MongoDb Atlas", "apis": [["Search Data", "Data also referred as case is searched using this api"], ["Data By id", "Returns data (case) by id"], ["Get Tenant", "Use this call to get the Tenant name, This name will be used in the configuration section on wix. e.g. {\"Yauthtenantname\":\"<TENANT_NAME>\"}"], ["Search All", "Returns all vault keys"], ["Get Schema By Name", "Get schema details by name. e.g. car"], ["Search All Schemas", "This call returns all schemas and its definition. Schemas are also called as case types. These case types will be consumed in Wix Database as Schemas."]]}, "Bank Account Verification": {"tool_desc": "With the Bank Account Verification solution, you can now onboard with confidence knowing that that the individual\u2019s/ merchant\u2019s account details you have are genuine and indeed belong to the individual/ merchant that you are onboarding, thereby reducing the potential of fraud.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Felina Multisig Wallet API": {"tool_desc": "Handles the database of the wallet", "apis": [["Get NFTs", "Fetch the list of owned NFTs by the wallet"], ["Read transactions", "Fetch the list of transactions submitted to the database."]]}, "MCI NMC Doctor Verification": {"tool_desc": "This API allows the client to verify the integrity and validity of a medical certificate", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "ICAI Chartered Accountant Verification": {"tool_desc": "This API checks the genuineness of the CA membership", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."], ["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Passport Verification": {"tool_desc": "Instant Passport Verification using government database check.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "All Cars Names, Image and Variants Info": {"tool_desc": "Search All Cars Names, Image and Variants Info with this api ,search once and get list of all cars.", "apis": [["Search All Cars", "This API will fetch you all cars list, \nIf you need bike details change **vehicle_type** from \"car\" to \"bike\"."]]}, "List Movies v3": {"tool_desc": "This Movies API contains the data of the best movies ever made in a very easy-to-use and organized format.", "apis": [["Movie Details", "Returns the information about a specific movie"], ["Movie Parental Guides", "Returns all the parental guide ratings for the specified movie"], ["Movie Suggestions", "Returns 4 related movies as suggestions for the user"], ["List Movies", "Used to list and search through out all the available movies. Can sort, filter, search and order the results"]]}, "Plants": {"tool_desc": "The Plants API made by Pizza API boasts a database of over 40,000 plants that can be easily searched by either their common name or scientific name.", "apis": [["Search Plant By ID", "Gives you information of one particular plant By its ID. Useful when you search for a list of plants and click on one specific plant for more information"], ["Search By Common Name", "returns a list of plants by their common name"], ["Search By Scientific Name", "You can search with a scientific name of plant and returns the list of plants matches the query"]]}, "Database Of Airports API": {"tool_desc": "The Database of Airports API is a useful resource for developers looking to obtain detailed information on airports worldwide.", "apis": [["Airports", "Get data about global airports by providing the IATA code."]]}, "List oF Philosophers": {"tool_desc": "With the Philosophers API, you can learn about philosophers such as Socrates, Plato, and Aristotle, as well as lesser-known but equally important thinkers.", "apis": [["Random Philosopher", "Returns information of a random philosopher"], ["Search Philosopher By Name", "Search for a philosopher by their name"]]}, "fwd-api": {"tool_desc": "resource forwarding api powered by Firebase storage & Heroku", "apis": [["get test", "test the endpoint response"]]}, "Winget API": {"tool_desc": "Uses the Winget database to fetch informations.", "apis": [["Get complete package list", "Get all available packages in database by ID."]]}, "SuggestUse": {"tool_desc": "This api provides access to information about alternatives to various applications, for computers, smartphones or online services.", "apis": [["Detail info", "Get detail info by application name"]]}, "Whois History": {"tool_desc": "WHOIS History API lets you find out about current and past domain owners and all other relevant registration details that can be gathered from WHOIS records.", "apis": [["Whois History (v1)", "Check Whois  record's history"]]}, "Indian RTO's Names Search ": {"tool_desc": "Search all India's RTO names by name, city PREFIX, like MH (for maharashtra), GA, CA, TA, etc", "apis": [["All RTO's", "Search for RTO names all over India,\nyou can use this API for autosuggestion"]]}, "Website Categorization": {"tool_desc": "Website Categorization API lets you define the website category of a given URL.", "apis": [["Webiste Categorization (v1)", "Define website category at once (v1)"]]}, "PageantDB": {"tool_desc": "Metadata on publicly available information on various pageant contests.", "apis": [["Single Country", "Get all details of a country by its ID."], ["Search Country", "Search country if they had an active pageant contest."], ["Countries", "Get a list of all countries involved in a pageant contest."], ["Search", "Search pageant contest by keyword."], ["Single contest", "Get details of a single pageant contest by its ID."], ["All pageant contests", "Get a list of all pageant contests."]]}, "light switch": {"tool_desc": "", "apis": [["switches", "This endpoint helps you read all the switches and their state"]]}, "timedb": {"tool_desc": "Store sensor data in managed/cloud database compatible to InfluxDB.", "apis": [["results", "Returns latest results for a query associated to a given `webhookId`."], ["webhooks", "Retrieve a list of existing webhooks."], ["measurements", "Retrieve list of Measurements in TimeDB"], ["provision", "**Runs provisioning on database(s) causing downsampling of data. Provides connection and retention information for account as a result**\n\nMust be run after new measurements or fields are added to datasets (e.q. if new sensor is providing data or additional fields should be stored for existing sensor/measurement)."]]}, "CatBreedDB": {"tool_desc": "Get the basic metadata on all breeds of cats from around the world.", "apis": [["Paginated", "Get all cat breed results in a set of 10 per page."], ["Order by Descending", "Gives a list of all cats sorted in descending order by name."], ["Order by Ascending", "Gives a list of all cats sorted in ascending order by name."], ["Origin", "Gives a list of all cats with the origin country."], ["Fur Color", "Gives a list of all cats with the color as provided in the parameter."], ["Breed Type", "Gives all results by the type of breed."], ["Search", "Search cat breed by keyword."], ["Single Cat Breed", "Gives details of a single cat breed."], ["All Cats", "Get a list of all Cats with their basic meta data."]]}, "India Bankruptcy Verification": {"tool_desc": "IDfy\u2019s IBBI Verification API will enable you to understand if an Indian corporation is under bankruptcy.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Motorcycle Specs Database": {"tool_desc": "--- DEMO http://api-motorcycle.makingdatameaningful.com/ ----\n\nThe complete Motorcycle Database with specifications for all Makes & Models [year 1900 to 2023].", "apis": [["List of all Categories", "Get all Categories:\n\n```\n    {\n        \"id\": 3,\n        \"name\": \"ATV\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Allround\"\n    },\n    {\n        \"id\": 12,\n        \"name\": \"Classic\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"Cross / motocross\"\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Custom / cruiser\"\n    },\n    {\n        \"id\": 14,\n        \"name\": \"Enduro / offroad\"\n    },\n    {\n        \"id\": 11,\n        \"name\": \"Minibike, cross\"\n    },\n    {\n        \"id\": 10,\n        \"name\": \"Minibike, sport\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Naked bike\"\n    },\n    {\n        \"id\": 1,\n        \"name\": \"Prototype / concept model\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Scooter\"\n    },\n    {\n        \"id\": 18,\n        \"name\": \"Speedway\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Sport\"\n    },\n    {\n        \"id\": 17,\n        \"name\": \"Sport touring\"\n    },\n    {\n        \"id\": 9,\n        \"name\": \"Super motard\"\n    },\n    {\n        \"id\": 13,\n        \"name\": \"Touring\"\n    },\n    {\n        \"id\": 15,\n        \"name\": \"Trial\"\n    },\n    {\n        \"id\": 16,\n        \"name\": \"Unspecified category\"\n    }\n```"], ["Models by {Make ID} / {Year}", "api/v1/model/make-id/{make}/{year}\nGet model by make id and year\nsample:\n\n```\n    {\n        \"modelId\": 1515,\n        \"modelName\": \"C 400 GT\",\n        \"yearName\": 2019,\n        \"articleId\": 2993\n    },\n    {\n        \"modelId\": 1516,\n        \"modelName\": \"C 400 X\",\n        \"yearName\": 2019,\n        \"articleId\": 2995\n    },\n    {\n        \"modelId\": 1518,\n        \"modelName\": \"C 650 GT\",\n        \"yearName\": 2019,\n        \"articleId\": 3002\n    },\n    {\n        \"modelId\": 1519,\n        \"modelName\": \"C 650 GT Highline\",\n        \"yearName\": 2019,\n        \"articleId\": 3010\n    },\n    {\n        \"modelId\": 1521,\n        \"modelName\": \"C 650 Sport\",\n        \"yearName\": 2019,\n        \"articleId\": 3014\n    },\n```"], ["Image by {ID} as Link", "/api/v1/article/{article}/image/link\n[ArticleGetImageByType]\nGet article image link\nsample:\n\n```\n{\n    \"imageName\": \"BMW HP4 2015.jpg\",\n    \"link\": \"http://127.0.0.1:8000/files/BMW/2015/HP4/BMW_2015_HP4.jpg\"\n}\n```"], ["Models by {Make ID} / {Year} / {Category}", "get model by make ID, year and category:\n\nex: /api/v1/model/make-id/55/2010/Sport"], ["Models by {Make}", "Get all models by make name\nex: /model/make-name/BMW\nsample:\n\n```\n    {\n        \"id\": 1514,\n        \"name\": \"450 Sports Enduro\"\n    },\n    {\n        \"id\": 1515,\n        \"name\": \"C 400 GT\"\n    },\n    {\n        \"id\": 1516,\n        \"name\": \"C 400 X\"\n    },\n    {\n        \"id\": 1517,\n        \"name\": \"C 600 Sport\"\n    },\n    {\n        \"id\": 1518,\n        \"name\": \"C 650 GT\"\n    },\n```"], ["Models by {Make ID} and {Category}", "Get all models  by make ID and category\nex: /api/v1/model/make-id/100/category/Sport\n\nsample:\n\n```\n    {\n        \"modelId\": 2713,\n        \"modelName\": \"Altino 125 ES\",\n        \"yearName\": 2004,\n        \"categoryName\": \"Sport\",\n        \"priceName\": null,\n        \"articleId\": 5559\n    },\n    {\n        \"modelId\": 2730,\n        \"modelName\": \"Daystar 125 FI\",\n        \"yearName\": 2011,\n        \"categoryName\": \"Sport\",\n        \"priceName\": \" Euro 2990.  Prices depend on country, taxes, accessories, etc.\",\n        \"articleId\": 5590\n    },\n    {\n        \"modelId\": 2745,\n        \"modelName\": \"RoadSport\",\n        \"yearName\": 2015,\n        \"categoryName\": \"Sport\",\n        \"priceName\": null,\n        \"articleId\": 5610\n    }\n```"], ["List of all Makes", "List of all Makes\n[MakeAll]\nGet a list of all makes\nsample:\n\n```\n   {\n        \"id\": \"55\",\n        \"name\": \"BMW\"\n    },\n    {\n        \"id\": \"60\",\n        \"name\": \"BPG\"\n    },\n    {\n        \"id\": \"66\",\n        \"name\": \"BSA\"\n    }\n```"], ["Specifications by {Make} / {Model}", "Get Specifications by {Make} / {Model}\n[MakeModelGetCompleteSpecification]"], ["Production Years (grouped) by {Model ID}", "Get makeName, modelName, years, by model Id"], ["Production Years by {Model ID}", "Get makeName, modelName, years, by model Id"], ["Specifications by {Group}", "ArticleGetSpecificationGroup\n{specs} => engineAndTransmission\n{specs} => chassisSuspensionBrakesAndWheels\n{specs} => physicalMeasuresAndCapacities\n{specs} => otherSpecifications"], ["Models by {Make ID}", "Get all model list by make ID\n/model/make-id/{id}\n\nsample:\n\n```\n    {\n        \"id\": 1514,\n        \"name\": \"450 Sports Enduro\"\n    },\n    {\n        \"id\": 1515,\n        \"name\": \"C 400 GT\"\n    },\n    {\n        \"id\": 1516,\n        \"name\": \"C 400 X\"\n    },\n    {\n        \"id\": 1517,\n        \"name\": \"C 600 Sport\"\n    },\n    {\n        \"id\": 1518,\n        \"name\": \"C 650 GT\"\n    },\n    {\n        \"id\": 1519,\n        \"name\": \"C 650 GT Highline\"\n    },\n    {\n        \"id\": 1520,\n        \"name\": \"C 650 GT Highline LS\"\n    },\n```"], ["Image by {ID} as Media Content", "Get article image as media as content.\n[ArticleGetImageByType]\nUseful for mobile apps."], ["Specifications by {ID}", "Get all specifications available by ID\n[ArticleGetCompleteSpecification]"]]}, "Mocking Rock ": {"tool_desc": "An APIs collection for getting sample profiles and city Data for testings for frontend or mock testings.", "apis": [["Get Geo location Of IP address", "Pass IP address to get its geo location and other details"], ["Get Locales List", "You can use this API to get the list of available locales \nWhich can be used to generate profile APIs response."], ["Get Sample BusinessProfile", "Use this API to get fake-generated Business Profile sample data.\nBy default, it will generate \"en\"  locale for a single count.\nIf count query is greater than 1 it will randomize the generated profiles \nto a different locale. \nTo set a default locale pass it as the query.List of the locale you can get from locale API.\nIn case of the wrong locale is given it will return the result based on default settings as mentioned above."], ["Get Sample UserProfile", "Use this API to get fake-generated user Profile sample data.\nBy default, it will generate \"en\"  locale for a single count.\nIf count query is greater than 1 it will randomize the generated profiles \nto a different locale. \nTo set a default locale pass it as the query.List of the locale you can get from locale API.\nIn case of the wrong locale is given it will return the result based on default settings as mentioned above."], ["Get Country Codes", "Use this API to get list of countries, Their ISO3 & ISO2 codes."], ["Get Countrywise city data", "Use this API to get city list of country. You need to send country name or ISO3 or ISO2 code \nas query to get it. Which you can get it from other API \"Country Codes\""], ["City Data", "Get list of citys.\nCount limit should be less the 1000"]]}, "ICMAI Verification": {"tool_desc": "IDfy\u2019s ICMA Verification API enables you to verify if a user is actually a member of ICMA.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "India NCVT ITI Cerificate Verification": {"tool_desc": "NCVT Certificate is a certificate awarded for the completion of ITI courses under the purview of the NCVT.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "veiculos-api": {"tool_desc": "Tabela FIPE - Busca por marca, modelo e vers\u00e3o.", "apis": [["/veiculo_tipo", "Retorna as marcas do tipo selecionado, os tipos dispon\u00edveis s\u00e3o \"carros\", \"motos\" e \"caminhoes\"."], ["/veiculo_tipo/id_marca", "Retorna listagem dos ve\u00edculos de uma determinada marca."]]}, "Consulta CPF CNPJ Brasil": {"tool_desc": "api consulta cpf cnpj diretamente na base do serasa, otimize suas aplica\u00e7\u00f5es", "apis": [["Consulta por CNPJ", "**Consulta dados e informa\u00e7\u00f5es do CNPJ, a demanda de informa\u00e7\u00f5es est\u00e1 sempre sendo atualizada para melhor atende-los **"], ["Consulta dados societ\u00e1rios", "**## consulta dados dos s\u00f3cios do cnpj consultado pelo id_socio**"], ["Consulta por CPF", "**Consulta por CPF endpoint**"]]}, "Data Axle Consumer Address Search": {"tool_desc": "Find relevant People in the Data Axle database", "apis": [["Consumer Address Search", "Find relevant People in the Data Axle database"]]}, "gsaauction": {"tool_desc": "gsaauction", "apis": [["/auctions", "this endpoint returns auction listings."]]}, "testGetApi": {"tool_desc": "test api for project batman", "apis": [["testBatmanApi", "API for test project batman"]]}, "Data Axle Consumer Phone Search": {"tool_desc": "Find relevant people in real-time.", "apis": [["Consumer Phone Search", "Find relevant People in the Data Axle database"]]}, "Countries Population": {"tool_desc": "An API that returns the estimated population, from a selected country.", "apis": [["Country Details Level 1", "Specified one valid param and retrieve access level 1 information about a country:\n- english name\n- population (in millions)\n\n\nValid params are country english name, ISO code 2 or ISO code 3"], ["Total Population", "Returns the estimated total population\n\n- Number in millions."], ["Country Details Level 2", "Specified one valid param and retrieve access level 2 information about a country:\n- english name\n- ISO code 2\n- numeric code\n- population (in millions)\n\nValid params are country english name, ISO code 2 or ISO code 3"], ["Country Details Level 3", "Specified one valid param and retrieve access level 3 information about a country:\n\n- english name\n- french name\n- ISO code 2\n- ISO code 3\n- numeric code\n- population (in millions)\n\nValid params are country english name, ISO code 2 or ISO code 3"], ["All countries names", "Returns all countries english full names. Useful when need to know wich country names to search for."]]}, "EPFO Employee Verification": {"tool_desc": "This API that takes company and employee information as input and returns if the employee name is found in the PF list of the employer", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Lista de empresas por segmento": {"tool_desc": "Lista de empresas segmentadas | Leads segmentadas", "apis": [["Pesquisa por campo", "Busque uma lista de empresas utilizando outros campos, como:  **nome, email, telefone, socio, cep**.\nCampos retornados: CNPJ, localiza\u00e7\u00e3o, UF, Cidade, bairro, nome fantasia e raz\u00e3o social."], ["Detalhes empresa", "Detalhes da empresa utilizando o CNPJ. Dados retornados:\nCNPJ\nRaz\u00e3o social\nNome fantasia\nData cria\u00e7\u00e3o\nStatus empresa\nNatureza jur\u00eddica\nCNAE principal\nCNAEs secund\u00e1rios\nPorte empresa\nEndere\u00e7o\nTelefone\nE-mail\nQuadro de s\u00f3cios e administradores\nParticipa\u00e7\u00f5es em outras empresas"], ["CNAE ou localiza\u00e7\u00e3o", "Busque uma lista de empresas filtrando pelo CNAE ou localiza\u00e7\u00e3o. Voc\u00ea pode filtrar usando apenas CNAE tendo abrang\u00eancia nacional, filtrar usando apenas a localiza\u00e7\u00e3o, ou utilizar ambos os filtros combinados. Dados retornados da empresa:\n**CNPJ, endere\u00e7o, UF, cidade, raz\u00e3o social e nome fantasia**."]]}, "Roman Gods By Pizza API": {"tool_desc": "With the Roman Gods API, you can access information about gods such as Jupiter, the king of the gods, and his wife Juno, the goddess of marriage and childbirth.", "apis": [["Search Roman God By Name", "Search for a Roman God By name to get a description about them"], ["Random Roman God", "Returns information about a random Roman God"]]}, "Indian Bank Statement": {"tool_desc": "The bank statement API helps banks and lenders make decisions b providing outputs about Salary frequency and estimation, current financial health of the individual, any risky behaviour associated with the transactions.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "TEAS": {"tool_desc": "Managements about teas .", "apis": [["get a single type of tea", "get one type of tea"], ["get all teas", "get all type of teas"]]}, "IP Netblocks": {"tool_desc": "IP Netblocks API gives you extensive information about IP ranges and IP address owners.", "apis": [["IP Netblock v2", "Get exhaustive information on IP Range (v2)"]]}, "Voter Card Verifications": {"tool_desc": "With the Voter Card Verification API, you can now onboard with confidence knowing that the individuals you onboard are holding a valid Voter Card issued by the Government of India, are eligible to vote, and have provided you with reliable identity and address proofs.", "apis": [["Get Call", "Get call is to be made by appending request id to the url in the query parameter, to fetch the api results."]]}, "aaaa": {"tool_desc": "aaa", "apis": [["Get App", "Get information about a specified app, including the `name`, `description`, and `thumbnail`."], ["Get Single User", "Get information on a specified user, including the `email`, `name`, and `thumbnail`. The endpoint also indicates if the user has two factor authentication methods enabled."], ["Get User Audit Login", "Get the total number of logins and detailed login logs for a specified user. The logs include the `time`, `geography` , and other `attributes` associated with each login by the user. By default, the endpoint returns up to 10 logs. You can increase or decrease the amount of logs returned using the limit parameter."], ["Get API Logs", "Get all of the logs for a particular API."], ["Progress of API Version file upload", "Check the progress of an API Version file upload process"], ["Get API Subscriptions", "Get information about all of the subscriptions to a specified API."], ["Get API Current Version", "Get information for the current version of a specified API, including the `id`, `name`, and `status`."], ["Get API", "Get information on specified API, including `category`, `id`, and `name`"], ["Get All Apps", "Get information on all of the Apps associated with an account."], ["Get all Collections", "Get a list of all of the collections that exist within your environment"], ["Get Requesting User Details", "Get detailed user information that is associated to the account"], ["Get Requesting User Teams", "Get all of the team ID's that are associated to your account"], ["Get all Organizations", "Get Organization information for all of the Organizations you have access to. Organization information includes the associated `email`, the number of `seats`, the Organization `name`, the `status`, and more."], ["Get all Api Tags", "Get information about all of the tags associated with an API, including the `tagId`."], ["Get Organization Audit Log", "Get the audit trail for a specified Organization. Information in the audit trail includes details like `eventName`, `user`, `attributes` and more."], ["Get Multiple Users", "Get information on all or multiple users in your Enterprise Hub. Use the optional parameters to return a more narrow range of users.The information returned for each user includes userId , status, email, lastActive, and more."], ["Get API Version OpenAPI", "Get a specified API Version's OpenAPI file in REST format."], ["Get Organization", "Get a specified Organization's information, including the associated `email`, the number of `seats`, the Organization `name`, the `status`, and more."], ["Get all Organizations (Environment Admin)", "Get Organization information for all of the Organizations in your Enterprise Hub.Organization information includes the associated `email`, the number of `seats`, the Organization `name`, the `status`, and more."], ["Get User Teams", "Get all of the `organizationTeamIds` for each Team the user is a member of."], ["Get Team", "Get information about a specific Team, including the `name`, `status`, and `description`."], ["Get Quota Export", "Download Quota Export file for a specific month"], ["Get Collection", "Get information on a specific collection within your environment"], ["Get Team Users", "Get information about all of the users that belong to a specific team. Returned user information includes the user `id`, `email`, `username`, and `lastActive`."], ["Get all App Keys", "Get all App Keys for a specified App."], ["Get all Tag Definitions", "Get information on all the Tags within your environment"], ["Get API Version OpenAPI", "Get a specified API Version's OpenAPI file."], ["Get All User Subscriptions", "Get a list of all your subscriptions"], ["Search for public APIs", "Get all public APIs by specific terms."], ["Get User Subscription", "Get info on an existing subscription"], ["Get Category", "Get information on a specific Category within your environment"], ["Get API Log Details", "Get API logs details information, including `endpoint`, `http method`, `payload` and more."], ["Get API Version", "Get information for a specified version of an API, including the `id`, `name`, and `status`."], ["Get API Subscription", "Get information about a specific subscription to a specified API."], ["Get All APIs", "Get information for all APIs, including the `id`, `name`, and `status`."], ["Get All Teams", "Get information about all of the Teams in a specific Organization, including the `name`, `status`, and `description` for each Team."], ["Get OpenAPI", "Get a specified API's OpenAPI file in REST format."], ["Get API by external custom ID", "Get information on specified API based on a given custom external ID, including `category`, `id`, and `name`"], ["Get Api Tag", "Get Tag information for a specific API"], ["Get all Categories", "Get all the Categories that exist in your environment"], ["Get All API Versions", "Get all the versions (and their corresponding information) that exist for a specified API."], ["Get Tag Definition", "Get information on a specific Tag within your environment"], ["Get all API Docs", "Get information about all of the docs associated with an API, including the docId."]]}, "Women in Tech": {"tool_desc": "A dataset of Women-led startups worldwide", "apis": [["getCompanies", "For valid response try base URL"]]}, "Data Axle Business Phone Search": {"tool_desc": "Find relevant businesses by phone number.", "apis": [["Business Phone Search", "Find relevant businesses in the Data Axle database"]]}, "VCT Global Contract Database": {"tool_desc": "Get the VCT contract information for all 3 regions via this API.", "apis": [["PACIFIC", "Returns a json of all teams inside PACIFIC."], ["EMEA", "Returns a json of all teams inside EMEA."], ["AMERICAS", "Returns a json of all teams inside AMERICAS."]]}, "Quadro de s\u00f3cios CPF/CNPJ": {"tool_desc": "Consultar Quadro de S\u00f3cios e Administradores registrados na Receita Federal", "apis": [["CPF", "Buscar pelo CPF do s\u00f3cio ou administrador"], ["CNPJ", "Buscar dados empresa pelo CNPJ"], ["CPFObliterado", "Buscar quando o CPF est\u00e1 obliterado. Ex: ***053599**"]]}, "Domain Reputation": {"tool_desc": "Domain Reputation API lets you build a risk profile for a given domain or IP address with a single score based on multiple data sources.", "apis": [["Domain Reputation", "Evaluate reputation of a domain or IP (v1)"]]}, "Website Screenshot": {"tool_desc": "Website Screenshot API lets you get the screenshots of any site pages of your choice as a file in jpg, png, or PDF file (with embedded links) in just one API call.", "apis": [["Website Screenshot (v1)", "Get a screenshot of any web page with one API call (v1)"]]}, "Complete Criminal Checks Offender Data": {"tool_desc": "SHOULD BE USED FOR MARKETING REASONS ONLY!", "apis": [["API Docs", "Easily create your links!"]]}, "Udyam Aadhaar Verification": {"tool_desc": "Make your onboarding process safer, faster, and smarter by verifying the legitimacy of the MSME merchants operating in the manufacturing or service sectors, on your platform.", "apis": [["GET Call", "Get call is to be made by appending request id to the url in the query parameter, to fetch the api results."]]}, "Pan Card Verification at Lowest price": {"tool_desc": "Instant PAN Card Verification using government database check.", "apis": [["Verify PAN Card", "Instant PAN Card Verification using government database check.\n\nThis PAN Card Verification API instantly verifies details of a PAN Card by confirming them from the Government database.\n\nThis makes your onboarding process faster, safer and smarter. With our PAN verification, you can be confident that the individuals or merchants you onboard hold a valid PAN card and have provided you with the right identity proof."]]}, "expense data": {"tool_desc": "expense data", "apis": [["/Calculate_expenses", "<br /><br />\n<b>Authentication:</b> not required"], ["/read_expenses", "<br /><br />\n<b>Authentication:</b> not required"]]}, "Python Libraries tst": {"tool_desc": "Testing for mock api endpointss", "apis": [["View User List", "Gets a user\u2019s list of favorite libraries."]]}, "Joke Test": {"tool_desc": "This is a Joke Test", "apis": [["/random_joke", "Returns a random joke"]]}, "HSN TSN": {"tool_desc": "With this API you can find out the key number of over ~30,000 vehicles.", "apis": [["Get Models", "Returns all models based on manufacturer."], ["Get HSN TSN", "Search for dedicated car. Year is optional. Records are limited by 100 rows."]]}, "testapi2": {"tool_desc": "test api2", "apis": [["test endpoint", "OpenAPI Provisioning API Documentation\nRapidAPI's official API that allows you to add or update your API\u2019s definition."]]}, "Nurse Verification": {"tool_desc": "Nurse verification is used to verify whether an individual is a registered nurse with the Indian Nurse Council (INC).", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Driving License Verification": {"tool_desc": "IDfy\u2019s Driving License Verification API instantly verifies details of a driving license by confirming them from the Government database.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Restaurants near me USA": {"tool_desc": "USA Restaurants database.", "apis": [["GET all Restaurant locations by {zipcode]", "GET all Restaurant locations by zipcode"], ["GET all Restaurants locations by {state}", "GET all Restaurants locations by state"], ["GET all Restaurant locations by {state} and {city}", "GET all Restaurant locations by state and city"]]}, "Weed Strain": {"tool_desc": "Basic information on all weed strain.", "apis": [["All Strains - Descending", "List of all strains ordered by name in descending order."], ["All Strains - Ascending", "List of all strains ordered by name in ascending order."], ["Difficulty", "Provides results of all strains by its difficulty of growing such as easy, medium or difficult."], ["Strain Type", "Provides a list of results by strain type such as Indica, Sativa, Hybrid, etc."], ["Search", "Provides list of results by search keyword."], ["Single Strain", "Provides all details for a single strain by its ID."], ["All Strains", "Provides a list of all available strains."]]}, "Data Axle Business Address Search": {"tool_desc": "Find relevant businesses in real-time.", "apis": [["Business Address Search", "Find relevant businesses in the Data Axle database"]]}, "WHOIS v2": {"tool_desc": "WHOIS API (v2) returns well-parsed WHOIS records with fields in XML and JSON formats for any IPv4, IPv6 address, domain name, or email.", "apis": [["WHOIS lookup v2", "WHOIS lookup in JSON or XML, ver. 2"]]}, "AirplanesDB": {"tool_desc": "Get the basic specifications on all types of commercial airplanes.", "apis": [["Airplanes ordered by descending", "Get all airplanes ordered by name in descending order."], ["Airplanes ordered by ascending", "Get all airplanes ordered by name in ascending order."], ["Search by Engine", "Get all airplanes by engine keyword."], ["Airplanes by Brand", "Get all airplanes by brands such as Boeing, Airbus, etc."], ["Search", "Search airplane by name."], ["Single Airplane", "Get details of a single airplane by its ID."], ["All Airplanes", "Get complete data of all airplanes."]]}, "Data Breach Checker": {"tool_desc": "The Data Breach Checker API allows users to check if their data has been compromised in any known data breaches.", "apis": [["Data Breach Checker Endpoint", "The Data Breach Checker API provides a simple endpoint for users to check if their email has been compromised in any known data breaches."]]}, "House Plants": {"tool_desc": "This API provides a database of house plants, along with their description and information how to best take care of them (ideal temperature, light, etc.).", "apis": [["Get By Climate", "Get plants by climate of their natural habitat."], ["Get By Origin", "Get plants by their origin."], ["Get By Category", "Get plants by their category."], ["Get By Latin Name", "Retrieves all plants that match the provided Latin plant name."], ["Get All Plants", "This endpoint retrieves all the plants."], ["Get By Common Name", "Retrieves all plants that match a given common plant name."]]}, "Response WebHook": {"tool_desc": "Accept response pushed from VP", "apis": [["dinotest", "just test the endpoint"]]}, "Website Contacts": {"tool_desc": "Website Contacts API delivers well-structured contact information from domain owners based on data parsed from websites, social media, and SSL certificates in addition to other sources.", "apis": [["Website Contacts (v1)", "Get full contact information from page, domain or web (v1)"]]}, "World History Timeline": {"tool_desc": "Introducing the World History Timeline API by Pizza API - an extensive resource for exploring world historical events from 3200 BCE to the year 2000.", "apis": [["Historic Event By year", "Give an year in the query and it returns all the available events from that year"], ["Random Historic Event", "Returns a Random World Historic Event with the year and the event"]]}, "car code": {"tool_desc": "This is a simple API that will return the human readable version of DTC codes (OBD-II Trouble Codes).", "apis": [["/obd2/{code}", "This endpoint will provide the human readable version of a requested obd2 code"]]}, "DogBreedDB": {"tool_desc": "Get the basic metadata on all breeds of dogs from around the world.", "apis": [["Paginated", "Get all dog breed results in a set of 10 per page."], ["Order by Descending", "Gives a list of all dogs sorted in descending order by name."], ["Order by Ascending", "Gives a list of all dogs sorted in ascending order by name."], ["Origin", "Gives a list of all dogs with the origin country."], ["Fur Color", "Gives a list of all dogs with the color as provided in the parameter."], ["Breed Type", "Gives all results by the type of breed."], ["Search", "Search dog breed by keyword."], ["Single Dog Breed", "Gives details of a single dog breed."], ["All Dog Breed", "Gets details of all dog breeds."]]}, "Data Axle Consumer Search": {"tool_desc": "Find relevant listings in the database", "apis": [["Consumer Name Search", "Find relevant People in the Data Axle database"]]}, "siteDomain": {"tool_desc": "site adm domain", "apis": [["domain detail", "get detail by did"], ["theme detail", "\u53d6\u5f97\u4e3b\u984c\u9928edit show by  dtid"]]}}, "Gaming": {"CROSSWORD Solver": {"tool_desc": "Find all missing letters!", "apis": [["CROSS", "**Using this API is easy! An example?**\n\nSearch string:\n- must contain letters (a-z) AND at least one _ (underscore) for unknown letters.\n- must have a minimum length of 3 and a maximum lenght of 65 characters.\n- is a required parameter.\n\nExample request:   `word=u_b_l_e_a_l_`\n\nLanguage:\n- en, es, de (English, Spanish, German)\n- is a optional parameter. If not set /en/ is used. \n\nExample request:   `lang=en`\n\n**This is fun!**"]]}, "DiceForge": {"tool_desc": "DiceForge is a powerful and versatile dice rolling API designed for tabletop RPG enthusiasts and game developers alike.", "apis": [["/roll", "Rolls a set of dice and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nsides (integer): A list of integers representing the number of sides for each die.\ncount (integer): A list of integers representing the number of times to roll each die. Defaults to 1 if not provided.\nmodifier (integer): A list of integers representing the modifier to apply to the total of each die roll.\nadvantage (boolean): If set to true, rolls each die twice and takes the higher result.\ndisadvantage (boolean): If set to true, rolls each die twice and takes the lower result."], ["/statroll", "Rolls 4d6 for generating character stats, dropping the lowest die result from the total, and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nmodifier (integer): An integer representing the modifier to apply to the total of the stat roll."]]}, "CheapShark - Game Deals": {"tool_desc": "CheapShark is a price comparison website for digital PC Games.", "apis": [["Stores Info", "Returns a full list of store IDs and names, a flag specifying if store is active, and an array of image/logo sizes (relative URLs)"], ["Manage Alerts", "Send an email containing a link to manage your alerts."], ["List of Games", "Get a list of games that contain a given title or matches steamAppID. Response includes the cheapest current deal for each game."], ["List of Deals", "Get a paged list of deals matching any number of criteria, all the filtering parameters are optional.\n\nThe deal object is what drives most of what you see on the site. They are price + metadata properties for games for a given store. All dealID\u2019s are encoded on the server. On your website/app, you will use the redirect page to link users to a specific deal:\n\n> https://www.cheapshark.com/redirect?dealID={id}\n\n**Important Note**: The redirect page is not an API endpoint and is not designed for automated access. It is purely a way to link your end users to deals.\n\nThe deal rating property provides a quick way to compare how 'good' a deal is. It is normalized on a scale from 0 to 10."], ["Game Lookup", "Gets info for a specific game. Response includes a list of all deals associated with the game."], ["Edit Alert", "Set or remove a price alert."], ["Deal Lookup", "Get info for a specific deal. Response includes game info, any cheaper current deals, and the cheapest historical price. As elsewhere, dealID is encoded"]]}, "Minecraft UUID Converter": {"tool_desc": "Converts your Mojang Minecraft username into a UUID.", "apis": [["UUID to Name", "Convert your Mineccraft UUID to a Name"], ["Name to UUID", "Provide your Minecraft username"]]}, "Pokemon TCG Card Prices": {"tool_desc": "Provides a model of the Pokemon Trading Card Game cards.", "apis": [["Get Many Cards", "Returns many cards based on query parameters.\n\nA card represents a single card that can be defined by a combination of series / set / number in set / variant."], ["Get One Card by Id", "Gets details about a single card by it's ID."], ["Get One Set By Id", "Returns information about a single set, retrieved using the ID for that set."], ["Get Many Sets", "Returns many sets based on query parameters.\n\nA set is a grouping of cards that are periodically released together. Every card has a set. Every set is part of a series."]]}, "Hearthstone": {"tool_desc": "This API provides cards information for Hearthstone", "apis": [["Get Cards", "get a list of all the cards available in hearthstone"], ["Get Card By Slug", "get card information by slug"]]}, "big89": {"tool_desc": "daftar big89 dan login big89 judi online indonesia terpercaya", "apis": [["big89", "Big89 merupakan [situs judi online](https://www.inksgame.com) resmi di indonesia tanpa bank offline BCA BRI MANDIRI BNI DANAMON."]]}, "Aposta Ganha Aviator API": {"tool_desc": "This endpoint allows you to retrieve the latest results of the Aviator game on the Aposta Ganha ( apostaganha.bet )  platform.", "apis": [["apostaganha-aviator-latest", "Will retrieve the latest results from Aviator at Aposta Ganha.\n\n- The first result is the most recent\n- The last result is the oldest"]]}, "League Of Legends Esports": {"tool_desc": "This api gives you all of the lol esports leagues , vods, tournaments, match , game , event details with videos , scheadule , standings, teams and their players.", "apis": [["Get Tournaments For League", "This endpoint can gives you all of the tournaments for league id. You can get all league id from the Get Leagues endpoint . If you want you can get all tournaments data without filtering leagues."], ["Get Vods", "In this api method you can get all previous event , match game information. You can search by tournaments id and you can get this value from the Get Tournaments For League endpoint."], ["Get Game", "In this api method you can search all of the game data with game id. You can get this id from the Get Vods api method."], ["Get Live", "In this method you can get all live events score"], ["Get Schedule", "In this method you can get all schedule for the leagues. You can filter multiple leagueId with join %  seperator."], ["Get Teams And Players", "You can get all teams and player this api methods also you can filtered by team id or name."], ["Get Statics", "This endpoint gives you champion statics. This statics can filtered time period and league."], ["Get Standings", "In this api method you can get all standings for tournaments. You can get tournaments id Get Tournaments From League method."], ["Get Event Detail", "In this api method you can get all of the event detail from the match or event id (exactly same those ids.) you can get this id from the Get Vods or Get Match api methods."], ["Get Leagues", "This api method can gives you all of the leagues and region information"]]}, "Dice Roll Simulator": {"tool_desc": "Roll as many dice of any size as many times you want with the ultimate dice rolling API.", "apis": [["Regular die", "Roll one regular die."], ["Custom die", "Roll one die with any number of sides."], ["Regular dice", "Roll any number of regular dice."], ["Custom dice", "Roll any number of dice with any number of sides."], ["Regular dice rolls", "Roll any number of regular dice any number of times."], ["Custom dice rolls", "Roll any number of dice with any number of sides any number of times."]]}, "Minecraft Servers List": {"tool_desc": "More than 1700 Minecraft Servers List with live status", "apis": [["Get Sample Data", "Get 10 Servers List with Free Plan"], ["Get All Servers", "Get All Servers List"]]}, "League Of Legends Champion Informaion": {"tool_desc": "API that will return a Champion object containing a list of Abilities including the champions passive ability.", "apis": [["Get Champions", "Accepts a comma delimited list of champion names or nicknames.\n\nReturns a list of Champions full names and list of passive ability and standard abilities in an on object format."], ["Get Champion Abilities as Text", "Accepts a comma delimited list of champion names/nicknames and returns a text list of champions as well as their passive and standard abilities."]]}, "Pokemon Unite Pokemons": {"tool_desc": "Pokemon Unite", "apis": [["List all Pokemons", "A list of all pokemons within pokemon unite"], ["Get Pokemon data by name", "Get Pokemon data sing the pokemon name"]]}, "ContextoGuess": {"tool_desc": "Allows for contexto integration into other services, feature to get second word", "apis": [["getSecondWord", "returns the second word for a given game"], ["guessWord", "guess a word and it will return the position it holds"]]}, "Epic Games Store - Free Games": {"tool_desc": "Unofficial API for scraping Free Games Offers from the Epic Games Store", "apis": [["Free Games", "Return All Free Games on Offer on the Epic Games Store. Also returns upcoming Free Games."]]}, "Steam Store API": {"tool_desc": "\ud83d\udc8eUncover gaming trends with our Steam API.", "apis": [["Free to play", "Get a full list of free to play games and other free products."], ["Search items (\ud83d\udd25)", "\ud83d\udc49 This is one of the most important endpoints. Retrieve data from the Steam search engine. The filters here have a powerful impact. With their use you can find anything that interests you. If you want to limit the games to a certain amount, read the description of maxPrice parameter below.\n\nMaximum number of results served from one call is 50. But very often the number of results is lower because we skip game packs (bundles) in the search engine. If you're interested in this, let us know."], ["Achievement list", "Returns a full list of achievements with information on what needs to be done to get the achievement and what percentage of players have achieved it."], ["DLC details", "Returns details of the selected DLC."], ["User reviews", "\ud83d\udca1 The endpoint returns a complete list of user reviews. Use filters to narrow down the results as desired. If you want to get reviews from page 2, you must first grab data from page 1 and save the **cursor** value from response. Then set in the new call  **page=2** and **cursor** from page 1."], ["Dlc list", "Returns full DLC list for selected item."], ["Shortened item details", "\ud83c\udfae It retrieves shortened game data. Check the endpoint worth since it may contain information more important to you than the ones in \"Full item details\"."], ["Items by tag (\ud83d\udd25)", "\ud83d\udc49 This is one of the most important endpoints. It returns games and other products based on the provided **TagID** . You can find the **TagID** by calling the **Tag list** endpoint from the **Tags** section. You can also specify which tab you're interested in by setting the appropriate **tab** value."], ["Country code list", "Use this codes in other endpoints to grab data from the country of your interest. The country code is very **important** because it determines the **currency** in which prices will be displayed."], ["Full item details (\ud83d\udd25)", "\ud83c\udfae It retrieves full game data such as: prices, discount, detailed descriptions, PEGI/ESRB, DLCs, system requirements, screenshots and much more! It also returns API links to conveniently download details of: DLCs, reviews, achievements."], ["Language list", "Returns a full list of available languages. Use them in other endpoints to retrieve data in the language you're interested in."], ["Tag list", "Retrieve the full list of tags. Use the tag IDs to handle other endpoints. If you want to get all the games e.g. with **Action** tag, just:\n- retrieve the list\n- find the Action tag \n- take its ID \n- put it into **Items by tag** endpoint\nIt's so simple!"]]}, "Steam Community": {"tool_desc": "Interface with elements on the SteamCommunity.", "apis": [["Group Trending Topics", "Get a list of the trending topics, and the OP."], ["User Aliases", "Get a list of user aliases and when they were changed."], ["Group Profile", "An overview of a steamcommunity group."], ["User Groups List", "Get a listing of all the public and private groups a user is apart of."], ["User Friends List", "Get a full listing of in-game, online, and offline friends of a user."], ["User Profile", "Get a full listing of data from a user profile. Friends, Groups, Steam Profile Level, and so much more."]]}, "Minecraft User Data": {"tool_desc": "Easily get minecraft user info.", "apis": [["User Data", "Get minecraft user data."]]}, "Trackmania": {"tool_desc": "Get Stats, Matches and Leaderboards from Trackmania (Unofficial).", "apis": [["In-game Ads", "All currently active Maniapubs displayed in-game."], ["Player Cup of the Day Information", "Get the COTD info of a player."], ["Player Trophy Information", "Get the trophy info of a player."], ["Player Royal Information", "Get the royal info of a player."], ["Player Matchmaking Information", "Get the matchmaking info of a player."], ["Player Summary", "Get the summary of a player containing general information."], ["Sponsor Players", "Get Players that are sponsors."], ["Search all Players", "Search for players with `search_query`"], ["TMGL Players", "Get Players from tmgl."], ["Nadeo Players", "Get Players from nadeo."], ["Team Players", "Get Players that are in the Openplanet Team."], ["TOTD Tracks by Date", "Get the TOTD tracks by date containing the year and month."], ["TOTD Tracks by Page", "Get the TOTD tracks by page number of the `https://trackmania.io/#/totd` page."], ["Royal matches", "Get recent royal matches."], ["Matchmaking matches", "Get recent matchmaking matches."], ["Top Players by Royal", "Get the top players by their royal rank."], ["Top Players by Matchmaking", "Get the top players by their matchmaking rank."], ["Top Players by Trophies", "Get the top players by their tophy count."]]}, "GamerPower": {"tool_desc": "Find all free games, loot and giveaways with this giveaway tracker API powered by GamerPower.com!", "apis": [["Filter & Group Giveaways", "Filter and group platforms and giveaway types to get personalized results."], ["Specific giveaway details", "Get details from a specific giveaway (insert giveaway id)."], ["Live giveaways by platform", "Insert platform eg: pc, steam, epic-games-store, uplay, gog, icthio, ps4, xbox-one, switch, android, ios, vr, battlenet"], ["Live giveaways by type", "Get live giveaways by type, eg: game, loot, beta"], ["Sort live giveaways", "Insert sort by, eg: date, value, popularity"], ["Live giveaways by platform & type & sorted", "Get all live giveaways by platform and type and sorted."], ["Total live giveaways & worth estimation in dollars", "You can also use the \"platform\" and \"type\" parameters to get more specific results, eg: /api/worth?platform=steam?type=game"], ["All live giveaways", "Get all live giveaways."]]}, "Bet7k Aviator API": {"tool_desc": "This endpoint allows you to retrieve the latest results of the Aviator game on the BET7K ( bet7k.com ) platform.", "apis": [["bet7k-aviator-latest", "Will retrieve the latest results from Aviator at BET7K.\n\n- The first result is the most recent\n- The last result is the oldest"]]}, "Weeby": {"tool_desc": "A REST API that features Image Generation, Text, Effects and more!", "apis": [["3000 Years", "Generates the 3000 Years Meme.\n**ALL DOCUMENTATION HERE**: [https://weebyapi.ntmnathan.com/api/docs](https://weebyapi.ntmnathan.com/api/docs)"]]}, "Steam Market and Store": {"tool_desc": "Welcome to the Steam Market API, your gateway to a treasure trove of information about the vibrant world of gaming on Steam!", "apis": [["Retrieve Buy/Sell informations by ID", "From a given ID, retrieve the latest Buy/Sell orders placed on the Steam Store."], ["Get latest activity by ID", "Given a specific ID, retrieve the last activity dealed with it. Basic information about the user performing the activity is also provided."], ["Get Price History By ID", "For a given ID, get the price history together with the number of items sold."], ["Get Items IDs by query", "Enter a (text) query and retrieve the IDS associated to your items. This ID will be needed in order to explore market information."]]}, "Valorant Esports_v2": {"tool_desc": "The Valorant Esports is a user-friendly tool that allows you to extract data from the website vlr.gg.", "apis": [["Get player info", "Get name, country, team and more about a player."], ["Get all players", "Get id, name and country of all players."], ["Get team info", "Get comprehensive information about a team, including player details, events, results, and more."]]}, "World of Tanks Stats": {"tool_desc": "Your can get information about a player like wn8.", "apis": [["Get Stats", "Get WN8, WN7, battles, victories, defeats, kills, draws, avereageTier, tanksSpotted, battlesSurvived"]]}, "Rocket League": {"tool_desc": "Ranks, stats, news & more, provided by the fastest and most powerful API for Rocket League.", "apis": [["Tournaments", "Check the scheduled tournaments:\n`rocket-league1.p.rapidapi.com/tournaments/:region`"], ["Challenges", "Check the seasonal and weekly challenges."], ["Esports", "Check the Esports events:\n`rocket-league1.p.rapidapi.com/esports`"], ["Shops", "Check the current shops:\n`rocket-league1.p.rapidapi.com/shops/:type`"], ["News", "Check the news:\n`rocket-league1.p.rapidapi.com/news`"], ["Population", "Check the playlist population:\n`rocket-league1.p.rapidapi.com/population`"], ["Blog", "Check the blog:\n`rocket-league1.p.rapidapi.com/blog`"], ["Titles", "Check a player's titles:\n`rocket-league1.p.rapidapi.com/titles/:player`"], ["Profile", "Check a player's profile:\n`rocket-league1.p.rapidapi.com/profile/:player`"], ["Stat", "Check a player's stat:\n`rocket-league1.p.rapidapi.com/stat/:player/:stat`"], ["Ranks", "Check a player's ranks:\n`rocket-league1.p.rapidapi.com/ranks/:player`"], ["Club", "Check a player's club:\n`rocket-league1.p.rapidapi.com/club/:player`"]]}, "MCAPI": {"tool_desc": "Retrieve information about Minecraft's blocks, items, recipes and advancements.", "apis": [["Blocks", "Retrieve blocks information:\n\n- **block_id** such as \"minecraft:stone\"\n- **block_group** such as \"Natural\"\n- **light_emission** such as 15 for torches or 0 for non-emitting blocks (MC unit)\n- **burn_chance** to indicate the probability of the block catching fire \n- **flammable** is true if the block can catch fire otherwise is false\n- **hardness** to indicate how hard a block is (MC unit)\n- **blast_resistance** to indicate how strong is the block against explosions\n- **friction** is a float value that represents block friction\n- **speed_factor** is a float value that indicates whether  the block slows you\n- **jump_factor**  is a float value that indicates whether  the block should make you jump higher\n- **rarity** such as \"COMMON\"\n- **tool_required** is true if the block requires the use of a tool to generate a drop\n- **tags** represents the list of tags attached to that block"], ["Items", "Retrieve items information:\n\n- **item_id** is the id of the item like \"minecraft:stick\"\n- **item_group** is the group of the item like \"Ingredients\"\n- **stack_size** is the max amount of items in one stack\n- **fire_resistant** is true if the item doesn't burn\n- **rarity** is the item rarity such as \"COMMON\"\n- **is_food** is true if the item can be eaten\n- **is_damageable** is true if the item can be damaged when used\n- **is_enchantable** is true if the item can be enchanted\n- **durability** indicates how many times the item can be used\n- **tags** are the tags applied to this item"], ["Images", "Retrieve item or block image (to be removed):\n\n- **name** is the name of the block or item (without minecraft;)\n- **width** is the desired width of the returned image\n- **height** is the desired height of the returned image"], ["Tags", "Retrieve blocks and items tags"], ["Total Count", "Get total count of entries"], ["Advancements", "Retrieve advancements:\n\n- **advancement_id** is the ID made of the category+title\n - **category** is the category of the advancement (adventure, husbandry, nether, story or end)\n - **title** is the in-game title\n - **description** is a short description of the advancement\n  - **frame** is the type of background used\n  - **icon** is the icon inside of the frame (block or item without minecraft:)\n  - **parent_advancement** is the ID of the previous adv. to be achieved"]]}, "VRising Server Query API": {"tool_desc": "This API is designed to query any VRising game server for information, more unique and custom features coming soon!", "apis": [["/discord/185.225.233.110/30015", "Gets the discord link found in the server description."], ["/keyDetails/185.225.233.110/30015", "Get the key details from server - change `/IP/PORT`"], ["/playerCount/185.225.233.110/30015", "Get the player count from server - change `/IP/PORT`"], ["/connectIP/185.225.233.110/30015", "Get the connect IP from server - change `/IP/PORT`"], ["/description/185.225.233.110/30015", "Get the full description from server - change `/IP/PORT`"], ["/specificPlayer/185.225.233.110/30015/billy", "Get the details of a specific player currently online on server - change `/IP/PORT`"], ["/allDetails/185.225.233.110/30015", "Get all details from server - change `/IP/PORT`"], ["/players/185.225.233.110/30015", "Get all players currently online from server - change `/IP/PORT`"]]}, "OSRS Live prices": {"tool_desc": "Grand exchange data for old school runescape items.", "apis": [["historical prices", "Gives a list of the high and low prices of item with the given id at the given interval"], ["latest price", "gives the latest price for the given itemID and timestep"]]}, "Epic Free Games": {"tool_desc": "Epic Games Store - Free Games with details.", "apis": [["Get Epic Free Games Coming Soon", "Get Epic Free Games - Coming Soon"]]}, "Lost Ark Simple": {"tool_desc": "Lost Ark API Documentation", "apis": [["Get Sailors", "Get list of all **Lost Ark** sailors details"], ["Get Character Skills", "List of Lost Ark Character Skills"], ["Get Cards Collection", "Get List of all** Lost Ark Cards** details"], ["Get Weapon Recipes", "Get List of** Lost Ark** craftable Weapons."], ["Get Food Recipes", "Get List of Lost Ark Food Recipes"], ["Get Stronghold Item Recipes", "Get List of Lost Ark Stronghold Item Recipes"], ["Get Chest Item Recipes", "Get List of **Lost Ark** Chest Item Recipes"], ["Get Classes List", "List of Lost Ark Classes"], ["Get Life Skill Tool Recipes", "Get List of Lost Ark Life Skill Tool Recipes"], ["Get Battle Item Recipes", "Get List of Lost Ark Battle Item Recipes"]]}, "Card Draw Simulator": {"tool_desc": "Draw cards from a regular 52 playing cards deck with a variety of options.", "apis": [["Card", "Draw one card from a regular 52-card playing deck."], ["Cards", "Draw multiple cards from a regular 52-card playing deck."]]}, "Playstation Store Deals API": {"tool_desc": "Get Playstation Store Deals data that are on Deals which you can find here: https://store.playstation.com/en-us/category/35027334-375e-423b-b500-0d4d85eff784/1?FULL_GAME=storeDisplayClassification\n\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.", "apis": [["PlaystationDeals", "There is only 1 parameter for this API endpoint.\n\n1. playstation_deals/?count=0\n\ncount = 0 (Min is 0, starting of the list. Max value depends on the total number of games available.)\nNote: Since its a List of Items, If the maximum number of games available on deals is 771 then you have to enter (771-1) = 770 to get the last game on the deal.\n\nThis will provide you with the game data as given below which contains name, price, platform, discount percent, discounted price, total no. of games, etc..:\n\n{\n  \"name\": \"God of War III Remastered\",\n  \"titleId\": \"CUSA01623_00\",\n  \"platform\": [\n    \"PS4\"\n  ],\n  \"basePrice\": \"$19.99\",\n  \"discountPercent\": \"-50%\",\n  \"discountPrice\": \"$9.99\",\n  \"url\": \"https://store.playstation.com/en-us/product/UP9000-CUSA01623_00-0000GODOFWAR3PS4\",\n  \"Total No. of Games\": 771\n}"]]}, "MMO Games": {"tool_desc": "MMO Games API - By MMOBomb!", "apis": [["Latest MMO News", "Latest MMO News powered by MMOBomb."], ["Filter Games by multiple tags", "Filter Games by multiple tags for personalized results. Insert tag, eg: mmorpg, shooter, pvp, mmofps and more at [https://www.mmobomb.com/api ](url). Optionally you can also use the \"platform\" and \"sort\" parameters"], ["Games by platform & category & sorted", "Games by platform & category & sorted."], ["Sort Games", "Sort games by release date, alphabetical, popularity or relevance"], ["Games by category or tag", "Insert game category or tag, eg: mmorpg, shooter, pvp, mmofps and more. Full tag list at [https://www.mmobomb.com/api](url)"], ["Games by Platform", "Insert platform, eg: pc, browser or all"]]}, "Estrelabet Aviator API": {"tool_desc": "This endpoint allows you to retrieve the latest results of the Aviator game on the Estrelabet ( \nestrelabet.com )platform.", "apis": [["estrelabet-aviator-latest", "Will retrieve the latest results from Aviator at Estrelabet.\n\n- The first result is the most recent\n- The last result is the oldest"]]}, "League Of Legends Galore": {"tool_desc": "Get Details aboat players, champions, and more!", "apis": [["Get Player Details", "Get Player Details based on UserName.\nCase Sensitive!"], ["Get Random Champion", "This will go through the list of champions and return a single RANDOM champion!"], ["Get Champion Tier List", "Get either a list of the current champion tier list or a tier list section based on YOUR request!"], ["Get All League Ranks", "Get League of Legends ranks and their player base!"], ["Search For A Champion", "This will go through the list of champions and return a single champion or a list of champions depending on YOUR request!"], ["Get Random Item", "This will go through the list of items and return a single RANDOM item!"], ["Search For A Item", "This will go through the list of items and return a single item or a list of items depending on YOUR request!"]]}, "Videogames NEWS": {"tool_desc": "Curated video games news from top sources", "apis": [["videogames_news_search", "Returns search results for current and historic news from top sources"], ["videogames_news_recent_get", "Get the most recent video games news from top sources\n10 news items will be returned per request"]]}, "Vai de Bob Aviator API": {"tool_desc": "This endpoint allows you to retrieve the latest results of the Aviator game on the Vai de Bob ( vaidebob.com )  platform.", "apis": [["vaidebob-aviator-latest", "Will retrieve the latest results from Aviator at Vai de Bob.\n\n- The first result is the most recent\n- The last result is the oldest"]]}, "Play to Earn Blockchain Games": {"tool_desc": "Get hot play to earn blockchain games!", "apis": [["Summary", "Get games market data summary"]]}, "League of Legends API": {"tool_desc": "An league of Legnds API to get all champions, chamption details, champion rotations, league queue, game from summoner, some informtions in a summoner.", "apis": [["GET queue", "Returns the list of people in division, tier and according to the type of queue"], ["GET player by name", "Return you the summoner related the name given"], ["GET player by puiid", "Return you the summoner profile related to the puuid given"], ["GET PlayerMatch", "Return an detailed list of games for the number you passed for a player"], ["GET Champion details", "Getting detail from champion name you give, translate by the language you give"], ["GET champions", "Get list of all champions by default give you in english"], ["GET Champion rotation", "Return's you a liste of free champion ids and liste of free champions ids for new player."]]}, "Valorant Weapons": {"tool_desc": "Provides users with all relevant information regarding weapons in Valorant", "apis": [["Weapon Classes", "Returns a list of all weapons classes (along with their respective weapons) that are currently in Valorant."], ["Weapon", "Returns the desired weapon's stats."]]}, "Twitch Channel Clips": {"tool_desc": "An API to get info about the latest 50 clips from a channel, including direct download links", "apis": [["Get Clips", "Get the latest 50 clips of a channel."]]}, "SteamGames Special offers": {"tool_desc": "Get Steam Games List and Data that are on Special Discounted Offers.", "apis": [["GamesList", "This Endpoint will List all the Games which are on Special Discount Offers."], ["GamesData", "This endpoint will give you the Games Data if you provide the APP_ID.\nYou can use the GamesList endpoint to get the list of APP_IDs and Feed it to this Endpoint to get the Games Data. Sample Details are given below:\n`{\n    \"discount\": \"-40%\",\n    \"original_price\": \"$49.99\",\n    \"price\": \"$29.99\",\n    \"title\": \"God of War\",\n    \"url\": \"https://store.steampowered.com/app/1593500/\"\n}`"]]}, "League Of Legends Champion Generator": {"tool_desc": "API that lets you generate a new League of Legends Champion\nThis API allows you to specify a Champion Name and then will attempt to generate abilities that will match with any theme related to the name.", "apis": [["Generate League Of Legends Champion", "Will generate a new champion along with its passive and standard abilities."]]}, "Dungeons and Dragon 5e": {"tool_desc": "Get data about classes, subclasses, items, spells, and feats from D&D 5e.", "apis": [["Get subclass", "Get info about a subclass"], ["Get background", "Returns information about the D&D background in JSON format."], ["Get class", "Get info about a D&D class such as the proficiencies or abilities."], ["Get feat", "Returns information about the feat. Mainly full text description."], ["Get spell", "Get information about a D&D spell like the school of magic, spell level and the full description."], ["Get item", "Returns information about the D&D item in JSON format. Only includes magic items, not equipment."]]}, "taboo-api": {"tool_desc": "Provides a number of different categories to choose from.", "apis": [["Get Result From Category", "Given a stored category, get a random result which will contain the main phrase and the taboo words.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10"], ["Get Taboo Words From Word", "Provide your own word and get the taboo words back.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10"], ["Get Stored Word From Any Category", "Get a random result which will contain the main phrase and the taboo words, result may come from any of the stored categories.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10"], ["Get All Stored Categories", "Get a list of all stored categories. Use them to get results for the specified category"]]}, "Wordle Answers Solutions": {"tool_desc": "Wordle Answers is an api where you can get all the answers of the popular word game Wordle.", "apis": [["Today", "Calling this endpoint you will todays solution."], ["All Solutions", "Calling this endpoint you will get all the historical solutions of the Wordle game"]]}, "Tibia Items": {"tool_desc": "this API will helps you find tibia items princes around the worlds\n\nAll endpoints to get items values, this is all we try to get on day.", "apis": [["Get imbuements for  Epiphany (Magic Skillboost)", "This enpoint will get all imbuement for type Epiphany\n\nEpiphany (Magic Skillboost)\nElvish Talisman \nBroken Shamanic Staff \nStrand of Medusa Hair"], ["Get imbuements for Quara Scale (Ice Protection)", "This enpoint will get all imbuement for type Quara Scale\n\nQuara Scale (Ice Protection)\nWinter Wolf Fur \nThick Fur \nDeepling Warts"], ["Get imbuements for Cloud Fabric (Energy Protection)", "This enpoint will get all imbuement for type Cloud Fabric\n\nCloud Fabric (Energy Protection)\nWyvern Talisman \nCrawler Head Plating \nWyrm Scale"], ["Get imbuements for Demon Presence (Holy Protection)", "This enpoint will get all imbuement for type Demon Presence\n\nDemon Presence (Holy Protection)\nCultish Robe \nCultish Mask \nHellspawn Tail"], ["Get imbuements for Precision (Distance Skillboost)", "This enpoint will get all imbuement for type Precision\n\nPrecision (Distance Skillboost)\nElven Scouting Glass \nElven Hoof \nMetal Spike"], ["Get imbuements for Snake skin (Earth Protection)", "This enpoint will get all imbuement for type Snake skin\n\nSnake Skin (Earth Protection)\nBrimstone Fangs \nPiece of Swampling Wood \nSnake Skin"], ["Get imbuements for Strike (Critical Damage)", "This enpoint will get all imbuement for type Strike\n\nStrike (Critical Damage)\nProtective Charm \nSabretooth \nVexclaw Talon"], ["Get imbuements for Vampirism (Life steal)", "This enpoint will get all imbuement for type Vampirism\n\nVampirism (Life steal)\nVampire Teeth \nBloody Pincers \nPiece of Dead Brain"], ["Get all imbuements Items", "This enpoint will get all imbuement"], ["Get history of Item", "In this enpoint we can deliver the history of item.\nyou will need to request in this pattern.\n\nKey: NameItem::World::TypeItem\nKey: Gold Token::Wizera::Valuable\n\nDate:2022-01-01\nDate: yyyy-MM-dd\n\nDate: 2022-01\nDate: yyyy-MM"], ["Get single Item", "This Endpoint will help you get sigle item in our data base by World"], ["Get all valuable Items", "This endpoint will get all Valuble item in our data base."], ["Get imbuements for Lich Shroud (Death Protection)", "This enpoint will get all imbuement for type Lich Shroud\n\nLich Shroud (Death Protection)\nFlask of Embalming Fluid \nGloom Wolf Fur \nMystical Hourglass"], ["Get imbuements for Dragon Hide (Fire Protection)", "This enpoint will get all imbuement for type Dragon Hide\n\nDragon Hide (Fire Protection)\nBlazing Bone \nGreen Dragon Leather \nDraken Sulphur"], ["Get imbuements for Void (Mana Steal)", "This enpoint will get all imbuement for type Void\n\nVoid (Mana Steal)\nRope Belt \nSilencer Claws \nSome Grimeleech Wings"]]}, "ID Game Checker": {"tool_desc": "Validate or GET username with ID.", "apis": [["GET username Valorant", "Enter the Valorant Riot ID and Tag in the required parameters"], ["GET username PUBG Mobile", "Enter your PUBG Mobile ID  in the required parameters\n\nINFO: The API for this game is currently in the process of being maintained"], ["GET username Arena of Valor", "Enter your Arena of Valor ID  in the required parameters"], ["GET username Point Blank", "Enter your Point Blank ID  in the required parameters"], ["GET username Call of Duty Mobile", "Enter your Call of Duty Mobile ID  in the required parameters"], ["GET username Genshin Impact", "Enter the Genshin Impact ID and Server in the required parameters"], ["GET username Higgs Domino", "Enter your Higgs Domino ID  in the required parameters"], ["GET username Free Fire", "Enter your Free Fire ID  in the required parameters"], ["GET username Mobile Legends", "Enter the Mobile Legends ID and Server in the required parameters"]]}, "StonxzyAPI": {"tool_desc": "Stonxzys Custom API", "apis": [["APIS", "This shows the apis"]]}, "Word Tree": {"tool_desc": "Given a set of letters, generate all the words that can be produced by adding at least one additional letter, arranged hierarchically.", "apis": [["CSW21", "Search for words using Collins Scrabble Words 2021 lexicon."], ["NWL20", "Search using the NASPA Word List 2020 edition, \u00a9 2020 North American Word Game Players Association."]]}, "HleBy6eK": {"tool_desc": "Spring Rest API", "apis": [["Rating", "Rating of the game for the month"]]}, "Valorant": {"tool_desc": "Best players and teams within the competitive Valorant esports landscape", "apis": [["Valorant Players", "This API gets all valorant players"]]}, "Word Ladder Builder": {"tool_desc": "This word ladder builder API to find the shortest routes between words.", "apis": [["Build Word Ladders", "Create Word Ladders between two words. By default it uses 2019 edition of Collins Dictionary."]]}, "Marvel Vs Capcom 2": {"tool_desc": "Get data about  characters from Marvel Vs Capcom 2 game.", "apis": [["Show Moves", "Show Moves For A Specific Character"], ["Show Character", "Get details about a single character and their traits"], ["All Characters", "Access all characters in MVC2 (Marvel Vs Capcom) Universe"]]}, "Wordle Game API": {"tool_desc": "The Wordle Game API allows developers to integrate a fun word-guessing game into their applications.", "apis": [["today word", "get today word or the correct answer"]]}, "Free Epic Games": {"tool_desc": "Get a list of free Epic Games for the week", "apis": [["Free Games", "Get the list of free games on Epic Games for the week"]]}, "CSGO matches and tournaments": {"tool_desc": "", "apis": [["Played", "Last of played cs:go matches"], ["Upcoming", "Last of upcoming cs:go matches"]]}, "Call of Duty: Warzone Stats": {"tool_desc": "Get Warzone gaming data", "apis": [["warzone/Rollosis/psn", "Warzone stats for Rollosis"]]}, "Pictionary Charades Word Generator": {"tool_desc": "Generate words for Charades and Pictionary Games!", "apis": [["Get Charades Word", "Get a random charades word with the specified difficulty. If not difficulty is supplied, a random difficulty will be used."], ["Get Pictionary Word", "Get a random pictionary word with the specified difficulty. If not difficulty is supplied, a random difficulty will be used."]]}, "BingoAPI": {"tool_desc": "Offload your server resources with Bingo API!", "apis": [["/us", "US game spec.\nReturns numbers between 1 and 75, randomized in 5 groups.\n\nIf you have a paid plan you can specify the number of cards to generate as a query parameter: `?cards=10`\nThis will return an array of array (the cards).\n\nPlease note that empty spaces are not returned as it is more portable for who don't need them. You are free to loop through the cards and add them at your wish."], ["/eu", "EU game spec.\nReturns numbers between 1 and 90.\n\nIf you have a paid plan you can specify the number of cards to generate as a query parameter: `?cards=10`\nThis will return an array of array (the cards).\n\nPlease note that empty spaces are not returned as it is more portable for who don't need them. You are free to loop through the cards and add them at your wish."]]}, "League of Legends Stats": {"tool_desc": "An API showing all the champions in League of Legends and their base stats.", "apis": [["Get A Specific Champion's Base Stats", "This endpoint returns the base stats of a specific champion."], ["Get All Champion Base Stats", "This endpoint returns all base stats from every champion in the game."], ["Get List of All Champion Names", "This endpoint returns a list of all Champion names."]]}, "Chess Puzzles_v2": {"tool_desc": "Quickly access 1.000.000+ chess puzzles!", "apis": [["range", "Get random puzzles within a specified rating range"], ["random", "Get random chess puzzles"]]}, "SUDOKU All-Purpose PRO": {"tool_desc": "Create, solve, verify.", "apis": [["CREATE", "Image output is base64 encoded! See https://myv.at/api/sudoku/code-examples/ how to decode back to HTML, SVG, JPG, PNG, GIF, WEBP easily!"], ["SOLVE", "Solve every Sudoku. Simply make an API call with missing digits and receive the answer back immediately. Choose from different output formats to display your Sudoku perfectly."], ["VERIFY", "Check any solved (as well as *unsolved!*) Sudoku for authenticity and integrity."]]}, "League of Legends Champion Meta": {"tool_desc": "API for fetching the current Meta Data of all League of Legends Champions", "apis": [["Gets the Meta Data from one given Champion based on a rank", "Fetches the Data from the provided League of Legends Champion based on a rank.\nWill return a list of Objects, because a Champion can be played in multiple roles\n\nPossible rank parameters are: \n- placements\n- iron\n- bronze\n- silver\n- gold\n- platinum\n- diamond\n- master\n- grandmaster\n- challenger\nThey also be combined with a \"comma-sign\": e.g challenger,master"], ["Gets all the Meta Data from all Champions based on a rank", "Fetches all the Meta Data in a provided rank.\nPossible parameters are:\n- placements\n- iron\n- bronze\n- silver\n- gold\n- platinum\n- diamond\n- master\n- grandmaster\n- challenger\nThey also can be combined with a 'comma-sign': e.g. challenger**,**master"], ["Gets the Meta Data from one given Champion", "Fetches the Data from the provided League of Legends Champion.\nWill return a list of Objects, because a Champion can be played in multiple roles"], ["Gets the data from all League Champions", "Fetches the Meta Data for all available League of Legends Champions"], ["Gets all the available Champions names, without any meta data", "Fetches all the champion names"]]}, "Dota2 Heroes": {"tool_desc": "This api can give you all dota2 heroes list ands bios images videos role talents and abilities with 20 language.", "apis": [["Heroes Data", "You can get heroes all heroes data name, image, videos, roles, abilities and talents with 20 languages."], ["Heroes List", "You can list of heroes id , name , image, complexity and attribute"]]}, "Trivia by API-Ninjas": {"tool_desc": "Access endless trivia question and answers.", "apis": [["/v1/trivia", "API Ninjas Trivia API endpoint"]]}, "cs-skin API": {"tool_desc": "retrieve image, price, weapon, class for every released Skin in CS:GO or CS2", "apis": [["Random Skin from Weapon", "retrieve name, price, icon, class and weapon for a random counterstrike skin from a specific weapon\n(prices for field tested condition in USD)\n\n(replace weapon_name)\n\nExample: /api/random/AWP"], ["Random Skin from Class", "retrieve name, price, icon, class and weapon for a random counterstrike skin from a specific class \n(prices for field tested condition in USD)\n\n(replace class_name)\n\nExample: /api/randomclass/Rifle"], ["Specific Skin", "retrieve name, price, icon, class and weapon for a specific counterstrike skin \n(prices for field tested condition in USD)\n\n(replace skin_name, underscores instead of spaces)\n\nExample: /api/AK-47_Redline"], ["Random Skin", "retrieve name, price, icon, class and weapon for a random counterstrike skin (prices for field tested condition)"]]}, "Lost Ark": {"tool_desc": "An API to get information for the game Lost Ark", "apis": [["get stats", "Endpoint to get all possible stats"], ["Get a specific item by id", "Enpoint to get a specific item by id"], ["get a specific item", "Endpoint to get a specific item"], ["get abyssal dungeons", "endpoint to get all abyssal dungeons"], ["get raids by level", "Get all guardian raids by level"], ["get raids", "Endpoint to get all guardian raids"], ["get engravings", "Endpoint to get all engravings"], ["get classes", "Get all classes and subclasses"], ["Get all island with dropped items", "This endpoint will return all the islands with the id's of the dropped items on the island."]]}, "FortniteCosmetics": {"tool_desc": "A data base of fortnite cosmetices", "apis": [["searchInventory", "By passing in the appropriate options, you can search for\navailable inventory in the system"]]}, "Simbrief - Get latest OFP": {"tool_desc": "Get the latest OFP based on username.", "apis": [["Simbrief - Get latest OFP", "Get latest ofp in xml (default) or json based on username\nthe json param must be 0 or 1"]]}, "ESportApi": {"tool_desc": "ESportApi offers eSports results for League of Legends, Dota 2, Counter-Strike providing also eSports standings and tournament live scores.", "apis": [["Search", "Search for E-Sports players, teams, and tournaments by providing a search term."], ["TournamentPlaceholderImage", "Get the tournament placeholder image in PNG format."], ["PlayerPlaceholderImage", "Get the player placeholder image in PNG format."], ["CategoryFlag", "Get the flag image of a specific category in PNG format."], ["TeamPlaceholderImage", "Get the team placeholder image in SVG format."], ["TVCountries", "Get a list of countries and their respective TV channels broadcasting a specific Football match."], ["TeamLogoImage", "Get the team logo image in PNG format by providing the team ID."], ["TeamMedia", "Get the media for a specific E-Sports team by providing the team ID."], ["TeamLastMatches", "Get the last matches for a specific E-Sports team by providing the team ID and the page number."], ["TeamNearMatches", "Get the near matches for a specific E-Sports team by providing the team ID."], ["MatchTvChannelDetails", "Get the details of a specific TV channel broadcasting a specific Football match."], ["TeamNextMatches", "Get the next matches for a specific E-Sports team by providing the team ID and the page number."], ["EventStreaks", "Get streaks of a specific E-Sports event by providing its ID."], ["ManagerPlaceholderImage", "Get the manager placeholder image in PNG format."], ["LeagueSeasonInfo", "Get the season information for a specific E-Sports league by providing the tournament ID and season ID."], ["GameLineups", "Get game lineups for a specific E-Sports game by providing the game ID."], ["GameMapImage", "Get the map image in PNG format by providing the map ID."], ["LeagueLastMatches", "Get the last matches for a specific E-Sports league by providing the tournament ID, season ID, and page number."], ["CharacterImage", "Get the character image in PNG format by providing the character ID."], ["PlayerDetails", "Get the details for a specific E-Sports player by providing the player ID."], ["LiveMatches", "Get live E-Sports matches that are currently taking place."], ["LeagueDetails", "Get the details of a specific E-Sports league by providing the tournament ID."], ["GameStatistics", "Get game statistics for a specific E-Sports game by providing the game ID."], ["MatchSchedules", "Get e-sports schedules for a specific day."], ["EventHighlights", "Get highlights of a specific E-Sports event by providing its ID."], ["Event", "Get detailed information for a specific E-Sports event by providing the event ID."], ["TeamDetails", "Get the details for a specific E-Sports team by providing the team ID."], ["EventLineups", "Get event lineups for a specific E-Sports event by providing the event ID."], ["Categories", "Get all available e-sports categories."], ["EventH2HDuel", "Get head-to-head duel information of a specific E-Sports event by providing its ID."], ["LeagueLogoImage", "Get the league logo image in PNG format by providing the tournament ID."], ["EventVotes", "Get votes of a specific E-Sports event by providing its ID."], ["LeagueNextMatches", "Get the next matches for a specific E-Sports league by providing the tournament ID, season ID, and page number."], ["CategorySchedules", "Get e-sports schedules for a specific day from a specific category."], ["EventGames", "Get event games for a specific E-Sports event by providing the event ID."], ["CategoryTournaments", "Get all leagues from a specific E-Sports category using the category ID."], ["LeagueTotalStandings", "Get the total standings for a specific E-Sports league by providing the tournament ID and season ID."], ["GameBans", "Get game bans for a specific E-Sports game by providing the game ID."], ["GameRounds", "Get game rounds for a specific E-Sports game by providing the game ID."], ["PlayerImage", "Get the player image in PNG format by providing the player ID."], ["LeagueMedia", "Get the media related to a specific E-Sports league by providing the tournament ID."], ["HeadToHeadMatches", "Get head-to-head match data for a specific E-Sports event using its custom ID."], ["LeagueTotalTeamEvents", "Get last 5 events for a specific E-Sports league by providing the tournament ID and season ID."], ["LeagueSeasons", "Get the seasons of a specific E-Sports league by providing the tournament ID."]]}, "Evosis's Game Database": {"tool_desc": "You can access technical and store information of more than 9100+ games.", "apis": [["getGameDetailPro", "Returns the game's information as Json."], ["getGameDetail", "Returns the game's information as Json"], ["getStoreStatusList", "Returns as Json of store status list."], ["getPlatformList", "Returns the id and names of the platforms as Json."], ["getGameList", "Returns the ID and series names of the games as Json."]]}, "Raider.IO": {"tool_desc": "Raider.IO API to gather Character information", "apis": [["RaiderIO_Call", "Calls the Raider.io API to get info"]]}, "RPG Items": {"tool_desc": "An api of generated RPG items", "apis": [["Get Item by ID", "Get all RPG items"], ["Get Items by query", "Get all RPG items"], ["Get All Items", "Get all RPG items"]]}, "Chess Puzzles": {"tool_desc": "Query a database of over 2 million Chess Puzzles", "apis": [["Puzzles", "The main access point for the API"], ["Puzzle by Id", "Gets a single puzzle by Id"]]}, "COD API 2.0": {"tool_desc": "Provides an easy access to the COD api leaderboard endpoints.", "apis": [["Season Skill Rating MW 2 Ranked", "Get season Skill Rating for top 250 players, MW 2 ranked Leaderboard"], ["Season Career Leaderboard WZ2", "Get season career information for up to 2000 players on the leaderboard."], ["Season Kills Leaderboard WZ2", "Get season kills information for up to 2000 players on the leaderboard."], ["Season Wins Leaderboard WZ2", "Get season wins information for up to 2000 players on the leaderboard."], ["Career Leaderboard WZ2", "Get top career information for up to 2000 players on the leaderboard."], ["Season Critical Damage Leaderboard WZ2", "Get season critical damage information for up to 2000 players on the leaderboard."], ["Critical Damage Leaderboard WZ2", "Get top critical damage information for up to 2000 players on the leaderboard."], ["Season Critical Damage Leaderboard MW2", "Get season critical damage information for up to 2000 players on the MW 2 leaderboard."], ["Critical Damage Leaderboard MW2", "Get top critical damage information for up to 2000 players on the MW 2 leaderboard."], ["Wins Leaderboard WZ2", "Get top wins information for up to 2000 players on the leaderboard."], ["Season Kills Leaderboard MW 2", "Get season kills information for up to 2000 players on the MW 2 leaderboard."], ["Kills Leaderboard MW2", "Get top kills information for up to 2000 players on the MW 2 leaderboard."], ["Skill Rating MW 2 Ranked", "Get top Skill Rating for top 250 players, MW 2 ranked Leaderboard"], ["Season Career Leaderboard MW 2", "Get season career information for up to 2000 players on the MW 2 leaderboard."], ["Season Wins Leaderboard MW 2", "Get season wins information for up to 2000 players on the MW 2 leaderboard."], ["Career Leaderboard MW2", "Get top career information for up to 2000 players on the MW 2 leaderboard."], ["Wins Leaderboard MW2", "Get top wins information for up to 2000 players on the MW 2 leaderboard."], ["Season Gulag Leaderboard WZ2", "Get season gulag information for up to 2000 players on the leaderboard."], ["Gulag Leaderboard WZ2", "Get top gulag information for up to 2000 players on the leaderboard."], ["Kills Leaderboard WZ2", "Get top kills information for up to 2000 players on the leaderboard."]]}}, "Payments": {"Virtual Accounts API": {"tool_desc": "Use this API to create virtual accounts, manage them, create financial transations, create transaction channels (payment provider).", "apis": [["GetTransactionsByAccount", "To get transactions by account."], ["GetByAccountNumber", "To get a virtual account by account number."], ["GetAllCurrencies", "To get all currencies. It's needed for the create virtual account endpoint."], ["GetAllTransactions", "To get all transactions in organisation."], ["GetTransactionById", "To get transaction by unique id."], ["GetChannelById", "To get a channel."], ["GetAccountById", "To get a single virtual account."], ["GetAllAccounts", "To get all virtual accounts in your organisation."]]}, "FraudSentinel": {"tool_desc": "Detect fraud in real time by checking IPs reputation, Proxy/VPN/TOR , BOT, and more...", "apis": [["FraudSentinel", "Detailed JSON data from hundreds of IP classification databases."]]}, "Image QR code generator": {"tool_desc": "This API generates Image QR codes", "apis": [["Red colour QR code generator", "Generate the QR code for anything you want."]]}, "NOWPayments": {"tool_desc": "NOWPayments is a non-custodial cryptocurrency payment processing platform.", "apis": [["7.Getlistofpayments", "Returns the entire list of all transactions, created with certain API key.\nThe list of optional parameters:\n- limit - number of records in one page. (possible values: from 1 to 500)\n- page - the page number you want to get (possible values: from 0 to **page count - 1**)\n- sortBy - sort the received list by a paramenter. Set to **created_at** by default (possible values: payment_id, payment_status, pay_address, price_amount, price_currency, pay_amount, actually_paid, pay_currency, order_id, order_description, purchase_id, outcome_amount, outcome_currency)\n- orderBy - display the list in ascending or descending order. Set to **asc** by default (possible values: asc, desc)\n- dateFrom - select the displayed period start date (date format: YYYY-MM-DD or yy-MM-ddTHH:mm:ss.SSSZ).\n- dateTo - select the displayed period end date (date format: YYYY-MM-DD or yy-MM-ddTHH:mm:ss.SSSZ)."], ["1.GetAPIstatus", "This is a method to get information about the current state of the API. If everything is OK, you will receive an \"OK\" message. Otherwise, you'll see some error."], ["2.Getavailablecurrencies", "This is a method for obtaining information about the cryptocurrencies available for payments. This depends on the cryptocurrency you choose for your particular store.\nOptional parameters:\n- fixed_rate(optional) - boolean, can be **true** or **false**. Returns avaliable currencies with minimum and maximum amount of the exchange."], ["3.Getestimatedprice", "This is a method for calculating the approximate price in cryptocurrency for a given value in Fiat currency. You will need to provide the initial cost in the Fiat currency (amount, currency_from) and the necessary cryptocurrency (currency_to)\nCurrently following fiat currencies are available: usd, eur, nzd, brl, gbp."], ["6.Gettheminimumpaymentamount", "Get the minimum payment amount for a specific pair.\n\nYou can provide both currencies in the pair or just currency_from, and we will calculate the minimum payment amount for currency_from and currency which you have specified as the outcome in the Store Settings.\n\nIn the case of several outcome wallets we will calculate the minimum amount in the same way we route your payment to a specific wallet."], ["5.Getpaymentstatus", "Get the actual information about the payment. You need to provide the ID of the payment in the request.\n\nNOTE! You should make the get payment status request with the same API key that you used in the create payment request.\nHere is the list of avalable statuses:\n- waiting - waiting for the customer to send the payment. The initial status of each payment.\n- confirming - the transaction is being processed on the blockchain. Appears when NOWPayments detect the funds from the user on the blockchain.\n- confirmed -  the process is confirmed by the blockchain. Customer\u2019s funds have accumulated enough confirmations.\n- sending - the funds are being sent to your personal wallet. We are in the process of sending the funds to you.\n- partially_paid -  it shows that the customer sent the less than the actual price. Appears when the funds have arrived in your wallet.\n- finished - the funds have reached your personal address and the payment is finished.\n- failed -  the payment wasn't completed due to the error of some kind.\n- refunded -  the funds were refunded back to the user.\n- expired - the user didn't send the funds to the specified address in the 24 hour time window."]]}, "Sigue payout": {"tool_desc": "Sigue Send API is a simple API, allowing consumers to view all information related to integration of methods", "apis": [["batch", "batch process to retrieve payout transaction data"]]}, "Fake Valid CC Data Generator": {"tool_desc": "The API provides you valid and real credit card data for the providers: amex, diners, discover, jcb, maestro,  mastercard and visa", "apis": [["Receive the credit card data", "Receive the requested credit card data set consisting of:\n\n- type\n- firstname\n- lastname\n- cc\n- valid_date\n- cvc\n\n**The following providers are valid and can be generated**\n***amex,diners,discover',jcb',jcb15,jcb16,maestro,mastercard,visa,visa13,visa16,visa19***"]]}, "Zanjir cryptocurrency payment gateway": {"tool_desc": "cryptocurrency payment API service.", "apis": [["verify transactions (logs)", "You can confirm successful transactions using this API."]]}}, "Transportation": {"Helicopter by API-Ninjas": {"tool_desc": "Detailed technical specs for a wide range of helicopter models.", "apis": [["/v1/helicopter", "API Ninjas Helicopter API endpoint. Returns a list of helicopter specs that match the given parameters.\n\nAt least one of the following parameters (excluding the limit parameter) must be set."]]}, "Datamo": {"tool_desc": "Datamo is a RESTful API that provides extensive electric and combustion vehicle specification data.", "apis": [["/specs/v1/tier1", "Pull requested vehicle data for specific field parameters. Tier 1 allows the following to be queried by:  \n1. make\n2. model\n\nAt least one query parameter is required for a successful call."], ["/specs/v1/tier3", "Pull requested vehicle data for specific field parameters. Tier 3 access grants to filter by any of the 100+ fields in the database\n\nAt least one query parameter is required for a successful call."], ["/specs/v1/getMakes", "This endpoint will return all the vehicle makes available, as an array of strings."], ["/specs/v1/tier2", "Pull requested vehicle data for specific field parameters. Tier 2 allows the following to be queried by:  \n1. make\n2. model\n3. engineType\n4. bodyType\n\nAt least one query parameter is required for a successful call."]]}, "Flight Information of Hong Kong International Airport": {"tool_desc": "The data of Flight Information of Hong Kong International Airport is provided by Hong Kong International Airport.", "apis": [["3 months flight info", "Today - 90D or Today + 14D"]]}, "OpenNWI": {"tool_desc": "An open-source API to access local walk scores and regional bike and transit data for any address recognized by US Census Geocoding.", "apis": [["SearchByAddress", "Search local walk scores and regional bike and transit data by address. NWI score range from 0-20."]]}, "Aircraft by API-Ninjas": {"tool_desc": "Detailed technical specs on over 1000 airplane models.", "apis": [["/v1/aircraft", "API Ninjas Aircraft API endpoint. Returns a list of aircrafts that match the given parameters. This API only supports airplanes - for helicopter specs please use our Helicopter API.\n\nAt least one of the following parameters (excluding the limit parameter) must be set."]]}, "Flight Radar": {"tool_desc": "The world's most popular flight tracker API which helps you to create Flight tracker application, such as : flightradar24.com", "apis": [["flights/list-in-boundary", "Helps to list flights, aircrafts in a GEO bounding box, and display them on a map"], ["flights/list-by-airline", "List flights by airline"], ["flights/get-playback", "Get history traveling data of specific flight"], ["flights/get-more-info", "Get more information of specific aircraft, flight, airline, etc..."], ["flights/detail", "Get detailed information of specific flight"], ["flights/list-most-tracked", "Return the most tracked flights around the world"], ["flights/search", "Search for specific flight"], ["airlines/get-logos", "Get logos of airlines"], ["airlines/list", "List all airlines around the world"], ["airports/list", "List all airports around the world"]]}, "Canadian Gas Prices": {"tool_desc": "Provides current gas prices in Canada.", "apis": [["States", "Returns the average price of gas in all American states."], ["City Prediction", "Returns the estimated price for a given City and its expected day-to-day change (in cents). View the `/predictions-list` endpoint to view the list of valid cities."], ["Predictions", "Provides a current prediction of tomorrow's gas price provided by Dan McTeague's [gaswizard.ca](https://gaswizard.ca/gas-price-predictions/). Returns all estimated city prices and their expected day-to-day change (in cents)."], ["City", "Returns the average price of gas in a specific city in Canada. You must provide both the Province and the specific City you wish to gather the price for.\n\n**Warning you must select a City and Province supported by this API**: To view the current supported locations try out the `/locations-list` endpoint to view all valid Province/City combinations."], ["Cities", "Returns the average price of gas of major cities in a specific province in Canada."], ["Province", "Returns the average price of gas in a specific province in Canada."], ["Provinces", "Returns the average price of gas in all Canadian provinces."], ["Predictions List", "Returns valid cities that can be used for the `/city-prediction` endpoint."], ["Locations List", "Returns full object representing collection of valid locations for this API."], ["State List", "This endpoint provides a list of valid state codes that can be used with this API."], ["State", "Endpoint to provide average gas price of a given American State."], ["City List", "Returns a list of valid cities for this API when provided a valid province. Ex: 'Ontario'"], ["Province List", "Returns list of valid provinces for this API."]]}, "FachaAPI": {"tool_desc": "Multi Purpose API, including Temporary Disposable Email Detection, Aircraft Database and Live Aircraft Data", "apis": [["Total Live tracked Aircraft", "Get total live tracked aircraft"], ["Live NATO Air Policing Aircraft", "Get live military aircraft squaking NATO Air Policing / QRA (Squawk 1301-1327)"], ["Live Emergency Aircraft", "Get live emergency aircraft (Squawk 7500/7600/7700)"], ["Live Aircraft by Squawk", "Get live positioning for all aircraft with a specific Squawk"], ["Live Aircraft by REG", "Get live positioning for an aircraft with a specific REG"], ["Live Aircraft by ICAO", "Get live positioning for an aircraft with a specific ICAO HEX Code"], ["Aircraft Database Stats", "Get the total number of known aircraft"], ["Aircraft Details by REG", "Get Aircraft details for a specific Registration / Tail Number"], ["Aircraft Details by ICAO", "Get Aircraft details for a specific ICAO HEX Code"], ["Temporary Email Stats", "Get the number of temporary emails in the database and its last update"], ["Check Temporary Email", "Check if a domain is a known temporary email"]]}, "Waze": {"tool_desc": "Fetch alerts, traffic jams information and driving directions from Waze/Google in real-time.", "apis": [["Autocomplete", "Waze/Google autocomplete/type-ahead for places, locations and addresses."], ["Driving Directions", "Get routes and driving directions from Waze/Google."], ["Alerts and Jams", "Get real-time alerts and jams from Waze in a geographic rectangular area defined by bottom-left and top-right latitude, longitude pairs."]]}, "Car API": {"tool_desc": "Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.", "apis": [["Engines", "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"horsepower_hp\", \"op\": \">=\", \"val\": 100}, {\"field\": \"horsepower_hp\", \"op\": \"<=\", \"val\": 300}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, fuel_type, engine_type, transmission, drive_type, cam_type, valve_timing, valves, horsepower_hp, size, cylinders, make_id, make_model_id, and make_model_trim_id."], ["Bodies", "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"doors\", \"op\": \">=\", \"val\": 4}, {\"field\": \"type\", \"op\": \"in\", \"val\": [\"SUV\",\"Van\"]}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, type, doors, make_id, make_model_id, and make_model_trim_id."], ["Years", "For complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"make\", \"op\": \"in\", \"val\": [\"Scion\", \"Tesla\"]}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed search fields are: `year`, `make`, `model`, `trim`, `make_id`, and `make_model_id`."], ["Trims", "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"year\", \"op\": \">=\", \"val\": 2010}, {\"field\": \"year\", \"op\": \"<=\", \"val\": 2020}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, bodies.type, engines.cam_type, engines.cylinders, engines.drive_type, engines.engine_type, engines.fuel_type, engines.transmission, engines.valve_timing, engines.valves, make_id, make_model_id, make_model_trim_id, created, and modified."], ["Interior Colors", "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"name\", \"op\": \"in\", \"val\": [\"red\", \"blue\"]}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, name, rgb, make_id, make_model_id, and make_model_trim_i"], ["Exterior Colors", "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"name\", \"op\": \"in\", \"val\": [\"red\", \"blue\"]}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, name, rgb, make_id, make_model_id, and make_model_trim_i"], ["Makes", "Search makes by name and year."], ["VIN Decoder", "Decodes Vehicle Identification Numbers. The result will include a list of specifications in the specs property and a list of all possible trims matching the VIN in the trims property."], ["Models", "Search models by year, make, model, trim or make_id.\n\nTo include the models make in the description request with the query parameter as `verbose=yes`.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"make\", \"op\": \"in\", \"val\": [\"Ford\", \"Acura\"]}, {\"field\": \"year\", \"op\": \">=\", \"val\": 2010}]\n\nAllowed json operators are: =, !=, >, <, >=, <=, in, not in, like, not like, not null, and is null.\n\nAllowed json search fields are: year, make, model, make_id, created, and modified."], ["Vehicle Attributes", "Returns all options for given attribute."], ["Mileages", "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"combined_mpg\", \"op\": \">=\", \"val\": 20}, {\"field\": \"combined_mpg\", \"op\": \"<=\", \"val\": 30}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, combined_mpg, epa_city_mpg, epa_highway_mpg, range_city, range_highway, make_id, make_model_id, and make_model_trim_id."], ["Trim View", "Returns all data associated with the vehicle trim."]]}, "Travel Hacking Tool": {"tool_desc": "Complete and up-to-date database with detailed information about IATA airports, IATA airlines, countries, alliances and more.", "apis": [["Get Airline Alliance List", "This endpoint returns a list of airline alliances."], ["Get Country List", "This endpoint returns a list of country codes (ISO-3166)."], ["Get Airline Details", "This endpoint returns the details for an airline based on an IATA code."], ["Get Airport List", "Returns an up to date list of all IATA Airports in our database."], ["Get Airline List", "This endpoint returns a full list of airlines with their IATA code and full name."], ["Get Airplane List", "This endpoint returns a list of all airplane types available in our database."], ["Get Country Details", "This returns details for a country based on the country codes (ISO-3166)."], ["Get TimeZones", "Get TimeZones in Olsen Format with UTC offset and Daylight Savings Time (DST)."], ["Get Airplane Details", "This endpoint returns a list of airplanes and other means of transportation to match GDS responses."], ["Get Airport Details", "This endpoint returns the details such as name and location for a specified IATA airport."]]}, "Brazilian airlines real flights data": {"tool_desc": "\u2708 This is an API that provides real brazilian airlines flights information.", "apis": [["Get airline data", "In this endpoint you get all data about real flights of airline. Including detailed information like flight plan routes and remarks"]]}, "InfoCarsAPI": {"tool_desc": "Access detailed car data and captivating visuals effortlessly.", "apis": [["Get Car Data", "You can get specifications, pictures and the average pricing of a car"], ["Get Car Versions", "Get the different versions of a car model"], ["Get Car Models", "This endpoint will return back all the models of a respective car maker"], ["Get Car Makers", "This endpoint will return back all car makers supported."]]}, "Aircraft data simple collection": {"tool_desc": "This API gives you information about an aircraft.", "apis": [["getbyhex", "get aircraft info by hex number"]]}, "Vehicle RC Information_v2": {"tool_desc": "Fetch any Indian Vehicle's Information through it's Registration Number/License Plate.", "apis": [["Vehicle Information", "Fetch Vehicle Information using Registration Number."]]}, "ADSBx Flight Sim Traffic": {"tool_desc": "ADSBexchange.com traffic feed for flight simulators", "apis": [["LiveTraffic", "Returns all aircraft within 25nm radius of specified Lat/Lon"]]}, "AP sample": {"tool_desc": "AR sample", "apis": [["Zipcode", "Get locations by zipcode"]]}, "Airlines by API-Ninjas": {"tool_desc": "General and detailed fleet information for over 1,000 airlines.", "apis": [["/v1/airlines", "API Ninjas Airlines API endpoint. At least one of the optional parameters must be provided."]]}, "US Gas Prices": {"tool_desc": "Simplest and most comprehensive API for average gas price data in the US.", "apis": [["/us/hi", "Returns current gas price data for Hawaii. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/id", "Returns current gas price data for Idaho. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/in", "Returns current gas price data for Indiana. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ia", "Returns current gas price data for Iowa. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ks", "Returns current gas price data for Kansas. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ky", "Returns current gas price data for Kentucky. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/me", "Returns current gas price data for Maine. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/md", "Returns current gas price data for Maryland. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/mi", "Returns current gas price data for Michigan. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/mn", "Returns current gas price data for Minnesota. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ms", "Returns current gas price data for Mississippi. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/mo", "Returns current gas price data for Missouri. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/mt", "Returns current gas price data for Montana. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ne", "Returns current gas price data for Nebraska. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/nj", "Returns current gas price data for New Jersey. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/nm", "Returns current gas price data for New Mexico. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ny", "Returns current gas price data for New York. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/nc", "Returns current gas price data for North Carolina. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/nd", "Returns current gas price data for North Dakota. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/oh", "Returns current gas price data for Ohio. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ok", "Returns current gas price data for Oklahoma. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/or", "Returns current gas price data for Oregon. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/pa", "Returns current gas price data for Pennsylvania. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ri", "Returns current gas price data for Rhode Island. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/sc", "Returns current gas price data for South Carolina. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/sd", "Returns current gas price data for South Dakota. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/tn", "Returns current gas price data for Tennessee. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/tx", "Returns current gas price data for Texas. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ut", "Returns current gas price data for Utah. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/vt", "Returns current gas price data for Vermont. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/va", "Returns current gas price data for Virginia. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/wa", "Returns current gas price data for Washington. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/wv", "Returns current gas price data for West Virginia. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/wi", "Returns current gas price data for Wisconsin. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/wy", "Returns current gas price data for Wyoming. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/nh", "Returns current gas price data for New Hampshire. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/nv", "Returns current gas price data for Nevada. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ma", "Returns current gas price data for Massachusetts. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/la", "Returns current gas price data for Louisiana. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/il", "Returns current gas price data for Illinois. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ct", "Returns current gas price data for Connecticut. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/co", "Returns current gas price data for Colorado. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ak", "Returns current gas price data for Alaska. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/az", "Returns current gas price data for Arizona. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/de", "Returns current gas price data for Delaware. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/dc", "Returns current gas price data for Washington D.C. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/al", "Returns current gas price data for Alabama. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ca", "Returns current gas price data for California. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/fl", "Returns current gas price data for Florida. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ga", "Returns current gas price data for Georgia. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us/ar", "Returns current gas price data for Arkansas. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."], ["/us", "Returns current national average gas price data. You can query historical data starting from 2023-06-01 by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."]]}, "VIN Lookup by API-Ninjas": {"tool_desc": "Find vehicle information from Vehicle Identification Numbers.", "apis": [["/v1/vinlookup", "API Ninjas VIN Lookup API endpoint. Returns key vehicle information including manufacturer, country of origin and model year for a given VIN."]]}, "Driving Directions": {"tool_desc": "Get driving directions and best routes from an origin to a destination in real-time.", "apis": [["Get Directions", "Get driving directions from an origin to a destination."]]}, "Airports by API-Ninjas": {"tool_desc": "Access vital data for 30,000 different airports worldwide.", "apis": [["/v1/airports", "API Ninjas Airports API endpoint. At least one of the optional parameters must be provided."]]}, "TrackingPackage": {"tool_desc": "track ups, fedex,usps and DHL packages.", "apis": [["TrackingPackage", "Track UPS, USPS and FedEx packages."]]}, "Motorcycles by API-Ninjas": {"tool_desc": "Detailed technical specifications on tens of thousands of motorcycle models.", "apis": [["/v1/motorcycles", "API Ninjas Motorcycles API endpoint. Returns up to 30 motorcycle results matching the input name parameters. For searches that yield > 30 results, please use the offset parameter.\n\nEither **make** or **model** parameter must be set."]]}, "TimeTable Lookup ": {"tool_desc": "Access Worldwide Flight Schedules with connection building.", "apis": [["codes - Entertainment Codes", "Return a list of entertainment codes used by the airlines"], ["codes - Equipment codes", "Return a list of equipment codes used by the airlines"], ["codes - Meal Codes", "Return a list of meal code used by the airlines"], ["Flight Schedules", "FlightLookup Web Services, powered by FlightLookup Routing Engine.  This API provides a powerful information source for developing sophisticated applications requiring flight related schedule data.  Whether you are a software company developing products for sale or an in-house developer, the FlightLookup Web Services APIs are unmatched in terms of breadth and richness of information. Our development tools and documentation will get you up to speed quickly enabling short development cycles."], ["airports - Nonstop routes for an airport by airline", "Returns a list of nonstop routes for an airport restricted to an airline"], ["airlines - Airports in a country an airline operates in", "Return a list of airports in a country an airline operates in"], ["airlines - Countries airline operates in", "Return a list of the countries that an airline operates in"], ["airlines - Direct flights for an airline from an airport", "Return a list of direct flights for an airline from an airport"], ["airlines - Nonstop and direct flights for an airline", "Return a list of nonstop and direct flights for an airline"], ["airlines - Nonstop flights for an airline from an airport", "Return a list of nonstop flights for an airline from an airport"], ["airports - Airport information", "Return an airport's information"], ["airports - Airports in a country", "Returns a list of airports in a country"], ["airports - Airports in a metro", "Returns a list of airports in a metro"], ["airports - Carriers operating out of an airport", "Return a list of carriers operating out of an airport"], ["airports - Country IATA codes", "Returns a list of country IATA codes"], ["airports - Direct routes for an airport", "Returns a list of direct routes for an airport"], ["airports - Direct routes for an airport by airline", "Returns a list of direct routes for an airport restricted to an airline"], ["airports - Latitude and longitude for location in country", "Returns the latitude and longitude for location in country"], ["airports - List of airports", "Return a list of the airports worldwide"], ["airports - Metro IATA codes", "Returns a list of metro IATA codes"], ["airports - Nearest airports for a given latitude and longitude", "Returns the nearest airports for a given latitude and longitude"], ["airports - Nonstop and direct routes for an airport", "Returns a list of nonstop and direct routes for an airport"], ["airports - Nonstop and direct routes for an airport by airline", "Returns a list of nonstop and direct routes for an airport restricted to an airline"], ["airports - Nonstop routes for an airport", "Returns a list of nonstop routes for an airport"], ["airlines - Airlines and the countries they operate in", "Return a list of airlines and the countries they operate in"]]}, "Taxi Fare Calculator": {"tool_desc": "How much does a taxi cost?", "apis": [["Get taxi fares", "Search fares by geo coordinates"]]}}, "Tools": {"Joe Rogan Quote Generator": {"tool_desc": "Get quotes from the man himself", "apis": [["Generate Rogan Quote", "Generate a quote from Joe Rogan"]]}, "Password Generator by API-Ninjas": {"tool_desc": "Generate random passwords that are hard to guess.", "apis": [["/v1/passwordgenerator", "API Ninjas Password Generator API endpoint. Returns a random password string adhering to the specified parameters."]]}, "QR Code Generator_v14": {"tool_desc": "Simple And Lightweight Api to Generate QR Code From Text", "apis": [["Generate QR Code", "Simply Provide Url or Text in url parameter."]]}, "Articles Generator": {"tool_desc": "Generate articles about specific subjects or niches, with specific word length, keyword density and multiple other parameters.", "apis": [["Get Generated Article By ID", "When using Generate New Article Endpoint, the article is saved, and can be accessed by the provided id"]]}, "Text Sentiment API": {"tool_desc": "An API that returns the sentiment and subjectivity of a given text in JSON", "apis": [["Sentiment Analysis", "This endpoint takes a GET request with a string as a parameter and returns the sentiment scores (polarity and subjectivity) of the text as well as the 'Full Text', 'Language', 'Entities', 'Keywords', 'Sentiment Label' and 'Subjectivity Label'."]]}, "HackerRank": {"tool_desc": "With HackerRank's API you can run codes in many different languages.", "apis": [["Languages", "This method provides you with information regarding the language codes which our code checker supports"]]}, "Whois ": {"tool_desc": "A 100% free and easy to use API for WHOIS Lookup", "apis": [["whois", "Use this endpoint for fetch whois data"]]}, "QRLink API": {"tool_desc": "Introducing a powerful and efficient API that transforms URLs  into high-quality QR codes (Quick Response codes).", "apis": [["URL to QR code", "This endpoint is a GET request that takes a single parameter \"url\" which specifies the website URL. The endpoint generates a QR code image using the input URL and the response is downloadable."]]}, "Simple & Cheap QR CODE GENERATOR": {"tool_desc": "Send a string, get a QR CODE - As simple as it gets", "apis": [["Qr Code Gen", "This endpoint takes a \"GET\" request with the \"url\" query parameter and returns a QR code image associated with the text passed."]]}, "Measurement Unit Converter": {"tool_desc": "Say goodbye to the hassle of unit conversions with our Measurement Unit Converter API.", "apis": [["Measurements", "GET enum array of all types of measurement"], ["Convert from one unit to another", "Converts the given quantity in one unit to the equivalent quantity in another, for a given measurement, and returns a detailed answer."], ["Measurements detailed", "GET a list of all the available measurements with unit details."], ["Measure units", "GET enum array of all units of the given type."]]}, "ExplorArc's Password Generation API": {"tool_desc": "The Best API to Generate Random Password with your desired length and as a response you get an set of 10 Passwords", "apis": [["Password Generation", "The Best API to Generate Random Password with your desired length and as a response you get an set of 10 Passwords"]]}, "Endpoint Monitor Tool": {"tool_desc": "An API for testing endpoints at custom intervals with email notifications and previous result comparison", "apis": [["GetUser", "Gets and returns the current user data from the associated userId."], ["RemoveEndpointData", "Remove an endpoint from you user account by Id.\n\n(KNOWN ISSUE with RAPIDAPI)\nSuccessfully deleting an enpoint will result with a 200, however it MAY provide an ERROR stating \"src property must be a valid json object\". This is an issue with RAPIDAPI and not our API."], ["GetEndpointData", "This Endpoint retrieves the endpoint data from the specified UserId and EndpointId."]]}, "Email Validation": {"tool_desc": "Validate the email address of your users at sign-up and get a risk score to help you eliminate fraud up-front, inform risk models and build customised workflows | Email Validation API", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Youtube MP3 Download": {"tool_desc": "Convert Youtube Videos to MP3.", "apis": [["Get MP3", "Convert to MP3 at the default bit rate."]]}, "Pagepeeker": {"tool_desc": "Automate website screenshots creation.", "apis": [["2. Thumbnail ready", "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds"], ["1. Shoot thumbnail", "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)"]]}, "GUID Generator Tool": {"tool_desc": "Efficient Guid generator, fast and flexible.", "apis": [["Multiple GUIDs", "Endpoint to retrieve a multiple GUIDs, returned as a a string array.\nRequired query string parameter: *number* - needs to be between 0 and 1000.\nGET only query.\nReturn content-type is text/json."], ["Single GUID", "Endpoint to retrieve a single GUID, returned as a simple string.\nNo parameters required.\nGET only query.\nReturn content-type is text/plain."]]}, "Todo": {"tool_desc": "REST API for managing todo list applications.", "apis": [["getTodoUsingGET", "Get todo from id"]]}, "Scrapey - Link Scraper": {"tool_desc": "Extract all links found on a web page by simply providing a URL to this API.", "apis": [["Scrape Links", "Scrape all links from URL"]]}, "SEO - Count website pages in Google index": {"tool_desc": "API allows quickly and easily determine the number of pages from a particular website that are indexed in Google's", "apis": [["countPages", "Count website pages in Google index"]]}, "ArabicCountryList": {"tool_desc": "Country list in Arabic", "apis": [["countryList", "Get Arabic & English Country list"]]}, "Noly url shortener": {"tool_desc": "Shorten a long url to tiny link", "apis": [["Shorten long link", "Use this endpoint to shorten a URL. The response will be a JSON object with the following structure:\n\nOn success:\n{\n\"status\": 1,\n\"error\": \"\",\n\"data\": \"https://tombo.icu/57h80n\"\n}\n\nOn failure:\n{\n\"status\": 0,\n\"error\": \"This website is already shortened here.\",\n\"data\": \"https://tombo.icu/57h80n\"\n}\n\nThe \"data\" field contains the shortened URL."]]}, "Bulk WHOIS": {"tool_desc": "Bulk WHOIS API.", "apis": [["Get your WHOIS batches", "Get a list of your batches."]]}, "QR Code Generator Pro": {"tool_desc": "Easily generate QR codes for urls, and receive a downloadable png image file", "apis": [["Generate QR Code", "Easily convert any URL into a QR code that can be downloaded and printed."]]}, "Captcha Generator": {"tool_desc": "A captcha generator tool with different settings for difficulty.", "apis": [["Captcha Generator", "This is a captcha generator tool that gives you an image of 270x80 pixels and the text solution. It has different settings that allows you to configure the captcha difficulty, and even create a captcha with a custom text solution."]]}, "Password Generator API": {"tool_desc": "This API generate cryptographically random strong password which are nearly impossible to break", "apis": [["Password of length 50", "Gives you length 50 password"], ["Base", "Only this endpoint is currently supported which gives you a random password"]]}, "Color to picture API": {"tool_desc": "Takes prompt of picture mode (L,RGB,RGBA), color in hex (example: ff03bc), width (example: 200), height (example: 200) and makes new image in single color", "apis": [["Color to picture", "Takes prompt of picture mode (L,RGB,RGBA), color in hex (example: ff03bc), width (example: 200), height (example: 200) and makes new image in single color)"]]}, "QR Code API_v33": {"tool_desc": "This Api takes URL, or string and returns the QR code image", "apis": [["QR code image", "This Api takes URL, or string and returns the QR code image"]]}, "Custom QR Code with Logo_v2": {"tool_desc": "Custom QR codes with a logo allow businesses to create personalized QR codes with their own brand logo integrated into the code.", "apis": [["Simple QR Code", "This endpoin returns simple qr code with the possiblity to customize the color."]]}, "YouTube Video Tags": {"tool_desc": "Get the tags used for YouTube video SEO without any youtube data api key.", "apis": [["Get All The Video Tags", "This endpoint will return all the tags used for the SEO of a video, with the video title."]]}, "Exerra phishing check": {"tool_desc": "This API checks URLs to see whether they are known phishing attempts.", "apis": [["Get stats", "Get statistics about the Exerra Phishing API"], ["Check a URL", "Check if a URL is a known phishing attempt"], ["Get all", "Get all domains (or links) associated with phishing attempts. The response is very large (>\u224813MB), so it is preferred to use \"Check a link\". \n\nDue to the large response size (and processing) this endpoint is paid."]]}, "Words World": {"tool_desc": "Quote from world people", "apis": [["T2G-Kurs-Check", "Kurs check of IDR to another valuta"]]}, "Tmail": {"tool_desc": "Temporary Disposable Email Address | Disposable email  is a service that allows to receive email at a temporary address that self-destructed after a certain time elapses.", "apis": [["View message", "View a particular message by id\nUse the token received from /mailbox as authorization header  & message id received from /messages as path parameter."], ["Get Messages", "Get all the messages received by email\nUse the token received from email as authorization header."], ["Get Email ID", "Get Email ID for Mailbox"]]}, "SEO Checker": {"tool_desc": "SEO Website Checker, Extraction and Analyze/Analytic Tools Report\nI'm on telegram chat me if there a problem/request\nhttps://t.me/iiyann25", "apis": [["Analyze V2", "analyze page speed with more results information"]]}, "ProxyPage": {"tool_desc": "Get high quality proxies  for free, proxy list with your filters", "apis": [["Random proxy", "Get random proxy,\n\nchoose type and country"], ["Tier2", "Tier 2 proxies\n\nEach proxy returned costs 1 credit\n\n\nWith our /v1/tier2 endpoint you can set different parameters for proxies that you need.\n\nYou can set type which is just your proxy type, either HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25 (which is smtp proxy)\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want."], ["Tier1", "List our tier 1 proxies with filters\nThis proxies are more comprehensively checked\n\n\nYou can set type which is just your proxy type, either HTTP, HTTPS\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want."]]}, "URL Content Extractor": {"tool_desc": "Provide a URL and get the content in return", "apis": [["Search Content", "Allows you to search content for content based on a query."], ["Get Trending", "This will return a list of news articles that are trending."], ["Get Content", "Give a url and it will spit back the content of that url"]]}, "Starline Telematics": {"tool_desc": "\u041e\u0442\u043a\u0440\u044b\u0442\u043e\u0435 StarLine API \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u043c \u043e\u0445\u0440\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043e\u0432 StarLine \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u043c\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u043c\u0438.", "apis": [["UserInfoV2", "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432, \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0449\u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0438\u043b\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432, \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438. \u041e\u0442\u0432\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u043e\u043b\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432. \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f user_id \u0438 cookie, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0443\u0441\u0442\u0430\u0440\u0435\u043b, \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c /json/v3/user/{user_id}/data. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Python-\u0441\u043a\u0440\u0438\u043f\u0442 get_user_info.py \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f <a href=\"https://gitlab.com/starline/openapi\">gitlab.com/starline/openapi</a>. \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v2/user/1116/user_info\" --cookie 'slnet=780D719C7F54465FB281B4DD65498168'</code>"], ["LibraryEvents", "\u0412 \u043e\u0442\u0432\u0435\u0442\u0435 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u0440\u0438\u0445\u043e\u0434\u044f\u0442 \u0432\u0441\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u0441 \u043f\u043e\u043b\u043d\u044b\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v3/library/events\"</code>"], ["UserInfo", "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432, \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0449\u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0438\u043b\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432, \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438. \u041e\u0442\u0432\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u043e\u043b\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432. \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0443\u0441\u0442\u0430\u0440\u0435\u043b, \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c /json/v3/user/{user_id}/data. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Python-\u0441\u043a\u0440\u0438\u043f\u0442 get_user_info.py \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f <a href=\"https://gitlab.com/starline/openapi\">gitlab.com/starline/openapi</a>. \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/user/4568857/user_info\" --cookie 'slnet=780D719C7F54465FB281B4DD65498168'</code>"], ["DeviceOBDParams", "\u0417\u0430\u043f\u0440\u043e\u0441 \u0434\u0430\u043d\u043d\u044b\u0445, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u043e\u0442 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u0438 \u0445\u0440\u0430\u043d\u044f\u0449\u0438\u0445\u0441\u044f \u0432 \u043a\u0435\u0448\u0435. \u041b\u044e\u0431\u043e\u0439 \u0438\u0437 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 (fuel, errors, mileage) \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c null. \u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u043b\u0438\u0431\u043e \u043e\u043d \u0435\u0449\u0435 \u043d\u0435 \u0441\u0447\u0438\u0442\u0430\u043d \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0441 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f, \u043b\u0438\u0431\u043e \u0434\u0430\u043d\u043d\u043e\u0435 \u0422\u0421 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0435\u0439 CAN \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438, \u043b\u0438\u0431\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 CAN. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v1/device/4568857/obd_params\" --cookie 'slnet=15CFA19BFD3E8884C716FFA4E39AF866'</code>"], ["LibraryEventsId", "\u0412 \u043e\u0442\u0432\u0435\u0442\u0435 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u0435 \u0441 \u043f\u043e\u043b\u043d\u044b\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v3/library/events/307\"</code>"], ["UserDevices", "\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043a\u0430\u0436\u0434\u043e\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435. \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0443\u0441\u0442\u0430\u0440\u0435\u043b, \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c /json/v3/user/{user_id}/data. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v1/user/1116/devices\" --cookie 'slnet=780D719C7F54465FB281B4DD65498168'</code>"], ["DeviceOBDErrors", "\u0417\u0430\u043f\u0440\u043e\u0441 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 OBD, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u043e\u0442 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u0438 \u0445\u0440\u0430\u043d\u044f\u0449\u0438\u0445\u0441\u044f \u0432 \u043a\u0435\u0448\u0435. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v1/device/4568857/obd_errors\" --cookie 'slnet=780D719C7F54465FB281B4DD65498168'</code>"], ["Device", "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0433\u043e \u043e\u0442\u0447\u0435\u0442\u0430 \u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0443\u0441\u0442\u0430\u0440\u0435\u043b, \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c /json/v3/device/{device_id}/data. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v2/device/356306052111516\" --cookie 'slnet=780D719C7F54465FB281B4DD65498168'</code>"], ["Digest_Authentication", "\u0422\u043e\u043a\u0435\u043d \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 StarLineID. \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b cookie \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u043c\u0435\u0442\u043e\u0434\u0430\u0445 WebAPI \u0434\u043b\u044f \u043f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438. \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u043d\u0438\u043c\u0430\u043b, \u0447\u0442\u043e \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c digest \u043c\u0435\u0442\u043e\u0434\u043e\u043c, \u043a\u043b\u0438\u0435\u043d\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a 'DigestAuth:true'. username \u2013 slid-token, password \u2013 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 StarLineID \u0441\u0435\u0440\u0432\u0435\u0440\u0435 (slid user_id). \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v3/device/357803045497365/data\" -v --digest -u '418db3fe902abe4eb4a6d92ad37ab7a7_276388:276388' -H 'DigestAuth:true'</code>"], ["UserData", "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432, \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0449\u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0438\u043b\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432, \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438. \u041e\u0442\u0432\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u043e\u043b\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432. \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f user_id \u0438 cookie, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v3/user/1116/data\" --cookie 'slnet=780D719C7F54465FB281B4DD65498168'</code>"], ["UserMobileDevices", "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v1/user/1116/mobile_devices\" --cookie 'slnet=780D719C7F54465FB281B4DD65498168'</code>"], ["DeviceData", "\u041e\u0442\u0432\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u043e\u043b\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432. \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 device_id \u0438 cookie, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v3/device/357976061290482/data\" --cookie 'slnet=15CFA19BFD3E8884C716FFA4E39AF866'</code>"], ["DevicePosition", "\u0417\u0430\u043f\u0440\u043e\u0441 \u0434\u0430\u043d\u043d\u044b\u0445, \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c (\u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c) \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430, \u0431\u043b\u043e\u043a position \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d \u043f\u0443\u0441\u0442\u044b\u043c. \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0443\u0441\u0442\u0430\u0440\u0435\u043b, \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c /json/v3/device/{device_id}/data. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v1/device/4568857/position\" --cookie 'slnet=15CFA19BFD3E8884C716FFA4E39AF866'</code>"], ["DeviceState", "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0438\u043b\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e\u0433\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0443\u0441\u0442\u0430\u0440\u0435\u043b, \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c /json/v3/device/{device_id}/data. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v2/device/356306052111516/state\" --cookie 'slnet=15CFA19BFD3E8884C716FFA4E39AF866'</code>"], ["Controls_library", "\u041c\u0435\u0442\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u043a\u043d\u043e\u043f\u043e\u043a \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043d\u043e\u043f\u043e\u043a \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u0438\u0445 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0422\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0430 \u044f\u0437\u044b\u043a\u0435, \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u043c \u0432 \u043b\u0438\u0447\u043d\u043e\u043c \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435 \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0435\u0441\u0441\u0438\u0438. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/device/45657/ctrls_library\" --cookie 'slnet=15CFA19BFD3E8884C716FFA4E39AF866'</code>"], ["DeviceInfoGET", "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0443\u0441\u0442\u0430\u0440\u0435\u043b, \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c /json/v3/device/{device_id}/data. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v1/device/4568857/info\" --cookie 'slnet=15CFA19BFD3E8884C716FFA4E39AF866'</code>"], ["DeviceAsyncGet", "\u041c\u0435\u0442\u043e\u0434 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u044b\u043b\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0430 \u0440\u0430\u043d\u0435\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 /json/v2/device/{device_id}/async. \u0414\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 device_id, \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043e\u043c\u0430\u043d\u0434\u044b cmd_id \u0438 cookie, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v2/device/9854082/async/AEVXNX0QLGMQRLVOW66HYAB6OYIWO6WW\" --cookie 'slnet=15CFA19BFD3E8884C716FFA4E39AF866'</code>"], ["getAppCode", "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0442\u043e\u043a\u0435\u043d\u0430. \u0421\u0440\u043e\u043a \u0433\u043e\u0434\u043d\u043e\u0441\u0442\u0438 \u043a\u043e\u0434\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u2013 1 \u0447\u0430\u0441. \u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432 \u043b\u0438\u0447\u043d\u043e\u043c \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430\u043c\" \u043d\u0430 <a href=\"https://my.starline.ru\">my.starline.ru</a>. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Python-\u0441\u043a\u0440\u0438\u043f\u0442 get_app_code.py \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f <a href=\"https://gitlab.com/starline/openapi\">gitlab.com/starline/openapi</a>. \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043a\u043e\u0434 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://id.starline.ru/apiV3/application/getCode?appId=2&secret=d1e0c6cbd6c93999e5072cee4deed9c9\" -i</code>"], ["getAppToken", "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438. \u0412\u0440\u0435\u043c\u044f \u0436\u0438\u0437\u043d\u0438 \u0442\u043e\u043a\u0435\u043d\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u2013 4 \u0447\u0430\u0441\u0430. \u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432 \u043b\u0438\u0447\u043d\u043e\u043c \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430\u043c\" \u043d\u0430 <a href=\"https://my.starline.ru\">my.starline.ru</a>. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Python-\u0441\u043a\u0440\u0438\u043f\u0442 get_app_token.py \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f <a href=\"https://gitlab.com/starline/openapi\">gitlab.com/starline/openapi</a>. \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0442\u043e\u043a\u0435\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://id.starline.ru/apiV3/application/getToken?appId=2&secret=2646398c5a7bb70b7f4eadca7c4f62cb\" -i</code>"], ["SettingsSettings", "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0438\u043b\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 3-5 \u043f\u043e\u043a\u043e\u043b\u0435\u043d\u0438\u044f. \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 id \u0438 cookie, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v3/device/4568857/settings\" --cookie 'slnet=780D719C7F54465FB281B4DD65498168'</code>"]]}, "YouTube Video Summarizer": {"tool_desc": "A powerful tool for generating concise summaries of YouTube videos, highlighting the most important points for easy note-taking and referencing.", "apis": [["/v1/youtube/summarizeVideoFromCache", "Return the video summary of a given YouTube video that has already been summarized. The summary is provided in markdown format."], ["/v1/youtube/summarizeVideoWithToken", "Create a video summary of a given YouTube video. The summary is provided in markdown format."]]}, "qrcodeutils": {"tool_desc": "QR Code Generator API.", "apis": [["qrcodefree", "Free QR Code Barcode Generator"], ["qrcodepro", "Pro QR Code Barcode Generator"]]}, "Wayback Machine": {"tool_desc": "The Internet Archive Wayback Machine supports a number of different APIs to make it easier for developers to retrieve information about Wayback capture data.", "apis": [["Availability", "This simple API for Wayback is a test to see if a given url is archived and currenlty accessible in the Wayback Machine. This API is useful for providing a 404 or other error handler which checks Wayback to see if it has an archived copy ready to display. The API can be used as follows:"]]}, "ColorMe": {"tool_desc": "Get some colors either randomly selected or based on your input base color", "apis": [["SpecificColorSet", "Get a set of colors based on input color like - \"yellow\" / \"red\""], ["RandomColorSet", "Get a random set of colors"]]}, "QR Code Wizard": {"tool_desc": "Generate QR codes with ease via API", "apis": [["Generate QR", "Generate QR codes with ease via API"]]}, "Email Verifier": {"tool_desc": "A simple API to verify email addresses in making sure they are valid and real, for ensuring you are sending emails to actual people!", "apis": [["Verify Email", "To verify a single email address"]]}, "IPInfoAPI": {"tool_desc": "Simple API, that allows you to get user's IP address.", "apis": [["Generate IP", "Generate fake IP address"]]}, "Proxy": {"tool_desc": "Simple rotating proxy", "apis": [["proxy", "Proxy your request anywhere."]]}, "HTML-2-JSON": {"tool_desc": "Convert a public HTML page into JSON (or Markdown)", "apis": [["cheerio", "returns the HTML page as JSON or Markdown"]]}, "QR code generator with multiple datatypes .": {"tool_desc": "Our QR code generator API allows you to generate QR codes for various types of data, including text, URLs, phone numbers, SMS messages, and email addresses.", "apis": [["getQrcode", "This API will return you an URL of the QR Code image that you can easily embed on to website or download it for your other needs."]]}, "QR-Generator-Api": {"tool_desc": "Generate HTML image-tag with base64-image-string as QR code of input text.", "apis": [["Generate", "Generate HTML image-tag with base64-image-string as QR code of input text (Query Parameter)"]]}, "Famous  Quotes": {"tool_desc": "Over 100 000 of famous quotes, 100 categories and 10K authors", "apis": [["Get Random Quotes", "Get multiple random quotes from chosen category or send **all** to get results from multiple categories.\nYou can view all categories on the Category endpoint"], ["List Categories", "List all available categories"]]}, "QR Code Generator": {"tool_desc": "QR code generator API.", "apis": [["Generate Advance - Direct Image", "Generates a QR code as a direct image with additional settings. (NOTE: doesn't show correctly in RapidAPI)"], ["Generate Basic - Base64", "Generates a QR code as base64 with limited settings."], ["Generate Advance - Base64", "Generates a QR code as base64 with additional settings."], ["Generate Basic - Direct Image", "Generates a QR code as a direct image with limited settings. (NOTE: doesn't show correctly in RapidAPI)"]]}, "teamriverbubbles random utilities": {"tool_desc": "random utilities you may use", "apis": [["is prime", "checks if a number is prime"], ["kda calculator", "Calculates a kd (kill + assists death ratio)"], ["kd calculator", "Calculates a kd (kill death ratio)"], ["random uuid", "creates a random uuid v4"], ["get skin from uuid", "gets a skin from a uuid"], ["uuid to username", "turns a uuid into a username"], ["username to uuid", "turns a username into a uuid"]]}, "core_js": {"tool_desc": "javascript", "apis": [["name", "name=?\n? = javascript"]]}, "QR Code Generator API_v6": {"tool_desc": "QR code generator API is a tool that enables developers to generate QR codes within their applications.", "apis": [["QR Code Image Generator", "A QR code generator API is a tool that enables developers to generate QR codes within their applications. QR codes are two-dimensional barcodes that can be scanned using a smartphone camera and decoded using QR code reader software. The API allows developers to easily integrate QR code generation functionality into their existing applications, such as mobile apps, web apps, and software.\n\nThis API can be used to generate QR codes for a variety of purposes, such as:\n\nContact information: Generate a QR code containing your contact information, such as your phone number or email address.\nLinks: Create a QR code that links to a website, YouTube video, or other online content.\nPayments: Create a QR code for making payments through a mobile wallet or payment app.\nEvents: Generate a QR code for an event, such as a concert or conference, to provide attendees with all the necessary information.\nCoupons: Create a QR code for a coupon or promo code to be redeemed at a physical store or online.\nOverall, a QR code generator API is a versatile tool that can help businesses and individuals streamline their processes and improve the user experience for their customers."]]}, "Bar QR Code Generator": {"tool_desc": "Generate barcodes and QR codes.", "apis": [["download", "Generate and download a single barcode."]]}, "YouTube MP3": {"tool_desc": "Convert Youtube Videos to MP3", "apis": [["Get MP3", "Convert to MP3 at the default bit rate.\nQuota cost will apply according to the length of the mp3 file."]]}, "Avatar.io - MODERN AVATAR PLACEHOLDER API": {"tool_desc": "Generate clean and modern avatar placeholders for your application", "apis": [["Generate avatar", "Generates the desired avatar and returns the image to the client."]]}, "UUID Generator_v2": {"tool_desc": "Why do it yourself?", "apis": [["Generate UUID", "Generates a UUID and returns to client"]]}, "Spotify Downloader": {"tool_desc": "Download tracks, albums and playlists from Spotify!", "apis": [["Track List - Album", "Get track list from album"], ["Track List - Playlist", "Get Track List from Playlist"], ["Metadata - Album", "Get metadata about album"], ["Metadata - Track", "Get metadata about track"], ["Download Song", "Download a song by spotify's song ID"], ["Metadata - Playlist", "Get metadata about playlist"]]}, "URL Shortener": {"tool_desc": "URL Shortener with free QR Code generation, tracking features and more.", "apis": [["short-urls/{code}/visits", "Shows clicks, referer, etc. for a specific short link."], ["short-urls/{code}", "Shows information about a short link code."]]}, "ViewDNS": {"tool_desc": "Your one source for DNS related tools!", "apis": [["Whois", "Displays owner/contact information for a domain name. Can also be used to determine if a domain name is registered or not.  This tool is not available to free API key users. Access is restricted to paid API keys only."], ["Port Scanner", "This web based port scanner will test whether common ports are open on a server. Useful in determining if a specific service (e.g. HTTP) is up or down on a specific server.   Ports scanned are: 21, 22, 23, 25, 80, 110, 139, 143, 445, 1433, 1521, 3306 and 3389"], ["Traceroute", "Determines the series of servers that data traverses from the ViewDNS server to the specified domain name or IP address."], ["DNS Record Lookup", "View all configured DNS records (A, MX, CNAME etc.) for a specified domain name."], ["Ping", "Test how long a response from remote system takes to reach the ViewDNS server. Useful for detecting latency issues on network connections."], ["IP Location Finder", "This tool will display geographic information about a supplied IP address including city, country, latitude, longitude and more."], ["Chinese Firewall Test", "Checks whether a site is blocked by the Great Firewall of China. This test checks across a number of servers from various locations in mainland China to determine if access to the site provided is possible from behind the Great Firewall of China.   This test checks for symptoms of DNS poisoning, one of the more common methods used by the Chinese government to block access to websites."], ["Spam Database Lookup", "Find out if your mail server is listed in any spam databases."], ["Free Email Lookup", "Find out if a domain name provides free email addresses. Search is performed on a custom made list of thousands of known free email hosts."], ["MAC Address Lookup", "This tool will display the name of the company that manufactured a specific network device based on its MAC Address."], ["Abuse Contact Lookup", "Used to find the abuse contact address for a domain name. This is where you would send complaints about spam originating from that domain."], ["DNS Propagation Checker", "Check whether recent changes to DNS entries have propagated to DNS servers all over the world. Useful in troubleshooting DNS issues that appear to be isolated to one geographic region. Provides a status report on DNS propagation globally."], ["Iran Firewall Test", "Test if any website is accessible using the Internet in Iran in real-time."], ["Reverse DNS Lookup", "Find the reverse DNS entry (PTR) for a given IP. This is generally the server or host name."]]}, "Proxy Checker": {"tool_desc": "An easy tool to test proxy whether it's online, anonymous, is it HTTP, HTTPS or both, to get proxy performance timings.", "apis": [["Retrieve Proxy Information", "For retrieving a proxy test result, you should make a request to this endpoint."]]}, "Judge0 Extra CE": {"tool_desc": "The most advanced open-source online code execution system in the world.", "apis": [["Get Configuration", "Configuration information gives you detailed information about the configuration of Judge0."]]}, "Domain Backorder": {"tool_desc": "Blazing fast domain backorder service.", "apis": [["backorders", "Get the latest expiring domain names in our pool"]]}, "CommonPortNumbers": {"tool_desc": "Get registered service names and transport protocols port numbers.", "apis": [["commonports", "Get registered service names and transport protocols port numbers."]]}, "Token API": {"tool_desc": "Generate a new token for Unlimited Language API.", "apis": [["generate", "Generate a new token for Language API"]]}, "QR Code - Dynamic and Static": {"tool_desc": "This API is focused on generating dynamic (content can be changed later) and static QR Codes, fully customized and with constant updates.", "apis": [["List Specific QR Code", "From this endpoint is to get the information of a specific registered qr code, related to the respective api key"], ["List All QR Code's", "From this endpoint is to list all registered qr codes, related to their api key."], ["Generate API Key", "From this endpoint you can generate a single api key.\n\nIt will be used to link all the qr code created, and allow any changes.\n\nImportant: Keep in mind that once generated, it is necessary that you store this key well, since it is not possible to recover it, and without it, you do not have access to change any of your QR Codes."]]}, "QR Code API_v119": {"tool_desc": "Generate QR Codes by passing in parameters.", "apis": [["QR Code API (Web URL)", "Call the API Endpoint /qr and pass in the url parameter along with your rapidApi key to obtain a QR Code."]]}, "pdflayer": {"tool_desc": "Supercharge High Quality PDF Conversion in any Application.", "apis": [["/convert", "Main API endpoint for PDF conversion"]]}, "Torrent-Search": {"tool_desc": "This script is a JavaScript code that uses the @dil5han/torrent-api module to create a server that can search multiple torrent websites and return the results to the client in JSON format.", "apis": [["Get from eztv", "can use this for search eztv"], ["Get from yts", "You can use this for moive search"], ["Get from 1337.x", "scrape data from various torrent websites such as 1337x"]]}, "PurgoMalum": {"tool_desc": "PurgoMalum is a simple, free, RESTful web service for filtering and removing content of profanity, obscenity and other unwanted text.", "apis": [["Remove profanity", "Calling the web service involves a simple HTTP GET request. The only two requirements for using PurgoMalum are the \"text\" parameter on the query string and the request-type name as part of the path in the request"]]}, "Amazon Product Scraper API - FULL PAGE SCRAPING": {"tool_desc": "Simple and easy-to-use full page Amazon product list scraping API.", "apis": [["Scrape", "Data scrape for an amazon product listing page"]]}, "Text2Image": {"tool_desc": "Generate images using SOTA text 2 image model.", "apis": [["text to image", "Generate image using input text."]]}, "Convexity": {"tool_desc": "Convexity is an Color-convertor API that offers endpoints for converting between different color representations, including RGB, HSL, and CMYK", "apis": [["convert hsv", "Endpoint to converts HSV color code to other color code like Hex , RGB, CMYK,HSL"], ["hsv to hsl", "Converts  hsv color code to hsv color code"], ["hsv to cmyk", "Converts  hsv color code to cmyk color code"], ["hsv to hex", "Converts  hsv color code to hex color code"], ["hsv to rgb", "Converts  hsv color code to rgb color code"], ["cmyk to hsv", "Converts  cmyk color code to hsv color code"], ["hsl to hsv", "Converts  hsl color code to hsv color code"], ["rgb to hsv", "Converts  rgb color code to hsv color code"], ["hex to hsv", "Converts  hex color code to  hsv color code"], ["cmyk to hsl", "Converts  cmyk color code to hsl color code"], ["cmyk to rgb", "Converts  cmyk color code to rgb color code"], ["cmyk to hex", "Converts  cmyk color code to hex color code"], ["convert cmyk", "Endpoint to converts cmyk color code to other color code like RGB , HSL, Hex"], ["hsl to cmyk", "Converts  hsl color code to cmyk color code"], ["hsl to hex", "Converts  hsl color code to hex color code"], ["hsl to rgb", "Converts  hsl color code to rgb color code"], ["convert hsl", "Endpoint to converts HSL color code to other color code like Hex , RGB, CMYK"], ["rgb to cmyk", "Converts  rgb color code to cmyk color code"], ["rgb to hsl", "Converts  rgb color code to hsl color code"], ["rgb to hex", "Converts  rgb color code to hex color code"], ["convert rgb", "Endpoint to converts RGB color code to other color code like Hex , HSL, CMYK"], ["convert hex", "Endpoint to converts hex color code to other color code like RGB , HSL, CMYK"], ["hex to  rgb", "Converts hex color code to rgb color code."], ["hex to cmyk", "Converts hex color code to  cmyk color code"], ["hex to hsl", "Converts  hex color code to  hsl color code"]]}, "Wikipedia Infobox": {"tool_desc": "An Api to serve the infoboxes that accompanies so many wikipedia entries.", "apis": [["InfoBox", "returns a json object representation of the provided wikipedia entry"]]}, "Helper Function": {"tool_desc": "Helper functions that might be useful for you to use such as UUID Generator, Base64, JSON, Array, String manipulation, Hash MD5, SHA1, SHA256, SHA512, Aragon2, Bcrypt\n#ascii #encoder #decoder #uuid #slug #converter\nI'm on telegram chat me if there a problem/request\nhttps://t.me/iiyann25", "apis": [["Random", "Generate Random String with custom length\nBASIC: 20 \nPRO: 30\nULTRA: 70\nMEGA: 150"], ["Generate UUID", "Generate UUID v4 with dash or not.\nmax\nBASIC: 3\nPRO: 20\nULTRA: 50\nMEGA: 150"]]}, "Waktu Solat": {"tool_desc": "Information on prayer times in Malaysia.", "apis": [["/solat/time", "Display the prayer time based on selected zone.\nData in json format."], ["/solat/list", "List of zones in each state along with the zone code.\nData in json format."]]}, "All in One FIle Converter": {"tool_desc": "All in one file converter can convert different types of files.", "apis": [["Get Supported File Type", "Get supported file types by providing an input file type"]]}, "YTStream - Download YouTube Videos": {"tool_desc": "Download or stream YouTube Videos/MP4.", "apis": [["Download/Stream", "Stream or download info."]]}, "ProbablyThese": {"tool_desc": "API for app ProbablyThese", "apis": [["EndPonit", "This is an End Point"]]}, "tiktok no watermark": {"tool_desc": "get tiktok no watermark video", "apis": [["Video no watermark", "Get no watermark video."]]}, "FraudFreeze Phishing Check": {"tool_desc": "This API checks URLs to see whether they are known phishing/scam attempts.", "apis": [["Check a URL", "Check if a URL is a known phishing or scam attempt"]]}, "SEO Fast Audit": {"tool_desc": "One click onpage SEO audit API : Analyse the content from an URL the major SEO tags : title, description, H1, img, and links.", "apis": [["Scraper", "Gets the text of any html selector"], ["Analysis", "Analyse the content from URL"]]}, "Easy QR Code": {"tool_desc": "Simple QR Code generator.", "apis": [["Generate QR Code", "Generate QR Code by providing content"]]}, "Text to Speech_v2": {"tool_desc": "Text to Speech Voice Reader", "apis": [["Text to Speech", "Text to Speech Voice Reader"]]}, "Epoch Converter": {"tool_desc": "Convert between dates and times.", "apis": [["seconds_simplified", "Convert seconds to get days, hours, minutes, seconds. (Seconds) -> Days: 1, Hours: 3, Minutes: 46, Seconds: 40"], ["start_end_date_to_time", "Convert datetime to get start timestamp and end timestamp. (year, month, day Hours:Minutes:Seconds) -> 1674864000.0, 1674950399.0"], ["date_to_time", "Convert datetime to timestamp. (year, month, day Hours:Minutes:Seconds) -> 1674919760"], ["time_to_date", "Convert timestamp to datetime. (year, month, day Hours:Minutes:Seconds)"]]}, "Discord Webhook API": {"tool_desc": "This API allows you to send data to a discord webhook, and get a detailed response.", "apis": [["repeat send message", "Enter your webhook URL, enter how many times to send the message, and then specify the message to send. Max 10 messages."], ["send embed", "Allows you to send an embed via a webhook. Read the documentation to get this to work."], ["multi send message", "Allows you to send multiple messages with a webhook. More information in the docs. Modify the message_count value to the amount of messages you wish to send, and then specify each of the contents of the messages. If you wish to send the same message several times, use repeat send message.\nMaximum 10 messages at once."], ["send message", "Allows you to send a message with a webhook. More information in the docs."]]}, "Unit Measurement Conversion": {"tool_desc": "Perform accurate and hassle-free conversions between various measurement units for weight, length, area, volume, speed, fuel, pressure, and temperature with our API.", "apis": [["Convert a Unit", "GET the Unit and Value you want to convert, and get a object with the result and abbreviation (if available)."], ["Get a List of All Units", "This endpoint gets a full list of units available for conversion"]]}, "N\u00fameros a Letras": {"tool_desc": "API para convertir n\u00fameros a letras en espa\u00f1ol.", "apis": [["NAL Path", "Convierte un n\u00famero a letras"], ["NAL Query", "Convierte un n\u00famero a letras"]]}, "UnitConversion": {"tool_desc": "App to easily convert units", "apis": [["/info", "List all supported units"]]}, "3D Services": {"tool_desc": "Provide tool for generating thumbnail of 3d files using blender and tool for scripting Blender directly in the cloud.", "apis": [["blender-project", "(Warnig - in zip mode the return of this api is a large file (~20MB)) similar to executing blender --background ./main.blend --python ./script.py. The zip in parameter should be composed of a main.blend file and a script.py. see example here https://files.aptero.co/api/public/dl/CJTvv0V7?inline=true"]]}, "All Purpose Complex Converter": {"tool_desc": "Convert numbers to words, text to speech, numbers to speech, speech to text and much more.", "apis": [["Convert Number To Speech| Provide Any Integer Number", "Converting any integer number to Speech"], ["Convert Text To Speech || Provide Any Text", "Convert Any Text To Speech."], ["Convert Numbers To Words | Provide Any Integer Number", "Convert any number to words."], ["GET Languages", "Get All The Supported Languages."]]}, "Domain Name Search": {"tool_desc": "Search for domain names, including domain availability, validation, expiration, prices, WHOIS, quality aspects and more data available on https://domains.google.", "apis": [["Whois", "Perform WHOIS domain lookup."], ["Domain Search", "Search for domains by keyword / query. Supports all 341 TLDs available on Google Domains. Each result includes availability information, pricing, quality aspects and more data available on Google Domains."], ["Domain Availability", "Check domain availability, including domain validation, expiration, prices, domain quality aspects (advantages / considerations) and more data."]]}, "Captcha": {"tool_desc": "Feeling nostalgic?", "apis": [["Generate Captcha", "Generates a captcha and returns a UUID."]]}, "YouTube Video Data Extractor": {"tool_desc": "It is a simple api used to extract YouTube Video data such as title,description,etc.", "apis": [["Extract Data", "Almost all YouTube video urls are supported"]]}, "mailboxlayer": {"tool_desc": "Simple and powerful email verification JSON API using SMTP, typo checks, syntax validation, and free and disposable provider filtering.", "apis": [["Validate email address", "The main API endpoint for validating email addresses"]]}, "Whois by API-Ninjas": {"tool_desc": "Look up domain registry information using WHOIS protocol for any domain.", "apis": [["/v1/whois", "API Ninjas Whois API endpoint. Returns domain registration details (e.g. registrar, contact information, expiration date, name servers) about a particular domain name."]]}, "ShortAdLink - Shorten URLs and Earn Money": {"tool_desc": "ShortAdLink - Earn money on shorten links.", "apis": [["Shorten URL", "Primary method for shortening URL with custom alias."]]}, "Check page or website loading speed": {"tool_desc": "Check page or website loading speed", "apis": [["getPageSpeed", "Get page or website loading speed in seconds"]]}, "Ephemeral Proxies": {"tool_desc": "An API service to obtain **datacenter and residential proxies.**\n\n###### Features:\n* This service contains pools of **stable and high-quality proxies** that automatically rotate to ensure that you get a new different proxy with each API call.", "apis": [["Check datacenter proxies service status", "It returns the current status of the service, including the total number of datacenter proxies available and grouped by country."], ["Obtain a new datacenter proxy", "The connection proxy details are `proxy.host` and `proxy.port` from the response fields.\nThe proxy will allow connections from the same source IP as the one making this API call. Make use of the `whitelist_ip` parameter to allow an additional ip.\nCountries can be selected by using the `countries` parameter, otherwise the country is randomly selected. A list of countries is available on *Service Status* endpoint.\nThe proxy is available for 30 mins."], ["Extend expiration time of a datacenter proxy", "By calling this endpoint the expiration time of an already allocated proxy will be extended by 30 mins.\nSuccessive calls will keep incrementing the expiration time, up to a maximum of 24 hours."], ["Get user's traffic balance", "It returns the user's traffic balance for current monthly subscription."], ["Obtain a new residential proxy", "The connection proxy details are `proxy.host` and `proxy.port` from the response fields.\nThe proxy will allow connections from the same source IP as the one making this API call. Make use of the `whitelist_ip` parameter to allow an additional ip.\nCountries can be selected by using the `countries` parameter, otherwise the country is randomly selected. A list of countries is available on *Service Status* endpoint.\nThe proxy is available for 30 mins."], ["Check residential proxies service status", "It returns the current status of the service, including the total number of residential proxies available and grouped by country."]]}, "Measurement Units Converter": {"tool_desc": "Easily and quickly convert all types of measurement units using the API.", "apis": [["Convert from one unit of measure to another", "Convert efficiently and quickly between more than 50 of the most used units with a simple and intuitive conversion tool. At the output, you will get an answer with the conversion of your measurement units."], ["Measurements", "GET array of all types of measurement. The array key is in the format {inputUnit-outputUnit} - you can later use these values \u200b\u200bwhen converting units of measurement."]]}, "Discord Lookup": {"tool_desc": "Easily lookup Discord users by ID, invite data & joins by invite code and hidden vanity data", "apis": [["Get Invite Data", "Fetches detailed data, including hidden data of invites or vanities"], ["Get User Data", "Fetches user data by their ID. Automatically handles rate limits and bypasses them and it parses their creation date automatically"]]}, "Bulk Whatsapp Validator": {"tool_desc": "Checks if a number is registered on whatsapp.", "apis": [["About info (free)", "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nThis endpoint will return the `About` info of the number, and the time when the value was set."], ["Is a business? (free)", "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nRequests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not."], ["Validate WA number (free)", "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nThe response is `true` if the phone is registered on whatsapp."], ["Validate WA number", "enter the number you want to validate.\nLearn how to use it on this [video](https://youtu.be/_h5ybzp9UNU)."], ["Is a business?", "Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not."], ["About info", "This endpoint will return the *About* state of the WA number on the query."]]}, "bitly": {"tool_desc": "Shortens urls", "apis": [["shorten", "Given a long URL, returns a bitly short URL."]]}, "QR Code_v18": {"tool_desc": "API that returns a downloadable QR Code as a png from an input text param", "apis": [["qrcode", "Get a QR Code from an input text"]]}, "UptoSite Link Shortener": {"tool_desc": "Link Shortener API for developers", "apis": [["Get Long URL", "Get the actual long URL from shortened URL"]]}, "Anchor Data Scrapper": {"tool_desc": "Anchor Data Scrapper is the easiest way to get access to podcasts from a specific user in a JSON format.", "apis": [["Get Podcast episodes", "Get Podcast episodes with Audio, image, description using the username of the podcast."]]}, "IsBehindCDN": {"tool_desc": "Check if domain is fronted by CDN provider.", "apis": [["isbehindcdn", "Check if domain is fronted by CDN provider."]]}, "Keyword Tool_v2": {"tool_desc": "Keyword Tool helps to analyze keywords and related keywords competitions, search volume, and CPC.", "apis": [["/langlist", "List of support Language"]]}, "Simple QR Code Generator": {"tool_desc": "Fast and simple QR Code Generator", "apis": [["Get", "Simple Get endpoint to retrieve a QR code as a Jpeg file. \nSend the parameter **link ** as a query string parameter.\nReturn content-type is application/octet-stream."]]}, "QR Code API Generator": {"tool_desc": "This API takes input as url to generate image based QR code", "apis": [["QR CODE GENERATOR", "This endppint https://qrcodegenerator-47jz.onrender.com/qrcode/download/{text} will take input from user , you can replace {text} with anything and it will generate response as QR code Image."]]}, "Geolocate": {"tool_desc": "The Geocoding Flask API is a simple and efficient way to convert addresses and places into their corresponding latitude and longitude coordinates.", "apis": [["GET coordinates", "GET request to the \"/geocode\" endpoint with an \"address\" parameter containing the address or place you want to geocode"]]}, "qrcode-generator-base64": {"tool_desc": "Our QR code generator API allows you to generate QR codes for various types of data, including text, URLs, phone numbers, SMS messages, and email addresses.", "apis": [["qrcode", "qrcode to genrate base64 qrcode image"]]}, "echo-api": {"tool_desc": "Echo API that answer everything that you send back to you.", "apis": [["Echo GET", "Make a HTTP GET request with the code you like to get in the response."]]}, "Plus One": {"tool_desc": "This tool allows you to perform an increment by one on your integer", "apis": [["get plus one", "Get your integer, incremented by one"]]}, "oDesk APIs": {"tool_desc": "oDesk APIs allowed for authorized users to can access and build their own oDesk applications.", "apis": [["Get a specific task record", "return details on a specific oTask or set of oTasks, this format can be used within a company (:companyid), team (:teamid) or user (:userid)"], ["List all oTask records", "returns all task records under the company"], ["Get My Jobs", "Returns all jobs that a user has manage_recruiting access to. This API call can be used to find the reference ID of a specific job."], ["Generating Agency Specific Reports", "Time reports can be generated for an agency, in order to use this API the authorized user needs staffing manager permissions to the agency."], ["Generating Company Wide Reports", "Time reports can be generated on a company-wide level. All time reports fields are supported on this level except earnings related fields. In order to access this API the authorized user needs either hiring or finance permissions to all teams within the company."], ["Get Specific Job", "Returns the complete job object for the referenced job, this is only available to users with manage_recruiting permissions within the team that the job is posted in."], ["List all Tasks", "pull all tasks assigned within a company, team or to a specific user"], ["Generating Provider Specific Reports", "This API allows callers to fetch data source of themselves. No monetary fields, such as charges or earnings, are supported. The caller of this API must be the provider himself."], ["Generate Time Reports for a Specific Team", "Time reports can be generated for a specific team, with or without detailed monetary information based on the relationship of the authorized user at the time the call is made and what information is included in the call."]]}, "utile-space": {"tool_desc": "Misc useful API for software engineers and others.", "apis": [["/d{die}", "Roll a die with n faces. With n between 2 and 100."]]}, "Overnight Policy Rate": {"tool_desc": "Malaysia Overnight Policy Rate (OPR) decided by the Monetary Policy Committee.", "apis": [["/opr", "Provide latest Overnight Policy Rate."]]}, "Free Random Word Generator API": {"tool_desc": "Returns a random English word.", "apis": [["Random Word Getter", "Fetches a random word."]]}, "Text to speech": {"tool_desc": "A text to speech endpoint to steam output", "apis": [["get language", "get list of available language for text to speech"], ["send text to speech stream", "text to speech \n\ntext = the text you want to speak\n\nlanguage = default en , get the list of supported language for get /tts/speech/lang\n\n\n```\nconsole.log(response);\n        audio.pause();\n        audio.src = URL.createObjectURL(response.data);\n        audio.play();\n\n```"]]}, "Domain Checker API": {"tool_desc": "The Domain Checker API allows users to retrieve detailed information about a specific domain name.", "apis": [["Checker", "Checks the domain Details"]]}, "DateClock": {"tool_desc": "Complete Converter Date Report also Between, Birthday and many more!", "apis": [["Convert to Islamic / (Hijri) (Hijriah)", "Convert date to Islamic or (Hijri) (Hijriah)"], ["Between Checker", "Check if given date is between two dates"], ["Birthday", "Return complete a birthday detail"], ["Date  Converter Timezone", "Simply Date  Converter Timezone to complete response report"]]}, "Temp Email": {"tool_desc": "The Temp mail API provides users with the ability to generate temporary, disposable email addresses swiftly and securely.", "apis": [["List Domains", "List of Domains for email"], ["Fetch Message", "Get message of the provided message ID"]]}, "Jibber Jabber": {"tool_desc": "Dummy Text Generator", "apis": [["/sentence", "Returns a single random **sentence**"], ["/paragraph", "Returns a **paragraph** with random sentences"], ["/sentences", "Returns some single random **sentence**"], ["/word", "Returns a random **word**"]]}, "QRickit QR Code QReator": {"tool_desc": "Dynamically generate QR Codes  (URL, Calendar Events, Contact, Text, Email, etc,) for integration in your own website, applications, and other business or personal usage.", "apis": [["Generate a QR Code image", "Format of GET request to generate QR Code image. See documentation at https://qrickit.com/qrickit_apps/qrickit_api.php"]]}, "languagelayer": {"tool_desc": "Free, powerful language detection JSON REST API for 173 world languages, dialects and accents.", "apis": [["/batch", "API endpoint used to perform batch language detection"], ["/detect", "API endpoint used to perform standard (single) language detection"]]}, "QR Code API_v67": {"tool_desc": "This API takes a URL or string and returns a QR code image", "apis": [["QR Code Image Copy", "This end point takes a 'GET' request with url / string as a parameter and returns QR code image."]]}, "Youtube Video Download Info": {"tool_desc": "Download YouTube Videos/MP4.", "apis": [["Get Video Info", "Provides the video download links and other relevant information in the JSON format."]]}, "QR-Scanner-Api": {"tool_desc": "Scan QR & Barcode images from files or URLs and return the equivalent QR-Text or Barcode-Number plus code format.", "apis": [["ScanImageUrl", "Scan image from URL and return QR text or Barcode number."]]}, "QR Decoder": {"tool_desc": "Decode QRCodes from an image or PDF.", "apis": [["QRDecoder", "Returns the QRCode message from an image or PDF file with embeded QR codes.\n\nFiles must be publicly accessible via the web and the src input parm expects a direct link to the file.  Html pages with embeded images or pdfs are not valid and will return empty."]]}, "KolektifAPI": {"tool_desc": "Python / Flask ile yaz\u0131lm\u0131\u015f REST API", "apis": [["Haber", "\u00abntv.com.tr\u00bb Son Dakika Haberleri Verileri"], ["Deprem", "\u00abafet.gen.tr\u00bb Son Depremler Verisi"], ["Akaryak\u0131t", "\u00abhaberler.com\u00bb G\u00fcncel Akaryak\u0131t Verileri"], ["D\u00f6viz", "\u00abaltinkaynak.com\u00bb G\u00fcncel D\u00f6viz Verileri"]]}, "IP ECHO": {"tool_desc": "echo your ip", "apis": [["text", "Response your real IP with plain format"], ["json", "Response your real IP with json format"]]}, "World Clock": {"tool_desc": "An API to get the current time.", "apis": [["Coordinated Universal Time", "Gets the coordinated universal time"], ["Get Current Time (within a Timezone)", "Get the Current Time for EST"], ["JSONP", "Get current timezone (JSONP)"]]}, "CORS Proxy_v2": {"tool_desc": "\ud83d\ude80 Solve CORS errors effortlessly!", "apis": [["index__get", "Welcome to CORS Proxy"]]}, "free url shortener": {"tool_desc": "Ulvis.net offers a powerful API to interact with other sites.", "apis": [["http://ulvis.net/API/write/get", "shorten url  url= url-wan't shorten &custom= your custom name& private= if wan't be public them 0 if private them 1http://ulvis.net/api/write/post"]]}, "QR Code API_v6": {"tool_desc": "This API is a QR code generation service built using Flask.", "apis": [["QR Code Image Generator", "This API is a QR code generation service built using Flask. It accepts a 'url' parameter in the GET request and returns a PNG image of the generated QR code. The QR code can be saved as an attachment with the filename 'qr_code.png'. The API runs on port 4000 and can be easily integrated into any application or website that needs to generate QR codes."]]}, "MyPEAK Calculator API": {"tool_desc": "Basic calculator", "apis": [["GET - Payment Calculator", "Calculate payments and schedules"]]}, "Calendar Converter": {"tool_desc": "Converts dates between different civil, religious, and historical calendars", "apis": [["Convert Date", "# Converts a date to a specified calendar."]]}, "twitter": {"tool_desc": "Download  Twitter videos", "apis": [["hls", "hls => mp4 converter"]]}, "QR Code API_v92": {"tool_desc": "This is an API that converts a URL into a QR code image", "apis": [["QR Code", "GET request to /qr-code with a url query parameter"]]}, "USA Jobs for IT": {"tool_desc": "An USA Jobs for IT API from different sources", "apis": [["Full Stack Jobs", "Full Stack Jobs Api"], ["Data Engineer Jobs", "Data Engineer Jobs Api"], ["Business Intelligence Jobs", "Business Intelligence Jobs Api"], ["Data Analyst Jobs", "Data Analyst Jobs Api"], ["Python Jobs", "API for Python Jobs"]]}, "Variable Size QR Code API": {"tool_desc": "This api takes a URL and the desired size of the QR Code and returns the QR Code image.", "apis": [["QR Code Image", "this end point takes a 'GET' request with url / string and an size / integer as parameters and returns a QR Code image of the desired size."]]}, "Perf monitor metrics": {"tool_desc": "Real-Time Performance Monitoring API for TI Systems", "apis": [["Performance monitor metrics", "- Retrieve real-time CPU usage in percentage (%).\n- Monitor memory utilization and get the percentage of memory in use.\n- Track network latency to assess network performance.\n- Access system bottlenecks information to identify performance constraints.\n- Easy integration into your application or system using the RESTful API.\n- Accelerate troubleshooting and performance optimization of TI systems."]]}, "giflayer": {"tool_desc": "Free, powerful Video to GIF API for developers and businesses", "apis": [["/capture", "Main API endpoint used to generate GIFs"]]}, "dimondevosint": {"tool_desc": "It is an API for mobile phone number OSINT.", "apis": [["Photo from given number", "It searches for a photo in the internet about the phone number, if it matches, it returns the photo in bytes."], ["Phone number information.", "It gives you some public information about the phone number."], ["INN general director", "Returns the general director of a company by INN nymber."]]}, "TIN Check": {"tool_desc": "TIN-check.com is a validation service for TIN numbers all around the world.", "apis": [["TIN Lookup", "Through this operation you know if the tin number is valid or not and more information"], ["TIN Check", "Through this operation you know if the tin number is valid or not"]]}, "free QR Code Generator": {"tool_desc": "", "apis": [["Generate QR Code", "Turn Word to QR Code with just one request"]]}, "YTConvert": {"tool_desc": "Download mp4 and mp3 from youtube", "apis": [["Url Download", "Gets a url to download the file"], ["Search", "Search by content or URL"]]}, "Referral Domain checker API": {"tool_desc": "Get Referral Domains of a website, backlink counts , ranks etc", "apis": [["Get Referral Domains", "Get Referral Domains List"]]}, "QR Code API updated": {"tool_desc": "QR Code API updated version for any website\nmore to come in such format", "apis": [["qr endpoint", "qr endpoint to  surf to any website"]]}, "Github Repos": {"tool_desc": "An API to retrieve github info about repositories of an user", "apis": [["Search", "Search for public repositories of an user"]]}, "Website Screenshot or Thumbnail": {"tool_desc": "Take pixel-perfect screenshots or thumbnails of any website.", "apis": [["/capture", "Capture screenshot from any URL or Raw HTML. POST method is also available. Please take a look https://restpack.io/screenshot/docs"]]}, "SimpleEcho": {"tool_desc": "Return the request as the response.", "apis": [["Echo", "Send a GET request to the Echo"]]}, "Domain Checker": {"tool_desc": "The Domain Checker API allows users to quickly and easily check the validity, availability, expiration, and DNS settings of a given domain name.", "apis": [["DNS", "Checks the domain DNS records"], ["Keyword Search", "Query up to 333 TLDs to check registered domains"], ["Whois", "Checks the domain Whois Details"]]}, "Unfurl API written in go": {"tool_desc": "Simplest API to unfurl URL descriptions, titles, images, and products, from all sites without being blocked.", "apis": [["Unfurl", "Send a url as a url param to our API to preview it"]]}, "Email Checkup": {"tool_desc": "Provide email validation and email existence.", "apis": [["/email/exist", "help you to check if email really exist."], ["/email/format", "Help you to validate email format."]]}, "Judge0 CE": {"tool_desc": "The most advanced open-source online code execution system in the world.", "apis": [["Get Configuration", "Configuration information gives you detailed information about the configuration of Judge0."]]}, "QRCode": {"tool_desc": "Customisable QR Codes.", "apis": [["List image", "This endpoint allows you to list single image hosted in the LinQR storage."], ["List all images", "This endpoint allows you to list images hosted in the LinQR storage. If there are no images hosted, an empty array is returned."]]}, "Email Validator": {"tool_desc": "This API is a fast and robust email address syntax and deliverability validator.", "apis": [["/email-validator/validate", "Validate email address. Key features:\n1. Checks that an email address has the correct syntax\n1. Gives friendly error messages when validation fails.\n1. Checks deliverability of an email address.\n1. Supports internationalized domain names and \n1. Normalizes email addresses"], ["/email-validator/health", "Return the health status of the API. Returns current UTC time."]]}, "Subdomain Scan": {"tool_desc": "Enter a domain here and we'll check all subdomains  and return it in a JSON format for you.", "apis": [["Get Subdomains", "Enter a domain here and we'll check and return all subdomains in a JSON format for you."]]}, "Text To Speech API": {"tool_desc": "This API takes text and languages code and return speech voice", "apis": [["TTS", "takes text & languages code  and returns as **.mp3** format"]]}, "otp-2fa": {"tool_desc": "OTP API (One-Time Password Application Programming Interface) is a service that allows developers to integrate OTP functionality into their applications, websites or systems.", "apis": [["/createSecret", "[Step 0] Create new secret"]]}, "Placeholder text API for your application": {"tool_desc": "Use this api in your application wherever you need placeholder text", "apis": [["Generate placeholder text", "Generates placeholder text based on \"length\" query param"]]}, "Bulk Domain Check": {"tool_desc": "Bulk Domain Availability Check.", "apis": [["/domain_check", "Returns domain availability status"]]}, "Scanova QR Code": {"tool_desc": "Scanova QR Code API lets you generate custom-designed Branded QR Codes in bulk programmatically in your own mobile application or information system within few minutes.", "apis": [["SMS QR Code", "This request returns a Static QR Code (standard or custom-designed) encoded with the recipient phone number and pre-loaded message. When scanned, the QR Code will prompt the scanning device to 'send SMS' pre-loaded with the recipient number and message."], ["Email QR Code", "This request returns a Static QR Code (standard or custom-designed) encoded with the email address. When scanned, the QR Code will prompt the user to 'send an email' to the specified email address."], ["Phone Call QR Code", "This request returns a Static QR Code (standard or custom-designed) encoded with the phone number. When scanned, the QR Code will prompt the scanning device to 'dial the number'."], ["Google Map QR Code", "This request returns a Static QR Code (standard or custom-designed) encoded with a Google Maps URL linked to specified map coordinates. When scanned, the QR Code prompts the scanning device to open the URL in a mobile browser or Google Maps mobile application (if installed)"], ["Wifi QR Code", "This request returns a Static QR Code (standard or custom-designed) encoded with WiFi network details. When scanned, the QR Code prompts the scanning device to 'Join the Network'. Note that this QR Code works only for Android devices. iPhones do not allow automatic joining of WiFi networks and will display network details as text."], ["Text QR Code", "This request returns a Static QR Code (standard or custom-designed) encoded with specified text. When scanned, the QR Code prompts the scanning device to display the text."], ["V-Card QR Code", "This request returns a Static QR Code (standard or custom-designed) encoded with specified contact information. When scanned, the QR Code prompts the scanning device to 'Save as Contact'."], ["Website URL QR Code", "This request returns a Static QR Code (standard or custom-designed) encoded with a specified URL"]]}}, "Cybersecurity": {"Token Scanner Multichain | Honeypot Checker Multichain": {"tool_desc": "Token scanner and honeypot checker multichain.", "apis": [["Get Chain Id", "Returns chainId from chain name."]]}, "XSS Shield": {"tool_desc": "The XSS Shield API provides a realtime cross-site scripting (XSS) detection service that scans input data for suspicious characters and prevents XSS attacks.", "apis": [["GET Detect", "This endpoint detects and prevents XSS attacks in input data sent via query parameters."]]}, "NetDetective": {"tool_desc": "NetDetective is an easy-to-use API that provides information about an IP address, including, but not limited to, whether it's known for spam, brute-force attacks, bot-nets, VPN endpoints, data center endpoints, and more.", "apis": [["/query", "Query information about an IP address."]]}, "Greip": {"tool_desc": "Deploy AI-Powered modules to prevent payment fraud", "apis": [["/validatePhone", "This method can be used as an extra-layer of your system for validating phone numbers."], ["/IPLookup", "Returns the geolocation data of a specific IP Address."], ["/Country", "Country endpoint: Returns the information of a specific country by passing the `countrCode`."], ["/validateEmail", "This method can be used as an extra-layer of your system for validating email addresses."]]}, "WebLasso": {"tool_desc": "Scan the web for a diverse range of data including subdomains, IP Addresses, web technologies and emails!", "apis": [["Get Scan Status", "Check the status of a scan (ongoing/completed) using a scan ID."], ["Get Callback URL Status", "Check if a callback URL is able to receive scan results (ensure that the callback URL accepts POST requests)."], ["Get Scan ID", "Run a scan against a target URL and receive a scan ID to obtain scan results or check scan status at a later time.\n\nProvide an optional callback URL to receive scan results automatically once the scan is completed (ensure that the callback URL accepts POST requests)"], ["Get Scan Results", "Obtain the scan results from a given scan ID."]]}}, "News_Media": {"Live world futbol news": {"tool_desc": "An API showing all the latest  world football news.", "apis": [["Get Individual News Source", "Get News about football news from a specific news resource."], ["Get All World Footbol news live", "This end point will return back all news about footbol."]]}, "Live Climate Change News_v2": {"tool_desc": "An API to get all the latest news on Climate Change around the world.", "apis": [["Get Individual news articles from News on Climate Change", "Get a news article from specific News resource on Climate Change."], ["Get All Climate Change News", "This endpoint will return all the news about Climate Change from all over the world."]]}, "Climate change_v31": {"tool_desc": "API showing climate events around the world", "apis": [["Get news source feeds", "Api showing news feedsa all over the planet"], ["World climate change", "Endpoint showing Climate changes all over the the world"]]}, "Philippine News": {"tool_desc": "An unofficial API to find the latest and top Philippine stories and news.", "apis": [["Latest News", "Get the latest news and stories from different sources"]]}, "Targeted Keyword trend": {"tool_desc": "Google Trends and Search count.", "apis": [["Keyword", "Returns \u201cMonthly Data\u201d and \u201cSearch count\u201d for a given keyword"]]}, "papercliff": {"tool_desc": "Papercliff looks at the world's largest news agencies, reads articles, identifies and shares keywords", "apis": [["Combinations", "Returns the 100 most popular combinations/triples of keywords with the corresponding number of news agencies and articles from which they have been cited"], ["Timeline", "Returns the 100 most recent articles and their keywords"], ["Overview", "Returns summary statistics about how many keywords have been found and how many articles and agencies papercliff looked at"], ["History", "Returns the number of articles published daily during the last week and the number of corresponding news agencies that created those articles"], ["Keywords", "Returns the 100 most popular keywords with the corresponding number of news agencies and articles from which they have been cited"]]}, "Climate News API_v2": {"tool_desc": "An API showing all the Climate change related news around the world.", "apis": [["Get All Climate Change Related News", "This endpoint will return all news about Climate change from all around the world."], ["Get Individual News Source news", "Get news about climate change from a specific newspaper."]]}, "News_v3": {"tool_desc": "News Scrapper", "apis": [["Articles", "Fetches articles from one specific newspaper"], ["Newspapers", "Lists the newspapers currently supported"]]}, "News Network": {"tool_desc": "Global network of news.", "apis": [["Get News", "Return list of news by selected region and category.\nVisit our [demo site](https://core-api.net/news/news.html)"], ["Search News", "Search news by given keyword.\nVisit our [demo site](https://core-api.net/news/news.html)"], ["Available Region List", "Return list of available regions."]]}, "Latest IPL News": {"tool_desc": "An API showing all the latest IPL News around the world.", "apis": [["Get Individual News Source News", "Get News about IPL from a specific news resource."], ["Get All IPL News", "This endpoint will return back all news about IPL from all over the world."]]}, "Climate Change API Tutorial": {"tool_desc": "An API showing all the latest Climate Change News around the world", "apis": [["Get Individual News Source News", "Get News about Climate Change from a specific news resource."], ["Get All Climate Change News", "This endpoint will return back all news about Climate Change from all over the world."]]}, "Goverlytics": {"tool_desc": "The Goverlytics API.", "apis": [["politicians", "fetch a list of politicians data"], ["politician/{goverlytics_id}", "Get 1 politician given their 'goverlytics_id'."]]}, "Movie Articles and News": {"tool_desc": "An API that shows you all the latest news happening in and around Hollywood.", "apis": [["Get Articles By Publisher", "Get articles by a specific publisher."], ["Get All Articles", "This endpoint will return all articles about movies from various publishers."]]}, "IMDb": {"tool_desc": "", "apis": [["title/get-sound-tracks", "Get sound tracks in specific title"], ["title/get-releases", "Get release information of the title"], ["title/get-all-images", "Get all available photos of the title"], ["title/get-charname-list", "Get characters information of the title"], ["title/v2/get-business", "Get business (Box Office) information of the title"], ["title/get-production-status", "Get production status of the title"], ["title/get-top-rated-tv-shows", "Get top rated 250 tv shows"], ["title/get-base", "Get base information of the title"], ["title/get-hero-with-promoted-video", "Get heroes information of the title"], ["title/get-awards-summary", "Get awards summary related to the title"], ["title/get-awards", "Get awards related to the title"], ["title/get-top-crew", "Get top crew information of the title"], ["title/get-plots", "Get plots information of the title"], ["title/v2/get-popular-movies-by-genre", "Get popular movies by genre"], ["title/get-versions", "Get versions information that supported"], ["title/get-full-credits", "Get full list of casts and crews relating to specific title"], ["title/get-top-cast", "Get id list of top cast to pass into /title/get-charname-list API"], ["title/get-top-stripe", "Get top stripe of the title"], ["title/get-details", "Get detail information of the title"], ["title/get-videos", "Get promoted, trailer video clips"], ["title/find", "Find title by whatever you are familiar with, such as : name of title, album, song, etc..."], ["title/v2/find", "Find title by whatever you are familiar with, such as : name of title, album, song, etc\u2026 with options and filters"], ["title/get-company-credits", "Get company credits related to a title"], ["title/get-synopses", "Get synopses information of the title"], ["actors/get-filmography-appearances", "Get filmography appearances of an actor, actress, etc..."], ["actors/get-all-images", "Get all images of actor or actress"], ["title/get-quotes", "Get quotes in specific title"], ["title/get-meta-data", "Get brief information of movies by their id"], ["title/get-filming-locations", "Get filming locations information"], ["title/get-images", "Get photo shots of the title"], ["title/auto-complete (Deprecated)", "Get auto complete suggestion for related title"], ["title/get-crazycredits", "Get crazycredits in specific title"], ["title/get-genres", "Get genres information of the title"], ["title/get-news", "Get news related to the title"], ["title/get-user-reviews", "Get user reviews of the title"], ["title/get-ratings", "Get ratings of the title"], ["auto-complete", "Get auto complete suggestion by term or phrase"], ["actors/get-awards-summary", "Get awards summary of actor or actress"], ["actors/get-awards", "Get awards of actor or actress"], ["actors/get-known-for", "Get known-for of actor or actress"], ["actors/get-bio", "Get biography of actor or actress"], ["title/get-business (Deprecated)", "Get business (Box Office) information of the title"], ["title/get-goofs", "Get goofs in specific title"], ["title/get-trivia", "Get trivia of title"], ["title/get-best-picture-winners", "Get best picture winners"], ["title/get-release-expectation-bundle", "Get release expectation of the title"], ["title/get-top-rated-movies", "Get top rated 250 movies"], ["title/get-video-playback", "Get promoted, trailer video clips"], ["title/get-seasons", "Get all seasons series information of the title"], ["title/get-metacritic", "Get metacritic information of the title"], ["title/get-coming-soon-movies", "Get coming soon movies"], ["title/get-coming-soon-tv-shows", "Get coming soon TV shows"], ["title/get-parental-guide", "Get parent guide information for specific movie"], ["title/get-taglines", "Get taglines information of the title"], ["title/get-most-popular-tv-shows", "Get most popular TV shows"], ["title/get-most-popular-movies", "Get most popular movies"], ["title/get-overview-details", "Get overview information of the title"], ["title/get-popular-movies-by-genre (Deprecated)", "Get popular movies by genre\n* This endpoints is deprecated, use .../title/v2/get-popular-movies-by-genre instead"], ["actors/get-interesting-jobs", "Get interesting jobs of actor or actress"], ["actors/get-all-videos", "Get all videos of actor or actress"], ["actors/get-all-news", "Get all news of actor or actress"], ["actors/get-all-filmography", "Get all filmography of actor or actress"], ["actors/list-born-today", "List all actors and actresses by day and month"], ["actors/list-most-popular-celebs", "Get most popular movies"]]}, "ALL Crypto News Feed": {"tool_desc": "All news about crypto.", "apis": [["Get ALL Feed", "Returns all feed.\nTweets\nBlogs\nBinance\nUsGov"]]}, "Climate Change API_v5": {"tool_desc": "An API showing all the latest climate change news around the world", "apis": [["Get Specific Climate Change News", "This endpoint will return back specific news about climate change from all over the world"], ["Get All Climate Change News", "This endpoint will return back all news about climate change from all over the world"]]}, "Reuters Business and Financial News": {"tool_desc": "Our Financial News API is a comprehensive and accurate data source of financial news from Reuters.", "apis": [["Get Article by Category ID and Article Date", "Get Article by category id and article date\nex :/api/v1/category-id-8/article-date-11-04-2021\n\ncategory - category id from Category endpoint\ndate-{day-month-year}"]]}, "East China News": {"tool_desc": "Api that filters through notable news networks for China, Japan, and Korea news", "apis": [["Filter for conflict", "Filters for conflict in all three regions"], ["filter for diease", "Filters for all diseases in all newspaper sources"], ["China and US relation filter", "Filters all news for US and China"], ["Filter Korean news", "Filters Korean news from all sources"], ["Japan filter for news", "Filters Japan news from all sources"], ["China filter for all news", "Filters all Chinese news from all sources"], ["newspaper company filter for news", "filters based on newspaper company"], ["Get All China, Japan ,Korea news", "This endpoint returns news about China, Japan, and Korean news from popular news networks"]]}, "Covid news_v2": {"tool_desc": "News about Covid 19 from different sources including WHO, guardian, CNN, etc", "apis": [["Get news from single source", "Get news related to Covid 19 news from a single source which are WHO, CNN, the guardian, etc"], ["News from All sources", "Get news related to covid 19 from **All sources**"]]}, "Climate Change Live_v27": {"tool_desc": "An API showing all the latest climate change news around the world", "apis": [["Home page", "This is the API's home page"], ["Get individual news source news", "This API gets news from individual news source"], ["Get all climate change news", "This endpoint will return back all news about Climate Change from all over the world."]]}, "Crypto News Live_v2": {"tool_desc": "A Crypto News API pulling data from around the world about the latest news in crypto", "apis": [["Get Individual News Sources", "Get Crypto News from a Specific Source"], ["Get All Crypto News", "Gets all crypto news from the currently configured websites"]]}, "Google News": {"tool_desc": "Provide real-time news and articles sourced from Google News.", "apis": [["Supported languages and regions", "This endpoint is used to retrieve a list of supported languages and regions."], ["Suggest", "This endpoint is used to get autocomplete suggestions or query predictions as a user types a search query. The endpoint requires the **keyword** parameter, which represents the partial text entered by the user. You can send a request with the partial text, and the request will generate a JSON response containing a list of relevant autocomplete suggestions for the search query."], ["Search", "This endpoint is used to search for news from Google News based on keywords. The mandatory parameter to be used is **keyword** to specify the search term"], ["World", "This endpoint is used to get world news from Google News. The optional parameter that can be used is \"lr\" to determine the region"], ["Sport", "This endpoint is used to get sport news from Google News."], ["Science", "This endpoint is used to get science news from Google News."], ["Health", "This endpoint is used to get health  news from Google News."], ["Entertainment", "This endpoint is used to get entertainment news from Google News."], ["Business", "This endpoint is used to get business news from Google News."], ["Latest", "This endpoint is used to get the latest news from Google News."], ["Technology", "This endpoint is used to get technology news from Google News."]]}, "climate-change-api_v2": {"tool_desc": "Get links about the climate changes", "apis": [["GET Individual News Source", "Get climate news from specific news source"], ["GET all climate change news", "This endpoint returns back all news about the climate changes all over the world"]]}, "Kubric: The Comprehensive Movie News API": {"tool_desc": "Stay up-to-date with Kubric, your ultimate movie news API.", "apis": [["Sources", "Returns sources used for articles based of current tier."], ["Advanced Search", "The `/news/advanced/search` endpoint allows you to search for movie news articles by applying various filters such as date, source, type, and sentiment. It offers a versatile and customizable way to explore the latest news and updates in the movie industry."], ["Basic Search", "The `/news/basic/search` endpoint allows you to search for movie news articles."], ["Trending", "The `/trending` endpoint is a powerful feature of the Kubric Movie News API, designed to provide users with the most recent and popular movie news articles. This endpoint returns the top 50 trending movie articles, ensuring users stay up-to-date with the latest and most engaging content from the world of cinema."], ["News", "The `/news` endpoint provides you with the most recent movie news articles, keeping you informed about the latest updates, events, and releases in the film industry. This endpoint offers a quick and easy way to stay up-to-date with the latest happenings in the movie world without any additional filters or search parameters."]]}, "Climate Change Live_v3": {"tool_desc": "An API shows all the latest climate change news around the world.", "apis": [["Get Indivisual News Source News", "Get News about climate change from a specific news resource."], ["Get All Climate Change News", "This endpoint will return back  all news about the climate change from all over world."]]}, "Movies details": {"tool_desc": "we will provide movies details", "apis": [["Find by title", "We will provide movies details by title"]]}, "Climate Change News_v5": {"tool_desc": "An API showing latest Climate Change News around the world", "apis": [["Get News From Single News Resource", "With this endpoint you can get news from one specific news resource"], ["All Climate Change News", "With this endpoint you can get all climate change news"]]}, "AI News - Global": {"tool_desc": "Global News produced by AI", "apis": [["Available Regions", "Get all available regions."], ["Get News", "Get News by region."]]}, "Energy Price News": {"tool_desc": "Tracking multiple news sources for articles about energy prices", "apis": [["Articles by Single Source", "Narrow down to a single news outlet"], ["Sources by Region", "See a group of sources from a single region."], ["List of Sources", "See which regions we have news sources from."], ["List of Regions", "See which regions we have news sources from."], ["All articles", "Get all available articles from multiple sources"]]}, "pollution-news-api": {"tool_desc": "An API service returning news articles about pollution in african countries.", "apis": [["Get news from a specific source", "This Endpoint would return news on pollution in african countries from a specific news source"], ["Get All News on Pollution", "This endpoint would return all news on pollution in african countries available in our database."]]}, "article-api": {"tool_desc": "Normalize article from a url", "apis": [["/extract", "get readable content and metadata of a url"]]}, "Online Movie Database": {"tool_desc": "This API helps to query for all information about films, actors, characters,etc...", "apis": [["title/get-crazycredits", "Get crazycredits in specific title"], ["title/get-all-images", "Get all available photos of the title"], ["title/get-images", "Get photo shots of the title"], ["title/get-best-picture-winners", "Get best picture winners"], ["title/get-news", "Get news related to the title"], ["title/get-release-expectation-bundle", "Get release expectation of the title"], ["title/v2/get-business", "Get business (Box Office) information of the title"], ["title/get-top-rated-tv-shows", "Get top rated 250 tv shows"], ["title/get-base", "Get base information of the title"], ["title/v2/get-popular-movies-by-genre", "Get popular movies by genre"], ["title/get-top-crew", "Get top crew information of the title"], ["title/get-plots", "Get plots information of the title"], ["title/get-coming-soon-tv-shows", "Get coming soon TV shows"], ["title/get-most-popular-tv-shows", "Get most popular TV shows"], ["title/get-versions", "Get versions information that supported"], ["title/get-overview-details", "Get overview information of the title"], ["title/get-full-credits", "Get full list of casts and crews relating to specific title"], ["title/get-top-stripe", "Get top stripe of the title"], ["title/get-top-cast", "Get id list of top cast to pass into /title/get-charname-list endpoint"], ["title/get-details", "Get detail information of the title"], ["title/v2/find", "Find title by whatever you are familiar with, such as : name of title, album, song, etc\u2026 with options and filters"], ["title/get-videos", "Get promoted, trailer video clips"], ["title/find", "Find title by whatever you are familiar with, such as : name of title, album, song, etc\u2026"], ["title/get-business (Deprecated)", "Get business (Box Office) information of the title\n* This endpoint is deprecated. You need to use .../title/v2/get-business endpoint instead"], ["title/get-goofs", "Get goofs in specific title"], ["title/get-sound-tracks", "Get sound tracks in specific title"], ["title/get-quotes", "Get quotes in specific title"], ["title/get-trivia", "Get trivia of title"], ["title/get-releases", "Get release information of the title"], ["title/get-meta-data", "Get brief information of movies by their id"], ["title/get-filming-locations", "Get filming locations information"], ["title/get-charname-list", "Get characters information of the title"], ["title/get-genres", "Get genres information of the title"], ["title/get-synopses", "Get synopses information of the title"], ["title/get-production-status", "Get production status of the title"], ["title/get-top-rated-movies", "Get top rated 250 movies"], ["title/get-video-playback", "Get promoted, trailer video clips"], ["title/get-seasons", "Get all seasons series information of the title"], ["title/get-awards-summary", "Get awards summary related to the title"], ["title/get-user-reviews", "Get user reviews of the title"], ["title/get-hero-with-promoted-video", "Get heroes information of the title"], ["title/get-awards", "Get awards related to the title"], ["title/get-metacritic", "Get metacritic information of the title"], ["title/get-ratings", "Get ratings of the title"], ["title/get-coming-soon-movies", "Get coming soon movies"], ["title/get-taglines", "Get taglines information of the title"], ["title/get-parental-guide", "Get parent guide information for specific movie"], ["title/get-most-popular-movies", "Get most popular movies"], ["actors/get-awards", "Get awards of actor or actress"], ["actors/list-most-popular-celebs", "Get most popular movies"], ["actors/list-born-today", "List all actors and actresses by day and month"], ["actors/get-filmography-appearances", "Get filmography appearances of an actor, actress, etc..."], ["actors/get-known-for", "Get known-for of actor or actress"], ["actors/get-interesting-jobs", "Get interesting jobs of actor or actress"], ["actors/get-awards-summary", "Get awards summary of actor or actress"], ["actors/get-all-videos", "Get all videos of actor or actress"], ["actors/get-all-news", "Get all news of actor or actress"], ["actors/get-all-images", "Get all images of actor or actress"], ["actors/get-all-filmography", "Get all filmography of actor or actress"], ["actors/get-bio", "Get biography of actor or actress"], ["auto-complete", "Get auto complete suggestion by term or phrase"]]}, "AI News_v2": {"tool_desc": "This handy tool allows you to access the latest news about artificial intelligence from around the world, all in one place.", "apis": [["Get Individual Source News", "Gets News about Artificial Intelligence from a specific news resource."], ["Get all AI News", "This endpoint will return back all news about artificial intelligence around the world"]]}, "Climate Change API_v3": {"tool_desc": "An API showing all the latest climate change news around the world.", "apis": [["Get Individual News Sources", "Get climate change news from individual news sources."], ["Get All Climate Change News", "This endpoint will return all news about climate change from top news sites."]]}, "NFT API News": {"tool_desc": "This NFT API will keep you up to date on the NFT space.", "apis": [["NFT News", "This is where you get all the up to date NFT news. This is a live feed and is updated daily."], ["Welcome", "This is the welcome page."]]}, "Pakistan News API": {"tool_desc": "This API will give you latest news only about Pakistan politics.", "apis": [["Get Pakistan News", "All the latest news about Pakistan"]]}, "Klimawandel Live": {"tool_desc": "Diese API zeigt die aktuellsten Klimawandel-News von diversen Schweizer Medien.", "apis": [["Hole News-Beitr\u00e4ge von einem spezifischen Medium", "Dieser Endpunkt bringt alle News-Beitr\u00e4ge \u00fcber Klimawandel von einem spezifischen Medium."], ["Hole alle News-Beitr\u00e4ge zu Klimawandel", "Dieser Endpunkt bringt alle News-Beitr\u00e4ge \u00fcber Klimawandel von diversen Schweizer Medien."]]}, "Live Climate Change_v2": {"tool_desc": "An API showing all the latest Climate Change news around the world", "apis": [["Get Individual News from Source News", "Get news about climate change from a specific source news"], ["Get All Climate Change News", "This endpoint will return news from climate change from all over the world"]]}, "India Today Unofficial": {"tool_desc": "The India Today Unofficial API is a third-party web service that provides access to news content from the India Today platform.", "apis": [["Tag Search", "Get news as per the tag"], ["Get News", "All Latest news from India Today Platform"]]}, "Cote Ivoire news": {"tool_desc": "Toute l'actualit\u00e9 instantan\u00e9e politique, \u00e9conomique, sportive, culturelle, soci\u00e9tale de la C\u00f4te d'Ivoire, issues plusieurs sources.", "apis": [["Get news", "Cet endpoint produit plusieurs lignes d'information que vous pouvez directement utiliser dans votre app ou votre site web."]]}, "Crypto News_v2": {"tool_desc": "Shows recent news articles in the cryptocurrency market.", "apis": [["Get Individual News Source", "Get news about crypto from a specific news source. There are 18 news sources to choose from cryptonews, coindesk, crypto.news, yahoo, fxstreet, cointelegraph, businessinsider, cryptopotato, ambcrypto, cryptonewsline, cryptoglobe, coingecko, cryptoslate, bitcoinist, forbes, nulltx, blockonomi, and coinspeaker."], ["General search", "Can take a single word search that will return any articles with the given keyword."], ["Specific Article Keyword Search", "Takes a title and keyword that will then return any articles from a specific news source."], ["Get All Crypto News", "This endpoint will return all news with crypto and bitcoin from many different websites across the internet."]]}, "Newscatcher": {"tool_desc": "API to find news articles by any topic, country, language, website, or keyword", "apis": [["/v1/aggregation", "Searches as `/v1/search` but returns the articles count per hour or day instead of articles' data"], ["/v1/latest_headlines", "Always returns the latest 100 articles for any `topic`, `country`, `lang`, or any of those combined"], ["/v1/search_free", "**Up to 100 articles per 1 API call even with free Basic Plan.**\nFree search. Only the language filter is allowed."], ["/v1/search", "Highly customizable search through our database. All filters and sorting options are allowed."], ["/v1/search_enterprise", "Highly customizable search through our database. All filters and sorting options are allowed."], ["/v1/sources", "Returns a list of supported news websites for any topic, country, language, or any of those combined"]]}, "Moka News": {"tool_desc": "A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )", "apis": [["Sources List (New)", "Use this endpoint to get the list of all source."], ["Filter { By Category & Source }  (New)", "Use this endpoint to get the recent 50 news items from a specific category from Categories\nlist & a specific source from Sources list."], ["By Source (New)", "Use this endpoint to get the recent 50 news items from a specific source from Sources list"], ["Recent 100", "GET the recent  100 news"], ["by Category", "get the recent 50 news by category , EX :   Sport , World  .... etc"], ["categories", "get the list of Moka News categories ( important if you want later to get data related to a specific category)."], ["Recent 50", "GET the recent 50 news"]]}, "dev-to-api": {"tool_desc": "API that fetches the latest blogs from dev.to website", "apis": [["Get the top articles of all time", "It returns the top articles of all time from dev.to website."], ["Get all the year's top articles", "It return year's top articles from dev.to website"], ["Get the month's top articles", "It returns the month's top articles from dev.to website."], ["Get all the top articles of the week by default", "It returns all the week's top articles"], ["Get all the latest articles", "It returns all the latest articles present in the dev.to website."], ["Get all the relevant articles", "It returns all the relevant articles from dev.to website."]]}, "Google News API": {"tool_desc": "By using the Google News API, which is a straightforward REST API, you may look through over 1,000,000 news sources, both current and archived.", "apis": [["Get articles", "Get, filter, smart search google news articles."]]}, "US Presidential Election": {"tool_desc": "API for US Presidential Election results, by state (from 1976-) and county (eventually, from 2000-)", "apis": [["osay", "Returns JSON block of results for One State, All Years (OSAY), for the specified US Presidential Election year (i.e., Illinois)."], ["osoy", "Returns JSON block of results for One State, One Year (OSOY), for the specified US Presidential Election year (i.e., Illinois/2008)."], ["asoy", "Returns JSON block of results for All States, One Year (ASOY), for the specified US Presidential Election year (i.e., 2008)."]]}, "NewsData": {"tool_desc": "Best News API To Search And Collect Worldwide News", "apis": [["sources", "News sources endpoint provides access to the subsets of news publishers that the latest news is available from.\n\nIt's mainly a convenience endpoint that you can use to keep track of the publishers available on the API, and you can pipe it straight through to your users"], ["news", "The latest news endpoint provides access to the latest and breaking news for a country, for a specific category in a country, or for a single or multiple domains. The news articles are sorted by the publish date.\n\nRetrieving the latest news allows you to build experience such as showcasing the latest news, breaking news tickers and analyzing News to better understand their content."], ["archive", "The news archive endpoint provides access to the old news data for a country, for a specific category in a country, or for a single or multiple domains.\n\nRetrieving a piece of old news allows you to get the past news data for research and analysis purposes."]]}, "Coronavirus Smartable": {"tool_desc": "The coronavirus Stats and News API offers the latest and historic COVID-19 stats and news information per country or state.", "apis": [["GetNews", "Get the latest coronavirus news for the globe or your selected country or state."], ["GetStats", "Get the latest and historic coronavirus stats data (confirmed cases, deaths and recovered cases) for the globe or your selected country or state."]]}, "IEEE Spectrum API": {"tool_desc": "The IEEE Spectrum News API is a simple HTTP-based API that allows developers and students to access the latest news and articles from the IEEE Spectrum website as well as integrate them as data into their own websites web applications or mobile apps.", "apis": [["Get the latest 30 News from IEEE Spectrum", "This endpoint will return back the latest 30 news from IEEE Spectrum website as JSON objects with 6 data elements. These will be the Title, URL, DatePublished, Section, Image source and how much time it takes to read the article."]]}, "Global Recession Live": {"tool_desc": "An API showing all the latest recession news around the world, collected from The New York Times, The Guardian, World Economic Forum, The Economist, AP News, Reuters, and Politico.", "apis": [["Get Specific News Articles By Publication", "This endpoint will return the latest articles from a specific publication."], ["Get All Global Recession News", "This endpoint will return the latest articles from 7 publications about worldwide recession news."]]}, "Instant Cameroon News": {"tool_desc": "Instantly provide the latest news and the latest information on Cameroon.", "apis": [["Retrieve data", "Endpoint, which you use to retrieve the data you need. This endpoint can accept some parameters like page, search key and data range"], ["Home page", "Home and Welcome page that introduces the API"]]}, "Green Gold": {"tool_desc": "An API aggregating news articles related to green technology, stocks, start-ups, and trends.", "apis": [["specific publication articles", "Gets news articles from specific publications"], ["all articles", "Endpoint to gather all articles from all listed publications detailed in API"]]}, "Arabic news API": {"tool_desc": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya.", "apis": [["CNN Arabic", "\u0645\u0633\u0627\u0631 \u064a\u0633\u062a\u0631\u062c\u0639 \u062c\u0645\u064a\u0639 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0633\u064a \u0627\u0646 \u0627\u0646 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629"], ["Hibapress", "\u0645\u0633\u0627\u0631 \u064a\u0633\u062a\u0631\u062c\u0639 \u0627\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0647\u0628\u0629 \u0628\u0631\u064a\u0633"], ["Youm7 - \u0627\u0644\u064a\u0648\u0645 \u0627\u0644\u0633\u0627\u0628\u0639", "\u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u0627\u0631 \u064a\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u062c\u0645\u064a\u0639 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0627\u0644\u064a\u0648\u0645 \u0627\u0644\u0633\u0627\u0628\u0639 \u0627\u0644\u0645\u0635\u0631\u064a"], ["France24 Arabic", "\u0645\u0633\u0627\u0631 \u064a\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0641\u0631\u0627\u0646\u0633 24 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629"], ["Alarabiya - \u0627\u0644\u0639\u0631\u0628\u064a\u0629", "\u0645\u0633\u0627\u0631 \u064a\u0633\u062a\u0631\u062c\u0639 \u0627\u062e\u0631 \u0627\u0644\u0627\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0646\u062a"], ["BBC Arabic", "\u0645\u0633\u0627\u0631 \u064a\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u062e\u0631 \u0627\u0644\u0627\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0628\u064a \u0628\u064a \u0633\u064a \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629"], ["RT Arabic", "\u0645\u0633\u0627\u0631 \u064a\u0633\u062a\u0631\u062c\u0639 \u0627\u062e\u0631 \u0627\u0644\u0627\u062e\u0628\u0627\u0631 \u0627\u0644\u0645\u0636\u0627\u0641\u0629 \u0627\u0644\u0649 \u0645\u0648\u0642\u0639 \u0631\u0648\u0633\u064a\u0627 \u0627\u0644\u064a\u0648\u0645"], ["Aljazeera", "\u0645\u0633\u0627\u0631 \u064a\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0627\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0627\u0644\u062c\u0632\u064a\u0631\u0629"], ["Sky news Arabic", "\u0645\u0633\u0627\u0631 \u064a\u0633\u062a\u0631\u062c\u0639 \u0627\u062e\u0631 \u0627\u0644\u0627\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0633\u0643\u0627\u064a \u0646\u064a\u0648\u0632 \u0639\u0631\u0628\u064a"]]}, "BizToc": {"tool_desc": "Official BizToc.com API \u2014 The Web's most comprehensive hub for business & finance news.", "apis": [["Search", "Search across the entire news index from the last 14 days. Note that no search operators are supported via the API so all provided terms are considered required."], ["News / Latest", "Get the latest news stories in chronological order, across all pages. Akin to the /live view on biztoc.com."], ["News / Hot", "Get trending topic clusters and their respective stories, ordered by a proprietary popularity algorithm. Akin to the /hot view on biztoc.com. The topics and stories will change every 15 minutes."], ["Tag / News", "Get the latest news stories for the respective `{tag}` in chronological order."], ["Tags / Trending", "Get list of trending tags for `{page_id}`, sorted by popularity. The `{tag}` can be used for the **Tag/News** endpoint."], ["News / Latest / Page", "Get the latest news stories in chronological order, filtered by `{page_id}`."], ["Sources", "Lists all currently available `{source_id}`s. Equivalent of news blocks on biztoc.com. Note that certain proprietary blocks like Twitter or Stock Tickers are not available."], ["Pages", "Get the list of avilable `{page_id}`s. Akin to the /crypto and /media sites on biztoc.com. Required parameter for endpoints like **Tags/Trending**."], ["News / Source", "Get the latest news stories for the respective `{source_id}` in chronological order."]]}, "Crypto News_v3": {"tool_desc": "Get the latest crypto news incl.", "apis": [["Latest articles", "This endpoint provides the latest crypto news articles scraped from the web  incl. sentiment analysis ([textblob](https://textblob.readthedocs.io/en/dev/quickstart.html)) and keyword extraction ([Yake](http://yake.inesctec.pt/)). \n\nFor historical cryptonews data check out our open source dataset on [Kaggle](https://www.kaggle.com/oliviervha/crypto-news)\n\nParameters:\n- **[REQUIRED] subject** e.g. bitcoin, altcoin, ethereum, nft, blockchain, defi\n- **[OPTIONAL] last_n_hours**: Only news articles from the last *n* hours are provided (default: 24).\n- **[OPTIONAL] max_articles**: Maximum number of articles in response (default:100, max:100)\n- **[OPTIONAL] top_n_keywords**: Number of keywords to extract from article (default:10)\n\nCurrently news is scraped from:\n- [CryptoNews](cryptonews.com)\n- [CoinTelegraph](https://cointelegraph.com/)\n- [CryptoPotato](https://cryptopotato.com/)\n\nIf you have suggestions for more sources to add, please get in contact.\n\nMore information:\n- Get the [historical Crypto News dataset](https://www.kaggle.com/oliviervha/crypto-news) from Kaggle!\n- Click [here](https://app.swaggerhub.com/apis-docs/CryptoAdvisor/CryptoNews/1.0.0#/developers/cryptonews) for the API Swagger documentation.\n- Keep up-to-date with our [CryptoNews+ Twitter](https://twitter.com/cryptonews_plus) account!"], ["Latest tweets", "This endpoint provides the latest crypto news tweets incl. sentiment analysis ([textblob](https://textblob.readthedocs.io/en/dev/quickstart.html)) and keyword extraction ([Yake](http://yake.inesctec.pt/)). \n\nParameters:\n- **[OPTIONAL] last_n_hours**: Only tweets from the last *n* hours are provided (default: 12).\n- **[OPTIONAL] max_articles**: Maximum number of tweets in response (default:100, max:100)\n- **[OPTIONAL] top_n_keywords**: Number of keywords to extract form tweet (default:10)\n\nCurrently, we make use of the following sources:\n- [@BTCTN](https://twitter.com/BTCTN) \n- [@CryptoBoomNews](https://twitter.com/CryptoBoomNews)\n- [@cryptocom](https://twitter.com/cryptocom)\n- [@Crypto_Potato](https://twitter.com/crypto_potato)\n\nIf you have any suggestions for twitter accounts to add, please get in touch."]]}, "Webit News Search": {"tool_desc": "40+ Languages News Search, Trending articles feed.", "apis": [["Trending", "Get a continuously updated, rich feed of articles finely picked by a sophisticated A.I.\n\nTry it live at: https://webit.re/services/internet-search/news-search-api/tryout"], ["Search", "Search in a continuously updated database containing millions of articles finely crawled minute by minute from sources selected by a sophisticated A.I.\n\nTry it live at: https://webit.re/services/internet-search/news-search-api/tryout"]]}, "The Onion Api": {"tool_desc": "Pulls JSON data from the onion articles", "apis": [["Latest Headlines", "Get the latest news headlines from the The Onion."]]}, "Political Bias Database": {"tool_desc": "A database containing data allsides.com and mediabiasfactcheck.com.", "apis": [["fetch all mediabiasfactcheck.com data", "get request that returns entire mediabiasfactcheck.com database as a json."], ["fetch all allsides.com data", "get request that returns entire allsides.com database as a json."]]}, "Book Cover API": {"tool_desc": "Simple api to get book cover by isbn code.", "apis": [["getBookCoverUrl", "Get a book cover image url by isbn and language code"], ["getBookCoverImage", "Get a book cover image by isbn and language code"]]}, "PAC API": {"tool_desc": "An API for collecting political articles for Biden and Trump", "apis": [["Get Trump articles from specific newspaper", "This endpoint returns all articles for Trump from a specific newspaper"], ["Get Biden Articles from specific newspaper", "this endpoint returns all articles for Biden from a specified newspaper"], ["Get All Trump Articles", "This endpoint returns all newspaper artices for Trump"], ["Get all Biden Articles", "This end point will return all articles from each major newspaper for Biden"]]}, "Climate News Feed": {"tool_desc": "Climate Change news from the most trusted sources.", "apis": [["Article page", "Get articles in pages"], ["Get all publications", "Get the name of all publications this API delivers news from."], ["Get Articles", "Gets all articles.\n\nquery examples:\nsource = United Nations, Nasa Climate, The Guardian, Carbon Brief\nLimit = 100 (default)\nexclude=The Guardian"]]}, "OneLike": {"tool_desc": "Getting News in real-time via API from Social Medias like Twitter, Facebook, Instagram, etc", "apis": [["Social Media News in Greek", "Get social media news in Greek"], ["Social Media News in Chinese", "Get social media news in Chinese"], ["Social Media News in Turkish", "Get social media news in Turkish"], ["Social Media News in Russian", "Get social media news in Russian"], ["Social Media News in Portuguese", "Get social media news in Portuguese"], ["Social Media News in Dutch", "Get social media news in Dutch"], ["Social Media News in Japanese", "Get social media news in Japanese"], ["Social Media News in Italian", "Get social media news in Italian"], ["Social Media News in Indonesian", "Get social media news in Indonesian"], ["Social Media News in Hindi", "Get social media news in Hindi"], ["Social Media News in French", "Get social media news in French"], ["Social Media News in Spanish", "Get social media news in Spanish"], ["Social Media News in German", "Get social media news in German"], ["Social Media News in Arabic", "Get social media news in Arabic"], ["Social Media News in English", "Get social media news in English"]]}, "LGBTQ World News Live": {"tool_desc": "API showing all the latest LGBTQ+ News around the World", "apis": [["Get Individual News from Source", "Get News about LGBTQ+ from a specific news resource."], ["Get All LGBTQ+ News", "This endpoint will return back all news about LGBTQ+ from all over the world."]]}, "AR VR News": {"tool_desc": "Get the latest news on Augmented Reality and Virtual Reality.", "apis": [["getNews", "Get all news about AR and VR"]]}, "News API_v2": {"tool_desc": "Google News and Bing News Alternative.", "apis": [["Top Headlines", "Endpoint to find top headlines news."], ["Search", "Endpoint to search news by specific keywords."]]}, "Malaysia Kini": {"tool_desc": "Live News by Malaysia Kini", "apis": [["Get Latest Article List", "Return a list of current latest news article with info."], ["Get Article by SID", "Return news article content based on sid stated in **Get Latest Article List** method."]]}, "Indonesia News": {"tool_desc": "We are focused on delivering data from major news websites in Indonesia.", "apis": [["tirto-search", "search tirto news data"]]}, "German Police and Crime News Live": {"tool_desc": "An API showing all the latest Police, Crime, Accident etc.", "apis": [["Get Individual Source News", "This endpoint will return back all news about police, crime, accidents and more like this from germany from a specific news source."], ["Get all Police News", "This endpoint will return back all news about police, crime, accidents and more like this from germany."]]}, "Kenyan News Api": {"tool_desc": "", "apis": [["Get the news in swahili", "This request will return the news articles in swahili language"], ["Get all the news in english", "This endpoint will return back all news about climate change from all over the world"]]}, "Flixster": {"tool_desc": "This API helps to query for movies, actors, theaters, showtime, etc...", "apis": [["reviews/list", "List reviews related to a movie"], ["actors/detail", "Get detailed information of an actor/actress"], ["theaters/detail", "Get theater and showtime information"], ["theaters/list", "List theaters around a postal code or GEO location"], ["search", "Search for movies, actors, theaters by term and phrase"], ["movies/get-dvds", "Get movies that watch at home"]]}, "Crypto News_v11": {"tool_desc": "An API that shows the latest news articles from over 70 different websites around the world for Crypto, Bitcoin, and Ethereum", "apis": [["Get Crypto news from Single Website", "This endpoint allows you to retrieve all the news articles about Crypto from a single website"], ["Get all Ethereum news", "This endpoint will return news articles from over 70 different websites about Ethereum"], ["Get all Bitcoin news", "This endpoint will return news articles from over 70 different websites about Bitcoin"], ["Get all Crypto news", "This endpoint will return all news articles about Crypto from over 70 different websites"]]}, "H Crypto News": {"tool_desc": "Crypto News API gives you the latest news on cryptocurrency from several newspapers", "apis": [["Latest News on Crypto", "Returns the latest news  about crypto from several newspapers and websites"]]}, "Narco in Mexico": {"tool_desc": "Narco in Mexico News", "apis": [["Get All Narco News", "Get All Narco in Mexico News"]]}, "LIVE TV API": {"tool_desc": "An API that has all live tv stations in Kenya and uganda **NOTE for educational purposes only**", "apis": [["GET the channels description and status", "Shows the description, status whether online or offline, number of views"], ["GET the channels social accounts and contacts", "It has links to different social platforms such as Facebook....."], ["GET the channel stream_url", "It has the links and channels name."]]}, "Anime News Net": {"tool_desc": "This anime news API allows users to get details about the latest anime news, including the news headline, category, publication date and a brief introduction.", "apis": [["Get details of a news item", "Get the details of each news item, such as the title, an image and the body of the news item, in addition to other properties"], ["Get anime news list", "Get the most up-to-date anime list up to date and in real time"]]}, "Election2020 Smartable": {"tool_desc": "The Election API offers the 2020 U.S.", "apis": [["GetNews", "Get the latest 2020 U.S. election news tagged with democratic voice or republican voice."], ["GetNewsByTopic", "Get the latest 2020 U.S. election news by topic."], ["GetPeople", "Get election 2020 politicians and influencers."], ["GetFutureEvents", "Get future election events"], ["GetFutureEventsByTopic", "Get future election events by topic"], ["GetPastEvents", "Get past election events."], ["GetFAQs", "Get election 2020 FAQs."], ["GetFAQsByTopic", "Get FAQs by topic."], ["GetPeopleByTopic", "Get people by topic."], ["GetTopics", "Get election 2020 topics"], ["GetNewsletters", "Get election 2020 newsletters"]]}, "Greek News in English": {"tool_desc": "An API showing all the latest Greek news  in English", "apis": [["Get All Sources", "Get All Sources' names and ids"], ["Get Articles From A Single Source", "Get Greek News from a specific news source."], ["Get All News", "This endpoint will return back all greek news from all the sources."]]}, "New climate": {"tool_desc": "Climate data sd", "apis": [["get individual articles", "Get individual articles from publications"], ["get all climate news", "News from all publications"]]}, "Sri Lanka News Api": {"tool_desc": "A simple API that allows you to obtain the most recent news from Sri Lankan media sites in Sinhala.", "apis": [["Get news from one news source", "Get news from one news source passing {source} paramter value and {page} value.Each news soure different number of news count in one page.\n\n\n**News Sources\n--Lankadeepa.lk\n--Deshaya.lk\n--Ada.lk\n--BBCSinhala.com\n--Mawbima.lk"], ["Get all latest news", "Get latest news from all the news sources.This route return all the latest news from each news source at once"]]}, "A.I. Smartable": {"tool_desc": "The A.I.", "apis": [["GetNews", "Get artificial intelligence news."], ["GetNewsByTopic", "Get artificial intelligence news by topic."], ["GetLearningResources", "Get artificial intelligence learning resources."], ["GetLearningResourcesByTopic", "Get artificial intelligence learning resources by topic."], ["GetCompanies", "Get artificial intelligence companies."], ["GetPeople", "Get artificial intelligence influencers, entrepreneurs and top researchers."], ["GetPeopleByTopic", "Get artificial intelligence influencers, entrepreneurs and top researchers by topic."], ["GetCompaniesByTopic", "Get artificial intelligence companies by topic."], ["GetProjects", "Get artificial intelligence projects."], ["GetProjectsByTopic", "Get artificial intelligence projects by topic."], ["GetTopics", "Get artificial intelligence topics."]]}}, "eCommerce": {"rttrt": {"tool_desc": "juts build and connect", "apis": [["users", "used to get all users"]]}, "Axesso - Kaufland Data Service": {"tool_desc": "Our Kaufland Data Service API provides real-time data about product details and keyword search result from the online shop Kaufland.de.", "apis": [["Keyword search", "Retrieve keyword search results."], ["Product details", "Query product details information."]]}, "AI-Powered WishScraper API": {"tool_desc": "The AI-Powered WishScraper API provides access to the 50 most popular and recent product listings on Wish.", "apis": [["PaidAccess", "This endpoint provides access to the full suite of features available to premium or paid users. It allows you to retrieve data with fewer restrictions and higher limits than the free access endpoint."], ["FreeAccess", "This endpoint provides access to the basic features available to free or unpaid users. It allows you to retrieve data according to the limitations and restrictions set for free users."]]}, "Taobao Tmall Product Detail": {"tool_desc": "", "apis": [["Search by keyword", "Search products by keyword"], ["[Tmall] Search by keyword", "Search products by keyword"], ["[Taobao] Search by keyword", "Search products by keyword"], ["Get SKU", "Get SKU, Price, Propperties Image"], ["Get SKU promotion", "Get SKU, Price, Propperties Image"]]}, "BestBuy Product Data API": {"tool_desc": "BestBuy Product Data API\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.", "apis": [["BestBuyProductData", "It will accept two parameters keyword and page.\nFor Ex:\nkeyword: iphone  (it is the search term and it can be anything for example: iphone, ps5, sony tv etc)\npage: min 1 (max depends on the number of products available)"]]}, "E-commerce Delivery Status": {"tool_desc": "fake API to track the Delivery status including subscription id and delivery address.", "apis": [["GET", "Display data on console"]]}, "EcartAPI": {"tool_desc": "Connect with 40 + eCommerce solutions in just one API, and start making requests in under 15 min.", "apis": [["Getasinglecustomer", "<p>Searches for the selected customer and shows detailed information.<br></p>\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#222f52a0-58f0-4cd9-bd11-68eb488a010b\"> The costumer's ID must exist</a></li>\n\t</ul></b>"], ["Getallproductvariants", "<p>Searches for all the registered variants of a single product.<br></p>\n\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#6870b009-81d8-42c6-b910-3aaca8e5d0f2\"> The product's ID must exist</a></li>\n\t</ul></b>\n\n<h3>FILTERS </h3>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<td>Filter</td>\n\t\t\t<td>Description</td>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><code>limit</code></td>\n\t\t\t<td>Limit size of the search.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>page</code></td>\n\t\t\t<td>Pagination number.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>sinceId</code></td>\n\t\t\t<td>Filter items since the Id given.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>offset</code></td>\n\t\t\t<td>Lower limit of the results block. Modifies the range of the results provided, range goes from offset to limit.</td>\n\t\t</tr>\n\t</tbody>\n</table>"], ["Getsallorder'sfulfillments", "<p>Shows all of the order's fulfillments detailed.<br></p>\n<b>Important information:<br><b/>\n\t<b><ul>\n<li>Filters are subject to ecommerce.</li>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#646f03ea-0962-4570-9a23-fa06320fc2e6\"> The order's ID must exist</a></li>\n\t</ul></b>"], ["Getallcategories", "<p>Searches for all the available categories.<br></p>\n\n<h3>FILTERS</h3>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<td>Filter</td>\n\t\t\t<td>Description</td>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><code>ids</code></td>\n\t\t\t<td>Filter categories by the ids given</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>limit</code></td>\n\t\t\t<td>Limit size of the search</td>\n\t\t</tr>\n<tr>\n\t\t\t<td><code>page</code></td>\n\t\t\t<td>Pagination number.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>sinceId</code></td>\n\t\t\t<td>Filter categories since the Id given</td>\n\t\t</tr>\n\t\t<tr>\n      \t\t<td><code>name</code></td>\n      \t\t<td>Filter categories by name</td>\n    \t</tr>\n\t\t<tr>\n\t\t\t<td><code>productId</code></td>\n\t\t\t<td>Filter categories by product id</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>siteId</code></td>\n\t\t\t<td>Filter items by site id </td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>offset</code></td>\n\t\t\t<td>Lower limit of the results block. Modifies the range of the results provided, range goes from offset to limit</td>\n\t\t</tr>\n\t</tbody>\n</table>"], ["Getasingleproductimage", "<p>Searches for the selected image of a product.<br></p>\n\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#6870b009-81d8-42c6-b910-3aaca8e5d0f2\"> The product's ID must exist</a></li>\n\t<li><a href= \"https://docs.ecartapi.com/?version=latest#ff23601f-006f-4680-a5be-4607ff6bbc34\">The product's image ID must exist.</a></li>\n\t</ul></b>"], ["Getasingleorder", "<p>Searches for a selected order and shows the detailed information.<br></p>\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#646f03ea-0962-4570-9a23-fa06320fc2e6\"> The order's ID must exist</a></li>\n\t</ul></b>"], ["Getallcustomers", "<h3>FILTERS</h3>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<td>Filter</td>\n\t\t\t<td>Description</td>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><code>ids</code></td>\n\t\t\t<td>Filter cutomers by Id's provided</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>limit</code></td>\n\t\t\t<td>Limit size of the search</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>page</code></td>\n\t\t\t<td>Pagination number.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>sinceId</code></td>\n\t\t\t<td>Filter customers since the Id given</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>createdAt[from]</code></td>\n\t\t\t<td>Filter customers by date created from. When used <code>createdAt[to]</code><i>Required</i></td>\n\t\t</tr>\n\t\t<tr>\n      \t\t<td><code>createdAt[to]</code></td>\n      \t\t<td>Filter customers by date created to. When used <code>createdAt[from]</code><i>Required</i></td>\n    \t</tr>\n\t\t<tr>\n\t\t\t<td><code>updatedAt[from]</code></td>\n\t\t\t<td>Filter customers by date updated from. When used <code>updatedAt[to]</code><i>Required</i></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>updatedAt[to]</code></td>\n\t\t\t<td>Filter customers by date updated to. When used <code>updatedAt[from]</code><i>Required</i></td>\n\t\t</tr>\n\t\t<tr>\n      \t\t<td><code>name</code></td>\n      \t\t<td>Filter categories by name</td>\n    \t</tr>\n\t\t<tr>\n      \t\t<td><code>search</code></td>\n      \t\t<td>Search by string</td>\n    \t</tr>\n\t\t<tr>\n      \t\t<td><code>email</code></td>\n      \t\t<td>Search customers by email</td>\n    \t</tr>\n\t\t<tr>\n\t\t\t<td><code>offset</code></td>\n\t\t\t<td>Lower limit of the results block.\n\t\t\t\tModifies the range of the results provided range goes from offset to limit</td>\n\t\t</tr>\n\t</tbody>\n</table>"], ["Getallproducts", "Request used to obtain all the products in a store catalog.\n\nFind a general representation of all the filters and information EcartAPI can abet.\n\n#### For more detailed information please refer to our Supported Requests By Cart folder and find the eCommerce of your choice."], ["Getasingleproduct", "<p>Searches for a selected product and shows the detailed information.<br></p>\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#6870b009-81d8-42c6-b910-3aaca8e5d0f2\"> The product's ID must exist</a></li>\n\t</ul></b>"], ["Countallproductvariants", "<p>Counts all the registered variants of a single product.<br></p>\n\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#6870b009-81d8-42c6-b910-3aaca8e5d0f2\"> The product's ID must exist</a></li>\n\t</ul></b>"], ["Getsingleproductvariant", "<p>Searches for the selected variant and shows the detailed information.<br></p>\n\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#6870b009-81d8-42c6-b910-3aaca8e5d0f2\"> The product's ID must exist</a></li>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#5e6aa8c0-1d39-4a0e-8d8c-a2f2d294528a\"> The product's variant ID must exist.</a></li>\n\t</ul></b>"], ["Getallproduct'simages", "<p>Searches for all the images of a single product.<br></p>\n\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#6870b009-81d8-42c6-b910-3aaca8e5d0f2\"> The product's ID must exist</a></li>\n\t</ul></b>\n\t\n<h3>FILTERS</h3>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<td>Filter</td>\n\t\t\t<td>Description</td>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n<tr>\n\t\t\t<td><code>sinceId</code></td>\n\t\t\t<td>Filter items since the Id given</td>\n\t\t</tr>\n</tbody>\n</table>"], ["Getsasingleorderfulfillment", "<p>Shows a selected order fulfillment with detail.<br></p>\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#646f03ea-0962-4570-9a23-fa06320fc2e6\"> The order's ID must exist</a></li>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#043a96c7-cf6d-4dd7-8f3e-76dba5a8a2d1\"> The fulfillment order's ID must exist</a></li>\n\t</ul></b>"], ["Getasinglecategory", "<p>Searches for the selected category and shows detailed information.<br></p>\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#aa4a4c0b-6ab3-49e8-b7e3-931c8226af66\"> The categories ID must exist</a></li>\n\t</ul></b>"], ["Getyourstoreinformation", "Access store information fast with the access token we provided."], ["Getallorders", "<p><b>Note:</b><br>\nFilters are available depending of the ecommerce\n</p>"]]}, "Target": {"tool_desc": "Query for stores, categories, products, etc ...", "apis": [["products/v3/get-details", "Get detail information of product"], ["products/search-by-barcode", "Search product by barcode"], ["categories/list (Deprecated)", "List all root and sub categories"], ["categories/v2/list", "List all root and sub categories"], ["products/v2/list", "List products in specific store with options and filters"], ["products/list-collection (Deprecated)", "List whole collection relating to a product"], ["products/list-recommended (Deprecated)", "List more products to consider"], ["products/list (Deprecated)", "List products in specific store with options and filters"], ["products/v2/list-recommended", "List more products to consider"], ["products/v2/get-details (Deprecated)", "Get detail information of product"], ["products/get-details (Deprecated)", "Get detail information of product"], ["reviews/v2/list", "List reviews relating to a product"], ["stores/get-details", "Get detail information of specific store"], ["stores/list", "List available nearby store by zipcode, GEO location, or city name. One at a time, do NOT use them together at once."], ["auto-complete", "Get suggestion by term or phrase"], ["reviews/list (Deprecated)", "List reviews relating to a product"]]}, "Amazon Pricing and Product Info": {"tool_desc": "Fullest product info\nAll Marketplaces\nCustomer support for API users\nBuy box info\nPrime &amp; FBA detection\nFast, scalable &amp; reliable API", "apis": [["Main Endpoint", "Main Endpoint for all calls"]]}, "GST Number Search by Name and PAN": {"tool_desc": "Find the GST NUMBER or GSTIN of a registered company just by name or PAN number.", "apis": [["Get details by director name", "Get Director and their company details by director name"], ["Get Company Details By company name", "Suggestions To do GST Number search by name:-\nEnter the correct word (check spelling) with\nGST Verification\n\n- Enter at least ten characters of the word you want\n- Enter a state name because the company may have GST registration in various states.\n\nFor example, if you want to do the GST number search by the name of an enterprise named GIRIRAJ TRADERS IN DELHI, then search with the name mentioned above. You will get all the registered information associated with GIRIRAJ TRADERS IN DELHI."]]}, "Simple TaxRate Retrieval": {"tool_desc": "Sales tax by zip code made easy and fast.", "apis": [["Tax Rate", "Obtain tax rate by zip code"]]}, "Walmart_v2": {"tool_desc": "Get Walmart store locations and product reviews data.", "apis": [["Product-reviews", "Get product reviews on Walmart.com by specifying product page url or usItemId."], ["Store-location", "Get detailed Walmart store locations (phone number and address) by specifying the zip code."]]}, "Asos": {"tool_desc": "Asos API helps to query for all information about categories, products, etc...", "apis": [["products/v3/list-similarities", "List similar products by product id"], ["products/v3/detail", "Get detail information of product by id"], ["countries/list", "List countries that Asos supports selling products"], ["products/list (Deprecated)", "List products, search products with options and filters"], ["products/v2/list", "List products, search products with options and filters version 2"], ["products/detail (Deprecated)", "Get detail information of product by id"], ["products/v2/list-similarities (Deprecating)", "List similar products by product id"], ["v2/auto-complete", "Get auto complete suggestion by product name"], ["categories/list", "List categories from Asos"]]}, "N11 Data": {"tool_desc": "ARDIC's N11 data retrieval service.", "apis": [["Get comments with product id", "Retrieve comments based on a product id."]]}, "Shopee_v2": {"tool_desc": "Shopee API", "apis": [["get_product_details_by_url_product_url_get", "Get product details using product url"], ["get_product_details_product_get", "Gets product details using item_id, shop_id and region"], ["get_category_tree_category_tree_get", "Get shopee category tree"]]}, "Temu.com Shopping API (Realtime api scrapper from temu.com)": {"tool_desc": "(FREE TRIAL)\nRealtime shopping api scrapper of temu.com.", "apis": [["product details", "Returns the product details information based on the given goodsId (product id defined by temu, returned by the /search endpoint)\nResponse includes:\n- price information\n- product reviews\n- offers/availability\n- sku - variants in different options like size, color etc.\n- metadata, image gallery, description ...\n\n-"], ["product search", "Search for list of products by providing the keyword."]]}, "AG Amazon Data Web Scraper": {"tool_desc": "AG Amazon Data Web Scraper Is The Easiest Way To Get Access To Any Of The Products Including Prices, Offers, Sales Rank, Reviews And Other Information Regarding The Products On Amazon In JSON Format.", "apis": [["Get Amazon Search Results", "It Will Give The Product Details You Want Just By Searching The Product Name."], ["Get Amazon Product Reviews", "It Helps You To Get Reviews Of Any Product By Entering Its Product Id."]]}, "Ebay de Product Details Page Scraper": {"tool_desc": "Get ALL informations from Detailpage: ebay.de/itm/ITEM_ID", "apis": [["Detail Page", "Get all Data from https://www.ebay.de/itm/ITEM_ID\n\n**Payload:** ITEM_ID"]]}, "Price Comparison": {"tool_desc": "Amazon, Ebay, Target, Walmart, Google - price & product data from all marketplaces via one API.", "apis": [["offers", "list offers for the product"], ["details", "get details on the product"]]}, "Pricer": {"tool_desc": "real time price comparison api", "apis": [["Search for a product", "search by product name"]]}, "Forever21": {"tool_desc": "Forever21 API helps to query for all information about categories, products, etc...", "apis": [["products/search (Deprecated)", "Search for product by name"], ["categories/v2/list", "List all categories from F21"], ["products/list (Deprecated)", "List products by category"], ["categories/list (Deprecated)", "List all categories from F21"], ["products/detail (Deprecated)", "Get detail information of product by id"], ["products/v2/list", "List products by category"], ["products/v2/detail", "Get detail information of product by id"]]}, "Amazon India Scraper_v3": {"tool_desc": "This Api Gets All Information From \"amazon.in\"", "apis": [["Product Reviews", "Get The Product's Reviews"], ["Gets Products", "Get The Product Details Using A Identifier(id)"]]}, "Zappos Realtime Data": {"tool_desc": "Zappos Realtime Data", "apis": [["Zappos product detail by Product ID", "Get realtime product information by product_id from Zappos"], ["Zappos search product", "Searching realtime data from Zappos"], ["Category List", "Realtime categories from Zappos"]]}, "Ikea API": {"tool_desc": "This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search.", "apis": [["Stores", "Obtain a list of all stores in a specified country."], ["Categories", "Obtain a list of all categories available in a specified country."], ["Product", "Get up-to-date Information for a specific product."], ["Search By Keyword Filters", "Complimentary to the \"Search By Keyword\" endpoint. Obtain a list of filters available based on a keyword."], ["Search By Keyword", "Obtain a list of Ikea products information based on a keyword."], ["Search By Category Filters", "Complimentary to the \"Search By Category\" endpoint. Obtain a list of filters available to a specified category."], ["Search By Category", "Obtain a list of Ikea products information based on a specified categoryID."], ["Countries", "Obtain a list of all the countries and languages this API supports."]]}, "Sephora": {"tool_desc": "Help to query for skincare, makeup shopping, hybrid products, hair products, fragrance, etc...", "apis": [["stores/list (Deprecated)", "List nearest stores around a GEO location"], ["auto-complete (Deprecated)", "Get suggestions by term or phrase"], ["products/v2/search-by-barcode", "Search product by upc"], ["products/search (Deprecated)", "Search products by term or phrase with options and filters"], ["products/search-by-barcode (Deprecated)", "Search product by barcode (UPC)"], ["products/v2/detail", "Get detailed information of a product"], ["products/list (Deprecated)", "List products with options and filters"], ["products/detail (Deprecated)", "Get details of product by id"], ["products/check-availability (Deprecated)", "Check availability of specific product around a location"], ["reviews/list (Deprecated)", "List reviews relating to specific product"], ["categories/list (Deprecated)", "List categories and its recursive."], ["categories/list-root (Deprecated)", "List top root categories"], ["categories/v2/list-root (Deprecated)", "List top root categories"], ["reviews/v2/list", "List reviews related to a product"], ["products/v2/get-filters", "Generate the filter panel dynamically"], ["products/v2/list", "List products with options and filters"], ["v2/auto-complete", "Get suggestions by term or phrase"]]}, "Price Tracker South Africa": {"tool_desc": "Get prices of products at a number of South African retailers by searching the barcodes, product ID's  / Product Sku's or product page URL's", "apis": [["getProductSku", "Return prices based on Product ID or Product Sku"], ["getProductURL", "Return prices based on the url of the product page on the retailers website.\n\nNOTE: replace all / with a +"], ["getBarcode", "Return prices based on barcode"]]}, "Aliexpress DataHub": {"tool_desc": "\ud83e\udd47#1 Data Provider.", "apis": [["Aliexpress - User Basic Parameters", "User Basic Parameters for Region, Currency and Locale"], ["Aliexpress - Item SKU Price", "All details of a single item."], ["Aliexpress - Item Shipping Detail 4", "All details of a single item."], ["Aliexpress - Item Detail 5", "All details of a single item."], ["Aliexpress - Item Shipping Detail 5", "All details of a single item."], ["Aliexpress - Item Search 3", "All details of a single item."], ["Aliexpress - Item Detail 4 [RU]", "All details of a single item focused for aliexpress.ru"], ["Aliexpress - Store Item Search by Keyword", "In-store item search by keyword."], ["Aliexpress - Item Search [by Image]", "This endpoint allows you to search products with an Image URL. Note! You must use images from the Aliexpress products at this time."], ["Aliexpress - Item Review", "All details of a single item."], ["Aliexpress - Item Shipping Detail 3", "All details of a single item."], ["Aliexpress - Item Shipping Detail 2", "All details of a single item."], ["Aliexpress - Store Item Search 2", "All details of a single item."], ["Aliexpress - Store Categories", "All details of a single item."], ["Aliexpress - Item Shipping Detail", "All details of a single item."], ["Aliexpress - Item Detail 2", "All details of a single item. This Endpoint needs an additional request to the \"Item Description\" endpoint to fill the *Properties* and *Description* gaps."], ["Aliexpress - Item Search", "All details of a single item."], ["Aliexpress - Store Info", "All details of a single item."], ["Aliexpress - Item Review 2", "All details of a single item."], ["Aliexpress - Item Description", "All details of a single item."], ["Aliexpress - Item Detail Simple", "All details of a single item."], ["Aliexpress - Item Search 2", "All details of a single item."], ["Aliexpress - Store Item Search", "All details of a single item."], ["Aliexpress - Item Detail 3", "All details of a single item."], ["Aliexpress - Item Detail", "All details of a single item."]]}, "Zappos": {"tool_desc": "Zappos API helps to query for all information about categories, products, etc...", "apis": [["brands/list", "List all brands from Zappos"], ["products/detail", "Get detail information of product by productId"], ["categories/list (Deprecated)", "List all categories from Zappos"]]}, "sellytics": {"tool_desc": "Amazon marketplace data REST API providing real time product, seller, review and ranking data.", "apis": [["Get a specific amazon product", "This endpoint returns a well formatted amazon product as json. This document contains all product properties, price, buybox, product details and so on."]]}, "Amazon Scrapper_v4": {"tool_desc": "This api can be used to scrap amazon products from the Amazon India web site.", "apis": [["GET a product details", "GET a product details.\nYou can get the product id from the URL when you search for a particular product. It is the next value after '/dp/'.\nEg: B08N5WG761 is the value we want from the url - \nhttps://www.amazon.in/Apple-MacBook-Chip-13-inch-256GB/dp/B08N5WG761/"]]}, "Target.Com(Store) Product/Reviews/Locations Data": {"tool_desc": "Real-time **Target.Com** data API.", "apis": [["Product Details", "The endpoint returns single product details\n\n- Every target has a uniq **store_id** , **store_id** can be extract with the help of this endpoint **/target/location/search**"], ["Product Reviews", "The endpoint returns product reviews"], ["Product Search", "The endpoint returns products from the Target.Com Search Result\n\n- Every target has a uniq **store_id** , **store_id** can be extract with the help of this endpoint **/target/location/search**"], ["Target Store Location Search", "The endpoint returns Target Store locations details\n\n- Only US **zip** codes are accepted\n- **radius** is in miles"]]}, "Real-Time Product Search": {"tool_desc": "Fast and Simple search for product offers and reviews from all major sources, in a single API.", "apis": [["Search", "Search for product offers - both free-form queries and GTIN/EAN are supported. Each page contains up to 30 product offers. Infinite pagination/scrolling is supported using the *page* parameter."], ["Product Reviews", "Get all product reviews. Infinite pagination/scrolling is supported using the *limit* and *offset* parameters."], ["Product Offers", "Get all offers available for a product."]]}, "IHerb Product Data Api": {"tool_desc": "Query for products using many filters!", "apis": [["Get Solicitation", "Retrieves a download link containing all over 30,000 products, in json format in a .zip file. Remember, the protocol expires in 24 hours! Download your .zip ASAP!"], ["Get Product By Brand Name", "Lists all products by brand, and allows you to filter in all ways!"], ["Get All Brands", "Lists all available brands"]]}, "Amazon Turkey Data Scrapeer": {"tool_desc": "Amazon Tr data scraper is easiest way to get access product prices with Turkish Liras, sales rank and reviews data from Amazon Turkey in JSON format", "apis": [["Get Product Offers in Turkey", "This endpoint can get you product offers in amazon tr products. This method is required the product id in the amazon tr page if you don't know you can get search with my method to. And you need to api_key scraperapi you can get easly in this site ; https://www.scraperapi.com/"], ["Get Product Reviews in Turkey", "This endpoint can get you product reviews in amazon tr products. This method is required the product id in the amazon tr page if you don't know you can get search with my method to. And you need to api_key scraperapi you can get easly in this site ; https://www.scraperapi.com/"], ["Search Product in Turkey", "This endpoint can get you search all product in amazon tr . This method is required the search key . And you need to api_key scraperapi you can get easly in this site ; https://www.scraperapi.com/"]]}, "Swagger PetStore": {"tool_desc": "This is a sample server Petstore server.", "apis": [["getUserByName", "Get user by user name"], ["logoutUser", "Logs out current logged in user session"], ["loginUser", "Logs user into the system"], ["getInventory", "Returns a map of status codes to quantities"], ["getPetById", "Returns a single pet"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions"]]}, "Hepsiburada Data": {"tool_desc": "ARDIC\u2019s Amazon data retrieval service.", "apis": [["Get Comments from product id", "Retrieve comments based on a product id."]]}, "Kohls": {"tool_desc": "Get online shopping deals, discounts and rewards from fashion to beauty, home furniture, clothing, shoes, electronics and more...", "apis": [["products/search-by-barcode", "Search product by barcode"], ["stores/list", "List stores near a provided GEO location"], ["qnas/list", "List questions and answers relating to a product"], ["categories/list", "List all available categories"], ["products/detail", "Get detail information of specific product"], ["reviews/list", "List reviews relating to a product"], ["products/list", "List products with options and filters"], ["auto-complete (Deprecating)", "Get suggestions by term or phrase"]]}, "Amazon Product Reviews": {"tool_desc": "Amazon Product Reviews\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.", "apis": [["AmazonProductReviews", "It will accept three parameters asin, domain, pageNum.\nFor Ex:\nasin: B087N3LWRB  (you can find it in the product page of amazon)\ndomain: amazon.co.uk  (put the domain without www, currently we only provide amazon.com, amazon.in and amazon.co.uk)\npageNum: 1 (min 1 and max depends on the number of reviews on the product.  Each page give 10 reviews)"]]}, "HM - Hennes Mauritz": {"tool_desc": "H&M API helps to query for all information about regions, categories, products, etc...", "apis": [["products/detail", "Get detail information of product"], ["categories/list", "List all categories from H&M"], ["products/list", "List products from H&M with options to sort, filter, or search for products by name"], ["products/search-by-barcode", "Search product by barcode"], ["regions/list", "List regions H&M supported"]]}, "website screenshot": {"tool_desc": "Generate screenshots of websites with simple api, accept various parameters such as width, height, full page", "apis": [["Screenshot", "Take a screenshot from a webpage url."]]}, "PPOB": {"tool_desc": "Payment Point Online Banking\nIndonesia, China, Philippines, Malaysia, Singapore, Vietnam and Thailand.", "apis": [["Check Status", "<table><thead><tr><th>Parameter</th> <th>Deskripsi</th> <th>Contoh</th></tr></thead> <tbody><tr><td><code>ref_id</code></td> <td>Referensi ID transaksi</td> <td><code>trx1</code> atau <code>41241211133</code></td></tr></tbody></table>"], ["Account", "API Account is used to display user information according to the Token embedded in the header request."], ["Deposit Nominal & Bank", "API Deposit Nominal & Bank is used to display available deposit information on PulsaXpress as well as bank account information used for the deposit process. It also allows users to make a deposit by choosing the desired deposit amount and payment method."], ["Indonesia Credit Pricelist", "This Endpoint is for Indonesia only.\nThe Credit & Data Pricelist API is used to display the list of available credit and data prices on PulsaXpress. This information can be used to know the price of the products you want to buy before making a transaction. This price information can be updated according to the current prices and can be used to determine the prices offered on your application."], ["Internasional Credit Pricelist", "The Pricelist API is used to display all available Pulsa and Data products. The result of this API can obtain the Code, Name, Nominal, and Price of each available product.\n\n<table><thead><tr><th>Country</th> <th>Code</th></tr></thead> <tbody><tr><td>China</td> <td><code>China</code></td></tr> <tr><td>Malaysia</td> <td><code>Malaysia</code></td></tr> <tr><td>Philippines</td> <td><code>Philippines</code></td></tr> <tr><td>Singapore</td> <td><code>Singapore</code></td></tr> <tr><td>Thailand</td> <td><code>Thailand</code></td></tr> <tr><td>Vietnam</td> <td><code>Vietnam</code></td></tr></tbody></table>"]]}, "Product Categorization": {"tool_desc": "Determine products and organization of products into their respective categories.", "apis": [["Product Categorization", "Return category of product base on the product title."]]}, "Abiola Amazon Data Scraper": {"tool_desc": "Amazon Data Scrapper makes it easy and fast to access products, price and review data from Amazon in JSON format.", "apis": [["Get Amazon Product Details", "This endpoint get the general product description of any amazon product."], ["Get Amazon Product Reviews", "This endpoint gives you the review of the product id you enter."], ["Get Amazon Product Offer", "This endpoint gets the offer of any amazon product."], ["Get Amazon Search Results", "This endpoint allows you to search any amazon product description by typing the name of the product."]]}, "Ecommerce Product API": {"tool_desc": "The Ecommerce Product API is a comprehensive solution for retrieving and managing product information in ecommerce stores.", "apis": [["Product Data", "The /data endpoint is a part of the Ecommerce Product API that allows you to retrieve information about a specific product in your ecommerce store. By making a GET request to this endpoint and specifying the product name, you can access a wide range of information about the product, including its name, description, images, and more. The response to the request will be in JSON format and will include all relevant product data. This endpoint is an essential tool for retrieving information about products in your store, and is designed to be fast and efficient, ensuring that you receive the information you need quickly and easily."]]}, "Appibase": {"tool_desc": "Headless Commerce", "apis": [["getPriceLists", "Get all price lists"], ["getCollectionProducts", "Get all collection products"], ["getCollectionChildren", "Get all child collections"], ["getPriceList", "Get a price list"], ["getCartsItems", "Get all cart items"], ["getCollectionParent", "Get the parent collection"], ["getTransaction", "Get an order transaction"], ["getStockLocation", "Get a stock location"], ["getProductPriceLists", "Get all product price lists"], ["getStockItems", "Get all stock items"], ["getOrderShippingAddress", "Get the order's shipping address"], ["getProductPrices", "Get all product prices"], ["getProductChildren", "Get all child products"], ["getOrderBillingAddress", "Get the order's billing address"], ["getStockLocationAddress", "Get stock location address"], ["getGateway", "Get a payment gateway"], ["getVariationOptions", "Get all variation options"], ["getGateways", "Get all payment gateways"], ["getStockTransations", "Get all stock item transations"], ["getStockTransaction", "Get a stock transaction"], ["getProductVariations", "Get all product variations"], ["getOrdersItems", "Get all order items"], ["getStockItem", "Get a stock item"], ["getProductParent", "Get the parent product"], ["getStoreProducts", "Get all store products"], ["getProductOptions", "Get all product options"], ["getStockLocations", "Get all stock locations"], ["getCustomerAddresses", "Get all customer addresses"], ["getOrderTransactions", "Get all order transactions"]]}, "yiwugo product data": {"tool_desc": "Get the yiwugo.com(\u4e49\u4e4c\u8d2d) products'  information", "apis": [["search products", "search products\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)"], ["search shops", "search shops by keyword.\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)"], ["get product detail", "get product detail by item_id,\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)"]]}, "Unofficial SHEIN": {"tool_desc": "This API helps to query for almost everything that you see PUBLICLY on SHEIN's sites", "apis": [["reviews/list", "List reviews related to a product"], ["products/get-extra-info", "Get extra information of a product"], ["products/get-filters", "You use this endpoint to build up the filters dynamically"], ["products/search", "Search products by keywords with options and filters"], ["products/get-reviews", "Get brief reviews of a product"], ["products/detail", "Get detailed information of a product"], ["products/list", "List products by a category with options and filters"], ["navigations/get-node-content", "Get children categories nested in a root category"], ["navigations/get-root", "Get root categories related to a tab"], ["navigations/get-tabs", "Get tabs for navigation"], ["countries/detail", "Get detailed information of a country"], ["countries/list", "List all available and supported countries. This endpoint provides meta data for other endpoints."], ["auto-complete", "Get suggestions by term or phrase"]]}, "Weee grocery API (sayweee.com) - browsing/searching/details": {"tool_desc": "(FREE TRIAL)\nReal time scraping API from sayweee.com supports the entire pre-purchase flow.", "apis": [["product search (zipcode, keyword)", "provide list of products based on user's zipcode\nresponse also includes available filters/sort and categories"], ["product details (zipcode, product_id)", "provide detailed product information based on the product id and user's zipcode\nproduct_id should come from the product search endpoint\nresponse also contains detailed price and availability information"]]}, "Redbubble scraper": {"tool_desc": "With this API, you can quickly and easily extract valuable data from Redbubble listings, including the title, price, product link, images, and tags.", "apis": [["/redbubble", "Get items per page, you can optionally specify a search term, specific categories or ordering"]]}, "Target.com Shopping - API": {"tool_desc": "Realtime APIs support entire shopping flow on Target.com.", "apis": [["product_search", "Returns the list of products based on keyword."], ["product_details", "Returns detailed product information.\nIncluding:\n```\nproduct variants (with different dimension like size, color and etc.\nratings and reviews\nitem images/videos\nprice\npromotion\nchild products\n```"], ["nearby_stores", "Returns the list of stores near to specified ZIP code."], ["product_fulfillment", "Returns product fulfillment information."], ["search_autocomplete", "Product autocompletion based on search keyword."]]}, "\u00c7i\u00e7eksepeti Data": {"tool_desc": "ARDIC's \u00c7i\u00e7eksepeti data retrieval service.", "apis": [["Get Comments from product id", "Retrieve comments based on a product id."]]}, "BestBuy Product Data": {"tool_desc": "BestBuy Product Data API\nContact me at: muktheeswaran.m@gmail.com for builing custom spiders or custom requests.", "apis": [["BestBuyProductData", "It will accept two parameters keyword and page.\nFor Ex:\nkeyword: iphone  (it is the search term and it can be anything for example: iphone, ps5, sony tv etc)\npage: min 1 (max depends on the number of products available)"]]}, "Trendyol Data": {"tool_desc": "ARDIC's Trendyol data retrieval service.", "apis": [["Get Comments from product id", "Retrieve comments based on a product id."]]}, "Basic Amazon Scraper": {"tool_desc": "Free API to get Amazon product metadata.", "apis": [["GET Product Search Results", "GET Product Search Results: Get product offers from a search query."], ["GET Product Offers", "GET Product Offers: Get all offers available for a product."], ["Get Amazon Product Details", "GET Product Details: Get all details pertaining to a product ID (ASIN)"]]}, "Amazon Data_v2": {"tool_desc": "Amazon Data provides you with comprehensive information about products on Amazon, including pricing, customer reviews, product descriptions, and more.", "apis": [["Categories List", "This endpoint point fetches categories of Amazon!"], ["MarketPlace List", "This endpoint lists down the market places we use to fetch data!"]]}, "Axesso - Otto Data Service": {"tool_desc": "Our Otto Data Service API provides real-time data about product details, keyword search result and reviews from the german online shop Otto.de.", "apis": [["Keyword search", "Retrieve keyword search results."], ["Product Details", "Query product details information."]]}, "Amazon Product Price Data": {"tool_desc": "Cheap and lightweight API to get rich Amazon product metadata", "apis": [["product", "Get Amazon product price information by locale.\n\nASINs provided will be searched by the locale provided, e.g. if `B005YQZ1KE,B074R8RQQ2` were provided and `US` as a locale were provided, it will provide metadata from only `amazon.com`.\n\nPlease note that price data may be up to 30 minutes out of date.\n\nCurrently supported locales:\n\nUS (amazon.com)\nUK (amazon.co.uk)\nCA (amazon.ca)\nIN (amazon.in)\nFR (amazon.fr)\n\nMore coming soon!"]]}, "Amazon Data_v3": {"tool_desc": "ARDIC's Amazon data retrieval service.", "apis": [["Get comments with product id", "Retrieve comments based on a product id."]]}, "Magic AliExpress": {"tool_desc": "Increase your e-commerce business with this API, we offer all services that you **need**<br>1.", "apis": [["/api/product/{productId}", "This resource represents a product, each product is identifier by ID"], ["/api/store/{storeID}/seller/{sellerID}/products", "This ressource displays the products by Store"], ["/api/products/search", "Search a product by his name"], ["/api/product/{productID}/feedbacks", "This ressource displays the feedbacks for one product"], ["/api/shipping/{productID}", "This ressource displays the shipping information for one product"], ["/api/category/{categoryId}/products", "This resource represents the product list; you can filter by\n - attributes\n - minimum price\n - brand \n - ship to country\n - ship from country\n - max sale price \n<br> **For information, One first request, you must not indicate the attr & brands, you retrieve this informations in the Product Object.**"], ["/api/bestSales/SortedByNewest", "Retrieves the last best product added in the system"], ["/api/product/{productId}/historic/prices", "This endpoint returns the prices historic of product loaded by a client"], ["/api/product/{productId}/historic/sales", "This endpoint returns the sales historic of product loaded by a client"], ["/api/v2/categories", "This resource represents a category in the system. We have 3 provider type <br> - API\n -WEBSITE\n -HYBRID\n <br> 1.API<br> This category is manager by the API, the ID indicated is the Alibaba ID and not Aliexpress ID.<br> 2. WESITE <br> This category is scraping of Aliexpress website <br> 3. HYBRID <br> This category has correspondence between Aliexpress and API; you have in the same object twice ID `alie_category_id` for Website and `api_category_id` for API<br> In the API to request by example product, in the category ID, you can indicate the both."], ["/api/currenciesAvailable", "This resource represents a currency in the system. Each currency is composed of Code and Name Attributes. This service can be used to communicate with product service with the target currency attribute."], ["/api/countriesAvailableToShipping", "This resource represents the countries. Each country is composed of Code and Name Attributes. This service can be used to communicate with product service for the countryFrom and countryTo query parameters."], ["/api/bestSales/product/{productID}/salesHistory", "This resource returns the historic of sales"], ["/api/bestSales/products", "This resource represents the best sales detected by our system"], ["/api/bestSales/product/{productID}/pricesHistory", "This resource returns the historic of prices"]]}, "Real-Time Amazon Data": {"tool_desc": "Fast and Simple API to search for products, offers and reviews on Amazon in real-time.", "apis": [["Product Details (EXPERIMENTAL)", "Get product details. Currently returns the Product Information table data, as seen on specific product pages on Amazon.com (e.g. https://www.amazon.com/dp/B09TBLBFXC)."], ["Product Category List", "Get Amazon product categories (per country / marketplace)."], ["Product Reviews", "Get and paginate through all product reviews on Amazon."], ["Search", "Search for products offers on Amazon."], ["Product Offers", "Get top 10 offers of a specific product on Amazon by its asin, the first offer in the list is the pinned offer returned by the **Search** endpoint. Supports filtering by product condition."]]}, "ZAPPOS 2022": {"tool_desc": "ZAPPOS NEW ENDPOINTS", "apis": [["GET relatedProducts by productId & siteId(zappos =1, 6pm=2)", "Get relatedProducts by siteId & productId"], ["GET images by productId & siteId(zappos =1, 6pm=2)", "GET images by productId & siteId"], ["GET stocks info by styleIds & siteId(zappos =1, 6pm=2)", "GET stocks info by siteId & styleIds"], ["GET price by styleIds and siteId(zappos =1, 6pm=2)", "GET price by styleIds and shopId"]]}, "Get and Compate products allover the web": {"tool_desc": "With our eCommerce products API you can easily search for products by name and retrieve newly added items from the last X days, among other features.", "apis": [["GetProducts", "Search for products by name and retrieve newly added items from the last X days, among other features."]]}, "Wayfair": {"tool_desc": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com", "apis": [["categories/list", "List categories and their recursive children categories if available"], ["reviews/list", "List reviews relating to specific product"], ["products/list", "List products with filters and options"], ["products/search", "Search for products by term or phrase"], ["products/detail", "Get detail information of specific product"], ["auto-complete", "Get auto suggestions by term or phrase"]]}, "Comany Details Search Online": {"tool_desc": "Comany Details Search Online", "apis": [["Fetch Company Details", "Fetch Company Details by company name"]]}, "Shopify Store Scraper": {"tool_desc": "Scrape complete products of any shopify store.", "apis": [["Single Product", "Fetch complete data of single product."], ["Shopify Store Products", "Get all the products of shopify store."]]}}, "Financial": {"Cryptocurrency balance": {"tool_desc": "Get balance of a specific address for a variety of cryptocurrency", "apis": [["Get Chiliz Balance From Specific Network", "This endpoint will return back the Chiliz balance of an address in a specific network."], ["Get Aave Balance From Specific Network", "This endpoint will return back the Aave balance of an address in a specific network."], ["Get Bitcoin Balance", "This endpoint will return back the Bitcoin balance of an address"], ["Get Cordano Balance", "This endpoint will return back the Cordano balance of an address"], ["Get Cosmos Balance", "This endpoint will return back the Cosmos balance of an address"], ["Get Ether Balance", "This endpoint will return back the Ether balance of an address"], ["Get Dogelon Mars Balance From Specific Network", "This endpoint will return back the Dogelon Mars balance of an address in a specific network."], ["Get Zilliqa Balance", "This endpoint will return back the Zilliqa balance of an address"], ["Get Yearn.finance Balance From Specific Network", "This endpoint will return back the yearn.finance balance of an address in a specific network."], ["Get VeThor Token Balance", "This endpoint will return back the VeThor Token balance of an address"], ["Get Verge Balance", "This endpoint will return back the Verge balance of an address"], ["Get Vechain Balance", "This endpoint will return back the Vechain balance of an address"], ["Get TRON Balance", "This endpoint will return back the TRON balance of an address"], ["Get Tezos Balance", "This endpoint will return back the Tezos balance of an address"], ["Get Solana Balance", "This endpoint will return back the Solana balance of an address"], ["Get Shiba Inu Balance From Specific Network", "This endpoint will return back the Shiba Inu balance of an address in a specific network."], ["Get Reserve Rights Balance From Specific Network", "This endpoint will return back the Reserve Rights balance of an address in a specific network."], ["Get Polygon Balance From Specific Network", "This endpoint will return back the Polygon balance of an address in a specific network."], ["Get PancakeSwap Balance From Specific Network", "This endpoint will return back the PancakeSwap balance of an address in a specific network."], ["Get Ontology Gas Balance", "This endpoint will return back the Ontology Gas balance of an address"], ["Get Ontology Balance", "This endpoint will return back the Ontology balance of an address"], ["Get Litecoin Balance", "This endpoint will return back the Litecoin balance of an address"], ["Get ICON Balance", "This endpoint will return back the ICON balance of an address"], ["Get Holo Balance From Specific Network", "This endpoint will return back the Holo balance of an address in a specific network."], ["Get Dogecoin Balance", "This endpoint will return back the Dogecoin balance of an address"], ["Get DigiByte Balance", "This endpoint will return back the DigiByte balance of an address"], ["Get BNB Balance From Specific Network", "This endpoint will return back the BNB balance of an address in a specific network."], ["Get 1Inch Balance From Specific Network", "This endpoint will return back the 1Inch balance of an address in a specific network."]]}, "Job Salary Data": {"tool_desc": "Extremely Fast and Simple API to get Job Salary/Pay Estimations from all major publishers - Payscale, Glassdoor, Salary.com, ZipRecruiter and many others, all in a single API.", "apis": [["Job Salary", "Get estimated job salaries/pay by job title and location."]]}, "StocksEyes": {"tool_desc": "stocksEyes is a comprehensive API that provides real-time candlestick data (OHLCV - open, high, low, close, volume) for stocks and other securities.", "apis": [["Get Latest Quote", "The /getLatestQuote API returns latest realtime quote for for given trading symbol. The tradingSymbol parameter lets you select any valid trading symbol of stocks that are part of the Nifty 500 or the top 500 stocks, giving you access to the data you need for the stocks you're interested in.\nSee the list of trading symbols [here](https://stockseyes.com/group/all)."], ["GET Last N Candles nse", "The /getLastNCandles API returns latest n number of candles formed for given trading symbol and time frame. The timeFrame parameter allows you to select the time frame of candleStick, with options of 1m, 5m, 15m, or 1h for 1 minute candle, 5 minute candle, 15 minute candle, 1 hour candle respectively. The tradingSymbol parameter lets you select any valid trading symbol of stocks that are part of the Nifty 500 or the top 500 stocks, giving you access to the data you need for the stocks you're interested in."], ["Get Latest candle NSE", "The /getLatestCandle API returns latest realtime candle formed for given trading symbol and time frame. The timeFrame parameter allows you to select the time frame of candleStick, with options of 1m, 5m, 15m, or 1h for 1 minute candle, 5 minute candle, 15 minute candle, 1 hour candle respectively. The tradingSymbol parameter lets you select any valid trading symbol of stocks that are part of the Nifty 500 or the top 500 stocks, giving you access to the data you need for the stocks you're interested in."]]}, "MarketCI Analytics": {"tool_desc": "Stock Market Endpoint for Price Forecasts, Probability, Cash Flow Models , and Peer Comps", "apis": [["Price Forecasts", "An AI-generated price forecast for the Stock over the next 3 months."], ["Peers", "Get List of Company Peers"], ["Price Probability", "Based on over 1000 forecasts, the probabilistic outcome is above or below the current price in a normal distribution."], ["Peer Metrics Average", "An Average of Company Peer Metrics for TTM Data"], ["Peer Ratio Averages", "An Average of Company Peer Ratios for TTM Data"], ["Discounted Cash Flow Models (DCF's)", "Artificial Intelligence-powered DCF's for Cash Flow forecasts and assumptions."]]}, "\ud83d\udcc5 Economic Events Calendar \ud83d\ude80": {"tool_desc": "Get complete list of all economic events.", "apis": [["Events", "Get all economic events \nFilter by countries symbols like: US, JP, GB and so on. You can add multiple separating by comma or remove to get all events.\nFilter by date: from & to using date in format 2023-05-09"]]}, "ohlc history forex": {"tool_desc": "Api to fetch forex Open High Low Close prices for a variety of currency pairs", "apis": [["Get OHLC history", "Get  OHLC for the requested currency pair"], ["Get Symbols", "Get all available forex pairs"]]}, "CurrencyAPI.net": {"tool_desc": "Real-time currency conversion on 152 currencies and cryptos", "apis": [["Convert", "Convert a custom amount value from one currency to another"], ["Currencies", "Gets list of currencies we support"], ["Timeframe", "Display a currency conversion's historical rates within a given timeframe"], ["Rates", "Get live currency conversion rates of a given currency"], ["History", "Display the currency conversions historical rates for a particular day"]]}, "BarPatterns": {"tool_desc": "Screener for stock candlestick patterns & indicator signals.", "apis": [["Macd Crossover Down", "List of stocks having Macd crossover down signal."], ["Macd Crossover Up", "List of stocks having Macd crossover up signal."], ["Latest signals", "Returns list of all latest signals order by date."], ["Three Black Crows", "List of stocks having Three Black Crows signal."], ["Shooting Star", "List of stocks having Shooting Star signal."], ["Evening Star", "List of stocks having Evening Star signal."], ["Piercing Line", "List of stocks having Piercing Line signal."], ["Hanging Man", "List of stocks having Hanging Man signal."], ["Bearish Engulfing", "List of stocks having Bearish Engulfing signal."], ["Three Inside Up", "List of stocks having Three Inside Up signal."], ["Three White Soldiers", "List of stocks having Three White Soldiers signal."], ["Three Outside Up", "List of stocks having Three Outside Up signal."], ["Rising Three Methods", "List of stocks having Rising Three Methods signal."], ["Three Inside Down", "List of stocks having Three Inside Down signal."], ["Bullish Hammer", "List of stocks having Bullish Hammer signal."], ["Supertrend Sell", "List of stocks having Supertrend Sell signal."], ["Three Outside Down", "List of stocks having Three Outside Down signal."], ["Supertrend Buy", "List of stocks having Supertrend Buy signal."], ["RSI Oversold", "List of stocks having RSI Oversold signal."], ["RSI Overbought", "List of stocks having RSI Overbought signal."], ["Morning Star", "List of stocks having Morning Star signal."], ["Inverted Hammer", "List of stocks having Inverted Hammer signal."], ["Falling Three Methods", "List of stocks having Falling Three Methods signal."], ["Bearish Harami", "List of stocks having Bearish Harami signal."], ["Doji", "List of stocks having Doji signal."], ["Dark Cloud Cover", "List of stocks having Dark Cloud Cover signal."], ["Bullish Harami", "List of stocks having Bullish Harami signal."], ["Bullish Engulfing", "List of stocks having Bullish Engulfing signal."], ["Stock list", "Get list of stocks covered by the screener. Result includes stock information."]]}, "Cion Prices Api": {"tool_desc": "An api showing current prices of coins", "apis": [["get currency by name", "get several states of one currency prices"], ["GIT ALL WORLD  CURRENCIES PRICES", "This end point will return back prices of world currencies"]]}, "1p Challenge": {"tool_desc": "APIs for the 1p Challenge", "apis": [["/api/user/{userId}", "Retreive a user object, their logs and calendar of savings"], ["/api/create/user", "Creates a new user within the system, returning the userId"], ["/api/user/{userId}/undo-latest", "Undo the latest savings log from a user (fat-finger click)"], ["/api/global-tracking", "Shows all tracked savings"]]}, "Futures": {"tool_desc": "Get daily and historical futures prices for 26 major financial assets and their monthly futures contracts.", "apis": [["Days From Date", "This endpoint returns futures contracts for the date falling on the number of days from the date you specified. This is useful for getting contracts closest to a date without having to determine the last date the contract was traded.\n\nConsider wanting contracts for WTI Crude that were traded 30 days before Christmas 2021, with Thanksgiving in the US being November 25, which date were contracts last traded? Specifying the dateFrom parameter as \"2021-12-25\" and the daysFrom parameter as 30 removes the guess work and gives the contract less-than-or-equal-to 30 days from the <dateFrom> parameter.\n\nUse the optional <month> parameter to get a specific month contract.\n\nUse the optional <inPast> parameter to specify if <daysFrom> should be added or subtracted from <dateFrom>. Setting <inPast> to false will result in contracts that fall after the given date. Default is true.\n\n**\u2734 Return Limited: 100 Objects\n\u2734 Oldest Date: 2010-01-01**\n\n*This endpoint will only return 100 objects per request. Use the <offset> parameter to paginate results.*"], ["Time Series", "This endpoint returns futures contracts over a specified date range for a given symbol. Use this endpoint for historical data.\n\nThe <to> parameter is optional. Not specifying this parameter will return all contracts between the given <from> parameter and the latest available date.\n\nUse the optional <month> parameter to get a specific month contract over the given period of time.\n\n**\u2734 Return Limited: 100 Objects\n\u2734 Oldest Date: 2010-01-01**\n\n*This endpoint will only return 100 objects per request. Use the <offset> parameter to paginate results.*"], ["Supported Assets", "This endpoint returns all symbols supported by the * last *and* time-series *endpoint."], ["Latest Contracts for Symbol", "This endpoint returns each of the latest futures contracts for a given symbol for the next twelve months.\n\nUse the optional *<month>* parameter to return the latest contract for a given month."]]}, "Crypto Update Live": {"tool_desc": "This API gives live updates about cryptocurrency prices and the latest news regarding it.", "apis": [["GET multiple coin details for your choice", "This endpoint gives live detailed information about the current value of multiple cryptocurrencies. Separate coin name using \"_\" underscore symbol."], ["GET top 50 cryptocurrencies details", "This endpoint gives all the details of the top fifty cryptocurrencies."], ["GET top 100 cryptocurrencies list", "This endpoint gives the list of the top hundred cryptocurrencies."], ["GET Cryptocurrency Details", "This endpoint gives live detailed information about the current value of a particular cryptocurrency."], ["GET top 100 cryptocurrencies details", "This endpoint gives all the details of the top hundred cryptocurrencies."], ["GET latest news on Cryptocurrency", "This endpoint returns all the news regarding cryptocurrency."], ["GET top 50 cryptocurrencies list", "This endpoint gives the list of the top fifty cryptocurrencies."], ["GET Top gainers losers list", "This endpoint gives the list of the top gainers and losers."]]}, "FreeFloatUs": {"tool_desc": "Manage your FreeFloatUs portfolio, download trades and upload executions.", "apis": [["trades/pending", "Get pending trades for your freefloat strategies."], ["portfolio", "Download your freefloat portfolio."]]}, "TND Exchange Rate": {"tool_desc": "GET the average exchange rate of TND against USD &amp; EUR", "apis": [["api", "GET the average exchange rate of TND against USD & EUR"]]}, "Number2Text": {"tool_desc": "This API helps to convert the numbers into equivalent words in different languages (English, French, German, Romanian, Spanish, Portuguese, Hungarian, Italian, Danish, Polish)", "apis": [["Get text from number", "This endpoint returns the text base from the number.\nLanguages: en, fr, de, ro, es, pt, hu, it, da, pl"]]}, "Number2Words": {"tool_desc": "Convert any digit's number into the equivalent words", "apis": [["Get", "Get equivalent words of this number"]]}, "FmpCloud": {"tool_desc": "Access stock prices.", "apis": [["Income Statement", "Get Company Income Statement In JSON format"], ["Cash Flow Statement", "Get Cash Flow Statement in JSON Format"]]}, "FinHost": {"tool_desc": "Highload digital white-label banking platform that helps financial businesses to grow fast, scalable and reliable.", "apis": [["/account/", "Return the list of the balances for the client accounts"], ["/posting/{account}", "List assets transfers for the account"], ["/recipient/search/{currency}", "Receive recipient info and default account"], ["/recipient", "List of the recipients for the client"], ["/sumsub/access-token", "Requests customer token to initialize Sumsub SDK"], ["/fee/payment", "Calculates transfer payment according to the fee plan"], ["/fee/plans", "Describes fee payments for the services"]]}, "CurrenciesExchangeRateAPI": {"tool_desc": "CurrenciesRatesAPI is a RESTful API that provides currency conversion and exchange rate information.This API is organized around REST.", "apis": [["4-Date Endpoint:", "Request Parameters:\n'date': \n'symbols': \n'base': \nResponse: This endpoint returns the exchange rates for the specified currencies on the specified date in JSON format."], ["6-TimeSeries Endpoint:", "Request Parameters:\n'start_date': \n'end_date': \n'base': \n'symbols': \nResponse: This endpoint returns the exchange rates for the specified currencies over the specified time period in JSON format."], ["5-Latest Endpoint:", "Endpoint URL:/latest?symbols=EUR&base=usd\nHTTP Method: GET\nRequest Parameters:\n'symbols': \n'base': \nResponse: This endpoint returns the latest exchange rates for the specified currencies in JSON format."], ["3-Fluctuation Endpoint:", "Request Parameters:\n'start_date': \n'end_date': \n'base': \n'symbols': \nResponse: This endpoint returns the percentage change in the exchange rates of the specified currencies over the specified time period in JSON format."], ["2-Convert Endpoint:", "Endpoint URL: /convert?to=USD&from=EUR&amount=100&date=2023-02-01\nHTTP Method: GET\nRequest Parameters:\n'to': The target currency symbol. (Required)\n'from': The source currency symbol. (Required)\n'amount': The amount to be converted. (Required)\n'date': \nResponse: This endpoint returns the converted amount and the exchange rate used for the conversion in JSON format."], ["1-AvailableSymbols Endpoint", "Endpoint URL: /availablesymbols\nHTTP Method: GET\nResponse: This endpoint returns a list of all the available currency symbols that can be used for conversion in JSON format.\nsupports 170 symbols for currencies"]]}, "Alpha Vantage": {"tool_desc": "Bolsa de valores", "apis": [["Busca por simbolo", "buscar dados pelo simbolo"]]}, "Open DeFi": {"tool_desc": "Open DeFi API gives you access to decentralised exchange trading data, liquidity and tokens across multiple blockchains.", "apis": [["web_candles", "Fetch candle data for a single trading pair.\n\nYou need to resolve the symbolic trading pair name to `pair_id` primary key with `/pairs` or `/pair-details`\nto call this API endpoint.\n\nCandle response size is limited to 10,000 candles. Only the first 10,000 candles\nsince the start timestamp is returned.\n\n[Inspired by Bitfinex API](https://docs.bitfinex.com/reference#rest-public-candles)."], ["web_pairs", "Query different combinations of the trading pairs.\n\nThe most common query is all trading pairs of a decentralised exchange.\n\n`/pairs?chain_slugs=ethereum&exchange-slugs=uniswap-v2`\n\nThe results are always paginated.\n\n## Parameter seralisation\n\nNote that lists are not JSON serialised, but use [OpenAPI query parameter serialization](https://swagger.io/docs/specification/serialization/). I.e. lists are comma separated, no spaces between items."], ["web_top_momentum", "Return top up and down 100 price changes for 24h.\n\nThe results are split for all trading pairs and trading pairs with $1M min liquidity."]]}, "Luhn algorithm": {"tool_desc": "Validate card numbers with Luhn algorithm", "apis": [["Validate card number", "Validates given card number"]]}, "QuantaEx Market Data": {"tool_desc": "Tickers Data of 24 hours Trading", "apis": [["24 Hours Tickers", "24 hours trading data"]]}, "CryptoInfo": {"tool_desc": "We collect news from more than 30 crypto/financial sources and process them using neural networks.", "apis": [["Get last 5 news", "Get last 5 actual and processed financial news"], ["Get last 5 economic calendar news", "Get last 5 actual and processed economic calendar news"], ["Get economic calendar news over a period of time", "You can get news from one date to another. Maximum from 30 days range"], ["Get news over a period of time", "You can get news from one date to another. Maximum from 1 day range"]]}, "Indian Bank Account Verification": {"tool_desc": "With the Bank Account Verification solution, you can now onboard with confidence knowing that that the individual\u2019s/ merchant\u2019s account details you have are genuine and indeed belong to the individual/ merchant that you are onboarding, thereby reducing the potential of fraud.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "CHART-IMG": {"tool_desc": "CHART-IMG.COM API designed to take screenshots of the most popular crypto charts and tools.", "apis": [["Advanced Chart", "This endpoint captures TradingView advanced real-time chart image."], ["Mini Chart", "This endpoint captures TradingView mini chart image."]]}, "crypto-news_v2": {"tool_desc": "Get the latest crypto news direct from your preferred sources.", "apis": [["CoinCu", "Get the latest news from CoinCu."], ["YahooFinance", "Get the latest news from Yahoo Finance."], ["CryptoNinjas", "Get the latest news from CryptoNinjas."], ["CoinJournal", "Get the latest news from CoinJournal."], ["CoinTelegraph", "Get the latest news from CoinTelegraph."], ["CoinDesk", "Get the latest news from CoinDesk."], ["All News", "Get news from all supported sources."], ["Top News", "Get the top latest news from CoinDesk.\n\nSelect number of articles to return. Maximum limit depends on the provider which is usually 50+ articles for CoinDesk. The first articles are the latest.\n\nExample URLs:\n/news/top/5\n/news/top/20\n/news/top/1000  (if only 50 articles are available then 50 is returned)"]]}, "stock-api": {"tool_desc": "Provide Stock API\n- Get Korean Gold Share\n- Get Stock Overview", "apis": [["Stock.GetLatestStock", "Get the latest stock information."], ["Stock.GetOverview", "Get the Stock Overview information."]]}, "Currency Converter_v2": {"tool_desc": "Convert between 160+ Currencies", "apis": [["Supported Currencies", "get a list of currencies we support"], ["Convert", "Convert from one currency toanother"]]}, "DAX": {"tool_desc": "How many points did the DAX40 stock index gain or lose each month (during this period: Jan-Aug, 2022).", "apis": [["DAX point changes for each month (January-August, 2022)", "Gets the actual points, gains and losses for each individual month."]]}, "Stocks": {"tool_desc": "Get the the stocks informations using a REST API simple and free.", "apis": [["Get the stock history by exchange code and stock code", "Get the stock history by exchange code and stock code."], ["Get the current stock by exchange code and stock code", "Get the current stock by exchange code and stock code."], ["Get the stock history by code", "Get the stock history by code."], ["Get the current stock by code", "Get the current stock by code."]]}, "Currency Converter_v3": {"tool_desc": "It allows you to convert one currency to another based on the current exchange rate.", "apis": [["converter", "This endpoint is used to perform currency conversion between multiple currencies. The endpoint accepts input parameters in the form of the amount of money, source currency, and one or more target currencies."], ["currencies", "Endpoint to retrieve all supported currencies."]]}, "CalcX - Investment API": {"tool_desc": "This API calculates the simple interest, compound interest, investment returns, return on investment, capital gains tax, and annual percentage yield of an investment based on the input parameters.", "apis": [["GET - Calculate Investment", "This endpoint performs multiple investment calculations in a single request. It accepts a list of investment parameters, such as principal amount, rate of return, time period, and compounding frequency, and returns a list of investment results, including the simple interest, compound interest, investment returns, return on investment, capital gains tax, and annual percentage yield of each investment."]]}, "Consulta de boleto": {"tool_desc": "Consulte se um boleto j\u00e1 foi pago ou n\u00e3o, e caso n\u00e3o tenha sido pago, tenha as informa\u00e7\u00f5es do boleto, tais como: Vencimento, banco emissor, nome e documento do benefici\u00e1rio, valor, etc.", "apis": [["consulta", "Recebe como par\u00e2metro de busca, a linha digit\u00e1vel do boleto e devolve as informa\u00e7\u00f5es do mesmo."]]}, "Crypto Symbols by API-Ninjas": {"tool_desc": "Get a complete list of hundreds of cryptocurrency ticker symbols.", "apis": [["/v1/cryptosymbols", "API Ninjas Crypto Symbols API"]]}, "Insiders": {"tool_desc": "Detailed inside transactions for publicly listed companies.", "apis": [["gedetailedtinsiders", "Get insiders with details"]]}, "Bank SWIFT codes": {"tool_desc": "Lookup country banks and their SWIFT codes", "apis": [["SWIFT codes by country", "Returns list of SWIFT codes for a country (use two letter ISO country code)"], ["Banks by country", "Returns list of banks for a country (use two letter ISO country code)"], ["SWIFT code", "Returns details of a SWIFT code"]]}, "RedStone": {"tool_desc": "RedStone API provides pricing data for crypto, stocks, currencies and commodities", "apis": [["Prices", "Redstone HTTP API currently has a single yet very powerful endpoint, which allows you to fetch prices data."]]}, "UniBit AI": {"tool_desc": "UniBit aggregates and analyzes financial events for thousands of companies", "apis": [["Realtime Stock Price", "This API returns intraday time series data for any specified stock."]]}, "CalcX -  Loan Calculator": {"tool_desc": "The CalcX Loan Cost Calculator is a simple API that calculates the cost of a loan and generates an amortization schedule.", "apis": [["GET - Calculate Loan Cost", "This endpoint calculates the total cost of a loan given the loan amount, interest rate, and repayment term."]]}, "Crypto News API": {"tool_desc": "Get The Latest Crypto News", "apis": [["Get Last Cryptocurrency News", "This end point returns all the latest articles on cryptocurrency"]]}, "The Shrimpy Universal Crypto Exchange Interface": {"tool_desc": "The industry leading API for crypto trading, real-time data collection, and exchange account management.", "apis": [["Get Ticker", "This endpoint retrieves all Shrimpy supported exchange assets for a particular exchange along with pricing information. The pricing information is updated once per minute."]]}, "Candlestick Chart": {"tool_desc": "This API returns candlestick charts images (base64) so you can use them wherever you want!", "apis": [["Binance charts", "This endpoint creates candlestick charts for any cryptocurrency listed on [Binance](https://www.binance.com) that you want!"]]}, "Yahoo Finance": {"tool_desc": "Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more", "apis": [["news", "returns latest news articles related to symbol passed as parameter"], ["Trend", "This reflects the insurance company's profits over given periods of time.\nThis endpoint also gives **experts** & **AI supported predictions** about stock future behavior"], ["index", "Trend Analysis is a relatively straightforward quantitative demand forecasting technique that uses the historical relationship between the operational index (i.e. sales level) and the number of employees required by the organization (demand for labour) to forecast future requirements."], ["historic-data", "return historic data\ninterval - The time interval between two data points. Can be 1m 2m 5m 15m 30m 60m 90m 1h 1d 5d 1wk 1mo 3mo\nrange - The range for which the data is returned.\n\nfor normal stocks :\nyou can directly search by tickername:\neg. tsla , msft , meta\n\nfor crypt:\ntry searching by ticker name followed by -USD.\nfor bitcoin try : btc-usd"], ["balance-sheet", "A **balance sheet** is a financial statement that communicates the so-called \u201cbook value\u201d of an organization, as calculated by subtracting all of the company's liabilities and shareholder equity from its total assets."], ["price", "Returns the Stock Price Information for the symbol passed as parameter\n\nfor normal stocks :\nyou can directly search by tickername:\neg. tsla , msft , meta\n\nfor crypt:\ntry searching by ticker name followed by -USD.\nfor bitcoin try : btc-usd\nfor eth try : eth-usd\nfor dogecoin try : doge-usd"], ["ESG", "Simply explained, an ESG score is a measure of a company's exposure to long-term environmental, social, and governance risks that are often overlooked during traditional financial analyses."], ["finance-analytics", "This API endpoint also returns **AI recommendation**\nFinancial analysis refers to an assessment of the viability, stability, and profitability of a business, sub-business or project. It is performed by professionals who prepare reports using ratios and other techniques, that make use of information taken from financial statements and other reports."], ["earnings", "A company's earnings are its after-tax net income. This is the company's bottom line or its profits. Earnings are perhaps the single most important and most closely studied number in a company's financial statements.\nThis API **also** returns **historical earnings**"], ["Statistics", "Key Statistics are **important points of financial data that allow you to quickly view and ascertain transaction history**, as well as provide insight into donation trends. These statistics can be found both on the Dashboard as entire database summaries and on an individual basis at the top of each entity record."], ["search", "search for tickers with similar name"]]}, "Exchange Rate by API-Ninjas": {"tool_desc": "Get current exchange rates for currency pairs.", "apis": [["/v1/exchangerate", "API Ninjas Exchange Rate API endpoint."]]}, "Smile": {"tool_desc": "Smile provides user-authorized access to valuable employment and income data from HR, payroll, commerce, and marketplace platforms through a single API!", "apis": [["list-identities", "Get a user's identity profiles from employment data sources."], ["list-invites", "Get the list of invites sent out to users."], ["list-incomes", "Get the user's incomes from employment data sources."], ["get-user", "Get a particular user profile."], ["get-invite", "Get invite sent to users by ID."], ["get-identity", "Get the user's identity profile by ID."], ["list-providers", "Get a list of employment data providers from the Smile Network."], ["list-employments", "Get the user's previous employments."], ["list-webhooks", "List all webhook endpoints."], ["list-ratings", "Get the user's ratings from employment data sources."], ["get-rating", "Get a user's ratings by ID."], ["get-provider", "Get a data provider from the Smile Network."], ["list-users", "List users from the Smile Network."], ["list-contributions", "Get the user's social security contributions from employment data sources."], ["get-upload", "Get a user's upload by ID (deprecated)."], ["get-income", "Get the user's income by ID."], ["get-contribution", "Get the user's contribution by ID."], ["get-webhook", "Get a webhook endpoint."], ["list-uploads", "Get the user's uploads (deprecated)."], ["list-invite-templates", "Get the list of invite templates."], ["get-employment", "Get a user's employment by ID."], ["get-transaction", "Get a user's transaction by ID."], ["list-transactions", "Get the user's transactions from employment data sources."], ["list-archives", "Get the user's archives."], ["get-account", "Get a user's particular account information."], ["get-archive", "Get a user's archive by ID."], ["list-file-types", "Get the available file types for uploads."], ["list-accounts", "Get a list of user accounts."], ["list-documents", "Get the user's documents from employment data sources."], ["get-document", "Get a user's document by ID."]]}, "Currency_v2": {"tool_desc": "Find currency and bitcoin prices.", "apis": [["exchange", "The currency converter service that converts the entered rate into the desired exchange rate."], ["cripto", "Bitcoin and Altcoins prices, changes in the instant service."], ["currencyToAll", "Service that converts the entered exchange rate to other currencies."], ["symbols", "Service that brings the names and symbols of exchange rates."]]}, "Currency Converter_v5": {"tool_desc": "Created from VS Code", "apis": [["Exchange currency and show thier countries", "A simple API that allows you to exchange a specific currency to another, and see in which countries you can use this currency"]]}, "I am rich": {"tool_desc": "I'am rich", "apis": [["iamrich", "Since so many people asked for it.\n\nBe part of the fun !"]]}}, "Translation": {"Language Detection_v2": {"tool_desc": "Detection of all possible languages with probability scores.", "apis": [["Language Codes List", "Return list of language codes in ISO 639-1 format."]]}, "Microsoft Translator Text": {"tool_desc": "An AI service from Microsoft Azure that enables you to easily conduct real-time text translation.", "apis": [["Languages", "Gets the set of languages currently supported by other operations of the Translator Text API."]]}, "Neuro High-quality Translation": {"tool_desc": "High-quality text translation based on neural networks and our own multi-model", "apis": [["List of available languages", "Language list for translation into both directions"]]}, "Translef - translator": {"tool_desc": "Translate text to 85+ languages.", "apis": [["List of available languages", "This method returns a list of language codes that will be needed in the method to translate the text"]]}, "Deep Translate": {"tool_desc": "100x cheaper than Google Translate.", "apis": [["languages", "You can discover the supported languages of this API by sending an HTTP request using a URL of the following format"]]}, "Long Translator": {"tool_desc": "Translate text into other languages.", "apis": [["languages", "This endpoint is used to get a list of available language codes"]]}, "Text Translator_v2": {"tool_desc": "Translate text to 100+ languages \u200b.", "apis": [["getLanguages", "This endpoint is used to get a list of available language codes"]]}, "AI Translation APIs": {"tool_desc": "The AI Translate API supports more than 60 different languages.", "apis": [["Supported Languages List", "Get Supported Languages List That  AI Translation APIs Support"]]}, "Translate_v3": {"tool_desc": "Easy and reliable Machine Translation  and Language Detection", "apis": [["Accurate Language Detection", "This endpoint will return the Language of the Text"], ["Fast Language Detection", "This endpoint will return the Language of the Text"], ["Translate", "Return Translated Text and the source language if it wasn't specified"]]}, "Webit Language": {"tool_desc": "A.I.", "apis": [["Bilingual Dictionary", "Powerful multi-language bilingual neural translation dictionary, supporting 80+ languages."], ["Transliterate (Any to Latin)", "Transliteration endpoint provides you with transliteration of text from any language to Latin. Transliterate \"\u3053\u3093\u306b\u3061\u306f\" to \"kon'nichiha\" with ease."], ["Autocomplete", "This endpoint provides autocomplete (word completion) for 80+ languages."]]}, "Translator": {"tool_desc": "Text Translation", "apis": [["Get Languages", "Get all supported languages"]]}, "Fast And Highly Accurate Language Detection": {"tool_desc": "Fast and highly accurate (99.9% accuracy for most major languages*) language detection in 176 languages based on the Fast Text Machine Learning model.", "apis": [["Languages", "Endpoint to return language information."]]}, "Nitro": {"tool_desc": "The Nitro API provides automated access to Nitro, a professional human-powered translation service with support for 70+ languages.", "apis": [["Get a Specific Order", "This endpoint retrieves a specific order."], ["Account", "This endpoint retrieves an account."], ["Get All Orders", "This endpoint retrieves all account orders."], ["Rates", "This endpoint retrieves all rates."]]}, "Indic-Translator": {"tool_desc": "Indic Translator is an advance AI based Translator Indian languages translator API.", "apis": [["queryTranslator/", "For translating an English sentence (query) to Hindi."]]}, "Simple & Elegant Translation Service": {"tool_desc": "Simple & Elegant Translation Service.", "apis": [["To get a list all the supported languages by this API Endpoint", "To get a list all the supported languages, execute this API, https://translate.pregnya.com/getSupportedLanguages"]]}, "RushTranslate": {"tool_desc": "Human powered document translation API.", "apis": [["Get File", "Get detailed information about a specific file."], ["List Languages", "Get the list of languages we support. The language codes included in the response will be required when placing orders via the API."], ["Get Order", "Get detailed information about a specific order."], ["Get Revision", "Get detailed information about a specific revision."], ["Create File", "Creates a new file. File uploads are limited to 100Mb in size. Each file may be attached to only one resource after creation."], ["Download File", "Retrieve a temporary download URL for the file. Files are encrypted and stored in an Amazon S3 bucket. When you want to download a file this request will generate a temporary signed URL allowing access to download the file securely. URLs expire after two minutes."], ["List Revisions", "Get a paginated list of your revisions sorted in descending order by requested_at date."], ["List Orders", "Get a paginated list of your orders sorted in descending order by received_at date."]]}, "Translate it": {"tool_desc": "Api translator, with this api you could get translate your text easily from one of the supported languages to another one", "apis": [["options", "With this endpoint you can get the supported languages and the possible translations between them"]]}, "Rapid Translate": {"tool_desc": "Translate texts between 50+ natural languages.", "apis": [["Get Languages", "Returns supported language  list."]]}, "English synonyms": {"tool_desc": "Get all english synonyms from a given word", "apis": [["Get Synonyms", "Get all synonyms from a given english word"]]}, "Cheap Translate": {"tool_desc": "translate via google translate, bing translate", "apis": [["/goo/translate/languages", "Get all Goog supported language"], ["/translate/languages", "Get all supported language"]]}, "Tribal Mail - Translate": {"tool_desc": "A fast, affordable, and accurate translation API for publishers, websites, and businesses.", "apis": [["Allowance", "This endpoint shows your current left over allowance for the month."]]}, "Bidirectional Text Language Translation": {"tool_desc": "Per request pricing, not character based.", "apis": [["Translate", "takes source text, from language and to language and provides results in a very simple object.\nLanguages specified are in two character ISO codes.\nif lang_from is not specified it will be auto detected."], ["Detect Language", "If you want to detect language only and not translate you can provide the text parameter and the detected language will be provided in the results"], ["Get Supported Languages", "takes no inputs and provides an array of supported language with iso 2 code and name of language in english."]]}, "Dictionary by API-Ninjas": {"tool_desc": "Look up any word in the English dictionary.", "apis": [["/v1/dictionary", "API Ninjas Dictionary API endpoint."]]}, "AIbit translator": {"tool_desc": "\u2713 Blazing Speed, Reliability, Availability.", "apis": [["Get Supported Languages", "Get list support languages by AIbit"]]}, "Translate All Languages": {"tool_desc": "Translate All Language -  Text Translator\n\n100x cheaper than Google Translate.", "apis": [["Translate", "Translates input text, returning translated text"], ["Languages", "Returns a list of supported languages for translation."], ["Detect", "Detects the language of text within a request."]]}, "Translate Plus": {"tool_desc": "Dynamically Translate between languages with the Translate Plus API.", "apis": [["supported_languages", "The languages which out api supports."]]}}, "SMS": {"SMS_v3": {"tool_desc": "Send SMS using your own android phone as the gateway.", "apis": [["send", "use this to send the sms."]]}, "Phone verification": {"tool_desc": "Validate any phone number across the USA, in bulk or single.", "apis": [["Download Verification Results", "This endpoint returns the result file to be downloaded.\n\nPass name of file to be downloaded as path param. Result file name is always in format {filename}_output.xlsx Replace {filename} with the name returned from upload file call.\n\nTo download the file with angular follow sample code here\n\nhttps://stackoverflow.com/questions/40240796/angular-2-best-approach-to-use-filesaver-js"], ["Verify Single Number", "Get the details of phone number supplied in the query param. Do not forget to pass Authorization header with your access_token. \n\nHint - access_token are returned as part of login api call."], ["Get Processing Status of File", "This endpoint gives you status of file uploaded for verification."]]}, "Branded SMS Pakistan": {"tool_desc": "Branded SMS Pakistan provide Mask or Short Code Messaging Gateway in Pakistan", "apis": [["Send Message to Multiple Numbers", "This API is useful to send a branded sms to multiple numbers"], ["Send Single Message", "This API is useful to send a branded sms to single number"]]}, "Virtual Number": {"tool_desc": "Receive SMS for phone verification", "apis": [["Get All Countries", "Get the list of currently available countries"], ["View SMS history", "View All received SMS for the given number and country id"], ["Get Number By Country Id", "Get currently available numbers list by given country id"]]}, "Rivet SMS": {"tool_desc": "Rivet SMS API offers programmable SMS APIs, so you can get maximum value from your messages.", "apis": [["Sent Message Status", "Get the sent message status of the message using the message id."], ["Get Sender ID", "Get the list of all Sender ID that are registered for your account to send SMS."], ["Bulk SMS", "Send bulk sms  to multiple numbers ."]]}, "D7 Verify": {"tool_desc": "Elevate your verification process to new heights with D7 Verifier API - the ultimate solution for phone number verification!", "apis": [["Get OTP Status", "Get the status of OTP generated or verified"], ["Check Balance", "Get information about current balance on your D7API account"]]}, "D7SMS": {"tool_desc": "Unlock boundless connectivity with D7API Gateway, seamlessly connecting you to the world's vast messaging network through D7's exclusive network access", "apis": [["Get OTP Status", "Get the status of OTP generated or verified"], ["Get Message Status", "Get Message Delivery Status of previously sent messages."], ["D7API - Check Balance", "Get information about current balance on your D7API account"]]}, "PhoneNumberValidate": {"tool_desc": "Validate any phone number in any country", "apis": [["ValidateTest", "Validate any phone number from any country. For testing purposes only."], ["Validate", "Validate any phone number from any country."]]}, "PhoneNumberValidateFree": {"tool_desc": "Free and easy.", "apis": [["Validate", "Free and easy. Validate any phone number, from any country.\nGet type of number (for example, fixed line or mobile), the location of the number, and also reformat the number into local and international dialing formats."]]}, "SMSto": {"tool_desc": "Implement SMS notifications, OTP, reminders, etc.", "apis": [["Get messages", "Fetch paginated messages.\n\nPlease note that the messages will be sorted by the date of creating (sending) - latest first."], ["Get last campaign", "Get the last campaign that you have sent"], ["Get message by id", "Get the message that you have sent by ID"]]}, "sms77io": {"tool_desc": "Send SMS & text-to-speech messages, perform phone number lookups and much more via sms77.io.", "apis": [["Get Contacts", "Retrieves all contacts for a given API key."], ["Get Status", "Get a delivery report for a message ID sent with your API key."], ["Get Pricing", "Retrieves pricing information for a single country or all."], ["Get Balance", "Retrieves the account balance for the given API key."], ["Outbound", "Retrieves outbound messages history."], ["Inbound", "Retrieves inbound messages history."], ["Replies", "Retrieves message replies history."], ["Read", "Retrieves information regarding subacounts."], ["Get Analytics", "Get detailed statistics of your account directly through our API."], ["Get Webhooks", "Retrieves all existing webhooks."], ["Voice", "Retrieves voice messages history."]]}, "SMS Receive": {"tool_desc": "Integrate receiving SMS message into your apps and applications, enabling automation based on incoming text messages.", "apis": [["/GetNumbers", "Get a list of available numbers to receive messages from."], ["/SetTag", "Change the current tag."], ["/GetUpdates", "Get updates about newly received messages."], ["/GetTag", "Get the current tag."]]}}, "Energy": {"Marktdaten Deutschland": {"tool_desc": "Prognose des regionalen Strompreises", "apis": [["marketdata", "Abruf einer regionalen Prognose des Strompreises."]]}, "ecoweather": {"tool_desc": "Economically relevant meteorological data like heat degree days, average temperature.", "apis": [["Schneetage", "Beantwortet die Frage, wie viel Schnee und an wie viel Tagen innerhalb eines Zeitraums vorhanden gewesen ist. Wird verwendet zum Beispiel bei der Einsatzplanung im Winterdienst und Hausmeisterservice sowie im Tourismus."], ["Heizgradtage", "Beantwortet die Frage, wie viele Heizgradtage innerhalb eines Zeitraums vorhanden gewesen sind. Wird verwendet zum Beispiel bei der unterj\u00e4hrigen Abgrenzung von Heizkosten bei der Nebenkostenabrechnung."], ["Niederschlag", "Beantwortet die Frage, wie viel Niederschlag innerhalb eines Zeitraums vorhanden gewesen ist. Wird verwendet zum Beispiel bei der Dimensionierung von Regenwassernutzung (Zisterne) oder bei der Planung von G\u00e4rten ."], ["ecoweather", "Retrieve historical weather data for a location. Dataset lasts back until year 2016. Results are limited to 366 days (1 year)  per request."]]}, "Regionalkonzept Strom Herkunft": {"tool_desc": "Access to quality items and classifiers in regional energy markets (Regionale Herkunftsnachweise)  in Germany.", "apis": [["erzeugung", "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Verbraucher sein d\u00fcrfen, die  von einer Erzeugungsanlage von angegebener Postleitzahl ihren Strom beziehen sollen.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/erzeugung?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Verbraucher sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn dessen Netzeinspeisung (Erzeuger) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021"], ["Strommix", "Resultierender Strommix nach Anwendung der regionalen \u00d6kostromerzeugung im Gebiet einer Postleitzahl."], ["entnahme", "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Erzeugungsanlagen sein d\u00fcrfen, die  f\u00fcr einen Verbraucher (Entnahme) an gegebener Postleitzahl ist.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/entnahme?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Erzeugungsanlage sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn die Netzentnahme (Verbrauch) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021"]]}, "Electricity Carbon Footprint Germany": {"tool_desc": "CO2 Footprint of current electricity in Germany.", "apis": [["CO2 Emission", "The CO2 Emission endpoint will provide carbon emissions in grams per Kilo-Watt-Hour.  To latest and historical footprint information for electricity in Germany."]]}, "Europe Fuel Prices": {"tool_desc": "Fuel prices from European Commision website", "apis": [["Get specific country", "Get fuel prices for a specific country"], ["All Countries", "Get all of Europe countries Fuel prices"]]}, "CAISO": {"tool_desc": "API for California Independent System Operator data provided from caiso.com.", "apis": [["caiso", "Gets standard CAISO data"], ["caisonode", "Returns nodes where prices are tracked by CAISO"], ["caisoregion", "Gets Regional Authorities where node prices are tracked by CAISO"], ["caisoprice", "Fetches hourly CAISO price data"]]}, "CO2 Offset": {"tool_desc": "GreenHouseGas/CO2 compensation as a service.", "apis": [["List existing Compensations", "Returns a list of all existing co2offset certificates linked to account."], ["Retrieve Compensation", "Response contains full compensation details (if exists, and owner is account)."]]}}, "Cryptography": {"Reddio NFT, Token and IPFS": {"tool_desc": "Reddio APIs provide the layer 2 zkRollup APIs powered by StarkEx from StarkWare, enabling 0 gas fee on layer 2 and 10k TPS.", "apis": [["GetAssetsbycontractinformation", "This request will return asset_id wrapped with return code and error code"], ["GetAssetsdetailbyassetid", "The API can query every asset_id that exists on reddio's system, if the FT/NFT is not on reddio's system, then the API will not work well\n\nThe API returns assets detail including contract_address, type, token_id(if type is ERC721 or ERC721M), quantum and token owners(owns by who)"], ["GetOrderbyOrderID", "The API will return the order related to the order id\n\nThere are many informations it returns\n\n| **field** | **description** |\n| --- | --- |\n| order_id | the id of the order, it is the same value as sequence id |\n| stark_key | the stark_key of who place the order |\n| price | the price of the NFT, when need a human-readable value, display_price is the human-readable value |\n| display_price | the price that human-readable |\n| direction | 0 for sell, 1 for buy |\n| amount | the amount to buy or sell |\n| un_filled | how many tokens are unfilled |\n| symbol | a structure contains base and quota token, also have token id in it |\n| fee_rate | the fee_rate |\n| token_type | the token type |\n| token_id | the token ID |\n| order_state | the state of the order |\n| resp | if there has some error, the field will be set |\n\nThe enum value of order_state is\n\n| Status | Value |\n| --- | --- |\n| Placed | 0 |\n| Canceled | 1 |\n| Filled | 2 |\n| PartiallyFilled | 3 |\n| ConditionallyCanceled | 4 |"], ["Getwallets", "The return field as following\n\n| **field** | **description** |\n| --- | --- |\n| stark_key | the stark public key |\n| stark_private_key | the stark private key |"], ["Aggregationbalanceofastark_keybycontractaddress", "The API aggregation balances by contract address, for previous API, each NFT have an asset_id, but in this API. NFT do not have asset_id when return, but has token id"], ["Listallcollections", "The API lists all collections on Reddio's layer2 system.\n\nThe return field is like the following descrption\n\n| **field** | **description** |\n| --- | --- |\n| contract_address | The contract address |\n| symbol | The symbol of |\n| type | ERC721 or ERC721M |\n| total_supply | Total Supply of the token |\n| base_uri | The base uri of NFT |\n| asset_type | The asset type is calculated by reddio, the definition is [here](https://docs.starkware.co/starkex/spot/shared/starkex-specific-concepts.html#computing_asset_info_asset_type_asset_id) |"], ["Balancesofstark_key", "The API retrieves the balance of a stark_key, each return value are as the previous field"], ["Balanceofstark_keyandasset_id", "This API retrieves the balance of a stark_key and asset_id\n\nThe return values description\n\n| **key** | **description** |\n| --- | --- |\n| asset_id | The asset's id |\n| contract_address | The contract address of ERC20/ERC721/ERC721, if the asset_id's type is ETH, it will return \"eth\" as a placeholder |\n| token_id | The NFT token ID(this field is set when type is ERC721 or ERC721M) |\n| base_uri | The NFT base uri(this field is set when type is ERC721 or ERC721M) |\n| available | The available balance on layer 2. |\n| frozen | The frozen balance on layer 2. |\n| type | Type of token, Possible enum values is ETH, ERC20, ERC721, ERC721M |\n| symbol | The symbol of ERC721/ERC721M or ERC20(\"ETH\" for ETH) |\n| decimals | The decimals of asset, for ETH is 18, ERC721/ERC721M is 1, and for ERC20, it is based the contracts, [here](https://medium.com/@jgm.orinoco/understanding-erc-20-token-contracts-a809a7310aa5) is more explain about decimals on Ethernum |\n| quantum | quantum is a starkex concept, it is auto-set when the contract is registered to reddio. [here](https://docs.starkware.co/starkex/spot/shared/starkex-specific-concepts.html) is more explain about quantum |\n| display_value | deprecated,use `available` instead |\n| display_frozen | deprecated,use `frozen` instead |\n| balance_available | The available balance represents on layer 2. Keep attention that it need to be converted with quantum and decimals if you need to use this field. All SDK hands this value, so most of the time you do not need to care about it. |\n| balance_frozen | The frozen balance represents on layer 2. Keep attention that it need to be converted with quantum and decimals if you need to use this field. All SDK hands this value, so most of the time you do not need to care about it. |"], ["GetOrderInfo", "This API is to get order related information, such as the asset id of base/quota tokens. nonce and vaults related to stark_key\n\n**If you use SDKs(including java/unity/js), you do not need to care about the order info interface, it is already handled by SDK internally**\n\nthe contract1 and contract2 values are like\n\n{type}:{contract_address}:{token_id}\n\nThere are many informations it returns\n\n| **field** | **description** |\n| --- | --- |\n| fee_rate | the upper fee_rate allowed by reddio and marketplace. that is, if reddio & marketplace charge's more then the rate, the order will fail |\n| base_token | base token asset id, in general, if you trade using ETH for NFT, then the base token is ETH's asset id |\n| fee_token | which token as a fee, in general, it is the same as base_token |\n| lower_limit | the lower price of the NFT |\n| nonce | the nonce of the stark_key |\n| contracts | the contracts info of contract1 and contract2 |\n| asset_ids | the asset ids of contract1 and contract2 |\n| vault_ids | first vault id is generated by the stark_key and first asset id, the second vault id is generated by the stark_key and second asset id(you can see the asset_ids above) |"], ["Listcolloction'snftowners", "The api returns a collection's nft owners.\n\nThe response field description\n\n| **field** | **description** |\n| --- | --- |\n| contract_address | the contract_address of the collection |\n| token_id | the NFT token id |\n| owner | the owner of the NFT |\n| symbol | the NFT's symbol |\n| asset_id | the token's asset id |"], ["Listfilesunderproject", "It will list files under the project, the response item like\n\n| **field** | **description** |\n| --- | --- |\n| cid | [Content Identifiers](https://docs.ipfs.tech/concepts/content-addressing/#what-is-a-cid) |\n| filename | The stored file name |\n| created_at | first create time |\n| filesize | file size(in byte) |\n| endpoints | the endpoints you can view the file |"]]}, "Cryptocurrency News": {"tool_desc": "Get the latest crypto news direct from your preferred sources (fast & reliable).", "apis": [["CoinDesk", "Get the top latest news from CoinDesk."], ["Bitcoinist", "Get the top latest news from Bitcoinist."], ["Cointelegraph", "Get the top latest news from Cointelegraph."], ["The Guardian", "Get the top latest news from The Guardian."], ["BSC News", "Get the top latest news from BSC News."], ["Decrypt", "Get the top latest news from Decrypt."]]}, "secure-text-api": {"tool_desc": "This project created for serve api endpoints to encrypt and decrypt text via http request", "apis": [["getKey", "This endpoint will generated publickey and privatekey.\nIt response **msgCode** as six character string.\n\nClient can use this code to verify owner of key, \nwhen calling encrypt and decrypt endpoint.\n\n*** After decrypt ciphertext this code will inactive, \nclient need to call getKey again to get new code"]]}}, "Location": {"UK PostCode API": {"tool_desc": "Auto populate your app & service with accurate and comprehensive PAF & Geocoding data from the Royal Mail", "apis": [["/postcodes/{postcode}", "Gets addresses for the given UK PostCode"], ["/addresses/autocomplete", "Suggests address results for a given search term."], ["/addresses", "Gets addresses for given search term."], ["/udprn/{udprn}", "Gets addresses for given search term."]]}, "Reverse Geocoding_v3": {"tool_desc": "Translate locations on the map into human-readable addresses.", "apis": [["Reverse Geocoding", "Translate locations on the map into human-readable addresses."]]}, "Location to Timezone": {"tool_desc": "Translate latitude & longitude coordinates to a timezone string.", "apis": [["Convert Coordinates to Timezone String", "This endpoint converts coordinates(latitude,longitude) to a timezone string which can be used for time calculations."]]}, "Geocoder - United States Census Bureau": {"tool_desc": "Census geocoder provides interactive & programmatic (REST) access to users interested in matching addresses to geographic locations and entities containing those addresses.", "apis": [["Geocoding for an address", "Returns a geocode for a specified address"], ["Geocoding and Geolookup for an address", "Returns a geocode and a geolookup for a specified address"]]}, "Tanzania API": {"tool_desc": "The Tanzania API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Tanzania.", "apis": [["Measure Distance", "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Arusha to Dar es Salaam**"], ["Geocode", "This endpoint allows you to lookup locations in Tanzania by providing an address query parameter. It returns the latitude, longitude and city name of the location."], ["Directions Between 2 Locations", "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Arusha to Dar es Salaam**"], ["Facilities Lookup", "This endpoint allows you to get facilities in Tanzania like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters."], ["Reverse Geocode", "This endpoint allows you to perform reverse geocoding in Tanzania by providing query parameters for latitude and longitude. It returns the name of the address where the location is located."]]}, "Itcooking.eu - IP Geolocation": {"tool_desc": "IP Geolocation REST API by Itcooking.eu.", "apis": [["/geoip/v1/lite/GetIpInfoLite", "Identifying location for 1 IP address."]]}, "BDapi": {"tool_desc": "BD API is a RestAPI service.", "apis": [["All Divisions", "`/v1.0/divisions`\nGet all divisions of Bangladesh in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  division: string\n  divisionbn: string\n]\n```"], ["v1.0", "`/v1.0`\nPrefix endpoint for version 1.0\nResponse provides a list of available endpoints in version 1.0"], ["All Districts", "`/v1.0/districts`\nGet all Districts of Bangladesh in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  district: string,\n  districtbn: string\n]\n```"], ["District detail of specific Division", "`/v1.0/division/{division_name}`\nGet all Districts and Upazila of any Division.\n\n**Response:**\n```\nstatus: object,\ndata: [\n  _id: string:district,\n  district: string,\n  upazilla: array\n]\n```"], ["v1.1", "`/v1.1`\nPrefix endpoint for version 1.1\nResponse provides a list of available endpoints in version 1.1"], ["All Divisions with Coordinates", "`/v1.1/divisions`\nGet all divisions with coordinates in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  division: string,\n  divisionbn: string,\n  coordinates: string\n]\n```"], ["All Districts with Coordinates", "`/v1.1/districts`\nGet all Districts with their Coordinates in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  district: string,\n  districtbn: string,\n  coordinates: string\n]\n```"], ["District detail and Coordinates of specific Division", "`/v1.1/division/{division_name}`\nGet all Districts, Coordinates, and Upazila of any Division.\n\n**Response:**\n```\nstatus: object,\ndata: [\n  _id: string:district,\n  district: string,\n  coordinates: string\n  upazilla: array\n]\n```"]]}, "IP Geolocation Lookup": {"tool_desc": "API returns location data such as country, region, city, zip and more", "apis": [["IP Geolocation Lookup", "API returns location data such as country, region, city, zip, timezone, isp, asn and org and more"]]}, "IP forensics - IP Geolocation, Currency Exchange And Threat Intelligence API": {"tool_desc": "IP Geolocation, Currency Exchange And Threat Intelligence API\n\nUnderstand your audience and act upon \u2014 locate visitors by IP address, enrich forms, target mobile users, detect VPNs, prevent online fraud, analyze logs, perform geo IP redirections, and more.", "apis": [["Single Lookup", "## Single Lookup\n\nThis is the primary IpForensics endpoint. It is used to look up any given IPv4 or IPv6 addresses. \n\nTo call this endpoint, simply attach an IP address to the API's base URL (HTTP GET method):\n\n**Each request to the single IP lookup endpoint consumes 1 token.**"]]}, "NAVITIME Geocoding": {"tool_desc": "Return address informations including longitude/latitude and a postal code, by specifying keywords or a postal code.", "apis": [["address", "Return address information such as a postal code or latitude/longitude from free keyword of request parameters."], ["address_code", "Return address information from address code of request parameters."], ["address_postal_code", "Return address information from postal code of request parameters."], ["address_autocomplete", "Return address predictions from the specified keyword of request parameters."]]}, "C\u00f3digos Postales de Espa\u00f1a": {"tool_desc": "Es una API que permite a los usuarios encontrar el municipio correspondiente a un c\u00f3digo postal espec\u00edfico en Espa\u00f1a.", "apis": [["Municipio por c\u00f3digo postal", "Obtiene el municipio al que pertenece un c\u00f3digo postal"]]}, "Nigeria API": {"tool_desc": "Welcome to the Nigeria API!", "apis": [["Directions Between 2 Locations", "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Kaduna to Maiduguri**"], ["Measure Distance", "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance between Lagos and Abuja**"], ["Reverse Geocode", "This endpoint allows you to perform reverse geocoding in Nigeria by providing query parameters for latitude and longitude. It returns the name of the city where the location is located."], ["Facilities Lookup", "This endpoint allows you to get facilities in Nigeria like hospital, bank, college, etc. by providing optional query parameters for facility type, state and city. It returns a list of facilities that match the query parameters."], ["Geocode", "This endpoint allows you to lookup locations in Nigeria by providing an address query parameter. It returns the latitude, longitude and city name of the location."]]}, "CatchLoc": {"tool_desc": "[For Gper Owner Only] Catchloc is a platform that controls the location and information collected by spacosa's devices.", "apis": [["[Group Management] API access for registered group list", "API access for group information.\n\nrequired parameter : api (api.common.group.get.list)"], ["[Group Management] API access for device's group list", "API access for location object's group list.\n\nrequired parameter : api (api.common.group.get.object.group.list)"], ["[Group Management] API access for Group's device list", "API access for location object group's device list.\n\nrequired parameter : api(api.common.group.get.group.object.list)"], ["[Group Management] API access for creating group", "API access for location object's group designation and creation.\n\nrequired parameter : api (api.common.group.set.add)"], ["[Group Management] API access for modifying group information", "API access to modifying location object's group information\n\nrequired parameter : api (api.common.group.set.modify)"], ["[Group Management] API access for removing group information", "API access to remove location object's group information.\n\nrequired parameter : api (api.common.group.set.delete)"]]}, "Cameroon": {"tool_desc": "The Cameroon API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Cameroon.", "apis": [["Measure Distance Reverse", "This endpoint calculates the distance between two addresses in Cameroon."], ["Measure Distance", "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement."], ["Reverse Geocode", "This endpoint allows you to perform reverse geocoding in Cameroon by providing query parameters for latitude and longitude. It returns the name of the city where the location is located."], ["Facilities Lookup", "This endpoint allows you to get facilities in Cameroon like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters."], ["Geocode", "This endpoint allows you to lookup locations in Cameroon by providing an address query parameter. It returns the latitude, longitude and city name of the location."], ["Directions Between 2 Locations", "This endpoint returns information about the route between two locations in terms of distance, duration, and steps."]]}, "Feroeg - Reverse Geocoding": {"tool_desc": "Free Reverse Geocoding service - Get a full customizable text address from latitude and longitude pairs.", "apis": [["ReverseGeocode", "Return a text address from a latitude/longitude location"]]}, "bng2latlong": {"tool_desc": "Convert an OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitude.", "apis": [["Convert", "Convert easting and northing to latitude and longitude"]]}, "India Pincode API": {"tool_desc": "Allows developers to get accurate and comprehensive India PinCode & Places data from India Post Office", "apis": [["findbypincode", "\u201cFind By PinCode\u201d API is JSON API to query India Pincode."]]}, "Pharmacies de garde NC": {"tool_desc": "API permettant d'obtenir les informations sur les pharmacies de garde en Nouvelle-Cal\u00e9donie", "apis": [["Health", "Renvoie le statut de l'application : up ou down"], ["All", "Renvoie les pharmacies de garde de Nouvelle-Cal\u00e9donie"]]}, "Egypt API": {"tool_desc": "The Egypt Lookup API users to retrieve in realtime the latitude, longitude, and address of a location in Egypt.", "apis": [["Directions Between 2 Locations", "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Alexandria to Cairo**"], ["Reverse Geocode", "This endpoint allows you to perform reverse geocoding in Cameroon by providing query parameters for latitude and longitude. It returns the name of the city where the location is located."], ["Measure Distance", "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance between Alexandria and Cairo**"], ["Facilities Lookup", "This endpoint allows you to get facilities in Egypt like hospital, bank, college, etc. by providing optional query parameters for facility type, gov (governorate)  and city. It returns a list of facilities that match the query parameters."], ["Geocode", "This endpoint allows you to lookup locations in Egypt by providing an address query parameter. It returns the latitude, longitude and city name of the location."]]}, "Localization services": {"tool_desc": "Accurate localization services\n\nEmail and phone validators are already available.", "apis": [["health", "Checks health status of services"]]}, "City by API-Ninjas": {"tool_desc": "Get useful statistics on tens of thousands of cities around the world.", "apis": [["/v1/city", "API Ninjas City API endpoint."]]}, "Locations - Languages, Countries & German Cities": {"tool_desc": "API to request information about Languages, Countries and German Citites", "apis": [["All German Cities", "Get all German cities"], ["Filter German Cities", "Filter all German citities by name or postal code"], ["\"All\" Languages", "List of most of the worldwide languages with the language code, the native language name and the English translation"], ["Countries All (min)", "Minimized information of all countries"]]}, "Nearby Places": {"tool_desc": "Get nearby establishments.", "apis": [["Nearby - (ArcGIS)", "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nOnly type values from **/v2/types (ArcGIS)** are valid.\n\nMaximum returned places is 50."], ["Nearby - (Google)", "Returns a **JSON array of nearby places** sorted by distance from the origin coordinates in ascending order.\n\nOnly values from **/types (Google)** are valid types.\n\nMaximum places returned per request is 20."], ["Types - (Google)", "Get a list of establishment types.\n\nThese types will only work with **/nearby (Google)**."], ["Random (Google)", "Return a random place nearby."], ["Place Details - (Google)", "Get contact and opening hours for a place.\n\nRequires a **place id** provided by **/nearby (Google)**."], ["Types - (ArcGIS)", "Types (categories) of establishments. These types will only work with **/v2/nearby (ArcGIS)**."]]}, "Reverse Geocoding_v2": {"tool_desc": "This API gets address from a lat-long and latlong from a respective address.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Ghana API": {"tool_desc": "Welcome to the Ghanaian Location Lookup API!", "apis": [["Directions Between 2 Locations", "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Kumasi to Accra**"], ["Measure Distance", "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Kumasi to Accra**"], ["Reverse Geocode", "This endpoint allows you to perform reverse geocoding in Ghana by providing query parameters for latitude and longitude. It returns the name of the city where the location is located."], ["Facilities Lookup", "This endpoint allows you to get facilities in Ghana like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters."], ["Geocode", "This endpoint allows you to lookup locations in Ghana by providing an address query parameter. It returns the latitude, longitude and city name of the location."]]}, "IP Lookup by API-Ninjas": {"tool_desc": "Look up location information for any valid IP address.", "apis": [["v1/iplookup", "API Ninjas IP Lookup API endpoint."]]}, "Location": {"tool_desc": "Get the locations using a REST API simple and free.", "apis": [["Get the places by latitude and longitude", "Get the places by latitude and longitude."], ["Get the addresses by IP", "Get the addresses by IP."], ["Get the addresses by latitude and longitude", "Get the addresses by latitude and longitude."], ["Get the addresses by postal code", "Get the addresses by postal code."]]}, "Distance Calculator_v3": {"tool_desc": "Calculates the distance between two coordinates", "apis": [["calc", "Calculate distance between two coordinates"]]}, "IP Address": {"tool_desc": "Low latency API to retrieve User IP Address.", "apis": [["Get User IP", "Get user IP address."]]}, "Rest Country API": {"tool_desc": "This project is a resource for accessing information about countries around the world through a REST API (Application Programming Interface).", "apis": [["getByUniqueId", "Returns a single pet"], ["allCountries", "Returns all countries and its details in single api request"]]}, "Codigos Postales MX": {"tool_desc": "Informacion de la locazion con el codigo postal", "apis": [["Obtener CP", "Obt\u00e9n la lista de c\u00f3digos postales encontrados acorde al par\u00e1metro solicitado"]]}, "Spott": {"tool_desc": "Search cities, countries and administrative divisions by name, autocompletion or IP.", "apis": [["Autocomplete places", "Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs."], ["Search places", "Returns a list of places (either countries, cities or administrative divisions) matching a query and filtered by properties."], ["Get place by IP", "Returns the Place where a given IP Address is located. Returns \"Not Found\" error when no place is related to the IP. When sending '127.0.0.1' or '0.0.0.0' IP Addresses it will return the Place from the request was performed."], ["Get place by my IP", "Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP."], ["Get place by ID", "Returns a single Place identified by an ID."], ["Get place by Geoname ID", "Returns a single Place identified by a Geoname ID."]]}, "Timezone By API-Ninjas": {"tool_desc": "Timezone data for any location on the planet.", "apis": [["/v1/timezone", "API Ninjas Timezone API endpoint. Returns the timezone name of the specified input location.\n\nEither both (**lat** and **lon**) or (**city**/**state**/**country**) parameters must be set."]]}, "GeoSource API": {"tool_desc": "Introducing GeoSource API - the comprehensive API service that provides a wealth of geo-information on countries, states, cities, zip codes, currencies, flags, and much more.", "apis": [["Capital By Country", "Retrives a value of the capital of the country."], ["Phone Code By Country", "Retrives a Phone code of the country."], ["emoji Flag By Country", "Retrives  the emoji flag code of the country."], ["Location By City", "Retrives  the lat and lng of the city."], ["ZipCode By City", "Retrives the zip code/codes of the city ( must be in the supported countries list [ 44 countries ])."], ["cities By State", "Retrives a list of  cities of the state."], ["states By Country", "Retrives a list of all states of the country."], ["Currency By Country", "Retrives a currecny and currency symbol of the country"], ["CountriesList", "Retrives a list of all countries and some basic information of them"]]}, "World Country": {"tool_desc": "More than 200+ countries, 5K states and 150K cities with various information.", "apis": [["Get Sub Regions", "Get sub region list"], ["Get Time Zones", "Get Time Zone list"]]}, "World Time": {"tool_desc": "WorldTimeAPI is a simple web service which returns the local-time for a given timezone as either JSON or plain-text.", "apis": [["Timezone for Location", "Request the current time for a timezone (in plain text or JSON)"], ["Current time by Specific IP", "Request the current time for a specific IP (in plain text)"], ["Timezone by Area", "Request a list of valid locations for an area"], ["Current time by IP", "Request the current time based on your public IP"], ["Timezones", "Request a list of valid timezones"]]}, "Get IP Address and basic info.": {"tool_desc": "best practice is using js for web apps.", "apis": [["IP ADDRESS", "JUST SEND AJAX OR REQUEST TO API."]]}, "Global WebServer  or IP Response Time and Location": {"tool_desc": "Check any domain or IP address for response time from 12 Global locations in all continents.", "apis": [["Geo Ping Global IP lookup", "Connects to 12 global servers and determines the local ip at that location for a given domain name or ip address, reports back location and response time of servers."]]}, "Australian postcode to suburb": {"tool_desc": "Find out all the Australian  suburbs using postcode.", "apis": [["Get all suburbs and postcodes in a radius", "This endpoint takes your epic centre latitude, longitude along with radius in KM and returns all postcodes and suburbs within it."], ["Get a list of states", "This endpoint return 3 letter states for the passed postcode."], ["Get a list of suburbs", "This endpoint will return all matching suburbs for the passed postcode. The response also includes the state for each suburb and, if available, latitude and longitude for the suburb."]]}, "URL Lookup by API-Ninjas": {"tool_desc": "Lookup location information for any URL domain.", "apis": [["v1/urllookup", "API Ninjas URL Lookup API endpoint."]]}, "Referential": {"tool_desc": "The fastest API to access countries, states, cities, continents, dial and zip codes in up to 20 languages.", "apis": [["City by IP address (Geo IP)", "Find a city, state, country and continent by IP address. For some results, the closest result within 10 miles will be provided."], ["Countries", "List or search countries of the world in different languages.. Get iso a2, a3 country code and localized country name"], ["Cities", "List and search over 75,000 world cities in 20 languages."], ["State", "List the sub-regions/states/provinces/departments of the world's countries"], ["Timezones", "List the world's time zones in 20 languages"], ["City by id", "Direct lookup of over 75,000 cities by id. See the v1/city API to search for city ids."], ["Country by iso code", "Get country by 2 letter iso code localized to a given language"], ["State by id", "Lookup sub-regions/states/provinces/departments by iso 3166-2 code"], ["Continent by id", "Lookup a continent by id"], ["Continents", "List continents of the world localized to requested language"], ["Languages", "List the world's languages translated into 20 languages"], ["Language by id", "Find language by id translated into 20 languages"], ["Timezone by id", "Lookup a time zone"]]}, "IP Address Geolocation": {"tool_desc": "Complete free IP address geolocation API", "apis": [["IP Geolocation", "Returns the geolocation of the given IP address"]]}, "Distance Calculation API by Pizza API": {"tool_desc": "The Distance Calculation API is incredibly simple to use.", "apis": [["Calculate distance  By Lat & Long", "Calculate Distance between to place by their latitude and longitudes and metric you want the output of."]]}, "BPS": {"tool_desc": "Les bo\u00eetes postales (BPs), codes postaux, localit\u00e9s,communes, codes cedex de Nouvelle-Cal\u00e9donie.", "apis": [["BP par localite", "Liste des BP par localit\u00e9 en Nouvelle Cal\u00e9donie"], ["Commune par nom", "R\u00e9cup\u00e9rer une ou plusieurs communes gr\u00e2ce \u00e0 son nom. Perfect match ou partiel."], ["Code postal par code", "Fournit les informations \u00e0 partir d'un code postal connu en Nouvelle Cal\u00e9donie."], ["All", "Liste des provinces de la Nouvelle Cal\u00e9donie"], ["All codes postaux", "Tous les codes postaux."], ["All BPs", "Lister toutes les bo\u00eetes postales"], ["Toutes communes", "R\u00e9cup\u00e8re le PDF de toutes les communes de la Nouvelle Cal\u00e9donie"], ["Health", "Get the status of the API"], ["Communes par code Commune", "R\u00e9cup\u00e9rer les d\u00e9tails d'une commune depuis son code."], ["All communes", "La liste des communes"]]}, "Find By Address": {"tool_desc": "\u201cFind By Address\u201d API gets addresses for given search term.", "apis": [["Find By Address", "\u201cFind By Address\u201d API gets addresses for the given search term. This API provides a JSON interface to search UK addresses. This API gives access to Royal Mail PAF data and Geocoding."]]}, "getCountries": {"tool_desc": "get all countries of the world", "apis": [["getCountriesV2", "get all coutries of the world"]]}, "IP Directory": {"tool_desc": "Get IP geolocation data, provider data, and threat intelligence", "apis": [["lookup", "This is the only endpoint available to this API. It accepts an IP Address and returns all available associated data."]]}, "Countries": {"tool_desc": "Get information on countries around the world.", "apis": [["list all countries", "This lists all countries."], ["iso3", "This gets country name on a country. Use ISO3 for country_code."], ["iso2", "This gets country name on a country. Use ISO2 for country_code."], ["get time zone", "This gets timezone data on a country. Use ISO2 for country_code."], ["get phone number", "This gets phone codes on a country. Use ISO2 for country_code."], ["get language", "This gets language data on a country. Use ISO2 for country_code."], ["get geo", "This gets geo data on a country. Use ISO2 for country_code."], ["get currency", "This gets currency data on a country. Use ISO2 for country_code."], ["get capital", "This gets capital data on a country. Use ISO2 for country_code."], ["get all", "This gets all data on a country. Use ISO2 for country_code."]]}, "PT Postcodes": {"tool_desc": "Portuguese postcode lookup", "apis": [["Get addresses by postcode", "Get the list of addresses/street by specifying the postcode"]]}, "Geokeo Forward Geocoding": {"tool_desc": "Geocoding Api for Forward geocoding and Reverse Geocoding with 2500 free api requests", "apis": [["search.php", "Blazing fast geocoding open service with world wide coverage and 24x7 Support.Quickly start deploying your apps with our affordable and accurate geocoding api.Support for all languages java, python, php, c, c++, React, Angular etc.Sign up without any credit card and get 2500 free api requests daily."], ["reverse.php", "Blazing fast geocoding open service with world wide coverage and 24x7 Support.Quickly start deploying your apps with our affordable and accurate geocoding api.Support for all languages java, python, php, c, c++, React, Angular etc.Sign up without any credit card and get 2500 free api requests daily."]]}, "Find By UDPRN": {"tool_desc": "\u201cFind By UDPRN\u201d API gets address for the specified UDPRN.", "apis": [["Find By UDPRN", "\u201cFind By UDPRN\u201d API gets address for the specified UDPRN.\n\nUDPRN stands for \u2018Unique Delivery Point Reference Number. A UDPRN is a unique numeric code (e.g. 64983) for any premise on the Postcode Address File.\n\nThis API uses the latest PAF and Multiple Residence data from Royal Mail.UDPRN are unique identifiers for every address in the UK that Royal Mail has in its database."]]}, "IP Location Lookup Service": {"tool_desc": "Feed this API an IP Address and have it perform a quick and easy lookup for you.", "apis": [["Lookup IP Address", "Feed this API an IP Address and have it perform a quick and easy lookup for you"]]}, "Stadia Maps Time Zone API": {"tool_desc": "The Stadia TZ API provides time zone information, as well as information about any special offset (such as DST) in effect, now or in the future.", "apis": [["TZ Lookup by Location", "The Stadia TZ Lookup API provides time zone information, as well as information about any special offset (such as DST) in effect based on the latest IANA TZDB. Note that this API may not be accurate for timestamps in the past and does not claim to report precise nautical times in the open ocean beyond territorial waters."]]}, "Senegal API": {"tool_desc": "The Senegal Lookup API allows you to look up the latitude, longitude, and address of a location in Senegal.", "apis": [["Directions Between 2 Locations", "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a hospital in Koalack to Dakar**"], ["Measure Distance", "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from a hospital in Koalack to Dakar**"], ["Reverse Geocode", "This endpoint allows you to perform reverse geocoding in Senegal by providing query parameters for latitude and longitude. It returns the name of the city where the location is located."], ["Facilities Lookup", "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters."], ["Geocode", "This endpoint allows you to lookup locations in Senegal by providing an address query parameter. It returns the latitude, longitude and city name of the location."]]}, "Nearby Tesla Superchargers": {"tool_desc": "Find nearby Tesla Superchargers.", "apis": [["Nearby superchargers", "Get nearby superchargers up to 50km away."]]}, "WGD Places": {"tool_desc": "This API uses our custom built database to be able to get Country and City information, it has all the information you could ever need.", "apis": [["Get Country", "Get country data using a name or continent"], ["Get City", "Gets city information from a country id"]]}, "IP Geolocation Metadata": {"tool_desc": "Get all metadata from an IP address", "apis": [["IP-Locator", "The API supports .csv, .xml and .json as output formats."]]}, "IP To Location  - Apiip": {"tool_desc": "Apiip.net is an API service allowing customers to automate IP address validation and geolocation lookup in websites, applications, and back-office systems.", "apis": [["Get IP data", "Detailed information on our website: https://apiip.net/"]]}, "IP Address Tracker - Free": {"tool_desc": "This is a free service that will get you the ip geographical location information of your user.", "apis": [["Auto IP Lookup", "This endpoint will automatically look up the ip of your users"]]}, "World Cities and Countries": {"tool_desc": "The fastest and most updated API with rich data that allow you search cities from more than 2 million records.", "apis": [["SearchCities", "API to search cities based on the matching search keyword passed in url param.\ne.g. \n`/v1/locations/cities/new y`: This will return all the matching cities whose name starts from `new y`.\nYou can also filter the cities or narrow down results for specific country by passing its 2 letter country code in query param which can be found from our searchCountry API."], ["ListAllCountries", "This API returns list of all countries and can be paginated over the results."], ["SearchCountries", "API to search county based on the matching search keyword passed in url param.\nNOTE: This API is case insensitive.\ne.g. \n`/v1/locations/countries/uni`: This will return all the matching countries whose name starts from `uni` and their additional info."]]}, "Tunisia API": {"tool_desc": "The Tunisia Lookup API allows you to look up the latitude, longitude, and address of a location in Tunisia.", "apis": [["Directions Between 2 Locations", "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Sfax to Tunis**"], ["Measure Distance", "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Sfax to Tunis**"], ["Reverse Geocode", "This endpoint allows you to perform reverse geocoding in Tunisia by providing query parameters for latitude and longitude. It returns the name of the city where the location is located."], ["Facilities Lookup", "This endpoint allows you to get facilities in Tunisia like hospital, bank, college, etc. by providing optional query parameters for facility type, province and city. It returns a list of facilities that match the query parameters."], ["Geocode", "This endpoint allows you to lookup locations in Tunisia by providing an address query parameter. It returns the latitude, longitude and city name of the location."]]}, "IP Geolocation_v3": {"tool_desc": "IP Geolocation API allows developers to get geolocation information for a given IP address.", "apis": [["Get IP Geolocation", "This endpoint returns geolocation and other useful points from an IP Address. If IP address is provided as query parameter, geolocation is performed on that IP address. If IP address is left empty, geolocation data of client IP is returned."]]}, "Nearest Delhi Metro Station": {"tool_desc": "\"Nearest Delhi Metro Station\" API is a web service that provides users with the nearest Delhi Metro station based on the latitude and longitude coordinates provided as input.", "apis": [["Nearest Metro Station", "This endpoint is a **GET** method API that returns -\n\n- **Station name**\n- **Latitude** & **Longitude** of the nearest Delhi Metro station\n- **Google Maps direction**"]]}, "Wyre Data": {"tool_desc": "", "apis": [["Get ratings by restaurant", "Find a Food Hygiene Rating for a restaurant"], ["Search restaurants by town", "Find all Restaurants within a Town/City"], ["Search restaurants by local authority", "Find all Restaurants within a Local Authority"]]}, "Ip To Location": {"tool_desc": "100% free to use.", "apis": [["ip_to_location", "Get location details from IP address"]]}, "TimeZoneDB - Find Local Time Zone by Coordinate or Name": {"tool_desc": "TimeZoneDB finds you the local time zone of a place by latitude & longitude, or by the time zone name such as \"Europe/London\".", "apis": [["Main", "Return country code, GMT offset, daylight saving time, time zone name, and current timestamp."]]}, "IP Geolocator": {"tool_desc": "JSON API for geolocating IP addresses\nFree monthly requests: 100k.", "apis": [["Health check", "Check if the API is up and running."], ["IP lookup", "## Retrieve an IP address geolocation and ASN informations."]]}, "Address Autosuggest": {"tool_desc": "\"Address Autosuggest\" API buit to suggests address results for a given search term.", "apis": [["Address Autosuggest", "\"Address Autosuggest\" API buit to suggests address results for a given search term. This API provides a JSON interface to extract address suggestions for a complete or partial address query.\n\nThe Autocomplete API suggests partial address results for a given query."]]}, "ip-to-location_v2": {"tool_desc": "API returns location data such as country, city, latitude, longitude, timezone ...", "apis": [["IP Lookup", "Returns the IP address of the client with all the location data"]]}, "IsItWater.com": {"tool_desc": "An API to determine if a coordinate is water or land.", "apis": [["Is a coordinate water?", "Given a latitude and longitude, return if that coordinate on Earth is water."]]}, "UK Postcode To Latitude and Longitude": {"tool_desc": "Convert a UK Postcode To Latitude and Longitude", "apis": [["Search Single Postcode", "Search a single postcode and return the latitude and longitude"]]}, "Woosmap": {"tool_desc": "Location-based Search Platform", "apis": [["getZone", "Used to retrieve a zone from his `zone_id`"], ["getStore", "Used to retrieve an asset from his `storeId`"], ["localitiesAutocomplete", "Autocomplete on worldwide suggestions for a for text-based geographic searches. It can match on full words as well as substrings. You can therefore send queries as the user types, to provide on-the-fly city names, postal codes or suburb name suggestions."], ["localitiesDetails", "Provides details of an autocomplete suggestion (using the suggestion\u2019s `public_id`)."], ["addressAutocomplete", "Autocomplete on worldwide suggestions for a for text-based geographic searches. It can match on full words as well as substrings."], ["addressDetails", "Provides details of an address autocomplete suggestion (using the suggestion\u2019s `public_id`)."], ["getDistanceMatrix", "Get distances and durations for a matrix of origins and destinations, based on the recommended route between start and end points for a specified travel mode."], ["getRoute", "Get distance, duration and path (as a polyline) for a pair of origin and destination, based on the recommended route between those two points for a specified travel mode."], ["getStoresFromGeolocationPosition", "Retrieve the stores nearby an ip location. Stores are returned only if a relevant ip location is found - for an accuracy of 20km or less."], ["getGeolocationPosition", "The `/position` returns JSON location of your users thanks to IP address of their devices."], ["storeAutocomplete", "Autocomplete on `localizedNames` with highlighted results on asset name. Use the field `localized` in your query parameter to search for localized names."], ["storeSearch", "Used to retrieve assets from query"]]}, "IP Geolocation Find IP Location and IP Info": {"tool_desc": "IP Geolocation API allows developers to get geolocation information for a given IP address.", "apis": [["Get IP Geolocation", "This endpoint returns geolocation and other useful points from an IP Address. If IP address is provided as query parameter, geolocation is performed on that IP address. If IP address is left empty, geolocation data of client IP is returned."]]}, "Geocoding Places": {"tool_desc": "Geocoding places Info with images & videos.", "apis": [["Get Geocoding with Images", "Get complete readable place info with high resolution images in prefered language based on given latitude and longitude."], ["Get Geocoding", "Get complete readable place info in prefered language based on given coordinate in latitude and longitude."], ["Get Geocoding with Videos", "Get complete readable place info in prefered language with related video on Youtube based on given latitude and longitude."]]}, "Geography _v2": {"tool_desc": "API that includes all the continents, countries and cities of the world.", "apis": [["cities", "get a list of all the cities filtering by name"], ["get country by id", "get a single country by id"], ["countries", "get a list of all the countries filtering by name"], ["continents", "get a list of all the continents filtering by name"]]}, "IP Geo Location and IP Reputation": {"tool_desc": "This API will provide geo location data such as: country, Region, City, Latitude, Longitude, Time Zone, Zip Code, Flag and much more...Also provides: IP Blacklist, Currencies, Languages, TLD, Host,  and more...", "apis": [["format", "Format to display data\nCan be \"json\" or \"xml\"\nBy default will be select json"]]}, "GoApis Geocoding API": {"tool_desc": "Goapis Geocoding API is an efficient and affordable alternative to Google Maps Geocoding API.", "apis": [["Geocding", "Geocoding is the process of converting a physical address into geographic coordinates, such as latitude and longitude. It allows for the identification of a specific location on the Earth's surface, making it possible to map and analyze data spatially"]]}, "IP Geolocalization API": {"tool_desc": "IP Geolocalization API is a powerful tool for determining the location of an IP address.", "apis": [["IP Address Lookup", "When an IP address is provided this API will retrieve all possible data referred to its location."]]}, "Location_v2": {"tool_desc": "We are providing a location search result according to your search query", "apis": [["search result", "We are providing a location search result according to your search query,1"]]}, "Find By PostCode": {"tool_desc": "\u201cFind By PostCode\u201d API get addresses for the given UK PostCode.", "apis": [["Find By PostCode", "\u201cFind By PostCode\u201d API get addresses for the given UK PostCode. This API provides a JSON interface to search UK addresses for a postcode."]]}, "Pincode Distance Measurement ": {"tool_desc": "Pincode distance calculator API allows users to calculate the distance between two or more pin codes or zip codes.", "apis": [["Fetch Distance between two pincodes", "Enter two valid pincodes."]]}, "District Capitals In Ghana": {"tool_desc": "This API contains all district capitals in Ghana.", "apis": [["Get District Capital By Name", "This endpoint gets a district capital by district name"], ["Get District Capital By ID", "This endpoint gets a particular district capital by ID"], ["Get All District Capital", "The endpoint retrieves all the district capitals"]]}, "UK Postcode": {"tool_desc": "Integrate this API with your website's address form to quickly and accurately auto-fill UK postal addresses or find locations of addresses.", "apis": [["/search", "Find an street or post code using one of more key words"], ["/getpostcode", "Find an exact match for a given post code."]]}, "Timezone by Coordinates": {"tool_desc": "Get the Timezone, DST offset, and UTC offset of a location.", "apis": [["Timezone", "Get the timezone of the coordinate location."]]}, "US Zip Code Information": {"tool_desc": "The fastest API to access ZIP Code Information like City, State, County, AreaCode, Latitude, Longitude etc for a given zip code", "apis": [["Get ZIP Info", "This Endpoint returns the zip information"]]}, "Schweizer Postleitzahlen": {"tool_desc": "API to get political towns from a ZIP-code (Postleitzahl)\nA ZIP-code can belong to multiple towns.", "apis": [["getZIP", "get town information from ZIP-code (Postleitzahl)"]]}, "World Time by API-Ninjas": {"tool_desc": "Get the current time for any location in the world.", "apis": [["/v1/worldtime", "API Ninjas World Time API endpoint. Returns the current date and time by city/state/country, location coordinates (latitude/longitude), or timezone.\n\nOne of the following parameter combinations must be set:\nlat + lon,\ncity (state and country optional),\ntimezone"]]}, "Viet Nam administrative divisions": {"tool_desc": "Online API for Viet Nam administrative divisions", "apis": [["Get All Wards Of A District In Vietnam", "Get all names of wards in a district in Vietnam"], ["Get All Districts Of A City In Vietnam", "Get all names of districts in a city"], ["Get All Cities in Vietnam", "This endpoint will return back all names of cities in Vietnam"]]}, "Country by API-Ninjas": {"tool_desc": "Get useful statistics on every country in the world.", "apis": [["/v1/country", "API Ninjas Country API endpoint."]]}, "Dubai Makani": {"tool_desc": "An official geographic addressing system in the emirates.", "apis": [["GetMakaniInfoFromCoordination", "When entering the coordinate (latitude & longitude) for certain\nlocation, this method/function will return building details (in case\nthis location falls inside a building), Makani details for the building\nand latitude & longitude for each Makani Number. Makani\nentrance(s) for the building can be plotted / pinned on an\nelectronic map by using the latitude & longitude for each Makani\nNumber."], ["GetMakaniDetails", "When entering Makani Number for certain building entrance, this\nmethod/function will return building details and Makani details for\nthe building. In case Makani Number is available in more than\none emirate, this method/function will list the emirates and their\ncommunities"], ["IsValidMakani", "Makani Number is generated to uniquely identify each main entrance of\nan existing building. When entering Makani Number for certain\nentrance, this method/function will verify if the entry is valid"], ["GetQRCodeForMakaniNo", "When entering Makani Number, this method/function returns the\nQR Code download path in .jpg file which includes URL for\nentrance\u2019s location link."]]}, "Uganda API": {"tool_desc": "The Uganda API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Uganda.", "apis": [["Directions Between 2 Locations", "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a location in Nansana to Kampala**"], ["Reverse Geocode", "This endpoint allows you to perform reverse geocoding in Uganda by providing query parameters for latitude and longitude. It returns the name of the city where the location is located."], ["Facilities Lookup", "This endpoint allows you to get facilities in Uganda like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters."], ["Geocode", "This endpoint allows you to lookup locations in Uganda by providing an address query parameter. It returns the latitude, longitude and city name of the location."], ["Measure Distance", "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Nansana to Kampala**"]]}, "Canada Postal Codes": {"tool_desc": "A list of postal codes in Canada", "apis": [["Get postal codes by id", "Get postal code by id"]]}, "58 provinces of algeria": {"tool_desc": "All provinces of algeria", "apis": [["Provinces and municipalities", "All Algeria provinces and ther municipalities."]]}, "Country Information and Conversion API": {"tool_desc": "The Country Information and Conversion API provides developers with a wide range of country-related data and conversion capabilities.", "apis": [["ByCountryName", "# Country Information and Conversion API\n\nThe Country Information and Conversion API provides comprehensive country-related data and conversion capabilities, allowing developers to access detailed information about countries worldwide and seamlessly convert between country names and country codes.\n\n## Endpoints\n\n### Get Country Code by Name\n\nRetrieve the country code based on the country name.\n\n- **URL:** `/api/country/code/:name`\n- **Method:** `GET`\n- **Parameters:**\n  - `:name` - The name of the country.\n\nExample Request:\n```\nGET /api/country/code/United States\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n### Get Country Name by Code\n\nRetrieve the country name based on the country code.\n\n- **URL:** `/api/country/name/:code`\n- **Method:** `GET`\n- **Parameters:**\n  - `:code` - The country code.\n\nExample Request:\n```\nGET /api/country/name/US\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n## Additional Country Information\n\nIn addition to the country code and name, both endpoints provide the following additional information about each country:\n\n- `capital`: The capital city of the country.\n- `population`: The population count of the country.\n- `language`: The official language(s) spoken in the country.\n- `currency`: The currency used in the country.\n- `timezone`: The time zone(s) observed in the country.\n\nPlease note that the additional country information is included in the example responses for both endpoints.\n\n## Error Handling\n\nThe API returns appropriate HTTP status codes and error responses to indicate various scenarios:\n\n- `200 OK`: Successful request and response.\n- `400 Bad Request`: Invalid request parameters or missing required parameters.\n- `404 Not Found`: Country not found or invalid country name/code.\n- `500 Internal Server Error`: An unexpected error occurred.\n\nPlease make sure to handle these status codes appropriately in your application."], ["ByCountryCode", "# Country Information and Conversion API\n\nThe Country Information and Conversion API provides comprehensive country-related data and conversion capabilities, allowing developers to access detailed information about countries worldwide and seamlessly convert between country names and country codes.\n\n## Endpoints\n\n### Get Country Code by Name\n\nRetrieve the country code based on the country name.\n\n- **URL:** `/api/country/code/:name`\n- **Method:** `GET`\n- **Parameters:**\n  - `:name` - The name of the country.\n\nExample Request:\n```\nGET /api/country/code/United States\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n### Get Country Name by Code\n\nRetrieve the country name based on the country code.\n\n- **URL:** `/api/country/name/:code`\n- **Method:** `GET`\n- **Parameters:**\n  - `:code` - The country code.\n\nExample Request:\n```\nGET /api/country/name/US\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n## Additional Country Information\n\nIn addition to the country code and name, both endpoints provide the following additional information about each country:\n\n- `capital`: The capital city of the country.\n- `population`: The population count of the country.\n- `language`: The official language(s) spoken in the country.\n- `currency`: The currency used in the country.\n- `timezone`: The time zone(s) observed in the country.\n\nPlease note that the additional country information is included in the example responses for both endpoints.\n\n## Error Handling\n\nThe API returns appropriate HTTP status codes and error responses to indicate various scenarios:\n\n- `200 OK`: Successful request and response.\n- `400 Bad Request`: Invalid request parameters or missing required parameters.\n- `404 Not Found`: Country not found or invalid country name/code.\n- `500 Internal Server Error`: An unexpected error occurred.\n\nPlease make sure to handle these status codes appropriately in your application."]]}, "MapReflex": {"tool_desc": "US Zip Codes, Cities, States and Counties boundaries API, which provides info in common GeoJson format for instant integration with existing maps like Google, etc., or with your custom application.", "apis": [["zipCodesSearchInBoundingBox", "Get ZIP Codes boundaries in provided bounding box (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["zipCodesListByState", "Get a plain list of ZIP Codes of a state. Result is a plain list of ZIP Codes, not GeoJSON format. To retrieve boundaries of all ZIP Codes of a state you may query method \"zipCodesByIds\" with a portion of current method output."], ["zipCodesSearchInRadius", "Get ZIP Codes boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["countiesByIds", "Get boundaries of given Counties (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["countyByNameAndState", "Get boundaries of County by name and state (in GeoJSON format).  For a quick view, copy and paste results: http://geojsonlint.com"], ["countiesByState", "Get Counties boundaries of state (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["countiesSearchInBoundingBox", "Get Counties boundaries in provided bounding box (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["countiesSearchInRadius", "Get Counties boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["placesSearchInRadius", "Get Places boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["placeByNameAndState", "Get boundaries of Place by name and state (in GeoJSON format).  For a quick view, copy and paste results: http://geojsonlint.com"], ["zipCodesByIds", "Get boundaries of given ZIP Codes (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["placesByIds", "Get boundaries of given Places (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["placesListByState", "Get a plain list of Places of a state. Result is a plain list of place ids, not GeoJSON format. To retrieve boundaries of all Places of a state you may query method \"placesByIds\" with a portion of current method output."], ["placesSearchInBoundingBox", "Get Places boundaries in provided bounding box (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["statesSearchInRadius", "Get States boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["statesSearchInBoundingBox", "Get States boundaries in provided bounding box (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"], ["states", "Get boundaries of given States (in GeoJSON format). By default, returns boundaries of all States.  For a quick view, copy and paste results: http://geojsonlint.com"], ["zipCodesByCounty", "Get ZIP Codes boundaries of County (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"]]}, "USA ZIP Codes Inside Radius": {"tool_desc": "Returns a list of all US ZIP codes that fall within a defined radius", "apis": [["Search By Centre ZIP and Radius", "Perform a single radius search with a defined radius and then a location in the form of a ZIP code OR a latitude/longitude."], ["Search By Latitude & Longitude and Radius", "Perform a single radius search with a defined radius and then a location in the form of a ZIP code OR a latitude/longitude."]]}, "Partenaires Mobilis": {"tool_desc": "Conna\u00eetre et localiser les partenaires Mobilis de l'OPT-NC", "apis": [["Partenaire par id", "R\u00e9cup\u00e9rer un partenaire par son id"], ["Get ALL partenaires", "R\u00e9cup\u00e9rer tous les partenaires."], ["G\u00e9olocaliser les partenaires", "R\u00e9cup\u00e9rer tous les partenaires, ou r\u00e9cup\u00e9rer tous les partenaires dans un rayon donn\u00e9 autour d'un point donn\u00e9 :\n\n- **nearByLon**= {longitude du centre du cercle de la zone de recherche}\n- **nearByLat**= {latitude du centre du cercle de la zone de recherche}\n- **nearByDistance**= {rayon du cercle de la zone de recherche}"], ["Health", "Donne l'\u00e9tat de sant\u00e9 de l'API"]]}, "GeoWide": {"tool_desc": "GeoWide API efficiently calculates distances between geographic points, enabling accurate measurements for various applications.", "apis": [["Distance", "This API endpoint takes latitude and longitude coordinates for two points and calculates the geodesic and great circle distances between them. It returns a json object with formatted coordinate information for each point, along with the distances in miles, kilometres, meters, feet, and nautical miles for both geodesic and great circle measurements."]]}, "GEOIP_v2": {"tool_desc": "API returns location data such as country, city, latitude, longitude, timezone, asn, currency, security data for IPv4 and IPv6 addresses in JSON or XML formats.", "apis": [["Visitor Lookup", "Returns the IP address of the client with additional data."]]}, "Australian Suburbs": {"tool_desc": "Australian suburbs finder.", "apis": [["Suburbs", "Search for suburbs by name"], ["Neighbours", "Find neighbouring suburbs based on the distance in km."]]}, "mymappi": {"tool_desc": "REST Location APIs such as Geocoding, Roads, Directions and Places.", "apis": [["Reverse Geocoding", "Translates a coordinate as input into its postal address."], ["Direct Geocoding", "Translates an address as input into geographic coordinates. If there are multiple possible results, it retrieves the list of possible results ordered by the distance to the provided source coordinate (if any), in ascending order."], ["Snap to road", "Given a geographical coordinate, it retrieves the another coordinate which is snapped to the nearest road. This means that the snapped coordinate is found by calculating the intersection between the longitudinal axis of the nearest road segment and the perpendicular line between the provided coordinate and this longitudinal axis."], ["Highway type", "Given a coordinate, finds the nearest road and determines what type of road it is (motorway, path, primary... etc.)"], ["Speed limit", "Given a coordinate, it retrieves speed limit info about the nearest road segment, in km/h."], ["Route calculation", "Calculates a route between an origin and a destination, possibly passing through many waypoints. It takes into consideration several configuration options in order to customize the response."], ["Traveling salesman", "It solves the Traveling Salesman Problem using a greedy heuristic (farthest-insertion algorithm) for 10 or more waypoints and uses brute force for less than 10 waypoints. The returned path does not have to be the fastest path. As TSP is NP-hard it only returns an approximation. Note that all input coordinates have to be connected for this service to work."], ["Isochrone", "The Isochrone API allows you to request polygon or line features that show areas that are reachable within a few specified amounts of time from a certain location in different routing profiles (car, on foot and soon bike and public transport)."], ["Distance matrix", "This services takes as input a list of coordinates and computes in a matrix format the fastest travel time among all possible pair combinations among all the provided coordinates. If sources/destinations params are provided, those indicate a semi-colon separated list of indices that specify which of the provided coordinates should be included as sources or destinations."], ["Transit", "Calculates a route between an origin and a destination in public transport. It takes into consideration several configuration options in order to customize the response."], ["Search places", "Searches around a set of coordinates within a certain radius (in meters) to retrieve a list of nearby points of interest of a specific type (optionally)."]]}, "Timezone by Location": {"tool_desc": "Convert any GPS Lat/Lon location into its timezone", "apis": [["Timezone", "Convert a position into its timezone"]]}, "Get IP Info_v2": {"tool_desc": "This is an API to get the Longitude and Latitude Information on the basis of an IP.", "apis": [["ip-city", "Get the detail of Longitude and Latitude on the basis of IP-Address"]]}}, "Artificial_Intelligence_Machine_Learning": {"Dream Diffusion": {"tool_desc": "Train Stable Diffusion models in 8 minutes and generate custom images.", "apis": [["GetGeneration", "Gets the generation status and generated images"], ["GetTraining", "Gets the training status"]]}, "Text Sentiment API": {"tool_desc": "Find the sentiment of a certain text.", "apis": [["List Endpoints (Can be used as an endpoint health-check)", "This endpoint lists the possible endpoints to connect to.\n\nAlias: /api/sentiment"]]}, "Explor-Arc's Colors API": {"tool_desc": "The Best API for Effortless Color Inspiration, Unleash Limitless Color Possibilities with The Best API", "apis": [["Colors", "The Best API for Effortless Color Inspiration, Unleash Limitless Color Possibilities with The Best API"]]}, "Quizy API": {"tool_desc": "The Quizy API is a powerful tool that allows developers to create and customize quizzes programmatically.", "apis": [["/generateQuiz", "This endpoint will return you the 5 questions, options, correct answer and explaination for the quiz topic you provide."]]}, "Artificial intelligence News API": {"tool_desc": "The Artificial Intelligence News API is a web service that provides access to news articles related to the field of artificial intelligence from around the world.", "apis": [["Get News From All News Sources Related to Artificial Intelligence", "This end point will return back all the artificial intelligence news from all over the world."], ["Get Recent News From a Single News Source", "This will return all the artificial intelligence news from a single news source."]]}, "Carbon management": {"tool_desc": "GHG accounting", "apis": [["Status for mapper", "Get results in details from the task id."], ["CollectFactorswithMongoDB", "Check if the factor in mapping table is correct."], ["Status for mapper v2 [Upload file]", "Get results in details from the task id."], ["CheckFactorswithMongoDB", "Check if the factor in mapping table is correct."], ["Status for getting pdf urls", "Get results in details from the task id."], ["Statusforemissiontable", "Get results in details from the task id."], ["Statusforkeysentenceextraction", "Get results in details from the task id."], ["Getprocesscountforcelery", "Get results in details from the task id."], ["Statusforonepdffilecrawler", "Get results in details from the task id."], ["Statusforexcelemissionanalysis", "Get results in details from the task id."], ["Statusforemissionreductiontarget", "Get results in details from the task id."], ["Statusformapperevaluation", "Get results in details from the task id."], ["Statusforemissionreductiontargetbyurl", "Get results in details from the task id."]]}, "OptiTalk": {"tool_desc": "Create custom highly advanced general AI chatbots and characters with distinct personalities, and knowledgebase.", "apis": [["Get Sessions", "Get a list of sessions and their corresponding `session_id`."], ["Get Session Messages", "Retrieve the message history inside a session."], ["Get Characters", "Get a list of publicly available characters as well as the characters that you created.\n\n## Character Usage\nOnce you've retrieved a character, you can copy its ID and use it in the /chat endpoint in order to chat with it."]]}, "TTSKraken": {"tool_desc": "Introducing our cutting-edge text to speech service, designed to provide you with the most realistic human-sounding voices at an affordable price.", "apis": [["List Speakers", "List the speakers available and some more information such as the languages they can speak."], ["List Languages", "Get a list of currently supported languages. We are constantly adding more every few weeks."]]}, "ChatGPT Detector - AI Powered ChatGPT Answer Detector ": {"tool_desc": "\ud83d\udd75\ufe0f\ud83d\udcdd Are you concerned about distinguishing human-written text from machine-generated text?", "apis": [["ChatGPT Detector API \ud83d\udcca", "Our API can detect text in over 140 languages"]]}, "Large text to speech": {"tool_desc": "Large text to speech (TTS) API enables you to perform unlimited* text to speech synthesis (English) in single request.", "apis": [["Get job status", "Get the status and results of a job"]]}, "Blogzee AI - SEO & Social Content Generator": {"tool_desc": "Blogzee AI is an innovative SEO content generator API powered by advanced machine learning algorithms.", "apis": [["Generate Youtube Video Description", "Endpoint: /generate_youtube_video_description\n\nMethod: GET\n\nSummary: This endpoint generates an SEO-optimized, keyword-rich description for a YouTube video. It also optionally includes social media links.\n\nParameters:\n\n    video_title (required): The title of the YouTube video.\n    include_emojis (required): A boolean indicating whether to include emojis in the video description.\n    keyword1 to keyword5 (required for keyword1 and keyword2, optional for keyword3 to keyword5): Keywords relevant to the video. A minimum of two keywords and a maximum of five can be specified. Each keyword should not exceed 30 characters.\n    facebook_link, twitter_link, instagram_link, linkedin_link, tiktok_link (all optional): Valid URLs pointing to respective social media profiles.\n\nResponse: The response is a YouTubeDescriptionResponse model that includes the video title, video description (which includes the social media links if provided), a boolean indicating if emojis were included, and a list of the provided keywords.\n\nUse Case: Use this endpoint when you need to generate a unique, keyword-rich description for a YouTube video. This can be particularly useful for SEO and improving the visibility of your video in YouTube search results. Also, by providing social media links, you can direct your audience to your other platforms, enhancing your overall online presence.\n\nErrors:\n\n    400 Bad Request: Raised if the number of keywords is not between 2 and 5, or if a keyword exceeds 30 characters.\n    500 Internal Server Error: Raised for unknown API errors.\n    503 Service Unavailable: Raised if the OpenAI server is unavailable."], ["Generate Blog Post", "This is the /generate_blog_post endpoint for the Blogzee AI service, designed to generate a complete blog post based on user-provided input parameters.\n\nEndpoint Structure:\n\n    Method: GET\n    Route: /generate_blog_post\n    Response Model: BlogPostResponse\n\nFunctionality:\nThis endpoint accepts a blog post title, a list of keywords (minimum of 2, maximum of 5), and two boolean flags (include_html, include_emojis) as parameters. It uses these inputs to generate a complete blog post using the underlying AI model.\n\nInput Validation:\nThe endpoint expects the keywords to be a list with a minimum length of 2 and a maximum length of 5, with each keyword being no longer than 30 characters. If these conditions are not met, an error is thrown.\n\nError Handling:\nThe endpoint has a mechanism to handle potential API errors from OpenAI's language model. If there is a \"Request failed due to server shutdown\" error, it responds with an HTTP 503 status code and a \"Service Unavailable: API server shutdown\" message. For other unknown errors, it returns an HTTP 500 status code with a \"Internal Server Error: Unknown API error\" message.\n\nOutput Formatting:\nIf the 'include_html' flag is set, it converts new lines in the generated blog post to HTML break tags for better web display.\n\nOutput:\nThis endpoint returns a BlogPostResponse, which includes the blog post title, the generated blog post content, and the values of include_html and include_emojis flags, and the keywords used for generation.\n\nOverall, this endpoint provides a way for users to generate complete blog posts tailored to specific titles and keywords, significantly accelerating the content creation process with the help of AI."], ["Generate Blog Post Ideas", "This is the /generate_blog_ideas endpoint for the Blogzee AI service, designed to generate blog post ideas based on user-provided keywords.\n\nEndpoint Structure:\n\n    Method: GET\n    Route: /generate_blog_ideas\n    Response Model: BlogIdeasResponse\n\nFunctionality:\nThis endpoint accepts a list of keywords (minimum of 2, maximum of 5), each with a maximum length of 30 characters. The keywords are used to generate blog post ideas using the underlying AI model.\n\nInput Validation:\nThe endpoint validates the input parameters to ensure they are within the expected range and character limits. If the validation fails, it returns an HTTP 400 status code with an appropriate error message.\n\nError Handling:\nThe endpoint handles potential API errors from OpenAI's language model, specifically the \"Request failed due to server shutdown\" error. In this case, it returns an HTTP 503 status code with the detail \"OpenAI API is currently unavailable\". If an unknown error occurs, it returns an HTTP 500 status code.\n\nOutput:\nThis endpoint returns a BlogIdeasResponse, which is a list of blog post ideas generated based on the input keywords.\n\nOverall, this endpoint provides a way for users to leverage AI to generate creative blog post ideas tailored to specific keywords, helping to streamline the content creation process."]]}, "LemurBot": {"tool_desc": "Meet Lemurbot - Your Personal AI Chatbot Companion!", "apis": [["Get A Category Group", "Get a specific category group by it's id and view it's details.\nYou are able to view your own category groups and locked category groups.\n'Locked' category groups are a master set of records available to link to your bots"], ["Get A Category", "Get a specific category by it's id and view it's details"], ["Get A Bot Property", "Get a specific bot property by it's id and view it's details"], ["List All Bot Properties", "Get a list of bot properties that belong to bots created by the user (not locked bots)."], ["List All Bots", "Get a list of bots that are available to this user.\nThese will either be bots created by the user or 'locked' public bots which can be chatted to but not editted. (e.g. 1)"], ["Get A Bot", "Get a specific bot by its id. (e.g. 1)"], ["List All Category Groups", "Categories are organised into category groups. For example if you have a set of categories to handle questions on the weather these could be grouped into a category group called 'weather-categories'.\nYou are able to view your own category groups and locked category groups.\n'Locked' category groups are a master set of records available to link to your bots"], ["List All Clients", "Clients talk to bots. This return a list of all clients that have spoken your bots. Clients can talk to your bots or the locked bots.\n'Locked' bots are a set of public bots available to link to your clients in addition to bots you create."], ["Get A Bot Category Group", "Get a specific bot category group by it's id and view it's details"], ["Get A Client", "Get a specific client by it's id and view it's details"], ["List All Bot Category Groups", "Get a list of category groups which are linked to user owned bots (not locked bots)."], ["List All Categories", "Categories are pieces of knowledge used by the bots to respond to the user.\nCreate and update categories inorder to teach and train your bot."], ["Get A Conversation", "Get a specific conversation by it's id and view it's details"], ["List All Conversations", "Conversations are created between clients and bots.\nUsers can only view conversations between their clients and bots."], ["List All Conversation Turns", "Each conversation has conversation turns.\nEach turn represents an input from the client and the output from the bot."], ["Get A Conversation Turn", "Get a specific conversation turn by it's id and view it's details"], ["Get Chat Detail", "Get the details for an active chat session.\nSend a bot slug and client slug as query parameters and the request will return the details from the last active chat session."], ["Get Chat Log", "Get the logs for an active chat session.\nSend a bot slug and client slug as query parameters and the request will return the logs from the last active chat session."]]}, "EmoAI - AI powered Text Emotion Analyzer": {"tool_desc": "\ud83d\udd25 Are you looking for a powerful API that can analyze the emotions of your text data?", "apis": [["\ud83d\udd25 EmoAI API", "**\ud83d\ude00 Our AI-powered endpoint can analyze text in over 140 languages**"]]}, "TextSentAI  -  AI powered Text Sentiment Analyzer ": {"tool_desc": "\ud83d\udcca Looking for a powerful AI-driven API to analyze the sentiment of your text data?", "apis": [["TextSentAI API \ud83d\udcca", "Our API can analyze text in over 140 languages"]]}, "Text Sentiment Analysis ": {"tool_desc": "Introducing the Sentiment Analysis API by Pizza API - a cutting-edge tool that provides instant sentiment analysis of any given text.", "apis": [["Text Sentiment Analysis", "Analyse the Sentiment of the given text context"]]}, "Speech Recognition": {"tool_desc": "Convert speech to text quickly and easily.", "apis": [["languages", "Get list of supported languages"]]}, "MidJourney": {"tool_desc": "", "apis": [["get_upscaled_binary_image", "returns requested binary image (\"image/png\") from the set"], ["get_binary_image_set", "returns requested binary image (\"image/png\"). Full image set"], ["get_generation_status", "Get status of the previously posted job.\n\n- outcome - if Failure, then it comes from MJ, like censorship.\n- estimated_time - in seconds. based on previous generation.\n- percent - available when actual generation started"]]}, "Face Studio": {"tool_desc": "Face Generation: use AI to dynamically generate high-resolution, photo-realistic pictures of faces based on demographic input including gender, age, and ethnicity.", "apis": [["/generate", "Generate a face given optional parameters: **gender**, **age**, and **ethnicity**. Ethnicity is an approximation of the corresponding ethnic/racial phenotype for a given option."]]}, "Islam & AI API": {"tool_desc": "Islam & AI API for Islamic ChatBot.", "apis": [["Have a Chat with our Bot", "Have a conversation with our Islam&AI Bot in which it remembers your previous conversation! (upto 30 texts)"], ["Get an Answer to your Question", "Get answer to an Islamic question from our Islam&AI bot"]]}, "Text To Speech_v2": {"tool_desc": "The Multilingual Text To Speech is a powerful tool for converting written text into spoken words in multiple languages.", "apis": [["Voices Endpoint", "Get List of all available speakers that can be used as voice in /tts Endpoint\n\n**Format of Voices** : Language-Accent-Speaker_Name"]]}, "Microsoft Edge Text to Speech": {"tool_desc": "an easy-to-use API of Microsoft Edge TTS.", "apis": [["GetVoicesList", "Voices list for the param \"voice_name\" of the function \"GetDownloadUrl\""], ["GetDownloadURL", "request with a long text and get the mp3 download URL created by the TTS engine.\n\nSupporting lots of languages with different voices, such as French, Spanish, Portuguese, Japanese, Korean, Chinese, Polish, Hindi and so on\n\nparams:\ntext - STRING : the text to be transformed to speeches.\nvoice_name - STRING: the voice and language for the speeches."]]}, "Face Animer": {"tool_desc": "Introducing Face Animer API - the cutting-edge facial animation tool that brings your digital avatars and characters to life with 21 dynamic and expressive animation effects.", "apis": [["Get Result", "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data."]]}, "The Apophis": {"tool_desc": "AI-powered API for crypto asset price forecasting offers a range of features and benefits that can revolutionize how traders and investors navigate the dynamic and often unpredictable crypto market.", "apis": [["getForecast (Ultra)", "This endpoint is part of Ultra subscriptions.\n\n**Available Currencies:**\nAll traded coins & tokens on Coinbase.\n\n**Forecast Data:**\n- 10 Periods\n\n**Timeframe:**\n- 1m\n- 5m\n- 15m\n- 1h\n- 6h"], ["getForecastlList (Mega)", "Get Full Crypto Asset List with Expected Daily Forecast Change"], ["getAssetsList (Pro+)", "Retrieve a list of available assets for forecasting"], ["getForecast (Free)", "This endpoint is part of Basic (Free) subscriptions.\n\n**Available Currencies:**\n- BTC\n- ETH\n\n**Forecast Data:**\n- 3 Periods\n\n**Timeframe:**\n- 1h"], ["getForecast (Mega)", "This endpoint is part of Mega subscriptions.\n\n**Available Currencies:**\nAll traded coins & tokens on Coinbase.\n\n**Forecast Data:**\n- 30 Periods\n\n**Timeframe:**\n- 1m\n- 5m\n- 15m\n- 1h\n- 6h"], ["getForecast (Pro)", "This endpoint is part of Pro subscriptions.\n\n**Available Currencies:**\nAll traded coins & tokens on Coinbase.\n\n**Forecast Data:**\n- 10 Periods\n\n**Timeframe:**\n- 1h"]]}, "Timeseries Prediction Model": {"tool_desc": "Basic Machine Learning Model wich can predict all sorts of timeseries data in a daily timeframe", "apis": [["prediction", "predict next period with dates and values"]]}, "AI-writer": {"tool_desc": "Antherica A.I.", "apis": [["Revise", "Revise and correct any text"], ["Hashtags", "Generate hashtags from a given text."], ["Keywords", "Quickly define keywords from a given text"], ["Newsletter", "Write a compelling newsletter from a given text"], ["QR Code", "Generate a QR Code from a link or a text."], ["Translation", "Translate content into any language just enter the language name."]]}, "Article Extractor and Summarizer": {"tool_desc": "This is an API which extracts news/article body from a URL and uses GPT to summarize (and optionally translate) the article content.", "apis": [["/summarize", "Summarizes the article after extracting it from the specified url."], ["/extract", "Extract an article body and markdown version of the body."]]}, "Midjourney best experience": {"tool_desc": "Connect your project to midjourney | mj contain generate\u3001upsample\u3001variation...", "apis": [["get job by task id", "you can get the generate job  and  action job status by the task_id, and the task_id will expired at 24 hours after"]]}, "Stable Diffusion v2": {"tool_desc": "Generate high-quality images with the latest Stable Diffusion v2.1 model.", "apis": [["Generate Image", "Generate an image with stable diffusion"]]}, "Omniinfer": {"tool_desc": "Stable Diffusion API with 1000+ Models\nFast, stable, and cheap API of popular SD (stablediffusion) models for developers to easily integrate and not maintain GPUs.", "apis": [["Progress", "This page will help you get started with text to image. Support ControlNet."], ["Get Models", "This page will help you get started with text to image. Support ControlNet."]]}, "ToxDetectAI - AI Powered Toxic Comment Detector ": {"tool_desc": "\ud83d\udeab\ud83e\udd2c Are you concerned about harmful and toxic comments in your online community or platform?", "apis": [["\ud83d\udd25 ToxDetectAI API", "\ud83d\ude00 Our AI-powered endpoint can analyze text in over 140 languages"]]}, "LexAI API": {"tool_desc": "Images analyser API for multi-label object detection and classification!", "apis": [["get_classes", "Get available detection classes"]]}, "Review Generator (AI)": {"tool_desc": "Generate testimonial & review using AI.", "apis": [["Locales", "Get list of locales"], ["Languages", "Get list of Languages"]]}, "Face liveness check": {"tool_desc": "Check if the selfie your users take is indeed live, optimally clicked to save in your records, if there are multiple faces detected in the image, and what percentage of the image does the face actually cover.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Web Scraping API": {"tool_desc": "The Web Scraping API enables data extraction from websites while simulating a real browser, allowing bypassing of restrictions, solving captchas, and scraping dynamic websites.", "apis": [["Scraper", "The \"Scraper\" endpoint of the Web Scraping API is responsible for extracting data from websites while simulating a real browser. With its Headless Browser capability, the endpoint enables users to bypass restrictions, solve captchas, and scrape dynamic websites with ease. The endpoint can be used for high-level web scraping tasks, making it an ideal choice for businesses, data analysts, and developers who need to extract data from websites quickly and efficiently. By providing the endpoint with the necessary input parameters, users can initiate the scraping process and receive the extracted data in the desired format. This endpoint is a powerful tool for anyone who needs to extract data from websites and can be easily integrated into existing workflows and systems."]]}, "ARImageSynthesizer": {"tool_desc": "Text to image generator.", "apis": [["Get Image", "Retrieve generated image with given `hash`."], ["My Images", "Get all generated images' information in a JSON response. Images can be accessed at `/get` endpoint with the given hash."], ["My Images by ID", "Similar to `/my_images` endpoint, returns generated images' information in a JSON response filtered by given `id`."]]}, "People photo background removal": {"tool_desc": "", "apis": [["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."]]}, "AION": {"tool_desc": "Create and chat with your own chatGPT-like chatbots, with personalized instructions and automatic translations.", "apis": [["List my Bots", "Once you have created your bot, you can manage the configurations by using the \u201caccess_token\u201d received during authentication. Here you can view a list of all the bots you have created on the platform."]]}, "Text Mood Changer AI": {"tool_desc": "transforms written text into different styles of mood.", "apis": [["Mood List", "list of moods available"]]}}, "Education": {"Word of the day": {"tool_desc": "Get the word of the day with type and meaning etc.", "apis": [["Word of the day from DC", "Get word of the day from dictionary.com"], ["Word of the day from ld", "Get word of the day from ld"], ["Word of the day from mw", "Get word of the day from mw."], ["Word of the day from cd", "Get word of the day from cd."], ["Word of the day from pm", "Get word of the day from pm"], ["Recent word of the day from DC", "Fetches upto 3 recent word from Dictionary.com"], ["Get word of the day from multiple sources", "Gets word of the day from mutiple sources in one go easy."]]}, "Drillster 2.0": {"tool_desc": "Drillster is an open cloud based memorization platform that helps users learn more in less time.", "apis": [["Get account access", "Requests an organization login."], ["Retrieve drill details", "Retrieves drill or course details"], ["Retrieve group members", "Retrieves all members of a specific group."], ["Retrieve group drills", "Retrieves all drills of a specific group. These can be regular drills, and courses. A course is a collection of (regular) drills."], ["Retrieve group objectives", "Retrieves all objectives that have been defined for a group."], ["Retrieve practice question", "Retrieves the next question for the specified drill or collection of drills."], ["Retrieve own test result", "Retrieves an individual test result for a specific test instance for the calling user."], ["Retrieve objectives", "Retrieves the objectives that have been defined for the calling user."], ["Search in Drill Store", "Search the Drill Store for available drills and courses."], ["Retrieve test question", "Returns the next question for a predefined test."], ["Retrieve own user", "Requests (own) user details."], ["Retrieve practice preferences", "Retrieves the user's practice preferences for a given drill."], ["Submit test answer", "Submits the answer to a question, as part of a predefined test."], ["Retrieve group results", "Retrieves the up-to-date results for a group."], ["Retrieve list of groups", "Retrieves a list of all groups the calling user has access to."], ["Retrieve user", "Retrieves (other) user details."], ["Search in repertoire", "Retrieves the user's repertoire, or searches in it using a search query."], ["Retrieve test result", "Retrieves an individual test result for a specific test instance."]]}, "Pluralsight Articles": {"tool_desc": "An API for a huge amount of articles for  the newest software techologies,  development and much more...", "apis": [["Get data with articles about software development", "This endpoint will return back data with around 100 articles from Pluralsight's \"software-development\" section."], ["Get data with articles about security", "This endpoint will return back data with around 30 articles from Pluralsight's  \"security-professional\" section."], ["Get articles about \"data\"", "This endpoint will return back data with around 50 articles from Pluralsight's \"data-professional\" section."], ["Get data with articles about IT Operations", "This endpoint will return back data with around 100 articles from Pluralsight's \"it-ops\" section."], ["Get a hundreds of all kind of articles from Pluralsight.com", "This endpoint will return back a data with hundreds of articles from Pluralsight.com"], ["Get less then 20 articles from Pluralsight.com", "This endpoint will return back a data with less then 20 various articles from Pluralsight.com"]]}, "Learn to read and write Japanese kanji": {"tool_desc": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.", "apis": [["Basic Search", "A kanji character, Onyomi reading (katakana), Kunyomi reading (hiragana) or a kanji's simplified English meaning."], ["Onyomi reading", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["Kunyomi reading", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["Kanji English meaning", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["Kanji stroke number", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["Radical Japanese name", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["Radical English meaning", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["Radical position", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["Radical stroke number", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["Study list (AP exam)", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["Kanji character", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["Single Kanji Details", "Language attributes and media files for a single kanji"], ["Study list (Macquarie)", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["Kanji grade level", "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required."], ["All Kanji Details", "Language attributes and media files for all supported kanji (~ 6.5MB)"]]}, "Chemical Elements": {"tool_desc": "This API retrieves data of chemical elements and their properties collected from authoritative sources in JSON format", "apis": [["Get All Chemical Elements", "This endpoint will return back data of all Chemical Elements of the periodic table"]]}, "LeetcodeApi": {"tool_desc": "The API fetches basic information of a LeetCode profile based on the provided username.", "apis": [["getMediumQuestion", "Get the number of medium level questing solved by the user."], ["getEasyQuestion", "Get the number of easy question solved by the user"], ["getHardQuestion", "Get the number of hard questions solved by the user."], ["getMaxStreak", "Get the max streak of the user in the current user"], ["getTotalActiveDays", "Get the total active days of the user in the current year."], ["getRank", "Get the contest rank of the user"], ["getTotalSolved", "Get the total number of questions solved by the user."], ["getName", "Get the name of the user"]]}, "SevenTraderAPI": {"tool_desc": "Football API", "apis": [["Get - Countries", "Get all countries in API"]]}, "TCYonlineDictionary": {"tool_desc": "TCYonlineDictionary for antonyms and synonyms", "apis": [["tcyonline dictionary endpoint", "this is tcyonline dictionary endpoint"]]}, "Dictionary Data API": {"tool_desc": "A concise linguistic resource delivering pronunciation, definition, part of speech, and example usage for words via a single GET endpoint.", "apis": [["GetDefinition", "This is used to retrieve definition, pronunciation and example usages of any word"]]}, "thefluentme": {"tool_desc": "The AI-powered language pronunciation API with ChatGPT", "apis": [["Get post by id", "Returns a post by `post_id`. You can get the `post_id` from the `Get all posts` endpoint."], ["Get all posts", "Get a paginated list of all posts.\n\nPlease provide the following parameters in the query string\n- **page**: The page number. If no value is provided, the default value of `1` will be applied.\n- **per_page**: Posts per page. If no value is provided, the default value of `10` will be applied."], ["Get all languages", "Returns a list of all supported languages. The API supports 40 different languages and 80 different voices for the ai_reading. This is used to define the post language when a post is added. It also defines the voice for the sound file that is generated for the user to listen to."], ["Get language by id", "Returns a language by id"], ["Get score by id", "Returns a score by `score_id`. You can get the `score_id` from the `Get all scores` endpoint. The scale parameter defines the maximum number of points for the recording, as well as each word. This parameter is not required. The default value of 100 will be applied if the parameter is not provided."], ["Get all scores", "Get a paginated list of all scores.\n\nPlease provide the following parameters in the query string\n- **page**: The page number. If no value is provided, the default value of `1` will be applied.\n- **per_page**: Scores per page. If no value is provided, the default value of `10` will be applied."]]}, "ask-ai": {"tool_desc": "Introducing ask-ai - the friend all your friends already have!", "apis": [["Ask question to AI Service", "Ask question to AI Service. Be concise."]]}, "Dictionary Translation Hablaa": {"tool_desc": "FREE Dictionary Translation API Hablaa.", "apis": [["Get available languages", "Get a list of available languages."], ["Get a translation", "Get a translation by defining source and destination languages as well as a word to translate."], ["Example sentences", "Request multiple example sentences containing the word to translate."], ["Similar words", "Get translations of similar words."]]}, "Uncovered Treasure": {"tool_desc": "The Uncovered Treasure API has more than 25,000 revealed truths from every Book and chapter in the Bible as recorded by Phil Largent over the last 25 years.", "apis": [["/topics", "Get list of all topics"], ["/verse/{verse}", "Get treasure by verse"], ["/search/{searchterm}", "Search for treasure by term, e.g. \"wisdom\""], ["/today", "Get treasure of the day"], ["/topic/{topic}", "Get entries from a specific topic"]]}, "Dictionary": {"tool_desc": "Dictionaries API gives you access to our world-renowned dictionary data, including definitions, translations, synonyms, and audio pronunciations.", "apis": [["wordSearchEnglish", "With this service you can learn the meaning of English words from Oxdord dictionary."], ["wordSearchTurkish", "With this service you can learn the meaning of words from Turkish dictionary."]]}, "Real Estate Exam": {"tool_desc": "Questions, answers, and flash cards to ace the National Real Estate exam.", "apis": [["Flashcards", "Get a list of all flashcard terms and definitions"], ["/QandA", "Returns all multiple choice and true or false questions with answers and feedback."]]}, "DCPS Project": {"tool_desc": "Gets all DCPS Data", "apis": [["subject", "filters data by subject input"], ["schoolName", "gets all data from a specific school through input of its name"], ["schoolCode", "gets school code upon input"]]}, "Quotes": {"tool_desc": "Get Random Quotes", "apis": [["quote", "Get a random Quote"]]}, "Book Finder": {"tool_desc": "Find books by title, author, series, and reading complexity.", "apis": [["Find books", "Search books using optional title, author, series, book type, categories, and [lexile measure](https://lexile.com/educators/understanding-lexile-measures/) range."]]}, "Physical quantities, constants and equations ": {"tool_desc": "This API retrieves physical quantities,constants and equations formatted as JSON", "apis": [["Get equations", "This endpoint return back data of equations formatted as JSON"], ["Get All constants", "This endpoint return back data of physical constants formatted as JSON"], ["Get All Physical quantities", "This endpoint return back data of physical quantities"]]}, "data_visualisation_": {"tool_desc": "nothing to describe", "apis": [["getting data", "this api is for the sales of supermarkets in three different cities"]]}, "Random Words": {"tool_desc": "Random words api provides you a list of random words or a single random word", "apis": [["Get multiple random words", "Get multiple random words (i.e. min 2 and max 20) from a list of 5500+ words\n\nImportant Notes:\n1. *count* must be a valid number between 2 and 20 (both 2 and 20 included)\n2. *wordLength* must not be used with minLength and/or maxLength"], ["Get a random word", "Returns a random words from a list of more than 5500+ words\n\nImportant Note: \n1. *wordLength* must not be used with minLength and/or maxLength"]]}, "Numbers": {"tool_desc": "An API for interesting facts about numbers.", "apis": [["Get date fact", "Get a fact about a day of year"], ["Get math fact", "Get a mathematical property about a number"], ["Get random fact", "Get result by random number"], ["Get trivia fact", "Get a trivia fact about a number"], ["Get year fact", "Get a fact about a year"]]}, "Dr Almotawa Quotes": {"tool_desc": "This API provides above 40000 Arabic quotes by Dr Abdulaziz Almotawa.", "apis": [["Get random quote", "This endpoint returns a random quote out of over 40000 quotes"]]}, "Reading Home APIs": {"tool_desc": "Join the millions of readers who turn to Reading Home digital library to access bookss including Personal Growth, True Crime, Business, Travel, Non-Fiction, Contemporary Fiction, YA, Science Fiction, and more.", "apis": [["GetBookDetail", "Get Detail of book by Book ID"], ["GetBooksbyTitleSearch", "Get Paginated List of Books on Title Searched"], ["GetBooksbyAuthorSearch", "Get List of Books of a Searched Author Name"], ["Getbooksbycategory", "This will get a paginated list of books in a specific category"], ["GetAllCategories", "Get Paginated List of All Categories"]]}, "Samyutam Eduction": {"tool_desc": "What is the best tool to publish online api documentation.", "apis": [["Samyutam", "Rahul Name is Almost male"]]}, "Tech Exams": {"tool_desc": "Tech Exams offers flexible, affordable and the most up to date test banks for self-study training and exam creation.", "apis": [["All Supported Exams", "Returns all supported exams."], ["getQuestionsandAnswers", "Returns all multiple choice and true or false questions with answers and feedback."], ["getQuestionsByExam", "Get exam questions by exam"], ["getOneQuestionWithAnswers", "Get a specific question and corresponding answers"]]}, "Stars API": {"tool_desc": "API to serve information about stars and planets scraped from wikipedia.", "apis": [["Star", "returns full information about the star."], ["Stars list", "Returns list of stars"], ["Planet list", "Returns the planets surrounding a star"]]}, "USDA": {"tool_desc": "United States Government Data and API.", "apis": [["/AmberWaves Retrieve Paged Collection", "Retrieves a paged collection of amber waves content nodes filtered by a particular section alias, ordered by descending release date."]]}, "Hadiths API": {"tool_desc": "A collection of hadiths API in one place, Sahih Bukhari, Sahih muslim, Ibn majah, Abu Dawud.", "apis": [["Get collection by id", "Each collection have a unique ID. These ID can be used to get the collection"], ["Get categories by collection", "Each collection has their own categories, You can check the collection and category endpoints to get more information. Each hadiths is under a category and each category is under a collection. \nExample:\n{COLLECTION} ---> {CATEGORY} ---> {HADITHS}\n{Sahih Bukhari} ---> {Revelation}  --->{hadiths}\nYou can seperate the categories by their specific collections.\nBy default limit is 10 and page is 1. the limit and page can be altered to suit your taste."], ["Get all categories", "Get all categories from the database, by default limit is 10 and page is 1. the limit and page can be altered to suit your taste."], ["Get category by id", "Each category have a unique ID. These ID can be used to get the category"], ["Get all collections", "Get all collections from the database, by default limit is 10 and page is 1. the limit and page can be altered to suit your taste."], ["Search for hadiths  with key words", "Searching for hadiths. Just enter the keyword, example searching for food, the request will look like this https://hadiths-api.vercel.app/api/hadiths?search=food\n\nAnd limit can be added to reduce the amount of data received, by default the limit is 10.\nPage number by default is page1, but it can be changed as you want.\nNB: The %20 in the example query is just an empty space as the name of the collection is Sahih Bukhari in the database."], ["Get hadiths by collection", "Each collection has their own categories, You can check the collection and category endpoints to get more information. Each hadiths is under a category and each category is under a collection. \nExample:\n{COLLECTION} ---> {CATEGORY} ---> {HADITHS}\n{Sahih Bukhari} ---> {Revelation}  --->{hadiths}\nYou can seperate the hadiths by their specific collections.\nBy default limit is 10 and page is 1. the limit and page can be altered to suit your taste."], ["Get hadiths based on the category", "Each h collection has their own categories, You can check the collection and category endpoints to get more information. Each hadiths is under a category and each category is under a collection. \nExample:\n{COLLECTION} ---> {CATEGORY} ---> {HADITHS}\n{Sahih Bukhari} ---> {Revelation}  --->{hadiths}\nYou can seperate the hadiths by their specific categories.\nBy default limit is 10 and page is 1. the limit and page can be altered to suit your taste."], ["Search for hadiths in collection with key words", "Searching for hadiths based on their various collections. Just enter the keyword, example searching for food, the request will look like this https://hadiths-api.vercel.app/api/hadiths?collection=Sahih Bukhari&search=food\n\nAnd limit can be added to reduce the amount of data received, by default the limit is 10.\nPage number by default is page1, but it can be changed as you want.\nNB: The %20 in the example query is just an empty space as the name of the collection is Sahih Bukhari in the database."], ["Get all hadiths", "Get all hadiths from the database, by default limit is 10 and page is 1. the limit and page can be altered to suit your taste."], ["Get hadith by id", "Each hadith have a unique ID. These ID can be used to get the hadith"]]}, "periodicTable": {"tool_desc": "It provides detailed information about periodic table", "apis": [["periodic table", "It gives detailed information about elements in the periodic table."]]}, "Indonesia School List": {"tool_desc": "This API provides School List in Indonesia by Province (Propinsi), City (Kabupaten), and District (Kecamatan).", "apis": [["School Detail", "School Detail by sekolah_id_enkrip field that get by other endpoint (see List of School)."], ["List of School in Sub-Disctrict (Kecamatan)", "List of School in Sub-Disctrict (Kecamatan), this endpoint has school NPSN, and sekolah_id_enkrip field to lookup school detail in other endpoint.  See Example Result"], ["Number of Schools in Indonesia Sub-District (Kecamatan)", "Number of Schools in Indonesia Sub-District (Kecamatan), also return kode_wilayah that used in other endpoint. (See example result and find kode_wilayah  field)"], ["Number of Schools in Indonesian City / District (Kabupaten / Kota)", "Number of Schools in Indonesian City / District (Kabupaten / Kota), also return kode_wilayah that used in other endpoints (See Example response)."], ["Number of Schools in the Province of Indonesia", "Number of Schools in the Province of Indonesia, also return region code (kode_wilayah) that used in other endpoints"]]}, "Helioviewer v1": {"tool_desc": "Helioviewer is an open-source project for the visualization of solar and heliospheric data, funded by ESA and NASA.", "apis": [["getTile", "Request a single image tile to be used in the Helioviewer.org Viewport.  Tiles are 512x512 pixel PNG images, generated for a given image scale from the intermediary JPEG2000 image files.\n\n        Use the `getClosestImage` API endpoint to obtain the desired image identifier for the `id` parameter."], ["checkYouTubeAuth", "Check to see if Helioveiwer.org is authorized to interact with a user's YouTube account via the current browser session."], ["reQueueMovie", "Re-generate a custom movie that is no longer cached on disk.  Once the movie has been successfully queued for regeneration, the Movie ID can be used to check on the status of the movie (via `getMovieStatus`) and to download the movie (via `downloadMovie`)."], ["getDataSources", "Return a hierarchial list of the available datasources.\n\n        Optional parameter `verbose` is exists for compatability with JHelioviewer.  It outputs the hierarchical list in an alternative format and limits the list of available datasources to a known set (SDO and SOHO).  JHelioviewer may not operate properly if new datasources appear in the feed without a client-side updgrade.  To explicitly include new sources, use the optional `enable` parameter."], ["getClosestImage", "Find the image data that is closest to the requested date/time.  Return the associated metadata from the helioviewer database and the XML header of the JPEG2000 image file.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`."], ["queueMovie", "Create a custom movie by submitting a request to the movie generation queue.  The response returned will provide you with a unique Movie ID that can be used to check on the status of your movie (via `getMovieStatus`) and to download your movie (via `downloadMovie`)."], ["shortenURL", "Shorten a Helioviewer.org URL with the bit.ly URL shortening web service."], ["uploadMovieToYouTube", "Share an existing user-generated movie to YouTube."], ["downloadMovie", "Download a custom movie in one of three file formats."], ["downloadScreenshot", "Download a custom screenshot (that was generated using the `takeScreenshot` API endpoint)."], ["getYouTubeAuth", "Request authorization from the user via a Google / YouTube authorization flow to permit Helioviewer to upload videos on behalf of the user."], ["playMovie", "Output an HTML web page with the requested movie embedded within."], ["takeScreenshot", "Generate a custom screenshot.\n\n        You must specify values for either `x1`, `y1`, `x2`, and `y2`\n        or `x0`, `y0`, `width` and `height`.\n\n        By default, the response is a JSON object containing a unique screenshot identifier (`id`) that can be used to with the `downloadScreenshot` API endpoint.\n\n        Set the `display` parameter to `true` to directly return the screenshot as binary PNG image data in the response.\n\n        Please note that each request causes the server to generate a screenshot from scratch and is resource intensive.  For performance reasons, you should cache the response if you simply intend to serve exactly the same screenshot to multiple users."], ["getNewsFeed", "Get the XML RSS feed of the official Helioviewer Project Blog."], ["getUserVideos", "Get a listing (in descending time order) of the most recently user-generated movies that have been publicly shared to YouTube.  Result set is limited to the value requested or default value of the `num` parameter (unless truncated when the date value of the `since` parameter is reached)."], ["getJP2Header", "Get the XML header embedded in a JPEG2000 image. Includes the FITS header as well as a section of Helioviewer-specific metadata."], ["getJP2Image", "Download a JP2 image for the specified datasource that is the closest match in time to the `date` requested.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`."], ["getJPX", "Generate and (optionally) download a custom JPX movie of the specified datasource.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`."]]}, "TED Talks API": {"tool_desc": "Get TED talks based on multiple different parameters and filtering options, from the speaker, topic, talk duration, and more.", "apis": [["getSubtitleLanguages", "Get all the TED talks subtitle languages"], ["getTalks", "Get info about specific talks based on the provided parameters"], ["getTopics", "Get all the TED talks topics"], ["getSpeakers", "Get all the TED talks speakers"], ["getAudioLanguages", "Get all the TED talks audio languages"]]}, "Learning Engine": {"tool_desc": "Easily integrate Memre adaptive learning software with your internal systems to optimize memory retention, build lasting knowledge, and create expertise.", "apis": [["/memre_api/v1/readiness", "Get the readiness of the user for the specified item."], ["/memre_api/v1/study", "Get items a specific user should study."], ["/memre_api/v1/concepts", "Retrieve a list of concepts for the current customer."], ["/memre_api/v1/concepts/{id}", "Retrieve the details of a specific concept by ID."], ["/memre_api/v1/users/{user_id}/learning_stats", "Get the most effective times of day for a user to study."]]}, "Current Affairs Of India": {"tool_desc": "Current Affairs and daily quizzes.", "apis": [["Recent Current Affairs", "This will provide you with the recent current affairs of India."], ["Today's International Current Affairs", "This endpoint provides you the international current affairs of today."], ["History Of Today", "This endpoint will return you the historical events that has occurred today."], ["Quiz For Today", "This endpoint will fetch you today's current affair 10 quiz questions."]]}, "Urban Dictionary": {"tool_desc": "Access all of the Urban Dictionary, the one-stop shop for slang definitions", "apis": [["Define a Word / Search", "Can be used to define a specific word, or search for word defintions"], ["Random Word", "Returns a list of random words & definitions from the Urban Dictionary database"], ["Word of the Day", "Gets the Word of the Day for the past 10 days, including today."]]}, "Random Words - Spanish and French": {"tool_desc": "Generates random words or list of words of selected lengths, in either Spanish or French.", "apis": [["Get List of Random Words", "Generates A List Of Random Words."], ["Get Random Word", "Get One Random Word"]]}, "GetBooksInfo": {"tool_desc": "GetBooksInfo API will give you information about the top 3 relevant books you searched for including its pdf link.", "apis": [["Search", "Search Book by its name"]]}, "Random Ukrainian Word": {"tool_desc": "Get multiple or single Ukrainian words from a list of 150.000+ words.", "apis": [["getRandomWords", "Get random Ukrainian words."]]}}, "Entertainment": {"Mixy Word Guess Api": {"tool_desc": "", "apis": [["Produce mixy  words list", "It produces random words in a requested amount and varios difficulty levels such as; \"easy\", \"medium\", \"hard\". In the query, \"amount\" and \"difficulty\" are optional parameters."]]}, "StarLoveMatch": {"tool_desc": "This API uses the birth as well as progressed astrological charts of people to determine their basic as well as current compatibility.", "apis": [["match", "Accepts a string parameter containing the first person's name and birth date, followed by up to 10 other people and their birth dates  with which to apply the astrological matching algorithms and return them in order of most to least compatible."], ["Brad Pitt", "This is a demo endpoint showing how it processes a list of Jennifer Aniston's partners.\n\nHere are the input 'birthdetails' parameters :  name=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&sort=O&NC=C&ryr=2022&details=N&coupon=12345678\n\nYou will see that it calculates Nicole Poturalski as his best overall (sort='O')  general match.\n\nIf you change the input parameters and specify sort='P' (Physical), you will see that she is also currrently (20220 his best physical (sex) match.\n\nIf you wish to see how it sorts his Intellectual matches, change this to sort='I', and you will see that Jennifer Aniston is currently her best intellectual partner.\n\nFor interest, change the ryr parameter to '2004' using the sortorder = 'L'ove setting, you'll see how Jennifer was at the top of the love list, i.e.\n\nname=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&name5=Nicole Poturalski&dob5=01/02/1993&sort=L&NC=C&ryr=2000&details=N&coupon=12345678\n\n\nTo have a look at what his compatibility ratings were in 2015, enter the following parameters : \n\nname=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&name5=Nicole Poturalski&dob5=01/02/1993&sort=O&NC=C&ryr=2015&details=N&coupon=12345678\n\nYou'll see Angeline Jolie is second from the bottom, with a negative overall rating.\n\nNegative ratings indicate that there are bad aspects in operation and this person should be avoided. In 2015 Brad and Angelina divorced.\n\nBut there is some good news for him and his family. If you look ahead to the year 2030 by changing the ryr parameter to 2030, you will see he has a strong love relationship with Angelina Jolie again, and Jennifer Aniston has faded away in his life.\n\nname=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&name5=Nicole Poturalski&dob5=01/02/1993&sort=O&NC=C&ryr=2030&details=N&coupon=12345678\n\nOf course, this is looking too far ahead to be generally useful at this point in time, so it is better to use the current year for the ryr parameter."], ["Jennifer Aniston", "This is a demo endpoint showing how it processes a list of Jennifer Aniston's partners.\n\nHere are the input 'birthdetails' parameters :  name=Jennifer Aniston&dob=2/11/1969&name1=Justin Theroux&dob1=8/10/1971&name2=Gerard Butler&dob2=11/13/1969&name3=John Mayer&dob3=10/16/1977&name4=Paul Sculfor&dob4=2/1/1971&name5=David Schwimmer&dob5=11/2/1969&name6=Vince Vaughn&dob6=3/28/1970&name7=Brad Pitt&dob7=12/18/1963&name8=Paul Rudd&dob8=4/6/1969&name9=Tate Donovan&dob9=9/25/1963&name10=Daniel McDonald&dob10=7/30/1960&sort=S&NC=C&ryr=2022&details=N&coupon=12345678\n\nYou will see that it calculates Paul Rudd to be her best overall (sort='O')  general match, followed by Justin Theroux and Brad Pitt.\n\nHowever, if you change the input parameters and specify sort='P' (Physical), you will see that John Mayer is her best physical (sex) match.\n\nLikewise, if you wish to see how it calculates her Intellection matches in order, change this to sort='I', and you will see that Paul Rudd is again her best intellectual partner."]]}, "Wordle Today": {"tool_desc": "Get today's wordle word", "apis": [["Today's Wordle", "Get today's wordle word"]]}, "Netflix Original Series Top 100 (ranked)": {"tool_desc": "The Netflix  orginal Series Top 100 API contains information on movies, including the release year, duration, cast, brief summaries, and ratings .", "apis": [["By Filter", "by using search filter"], ["search", "Get Request for Netflix Original Series Top 100 (ranked)"]]}, "gogoanime-data-api": {"tool_desc": "data from gogoanime website for anime website building and stuff.", "apis": [["GetRecentAnimes", "Get Animes From googanime Recent Page"]]}, "TVMaze": {"tool_desc": "Add TV information to your website or app with our easy to use REST API.", "apis": [["/schedule", "Get the TV schedule"]]}, "Hearthstone": {"tool_desc": "This API provides up to date Hearthstone data pulled directly from the game.", "apis": [["Info", "Returns a list of current patch, classes, sets, types, factions, qualities, races and locales."], ["Single Card", "Returns card by name or ID. This may return more then one card if they share the same name. Loatheb returns both the card and the boss."], ["Cards by Class", "Returns all the cards of a class. Example values: Mage, Paladin."], ["Cards by Race", "Returns all the cards of a certain race. Example values: Mech, Murloc."], ["Card Set", "Returns all cards in a set. Example values: Blackrock Mountain, Classic."], ["Cards by Quality", "Returns all the cards of a certain quality. Example values: Legendary, Common."], ["Card Backs", "Returns a list of all the card backs."], ["Card Search", "Returns cards by partial name."], ["Cards by Faction", "Returns all the cards of a certain faction. Example values: Horde, Neutral."], ["Cards by Type", "Returns all the cards of a certain type. Example values: Spell, Weapon."], ["All Cards", "Returns all available Hearthstone cards including non collectible cards."]]}, "Meowfacts": {"tool_desc": "a simple api which returns a catfact", "apis": [["defaultRoot", "By passing in the appropriate options, you can recieve a specific or more than one fact."], ["options", "This endpoint will list all languages available to the root endpoint."], ["healthcheck", "The health check endpoint will return a status of 200 if the api is up and ready to recieve connections. It will tell the uptime, and total requests served since last restart. It also has a field for version which corresponds to the versioned release from the github repo."]]}, "Throne of Glass API 2": {"tool_desc": "API for Throne of Glass Characters", "apis": [["Get Character by ID", "Get an Individual Character"], ["Get all characters", "Get all the characters with options to limit amount of responses and skip an amount of characters"]]}, "Anime Streaming": {"tool_desc": "Get a catalogue of newly added anime and episodes along with  working streaming links .", "apis": [["latest-anime", "Gets all new anime added in last 24 hours"]]}, "Drinking": {"tool_desc": "API that provides with drinking questions and challenges.", "apis": [["Get random question", "Allows you to get a random question with optionally specifying the type of the challenge."], ["Get random challange", "Allows you to get a random challenge with optionally specifying the type of the challenge."]]}, "rapid-porn": {"tool_desc": "If you're looking for a random adult picture, our API is just what you need.", "apis": [["/photo", "This is where the fun starts, replace category with a value to get ;))\nIf you get 500 Internal Server Error,\nPlease cross check your category inserted from the all-tags endpoint."]]}, "ImmersiveRouletteAPI": {"tool_desc": "ImmersiveRouletteAPI is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time lightning roulette game outcome data so they can integrate in any strategy", "apis": [["Statistics", "Stats of wheelResults:\n\"count\"\n\"percentage\"\n\"lastOccurredAt\"\n\"lastSeenBefore\"\n\"hotFrequencyPercentage\": 1.11\nNote that Duration is Hourly basis 1,2,3,.......72 ect"], ["history", "the last 20 spins histories includes all details about the game"]]}, "Meme Generator_v2": {"tool_desc": "Generate over 500 meme per day.", "apis": [["Memes", "Generate mems by /meme"]]}, "The Love Calculator": {"tool_desc": "A fun api that shows the compatibility of your crush!", "apis": [["Get Match", "The main endpoint to get your match percentage."]]}, "SongMeanings": {"tool_desc": "Easily follow and track your favorite artists on SongMeanings!", "apis": [["comments.get", "Get comments from our database for a specific song."], ["artists.search", "Search the SongMeanings database for artist names and aliases."], ["lyrics.get", "Retrieves lyrics and lyric related data for a specific song."], ["users.favorite.get", "Get a user\u2019s favorites by specified type."], ["users.password.reset", "Allows for a user to reset their password. When initiated, method will send the user an email with a link to click. The link will bring the user to desktop SongMeanings where the user will complete the password reset."]]}, "Steam": {"tool_desc": "Search, and get app/reviews/news data from store.steampowered.com", "apis": [["Global Achievement Percentages For App", "Get the list of all achievements and their percentages success rate"], ["App News", "Get last n news for App"], ["App Reviews", "Get last n reviews of an app"], ["App Detail", "Get detailed info of the app"], ["Search", "Search in steam shop"]]}, "NameForge": {"tool_desc": "Unleash your imagination and create any name you can dream up.", "apis": [["Single name short", "Create single name.\nMax query length is 25 characters."], ["Double name long", "Create double name.\nMax query length is 200 characters."], ["Double name medium", "Create double name.\nMax query length is 50 characters."], ["Double name short", "Create double name.\nMax query length is 25 characters."], ["Single name long", "Create single names.\nMax query length is 200 characters."], ["Single name medium", "Create single name.\nMax query length is 50 characters."]]}, "Would You Rather": {"tool_desc": "Get random fun 'Would You Rather' questions that are up to date!", "apis": [["question", "Get random 'Would You Rather' question"]]}, "IMDB Charts": {"tool_desc": "IMDB charts of most popular movies and tv shows.", "apis": [["Chart by id", "Get an IMDB Chart by ID\n\nThe API endpoint expects an `id` query parameter and the JSON response format is different based on it. We currently support these chart ids:\n* `boxoffice`: Top Box Office (US)\n* `moviemeter`: Most Popular Movies\n* `top`: IMDb Top 250 Movies\n* `top-english-movies`: Top Rated English Movies\n* `tvmeter`: Most Popular TV Shows\n* `toptv`: Top Rated TV Shows\n* `top-rated-indian-movies`: Top Rated Indian Movies\n* `bottom`: Lowest Rated Movies\n* `top-action`: (Top Rated Action Movies\n* `top-adventure`: Top Rated Adventure Movies\n* `top-animation`: Top Rated Animation Movies\n* `top-biography`: Top Rated Biography Movies\n* `top-comedy`: Top Rated Comedy Movies\n* `top-crime`: Top Rated Crime Movies\n* `top-drama`: Top Rated Drama Movies\n* `top-family`: Top Rated Family Movies\n* `top-fantasy`: Top Rated Fantasy Movies\n* `top-film_noir`: Top Rated Film-Noir Movies\n* `top-history`: Top Rated History Movies\n* `top-horror`: Top Rated Horror Movies\n* `top-music`: Top Rated Music Movies\n* `top-musical`: Top Rated Musical Movies\n* `top-mystery`: Top Rated Mystery Movies\n* `top-romance`: Top Rated Romance Movies\n* `top-sci_fi`: Top Rated Sci-Fi Movies\n* `top-sport`: Top Rated Sport Movies\n* `top-thriller`: Top Rated Thriller Movies\n* `top-war`: Top Rated War Movies\n* `top-western`: Top Rated Western Movies"]]}, "CsC e-Sim": {"tool_desc": "E-Sim is an online modern world simulation wherein the player becomes a citizen of one of 50 virtual countries.", "apis": [["Battle", "It will shows the battle statistic of given ID"]]}, "GMC Radio": {"tool_desc": "GMC Radio", "apis": [["GMC", "Allow users to add radio stations"]]}, "Marvel Heroic API: Unlock the MCU Legendary Characters.": {"tool_desc": "Welcome to the Marvel Cinematic Universe Character Database API!", "apis": [["getCharacterByName", "Get specific Character by name"], ["characters", "Get All 30 Characters"]]}, "Events Linz": {"tool_desc": "API that provides events in Linz, Austria", "apis": [["events", "Retrieves events in Linz, Austria"]]}, "Wisdom API": {"tool_desc": "Use this API to retrieve quotes filled with wisdom!", "apis": [["wisdomoftheday", "Daily Wisdom Quote: This API endpoint provides a wise quote that is refreshed everyday between 8-9 AM PT."]]}, "DaddyJokes": {"tool_desc": "The Dad Joke API with over 700+ Dad jokes!", "apis": [["Random", "Get a random dad joke"]]}, "TuneIn": {"tool_desc": "AIR is our broadcaster API.", "apis": [["Broadcaster Endpoint", "Your title and artist information should be set to be updated by your broadcast software in correspondence with the currently playing song."]]}, "IMDb Top 100 Movies": {"tool_desc": "Top 100 Greatest Movies of All Time.", "apis": [["Top 100 movies list", "The Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Trailer, Genre, Director, Writer and IMDb ID of The Top 100 Movies of All Time."], ["Movie Data By Id", "This endpoint Lists a movie's data by the id.\nContains medium sized cover image, trailer, description and more.\nExample id: top17"]]}, "Allbet Online Casino  in Singapore": {"tool_desc": "With an simple-to-direct user border, large cards, and fast gameplay.", "apis": [["Allbet Casino Singapore", "[Allbet ](https://allbetsg.com/\n)is so much more than just an online Allbet Casino Singapore."]]}, "Random Cat Fact": {"tool_desc": "Get some random cat facts", "apis": [["Cat Facts", "Get some random cat fact"]]}, "Chart Lyrics": {"tool_desc": "The API provides 3 functions.", "apis": [["/apiv1.asmx/SearchLyricDirect?artist=michael%20jackson&song=bad", "Sample API request to search Lyrics"]]}, "PixelStix": {"tool_desc": "PixelStix is a suite of technologies for locating and interacting with physical objects.", "apis": [["PixelStix Meta", "This endpoint will retrieve the meta information for a given PixelStix code and any Maps/Galleries it may be associated with if the PixelStix is of type 'PREMIUM'"], ["PixelStix Map Meta", "A PixelStix Map is a collection of PREMIUM PixelStix that have been assigned latitude and longitude coordinates. A PREMIUM PixelStix can belong to multiple Maps and is also known as a Gallery.\n\nThis endpoint will retrieve information about your particular Map/Gallery. The name used in the endpoint is the same name that you will see in the list of galleries when using the PixelStix app."], ["Get Last N Days Scan Counts For Tag", "Gets the number of scans over the last N days, per day"]]}, "Text similarity calculator": {"tool_desc": "This calculates the similarity between two texts in percentage.", "apis": [["getPercentage", "Calculate the percentage of match between two texts."]]}, "MDBList": {"tool_desc": "Get Movies and TV Shows data with ratings from multiple providers in JSON format", "apis": [["Search by Title", "Search for Movies or TV Shows by title, include option year or mediatype filter to narrow your results"], ["Get by Trakt.tv ID", "Returns movie or TV Show info"], ["Get by IMDb ID", "Returns movie or TV Show info by IMDb ID"], ["Get by TMDb ID", "Returns movie or TV Show info"], ["Get by TVDB ID", "Returns TV Show info"]]}, "Web - Novel API": {"tool_desc": "Looking for the latest and greatest in Korean, Chinese, and Japanese web novels?", "apis": [["/novel/{novel_id}/chapter/{chapter_id}", "Returns the Crawling Result for the selected Chapter ID.\n\nThis Endpoint is Crawling Results live so there can be Problems due to Bot Protection etc. this usually is automatically resolved, and you should not be billed in this case, so if you get an Error Return we recommend waiting some time and to retry."], ["/novel/{novel_id}/chapters/{source_id}", "Returns the full Chapters list for the Requested Novel ID from the selected Source."], ["/novels", "Returns the amount of pages in the Novel Catalog."], ["/novel/{novel_id}/cover", "Returns the Cover for the Requested Novel ID"], ["/search/{query}", "Search the Novel Catalog for Query and returns results with Scoring etc.\n\nSearches:\n- Title\n- Author"], ["/novel/{novel_id}", "Returns the full Details Page for the Requested Novel ID."], ["/novels/{page}", "Returns the requested Novel Catalog Page."], ["/novel/{novel_id}/chapters", "Returns the Available Chapter Sources for the Requested Novel ID."]]}, "animes": {"tool_desc": "Get all data from your favorite anime, and the chapter or tomo of the manga or  the light novel that the anime adapted", "apis": [["Get anime detail", "This endpoint will allow a user to get the data of a specific anime. It will take the anime's mal_id as a parameter and return the anime's data in JSON format. The data returned will include the anime's title, aired episodes, genre, and a brief synopsis."], ["Get animes", "This endpoint allows for the retrieval of data about anime. The query parameters include q (the search query), limit (the number of results per page), offset (the number of results to skip), ascending (sort order), order (sort order), `media_type `(anime type), studio (studio name), source (source material), status (`currently_airing `or `finished_airing`), genre, season, `year_equal `(equal to a year specified), `year_less `(less than a year specified), `year_greater `(greater than a year specified), language, and nsfw (not safe for work content)."]]}, "Random Quote Generator": {"tool_desc": "API serves from large collections of quotes.", "apis": [["Request Random Quote", "A simple get request."]]}, "Wisdom Quotes": {"tool_desc": "Last update: February 11, 2023.", "apis": [["Get Wisdom Quote By ID", "Returns a single wisdom quote by a given ID. The highest is 27753."], ["Get A Random Wisdom Quote", "Returns a JSON object which includes a random wisdom quote and its related id."], ["Get Wisdom Quotes By Page", "Returns an JSON object that includes:\n\n- the page number requested  (current_page), \n- the amount of all pages (max_pages),\n- the amount of the quotes (quotes_count) (15 per page),\n- the wisdom quotes array (quotes)."], ["Get Wisdom Quotes By Topic", "Returns an array of all wisdom quotes that are related to a given topic."], ["Get All Wisdom Topics", "Returns an Array of all available wisdom topics. \nEach topic has its own quotes."]]}, "Watchmode": {"tool_desc": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)", "apis": [["Title Episodes", "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on."], ["Autocomplete Search", "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url."], ["Streaming Release Dates", "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service."], ["Search", "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/"], ["Person", "Return details on a specific person (actor, director, etc)."], ["List Titles", "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans."], ["Regions", "Return a listing of all regions (countries) that Watchmode currently supports and their 2 letter country codes used in the return data of other endpoints."], ["Sources", "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc)."], ["Genres", "Return a mapping of genre names and IDs. Some genres have a tmdb_id, which is the corresponding genre ID on TheMovieDB.org API."], ["New Titles", "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title."], ["Networks", "Return a listing of all TV networks that may be returned for a title in the /title endpoint."], ["Title Details", "Get the details for a specific title, using the Watchmode universal ID."], ["Title Seasons", "Return all of the seasons for a TV show or mini-series."], ["Title Streaming Sources", "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans."], ["Title Cast & Crew", "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint."], ["Titles with Changed Sources", "Get a listing of titles that have changed to their streaming sources within the date range."], ["New People", "Get a listing of the ids of new people added to Watchmode within the date range."], ["Titles with Changed Episodes", "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range."], ["Titles with Changed Details", "Get a listing of titles that have had a change to their basic details (overview, cast, genres, ratings, etc) within the date range."]]}, "Youtube Search and Download": {"tool_desc": "Get info about channel, playlist, video, get trendings or search everything you want in YouTube", "apis": [["About channel", "Return more info about channel"], ["Video comments", "Get video comments list.\nIf you need sorting then use \"sortTopNext\" or \"sortNewestNext\"  fields from first response and pass it to \"next\" parameter."], ["Trending", "Get list of trending videos"], ["Video info", "Get video info by id"], ["Search videos/channels/playlists", "Search any youtube content with all available filters"]]}, "Cinema API": {"tool_desc": "Welcome to our exciting new API!", "apis": [["Get Movie Reviews By Id", "This Endpoint returns a complete list of reviews associated to the ID. You can obtain the ID from the Get Movie By ID endpoint."], ["Get Movie Images By ID", "This Endpoint returns a complete list of images associated to the ID. You can obtain the ID from the Get Movie By ID endpoint."], ["Get Movie ID By Title", "Use this endpoint to retrieve the ID of the movies you are interested in. You can search your movie or your preferite actor."], ["Get Cast By ID", "With this endpoint, you can retrieve the full cast's list (together with their images and their role in the movie)."]]}, "Random Yes/No": {"tool_desc": "Get some random Yes or No", "apis": [["Yes or No", "Get some random Yes or No"]]}, "New York Lottery": {"tool_desc": "Live draw results of New York Lottery", "apis": [["Get Draw Results", "Return all draw results for all games."]]}, "Ten Secrets About Mega888 Ios Download That Has Never Been Revealed For The Past Years": {"tool_desc": "You can also select games from Mega888 slot game, and Blackjack.", "apis": [["Agen mega singapore", "ingapore Mega888 we bring you all the latest slot games including 5 Fortune, 7 Crazy, Aladdin Wishes, Sea World, Roulette, God of Wealth, Enchanted Garden, Highway Kings, Boyking\u2019s Treasure, Captains Treasure, Panther Moon, Mystery Dragon etc. With wide range of promotions and bonuses players get a chance to spin the reel for free and win big jackpots."]]}, "Chuck Norris by API-Ninjas": {"tool_desc": "Access thousands of funny Chuck Norris Jokes!", "apis": [["/v1/chucknorris", "API Ninjas Chuck Norris API endpoint. Returns a Chuck Norris joke."]]}, "World of Jokes": {"tool_desc": "Get over 10 millions jokes from around the world falling under 60+ categories.", "apis": [["Get Joke of the Day By Category", "Get the joke of the day of specific category from a collection of most rated and most popular jokes."], ["Get Random Joke By Category", "Get the random joke by category from a collection of most rated and most popular jokes."], ["Get Random Joke", "Get the random joke from a collection of most rated and most popular jokes."], ["Get Jokes", "Access our huge collection of jokes and paginate through them based on your desired limit and sorting criteria."], ["Get Categories of Jokes", "Get all available categories of our Jokes collection which can be used to filter jokes based on specific category."], ["Get Jokes By Specific Category", "Access our huge collection of jokes of specific category and paginate through them based on your desired limit and sorting criteria."], ["Get Joke of the Day", "Get the joke of the day from a collection of most rated and most popular jokes."]]}, "Flames Love Calculator": {"tool_desc": "Simple API to Calculate Flames score", "apis": [["/flame", "Pass both name as path parameters."]]}, "Euro Millions": {"tool_desc": "A rich API to get EuroMillions results.", "apis": [["Get the Last result", "Get the latest draw results available"], ["Get All draws results", "Get the results of all draws in history of EuroMillions since 2004"], ["Get all stats", "Provide statistics about the frequency of each number in all draws in EuroMillions history in database. Here you can get the most frequent number or star in the draws."], ["Get M1lhao", "Get last drawn result of M1lhao (M1lh\u00e3o (\u2018The Million\u2019) is a supplementary game offered to Portuguese EuroMillions players which offers the chance to win a prize of \u20ac1 million on Friday evenings.)"], ["Get All M1lhao draws dates", "Get all M1lhao draws dates (M1lh\u00e3o (\u2018The Million\u2019) is a supplementary game offered to Portuguese EuroMillions players which offers the chance to win a prize of \u20ac1 million on Friday evenings.)"], ["Get M1lhao by date", "Get a specific M1lhao drawn result by date (M1lh\u00e3o (\u2018The Million\u2019) is a supplementary game offered to Portuguese EuroMillions players which offers the chance to win a prize of \u20ac1 million on Friday evenings.)"], ["Get All M1lhao results", "Get the whole history of M1lhao result draws"], ["Get Birthday draws", "Get all draws result occurred at a given birthday date (mm-dd) and check it out what's your lucky number and related statistics."], ["Get All draws", "Get a list of all draws dates available in the API"], ["Get result by date", "Get the draws result for an specific date"], ["Get last fresh result", "Get the latest result available in real time on official results website"]]}, "YouTube to Mp4": {"tool_desc": "An online service that grabs YouTube video file from the unique server address on Google.", "apis": [["Title & URL", "fetches YouTube direct download link and video title"]]}, "Fantasy 5": {"tool_desc": "Do you live for the Fantasy 5?", "apis": [["Drawings Between Dates", "Get all Fantasy 5 winning number sets between two specified dates where the first number supplied is the beginning date and the second number supplied is the end date."], ["Drawing By Date", "Get the winning Fantasy 5 number set from a specific drawing date."], ["Random QuickPick for Play", "Get a randomized Quick Pick for the Fantasy 5. This is a random set of playable Fantasy 5 numbers."], ["Latest 10 Drawings", "Get the latest, and last winning 10 Fantasy 5 number sets."], ["Latest Drawing", "Get the latest, and last winning Fantasy 5 winning number set."], ["General Statistics", "This endpoint pulls basic statistics of the Fantasy 5 numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game."], ["Get All Fantasy 5", "Get all winning drawings in Fantasy 5"]]}, "Humor-Jokes-and-Memes": {"tool_desc": "Humor API lets you search through 50,000 jokes, over 200,000 memes, and gifs.", "apis": [["Create Joke", "Create a joke using a large language model."], ["insult", "Insult somebody for doing something.\nSee https://humorapi.com/docs/#Insult for more."], ["praise", "Praise somebody for doing something.\nSee https://humorapi.com/docs/#Praise for more."], ["rate-word", "Rate the funniness of a word.\nSee https://humorapi.com/docs/#Rate-Word for more."], ["generate-nonsense-word", "Generate a nonsense word.\nSee https://humorapi.com/docs/#Generate-Nonsense-Word for more."], ["search-gifs", "Search for gifs.\nSee https://humorapi.com/docs/#Search-Gifs for more."], ["random-meme", "Get a random meme.\nSee https://humorapi.com/docs/#Random-Meme for more."], ["search-memes", "Search for memes.\nSee https://humorapi.com/docs/#Search-Memes for more."], ["search-jokes", "Search for jokes.\nSee https://humorapi.com/docs/#Search-Jokes for more."], ["random-joke", "Get a random joke.\nSee https://humorapi.com/docs/#Random-Joke for more."]]}, "Lotto America": {"tool_desc": "Do you live for the Lotto America?", "apis": [["General Statistics", "This endpoint pulls basic statistics of the Lotto America numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber, starBall, bonus) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game."], ["Drawings Between Dates", "Get all Lotto America winning number sets between two specified dates where the first number supplied is the beginning date and the second number supplied is the end date."], ["Drawing By Date", "Get the winning Lotto America number set from a specific drawing date."], ["Random QuickPick for Play", "Get a randomized Quick Pick for Lotto America. This is a random set of playable Powerball numbers"], ["Latest 10 Drawings", "Get the latest, and last winning 10 Lotto America number sets."], ["Latest Drawing", "Get the latest, and last winning Lotto America winning number set."], ["Get All Lotto America Drawings", "Get all winning drawings from Lotto America."]]}, "stapi - showerthoughts": {"tool_desc": "stapi or showerthoughts api is an api which makes use of the posts on subreddit r/showerthoughts and fetches results for the end user.", "apis": [["top", "this end point will fetch the top shower thought from all frames of time. \n(i.e. now, today,week,month,year,alltime)"], ["latest", "chose a number between 1 to 500 and based on that all the latest showerthoughts on the subReddit will be fetched.\n\nif the number is not specified a total of 100 showerthougts are returned by default."], ["random", "Fetches a random shower thought out of latest 100 posted on the subReddit."]]}, "Cash4Life": {"tool_desc": "Do you want to get paid for the rest of your life?", "apis": [["Drawings Between Dates", "Get all Cash4Life winning number sets between two specified dates where the first number supplied is the beginning date and the second number supplied is the end date."], ["Drawing by Date", "Get the winning Cash4Life number set from a specific drawing date."], ["General Statistics", "This endpoint pulls basic statistics of the Cash4Life numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber, and cashBall) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game."], ["Lastest Drawing", "Get the latest, and last winning Cash4Life winning number set."], ["Random QuickPick for Play", "Get a quickpick number for the Cash4Life drawing."], ["Latest 10 Drawings", "Latest 10 Cash4Life drawings"]]}, "Memeados": {"tool_desc": "Generate custom image, gif and video memes.", "apis": [["drakelikehate", "Generate Drake Likes and Hates meme"], ["Pet Pet", "Generate My Pet Pet meme GIF"], ["Sponge bob", "Generate Sponge Bob meme"], ["Google Fake Autocomplete", "Generate Fake google autocomplete"]]}, "mbar": {"tool_desc": "mbar offers a free, read only REST API for access to its programme data, including event, artist and club series information", "apis": [["Event", "Can be ordered by start time, descending; and various fields can be filtered"]]}, "Riddlie ": {"tool_desc": "API that provides access to a collection of thousands of riddles (and growing).", "apis": [["Flag Riddle", "With this endpoint, you can flag a riddle. This helps the API developer to finetune the API for better service in the future.  You can only use four flags sending the number corresponding to the flag type as below:\n\n0: for flagging the riddle as \"Duplicate\"\n1: for flagging the riddle as \"Inappropriate\"\n2: for flagging the riddle as \"Not a Riddle\"\n3: for flagging the riddle as \"Missing Information\""], ["Update Level", "This endpoint enables you to update the level of the Riddle. All the riddles are set to a medium level which is enumerated as \"1\".  You can suggest the level of a riddle by simply calling this endpoint with query parameters \"0\", \"1\", or \"2\". \n\"0\" is Easy\n\"1\" is Medium \n\"2\" is Hard"], ["Riddle by Keyword", "Get one random riddle around a specific subject or keyword. For example, a riddle on a \"cat\"."], ["Riddle by Difficulty Level", "Get one random riddle based on the difficulty. For example, by Easy, Medium, Hard."], ["Riddle by ID", "Get a riddle by ID."], ["Upvote Riddle", "Simply calling this endpoint registers a \"like\" to better serve the riddles in the future. There is no response back other than a status message."], ["Get Riddle of the Day", "With this endpoint, you can request a riddle of the day. Each day API will serve a different riddle with an answer and other details."], ["Get Random Riddle", "This endpoint responds with a new random riddle with an answer and other details."]]}, "HAPI Books": {"tool_desc": "HAPI Books is an API about books.", "apis": [["Get the Most Popular Authors", "Get the list of the most popular authors right now with a set of other relevant information."], ["Get Book Information by Book Id", "Giving its Id, this endpoint returns a lot of information about that book, such as Name, Published Date, Authors, Synopsis, and many more."], ["Get Weekly Popular Books by Genre", "Returns the most popular books from the last weeks given a genre."], ["Search Books by Name", "Giving a book name (where spaces must be replaced by '+') you will receive a list of corresponding books. This list can return up to 20 books related to the input.\nEach book has information such as Name, Authors, Cover image URL, Launched Year, and many more."], ["Get the Awarded Books of a Year", "Returns the list of the best books of a year by its winning category.\nEach returned book has its Name, Winning Category, Cover Image and more."], ["List of Nominated Books for a Genre in a Year", "For a certain year and a genre, get the list of all nominated books to win an award."], ["Get Author Information by Id", "Get a large variety of information of an Author such as the name, a brief biography, the list of books, and more."], ["Get the Top 15 most popular books in a Month of an Year", "Provide the year and the month (between 1 and 12) and receive the 15 most popular books for that month."]]}, "DOTA 2 Steam Web": {"tool_desc": "A WebAPI for match history is now available on Dota 2.", "apis": [["Match Details", "To retrieve the specific details of a match, use this API:"], ["Match History", "will return the latest 25 public matches in JSON format. You can request it in XML format"]]}, "Fun Facts": {"tool_desc": "This simple API returns  radom fun facts", "apis": [["fun-fact", "returns radomly generated facts on each all"]]}, "Interesting Facts API": {"tool_desc": "This API returns facts about anything.", "apis": [["Health Check Endpoint", "This endpoint returns successful response, if service works fine."]]}, "Meme Generator and Template Database": {"tool_desc": "Meme Generator with support of adding captions and text directly on images to over 1.8k meme templates in 10+ fonts (works in multiple languages).", "apis": [["/search", "Returns meme templates that contain a specific string. **searchString is case sensitive**"], ["/fonts", "Any of the fonts can be used  in any text box or caption.\nSome fonts are language specific:\n- Chinese -> zcool-wenyi\n- Japanese -> takaopmincho\n-  Korean -> gugi\n- Hindi -> poppins"], ["/templates", "Returns all of the currently supported templates and the number of text boxes that a particular template can support. For how to use this response go to **/template/:image**."]]}, "jokes ": {"tool_desc": "This API provides 1536 English funny jokes.", "apis": [["Search for joke", "Find joke by text"]]}, "retrieve info": {"tool_desc": "to retrieve information", "apis": [["Get Joke by id", "Search joke by id"], ["Get random joke", "to get random joke"]]}, "Daily Cat Facts": {"tool_desc": "This  APIs and Services from the web to do just one thing...", "apis": [["Get some random facts", "Get some random facts ."]]}, "Soft-cat-quiz": {"tool_desc": "An API Service returning data for a  Quiz Web Application about cats.", "apis": [["Get Results", "This endpoint returns the result of the users who attempted the quiz"], ["Get Questions and Answers", "This endpoint returns the quiz questions and answers"]]}, "Webtoon": {"tool_desc": "This API provides the largest webcomics data in the world to create a comic site/application such as webtoons.com", "apis": [["canvas/titles/get-info", "Get comic information\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["canvas/titles/get-recommend", "Get similar comics\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["canvas/search", "Search for comics by term or phrase\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["canvas/genres/list", "List genres in canvas category\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["canvas/titles/list", "List comics in canvas category\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["originals/titles/get-info", "Get comic information\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["originals/episodes/get-likes", "Get likes count of a episode"], ["originals/titles/get-recommend", "Get similar comics\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["originals/episodes/get-info", "Get episode and photo links\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["originals/episodes/list", "List episodes of a comic\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["canvas/episodes/get-info", "Get episode and photo links.\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["canvas/episodes/list", "List episodes of a comic\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["originals/genres/list", "List genres in originals category"], ["canvas/episodes/get-likes", "Get likes count of a episode"], ["canvas/home", "Reproduce comic data in home screen\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["originals/titles/list", "List comics in originals category\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"], ["originals/titles/list-by-rank", "List comics in originals category by ranking\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images"]]}, "Quotes_v2": {"tool_desc": "We  provide developers with a vast collection of inspirational, thought-provoking, and entertaining quotes.", "apis": [["Get Quote By Id", "Get quote information by id"], ["Get Random Quote", "Get a random quote"]]}, "XXXtremeLightningRouletteAPI": {"tool_desc": "XXXTremeLightningRoulette is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time lightning roulette game outcome data so they can integrate in any strategy", "apis": [["latest-outcome", "last spin details and Outcome Data"], ["History", "Histories of the last 30 spins"]]}, "4D Results": {"tool_desc": "Live 4D results for Malaysia and Singapore.", "apis": [["Get Draw Dates (2023)", "List of draw dates in 2023."], ["Get Past Results (1 year)", "Return all company 4D Results within a specific date range.\n(Up to 1 year data and only available for ULTRA PLAN subscriber)"], ["Get Past Results (10 years)", "Return all company 4D Results within a specific date range.\n(Up to 10 year data and only available for MEGA PLAN subscriber)"], ["Get 4D Results", "Get 4D results by date and company.\nResults including 4D and jackpot."], ["4D Dream Dictionary", "Return relevant 4D/3D lucky draw number based on keyword (english/chinese) of your dream."], ["Get 4D Company List", "Return available company code and name.\nCode can use as parameter to query the Get 4D Results method."]]}, "Manga Scrapper": {"tool_desc": "Get webtoon / comic data from favourite scanlation websites.", "apis": [["A chapter by its slug", "Make request to fetch a specific chapter information for a specific webtoon from a specific provider."], ["Search result for webtoon's query", "Make request to find webtoons based on the provided query."], ["Pass a Cloudflare protected site", "Make a request to fetch a website protected with Cloudflare's IUAM (I'm Under Attack Mode). This endpoint returns HTML document ready for data scraping purposes."], ["Latest chapters updates", "Make request to fetch latest chapters updates up to 7 days ago."], ["Chapters list - all", "Make request to fetch chapter collection for a specific webtoon from a specific provider."], ["Chapters list - paginated", "Make request to fetch chapter collection for a specific webtoon from a specific provider."], ["Providers list - all", "Make request to fetch webtoon providers list."], ["A webtoon by its slug", "Make request to fetch a specific webtoon information from a specific provider."], ["Webtoons list - all", "Make request to fetch webtoon's series collection from a specific provider."], ["Webtoons list - paginated", "Make request to fetch webtoon's series collection from a specific provider."]]}, "Img to ASCII": {"tool_desc": "Convert picture to ASCII image by URL or upload your own image.", "apis": [["Get ASCII by id", "Load previously generated ASCII image by id"]]}, "Joke1": {"tool_desc": "Get a Random joke", "apis": [["/random_joke", "Returns a random joke"]]}, "Comedy(KK)": {"tool_desc": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.", "apis": [["Funny Movement", "Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved"]]}, "New Girl": {"tool_desc": "This api provides data for the tv show called New Girl.", "apis": [["Get extra character details", "Get extra details about a character. (Currently being updated with more data)"], ["Get show facts & rotten tomato scores", "You can find show data including season by season rotten tomato scores by hitting the home route."], ["Get character by id", "Providing the character id, you will get that specific character in the response. You can find a character id by hitting `/characters` and grabbing an id from there."], ["Get recurring characters", "This endpoint gets the recurring characters within the show."], ["Get main characters", "This route will provide you with the show's main characters"], ["Get all characters", "This will provide the show's characters with a tiny bit of data"]]}, "Jet Set Radio API": {"tool_desc": "A data provider for all things Jet Set Radio in JSON format!", "apis": [["Graffiti Tags", "Returns a list of all Graffiti-Tags"], ["Artists", "Returns a list of all music Artists who contributed to JSR/JSRF"], ["Songs", "Returns a list of all Songs from JSR/JSRF"], ["Levels", "Returns a list of all Levels"], ["Locations", "Returns a list of all Locations in JSR/JSRF"], ["Games", "Returns a list of all Games"], ["JSRF Character by ID", "Returns a single Character by ID"], ["JSRF Characters", "Returns a list of all JSRF Characters"], ["JSR Character by ID", "Returns a single Character by ID"], ["Characters", "Returns a list of all Characters"], ["JSR Characters", "Returns a list of all JSR Characters"]]}, "Movie Showtimes": {"tool_desc": "Movie showtimes for Cinemas NOS (portuguese movie theaters)", "apis": [["/api/all", "Get all the sessions for all the available movies"], ["/api/information", "Get the sessions for the specified movie (IMDb id)"]]}, "Hummingbird APIv1": {"tool_desc": "APIv1 is the old Hummingbird API that is already implemented in multiple applications, its syntax and functionality will surely not change in the future so it is recommended to use this for any long-running projects.", "apis": [["Feed", "Get the latest posts on a user's feed"], ["Favourites", "Get a user's favourite anime"], ["User", "Get informations about a single user"], ["Library", "Get a user's anime library"], ["Search", "Search for an anime (supports fuzzy search)"], ["Anime", "Get information about a single anime"]]}, "Coin Flip": {"tool_desc": "API that flips a coin", "apis": [["Heads / Tails", "Returns an outcome. Either heads or tails"]]}, "Poker Cards Cartomancy": {"tool_desc": "Giving meaning to each playing poker cards", "apis": [["Get one card", "This is a random card."], ["Get All Cards", "All cards name, number, meaning and images"]]}, "Celebrity by API-Ninjas": {"tool_desc": "Get information on all your favorite celebrities.", "apis": [["/v1/celebrity", "API Ninjas Celebrity API endpoint."]]}, "Fortune Cookie": {"tool_desc": "\ud83e\udd60 This RESTful API returns a json object with aphorisms, almost like what you get in a fortune cookie.", "apis": [["slack", "This endpoint's response shape is designed to match the requirements for slack messages. You can easily use this api to have a POST or GET for this /slack endpoint to get the same functionality as the defaultRoot endpoint, but in a slack style response."], ["defaultRoot", "default get request to the random fortune endpoint returning a standard response"], ["healthcheck", "The health check endpoint will return a status of 200 if the api is up and ready to recieve connections. It will tell the uptime, and total requests served since last restart. It also has a field for version which corresponds to the versioned release from the github repo."]]}, "Pipotronic": {"tool_desc": "This application is perfect for generating funny and ironic textual content in French to use in your powerpoints, meetings, corporate brochures, and more!", "apis": [["Get sentence", "Funny and ironic randomly generated textual content to incorportate into powerpoints, meetings, corporate brochures..."]]}, "TVView": {"tool_desc": "Live FREE to Air Tv Channel Streaming Links.", "apis": [["AllChannel", "Get All the Channel"]]}, "cubiculus - managing LEGO set collection": {"tool_desc": "API allows manage LEGO set collection.", "apis": [["User by email", "get detail user informations, requires users's own cubiculus credential"]]}, "HeyWatch Video Encoding": {"tool_desc": "Encode videos in the cloud with the HeyWatch Video Encoding API", "apis": [["DownloadVideo", "Download the source video"], ["GetAllVideos", "List of all videos"], ["GetFormat", "Get a specific format"], ["GetVideo", "Get Information about a specific video"], ["DownloadEncodedVideo", "Download the encoded video file"], ["GetHLSJob", "Get information of the specified HLS Job"], ["GetEncodedVideo", "Get specific info about an encoded video"], ["GenerateVideoThumbnailSync", "Generate the thumbnail of the video (Sync)"], ["GetAllEncodedVideos", "Get all encoded videos of your account"], ["GetAllFormats", "Retrieve all the formats"]]}, "Guinness-World-Records-Api": {"tool_desc": "An API To Fetch World Records Based On A Term, Or Details For A Specific Record.", "apis": [["Get Record Details", "Get the record details for a given href which will be returned from the \"Get Records\" request\n\n\nReturns details like who/what/where/when and an array of strings indicating the different paragraphs as displayed in guinnessworldrecords.com"], ["Get Records", "Get Guinness World Records for a given term"]]}, "Follow Youtube Channel": {"tool_desc": "An API that shows all videos and notifies you that was lanced new videos of any channel", "apis": [["Get Videos By Channel", "This endpoint will return the last 30 videos. Just specify the channel id (cid)."]]}, "Reddit meme": {"tool_desc": "An API for showing the best memes on the internet using Reddit", "apis": [["Trending memes", "Use this route to get the newest trending memes from subreddit"], ["Top memes", "Use this route to get the all top quality memes from subreddit"]]}, "Epic Games store": {"tool_desc": "Search games/bundles/editors in Epic Games store, get latest news from the platform and present free games.", "apis": [["Get News", "Get list of all news on the platform."], ["Get free games", "List of present free games."], ["Search", "Find games in simple search API endpoint."]]}, "Poetry DB": {"tool_desc": "PoetryDB is the world's first API for Next Generation internet poets", "apis": [["/title", "List of all poem titles on Poetry DB"], ["/title/{title}", "All poems on Poetry DB with a specific title"], ["/linecount/{linecount}", "All poems on Poetry DB with a specific number of lines"], ["/author", "List of all poets on Poetry DB"], ["/author,title/{author};{title}", "All poems with a specific title by a specific author"], ["/author/{author}:abs", "All poems by a specific author"], ["/title/{title}:abs", "All poems with a specific title"], ["/lines/{line}", "All poems on Poetry DB containing a specific line"], ["/author/{author}", "All poems on Poetry DB by a specific poet"], ["/lines/{line}:abs", "All poems that contain a specific line"]]}, "SHIMONETA": {"tool_desc": "This api can check if the input word is risky or not on global.", "apis": [["Send a word to check", "The API returns what the word means if the word is vulgar."]]}, "VOD App": {"tool_desc": "API for video on demand app", "apis": [["Series", "Series Endpoint, will have details about series and it's episodes"]]}, "Twitter video downloader mp4": {"tool_desc": "Twitter video downloader in mp4  is Iframe & button API ( https://mp3downy.com/twitter-video-downloader-API )  is now providing you the best ever fastest Downloader API(Application Programming Interface) all of free.", "apis": [["https://mp3downy.com/twitter-video-downloader-API", "New twitter video downloader https://mp3downy.com/twitter-video-downloader-API"]]}, "Chinese Zodiacs - AI": {"tool_desc": "Chinese Zodiacs in Simplified &amp; Traditional languages.", "apis": [["Get Zodiac", "return specific zodiac fortune by sign, period and language."]]}, "Riddles by API-Ninjas": {"tool_desc": "Quality riddles perfect for entertainment apps.", "apis": [["/v1/riddles", "API Ninjas Riddles API endpoint. Returns one or more random riddles."]]}, "Outking": {"tool_desc": "All the latest movie posters as well as an extensive database of older posters.", "apis": [["Get Poster", "Get movie poster by title and release year"]]}, "Deezer": {"tool_desc": "Deezer is the No.", "apis": [["Infos", "Get the infos about the api in the current country"]]}, "Disney worlds": {"tool_desc": "Download and stream Seasonal movies and full movies without buffering, from the official company of Disney Inc.", "apis": [["seasonal movies", "Get a full list of all seasonal movies"], ["animes", "Get the best and current disney animes released today"], ["romance", "get all full movies for romance"], ["action movies", "get action movies by generating movie id"], ["movie details", "Get movie details by searching movie name"], ["latest movie", "Get the latest movies released from disney and other platforms"]]}, "MangaVerse API": {"tool_desc": "Unleash the World of Manga with MangaVerse API!", "apis": [["Fetch Images", "This will be get the image from the chapters, the image sort base on the index\nso make sure you sort base from index if you manipulate it,\nid should be chapter id"], ["Fetch Chapters", "This will get all the chapters list from the manga \nid should be manga id"], ["Get Manga", "Get manga details \nid should be manga id"], ["Fetch Latest", "This will get the latest of the updated manga on this server\npage should be 1 or more than 1 and the genres should be string with comma\ngenres ex: Harem,Fantasy"], ["Search Manga", "Fetch manga base on the text, text will be include from title and sub title"], ["Fetch Manga", "This will get the list of manga on this server\npage should be 1 or more than 1 and the genres should be string with comma\ngenres ex: Harem,Fantasy"]]}, "ASE's Quiz API": {"tool_desc": "Question API with 500+ questions, 8 categories and 3 difficulties for your apps.", "apis": [["Get all questions", "Get all questions without pagination"]]}, "Wrestling API": {"tool_desc": "Shows results for wrestling matches", "apis": [["Wrestling News", "This will give you the most up to date results for wrestling matches."], ["Wrestling API Home", "This is the welcome message."]]}, "Hobbies by API-Ninjas": {"tool_desc": "Access thousands of awesome hobby ideas.", "apis": [["/v1/hobbies", "Returns a random hobby and a Wikipedia link detailing the hobby."]]}, "Jokes by API-Ninjas": {"tool_desc": "Access a large collection of jokes from the internet.", "apis": [["/v1/jokes", "API Ninjas Jokes API endpoint."]]}, "Show Air Dates": {"tool_desc": "Find which shows are airing today, tomorrow, in the next 7 days, or in the next 31 days", "apis": [["Next 31 days", "Shows airing in the next 31 days"], ["Next 7 days", "Shows airing in the next 7 days"]]}, "Programming Memes Images": {"tool_desc": "Get random endless programming memes images.", "apis": [["v1/memes", "Get Random Programming Memes"]]}, "Dad Jokes by API-Ninjas": {"tool_desc": "Thousands of hilarious dad jokes for your entertainment apps.", "apis": [["/v1/dadjokes", "API Ninjas Dad Jokes API endpoint. Returns one (or more) random dad jokes."]]}, "Words of Wisdom - The Famous Quotes API": {"tool_desc": "Unlock the wisdom of the ages with our Famous Quotes API!", "apis": [["/quotes", "Get inspired by the words of history's greatest thinkers. Get your daily dose of motivation"], ["/authors", "Returns a list of authors"], ["/categories", "Returns a list of categories"]]}, "CrazyTimeAPI": {"tool_desc": "CrazyTimeAPI is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time game outcome data so they can integrate in any strategy", "apis": [["Statistics", "Stats of wheelResults:\n\"count\"\n\"percentage\"\n\"lastOccurredAt\"\n\"lastSeenBefore\"\n\"hotFrequencyPercentage\": 1.11\nNote that Duration is Hourly basis 1,2,3,.......72 ect"], ["latest-outcome", "Get the last Outcome data and details"], ["History", "Get the last 10 spins Histories and details"]]}, "Horoscopes AI": {"tool_desc": "Horoscopes by AI in multilingual.", "apis": [["Get Horoscope (Multilingual)", "Return horoscope information by sign, period, type and languages provided."], ["Get Horoscope (English Only)", "Return horoscope information by sign, period, type and languages provided."], ["Get Signs", "Return 12 horoscope sign names."], ["Get Period", "Return available period for Horoscope."], ["Get Types", "Return available types for the particular period."]]}, "Burning Series API": {"tool_desc": "Get all shows, Details about a show, Seasons, Episodes and Streams", "apis": [["Get All Routes", "Get all available routes"], ["Get Show Episodes", "- page url\n- stream urls\n- episode title"], ["Get Show Details", "- Title\n- Description\n- Runtime\n- Author\n- Director\n- Actors\n- Producer\n- Genres\n- Languages\n- Seasons"], ["Get All Shows", "Get all currently available shows"]]}, "Tiktok Video Downloader": {"tool_desc": "Tiktok Downloader.The fastest way to download without watermark video from tiktok.", "apis": [["Video", "This will return  the details of video and download link"]]}, "Minecraft-Forge-Optifine": {"tool_desc": "This api is used to get version list and download for Minectaft, Forge and Optifine.", "apis": [["optifineVersionList", "Get Optifine version list."], ["downloadForgeInstaller", "Redirect to download Forge Installer."], ["minecraftResources", "Same to official source. Used to get resources file for MC 1.6."], ["forgeVersionList", "This method return a forge version list in JSON format."], ["minecraftVersionList", "Return Minecraft version list in JSON format."], ["downloadOptimize", "Redirect to download Optimize."], ["downloadMinecraftJar", "Redirect to download Minecraft .jar file."], ["forgeLegacyList", "Return a JSON format file of http://files.minecraftforge.net/minecraftforge/index_legacy.html ."], ["downloadMinecraftJson", "Redirect to download Minecraft .json file."], ["downloadMinecraftJarChecksum", "Return a .sha1 file used to checksum for downloadMinecraftJar method."]]}, "LightningRoulletteAPI": {"tool_desc": "APILightningRoulette is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time lightning roulette game outcome data so they can integrate in any strategy", "apis": [["History", "The Histories of last 30 spins with all the details"], ["Get last update", "A JSON response with information about a single roulette spin."]]}, "The Dozen - The Yo Mamsa Roast API": {"tool_desc": "Rest API that serves random, catagorized and filteres lighthearted familial insults/jokes", "apis": [["Get All Jokes in a Single Category", "This endpoint will return all joke  in a catagory."], ["Get a Random, Categorized and/or Filter Joke", "Allows for either randomize, categorized or filtered insults to be returned with or without metadata."], ["Get Specific Insult", "Allows for a specific insults to be returned with or without metadata."], ["Get All Joke Categories", "Returns a list of all joke categories, whose as values can be used as a path or query parameter in other endpoints."]]}, "Dad Jokes_v2": {"tool_desc": "This API returns wide range of dad jokes.", "apis": [["/dad-jokes/joke-of-the-day", "Return joke of the day. Each new UTC day API will return a new joke. During the UTC day, API returns the same joke."], ["/dad-jokes/search", "Search for a joke by a keyword. Keyword will be used as is in the search. E.g. if you need to search for a joke with the keyword \"dad\" in it, you will need to pass \"dad\" as the keyword. If you need to search for a joke with specific word, you will need to pass keyword with surrounding spaces or punctuation, e.g. \" dad\". Search is not case-sensitive.\n\nAPI return is limited to 3 records per one search request."], ["/dad-jokes/health", "Return the health status of the API. Returns current UTC time."]]}, "Anime, manga and Novels Api": {"tool_desc": "Get the complete data of 14k Novels, 1k animes and 1k mangas.", "apis": [["Get Novel By Id", "Get Novel By Id."], ["Get Manga By Id", "Get Manga Information by id"], ["Anime", "Get a list of all anime"]]}, "PAPI - PornstarsAPI": {"tool_desc": "Trying to be the most comprehensive and accurate source of data for pornstars and movies.", "apis": [["listPornstars", "API endpoint that allows pornstars to be viewed."], ["retrievePornstar", "API endpoint that allows pornstars to be viewed."]]}, "Game of Thrones": {"tool_desc": "List of all Game of Thrones characters' names, families, images, and more.", "apis": [["Get continents", "Returns all GOT continents"], ["Get character by ID", "Returns a character by their ID"], ["Get all characters", "Returns all of the GOT characters"]]}, "Anime Jokes": {"tool_desc": "The Anime Jokes API provides access to a collection of jokes related to anime.", "apis": [["Search jokes by anime name", "Search jokes using anime name"], ["Get jokes using page", "Enter the page number to get the jokes"], ["Get anime by ID", "Search anime using ID"], ["Get animes", "Get all the anime from Anime Jokes"], ["Search jokes", "Search jokes using the keywords of joke"], ["Query joke using ID", "Search anime joke using joke ID"], ["Get all jokes", "Get all the jokes"]]}, "Throne of Glass API_v2": {"tool_desc": "Throne of Glass API", "apis": [["Get Charater by ID", "Get Character Detail by ID"], ["Get All Characters", "To  Get All Characters in Throns of Glass"]]}, "Facebook video downloader MP4": {"tool_desc": "Facebook video downloader API Iframe and button API will allow adding FB video downloading option on any website.", "apis": [["Facebook video downloader", "Facebook video downloader API @ https://mp3downy.com/facebook-video-downloader-api"]]}}, "Other": {"Aspose Email Cloud": {"tool_desc": "Email Management and Archiving REST API", "apis": [["ClientMessageList", "The query string should have the following view.\n\n    The example of a simple expression:\n\n\n    '<Field name>' <Comparison operator> '<Field value>',\n\nwhere\n&lt;Field Name&gt; - the name of a message field through which filtering is made,\n&lt;Comparison operator&gt; - comparison operators, as their name implies, allow to compare\nmessage field and\nspecified value,\n&lt;Field value&gt; - value to be compared with a message field.\n\n    The number of simple expressions can make a compound one, ex.:\n    (<Simple expression 1> & <Simple expression 2>) | <Simple expression 3\n    >,\n\nwhere\n\"&amp;\" - logical-AND operator,\n\"|\" - logical-OR operator\n\n    At present the following values are allowed as a field name (<Field name>):\n\n\"To\" - represents a TO field of message,\n\"Text\" - represents string in the header or body of the message,\n\"Bcc\" - represents a BCC field of message,\n\"Body\" - represents a string in the body of message,\n\"Cc\" - represents a CC field of message,\n\"From\" - represents a From field of message,\n\"Subject\" - represents a string in the subject of message,\n\"InternalDate\" - represents an internal date of message,\n\"SentDate\" - represents a sent date of message\n\n    Additionally, the following field names are allowed for IMAP-protocol:\n\n\"Answered\" - represents an /Answered flag of message\n\"Seen\" - represents a /Seen flag of message\n\"Flagged\" - represents a /Flagged flag of message\n\"Draft\" - represents a /Draft flag of message\n\"Deleted\" - represents a Deleted/ flag of message\n\"Recent\" - represents a Deleted/ flag of message\n\"MessageSize\" - represents a size (in bytes) of message\n\n    Additionally, the following field names are allowed for Exchange:\n\n\"IsRead\" - Indicates whether the message has been read\n\"HasAttachment\" - Indicates whether or not the message has attachments\n\"IsSubmitted\" - Indicates whether the message has been submitted to the Outbox\n\"ContentClass\" - represents a content class of item\n\n    Additionally, the following field names are allowed for pst/ost files:\n\n\"MessageClass\" - Represents a message class\n\"ContainerClass\" - Represents a folder container class\n\"Importance\" - Represents a message importance\n\"MessageSize\" - represents a size (in bytes) of message\n\"FolderName\" - represents a folder name\n\"ContentsCount\" - represents a total number of items in the folder\n\"UnreadContentsCount\" - represents the number of unread items in the folder.\n\"Subfolders\" - Indicates whether or not the folder has subfolders\n\"Read\" - the message is marked as having been read\n\"HasAttachment\" - the message has at least one attachment\n\"Unsent\" - the message is still being composed\n\"Unmodified\" - the message has not been modified since it was first saved (if unsent) or it was\ndelivered (if sent)\n\"FromMe\" - the user receiving the message was also the user who sent the message\n\"Resend\" - the message includes a request for a resend operation with a non-delivery report\n\"NotifyRead\" - the user who sent the message has requested notification when a recipient first\nreads it\n\"NotifyUnread\" - the user who sent the message has requested notification when a recipient\ndeletes it before\nreading or the Message object expires\n\"EverRead\" - the message has been read at least once\n\n    The field value (<Field value>) can take the following values:\n    For text fields - any string,\n    For date type fields - the string of \"d-MMM-yyy\" format, ex. \"10-Feb-2009\",\n    For flags (fields of boolean type) - either \"True\", or \"False\""]]}, "whois": {"tool_desc": "Returns well-parsed whois fields in XML and JSON formats.", "apis": [["whois lookup v1", "Whois api v1 with password authentication."]]}, "Horoscope API": {"tool_desc": "Horoscope API - Professional Horoscopes as a simple JSON API - Access 12 horoscopes every day, written by professional astrologers.", "apis": [["Get a daily horoscope", "Get a daily horoscope for the horoscope sign."], ["Glossary", "This endpoint returns a JSON with information about the API. In it you can preview request and response templates, mandatory fields and much more."]]}, "Ecoindex": {"tool_desc": "This API provides an easy way to analyze websites with Ecoindex.", "apis": [["Get_healthcheck_health_get", "Check health status of components of the API (database...)"], ["Get_host_list__version__hosts_get", "This returns a list of hosts that ran an ecoindex analysis order by most request made"], ["Get_screenshot__version__ecoindexes__id__screenshot_get", "This returns the screenshot of the webpage analysis if it exists"], ["Get_ecoindex_analysis_list__version__ecoindexes_get", "This returns a list of ecoindex analysis corresponding to query filters and the given version engine. The results are ordered by ascending date"], ["Get_ecoindex_analysis_by_id__version__ecoindexes__id__get", "This returns an ecoindex given by its unique identifier"], ["Get_ecoindex_analysis_task_by_id_v1_tasks_ecoindexes__id__get", "This returns an ecoindex given by its unique identifier"]]}, "erictestpet": {"tool_desc": "test api for pet store", "apis": [["getOrderById", "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions"], ["getPetById", "Returns a single pet"], ["getInventory", "Returns a map of status codes to quantities"]]}, "Cors Proxy": {"tool_desc": "Cross-Origin Resource Sharing Proxy", "apis": [["proxy request endpoint", "returns response text of a given website using cors proxy"]]}, "Darko Androcec Example": {"tool_desc": "Lists summary information about each Salesforce version currently available, including the version, label, and a link to each version's root.", "apis": [["Versions", "Lists summary information about each Salesforce version currently available, including the version, label, and a link to each version's root."]]}, "Testing": {"tool_desc": "Testing", "apis": [["Test", "This is my first API that i am testing"]]}, "team petstore": {"tool_desc": "This is a sample server Petstore server.", "apis": [["getPetById", "Returns a single pet"], ["logoutUser", "Logs out current logged in user session"], ["loginUser", "Logs user into the system"], ["getInventory", "Returns a map of status codes to quantities"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"], ["getUserByName", "Get user by user name"]]}, "cat-facts": {"tool_desc": "An API Service returning fun facts about cats.", "apis": [["Get all facts about cat", "This endpoint returns all available fact about cats in our database."], ["Get a random fact about cats", "This endpoint returns a random fact about cats"]]}, "PragmavantApi": {"tool_desc": "Practical API for streamlined business and cloud applications.", "apis": [["/web/pdf", "Get webpage snapshot as image"], ["/file/content-type", "File: get content type"], ["/file/digest", "Get digest/checksum for a file"], ["/image/convert", "Convert image to different type and resize to smaller size."], ["/web/snapshot", "Get webpage snapshot as image"]]}, "ClickMeter": {"tool_desc": "The easiest way to Manage your Marketing Links", "apis": [["Click Stream", "Return the clickstream for the desired object."], ["Hit List", "A detailed hits list for the last 90 days maximum"], ["Domain Count", "Get a count of domains available"], ["Get Tag", "Get the specified tag."], ["Account Deail", "Get details of the current logged account."], ["Guest Detail", "Guest detail. Access only for master key."], ["Get Domain by Id", "Get the detail about a domain"], ["Guest Details", "Guest list account. Access only for master key."], ["Datapoint Hit List", "A detailed hits list for the last 90 days maximum by DataPoint"], ["Get a full list of datapoints with statistics", "Get a full list of datapoints with statistics, based on filters"], ["Plan Detail", "Get detail of the plan used by this account. Valid only for MASTER key."], ["Guest Permissions", "A list of permission that guest have"], ["List Tags", "List of all the tags associated to the user."], ["Datapoint health status by id", "Retrieve some informations about the status of the destination URL associated to a datapoint. Available info depends on the account plan"], ["List Domains", "List domains to which is possible to register a datapoint"], ["List of datapoint health statuses", "Retrieve the list of the links which have some status information attached."], ["Conversions hits", "A detailed hits list for the last 90 days maximum by conversion"], ["Datapoints associated to a tag", "List of all the datapoints associated to the user and to the selected tag"], ["Datapoints associated to conversion", "List all datapoints associated to this conversion"], ["Groups associated to a tag", "List of all the groups associated to the user and to the selected tag"], ["Tags Count", "Get a count of the tags. You can use the same filters of \"/tags\""], ["List datapoints", "List of all the datapoints associated to the user"]]}, "Evaluate expression": {"tool_desc": "Multi-purpose natural language calculator", "apis": [["Evaluate expression", "Scans the given expression and returns the result of any calculation found, in plain text."]]}, "The South Asian Express": {"tool_desc": "Wordpress v2 API", "apis": [["get-/comments-ccfc31c2-0e94-4db6-9956-382d4c9efe6e", "Scope under which the request is made; determines fields present in response."], ["get-/statuses-c0a5199c-546e-4cab-8f8f-73c99e62c988", "Scope under which the request is made; determines fields present in response."], ["get-/media-8125bc02-6037-4c8c-8102-2297920726f0", "Scope under which the request is made; determines fields present in response."], ["get-/types-852347ee-35c5-44fb-8548-1bee078d2350", "Scope under which the request is made; determines fields present in response."], ["get-/posts-2504660f-8ad6-4815-86e0-312cc593fe26", "Scope under which the request is made; determines fields present in response."], ["get-/posts/{id}/revisions/{revisionid}-2156a9ee-f3cf-44f0-be60-37fbeb2d9b95", "Get single post revisions"], ["get-/pages-fb3c1d3c-13c4-4cb5-9a4d-5dbc5e195d42", "Scope under which the request is made; determines fields present in response."]]}, "13": {"tool_desc": "This is the API for Spont Horeca.", "apis": [["productList", "Retrieves up to 50 products"], ["printerList", "Retrieves all the printers"], ["orderList", "Retrieves up to 50 orders"]]}, "URLTEST": {"tool_desc": "This is a sample server Petstore server.", "apis": [["logoutUser", "Logs out current logged in user session"], ["getInventory", "Returns a map of status codes to quantities"], ["getUserByName", "Get user by user name"], ["getPetById", "Returns a single pet"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"], ["loginUser", "Logs user into the system"]]}, "Baby Names by API-Ninjas": {"tool_desc": "Popular and unique baby name name generator for boys, girls, and gender-neutral names.", "apis": [["/v1/babynames", "API Ninjas Baby Names API endpoint. Returns 10 baby name results."]]}, "Cardsearch": {"tool_desc": "Magic the Gathering card, set and Dutch price information.", "apis": [["/v1/prices", "Get general price information per card"]]}, "Fake users_v6": {"tool_desc": "This api will provide you some dummy user for your testing purpose.", "apis": [["Fake user", "This endpoint will give dummy users for your application testing."]]}, "Felina API": {"tool_desc": "Handles transacions of FEL tokens.", "apis": [["Transactions", "Fetch and parsed data from Transfer events."], ["Faucets", "Fetchs the balances of tokens in the faucet."]]}, "SurveyMethods": {"tool_desc": "The SurveyMethods API is designed so that you can integrate third party applications (like HR, CRM, Helpdesk, etc.) with SurveyMethods using HTTP methods.", "apis": [["Dashboard", "Get the deployment and response dashboard"], ["Deployment Details", "Using this API call, you can retrieve the current deployment status of a particular survey."], ["Responses Summary", "Using this API call you can retrieve information such as custom field labels & values, date on which  a response was started and when was it completed, the survey response method (email/web), the  email address of the respondent in case of an email response, IP address and the response code  for each individual response of your survey."]]}, "Mexican Vehicles REPUVE": {"tool_desc": "Get information for Mexican vehicles including year, make, model as well as stolen reports.", "apis": [["GET Vehicle information", "Sample response:\n\n```\n{\n    \"doors\": 4,\n    \"has_stolen_report\": false,\n    \"year\": 2009,\n    \"license_plates\": \"CP50087\",\n    \"model\": \"DOBLE CABINA\",\n    \"assembly_plant_location\": \"\",\n    \"state\": \"CAMPECHE\",\n    \"classification\": \"ESTANDAR\",\n    \"type\": \"\",\n    \"make\": \"NISSAN\",\n    \"version\": \"V4\",\n    \"origin_country\": \"MEXICO\"\n}\n```"]]}, "TestApi_v2": {"tool_desc": "Test Api", "apis": [["Get Test Api Method", "Get Test Api Method!"]]}, "Heck Yes Markdown": {"tool_desc": "Markdownifier", "apis": [["Get Markdown", "Enter a url or some HTML code to convert the page to Markdown. One parameter between \"u\" and \"html\" must be submitted with the request."]]}, "ChurchApp": {"tool_desc": "Connect to ChurchApp using an API key provided by ChurchApp support.", "apis": [["Search Contacts", "Get a contact by name"], ["Get Contact", "Search for a contact by their unique ID"], ["Get Contacts by Tag", "This will return data for all contacts with the tag"], ["Get Tag", "This will return data for a specific tag with the defined ID"], ["Get Tag by Name", "This will return data for a specific tag"], ["Get all Contacts", "Get all contacts, listed alphabetically"], ["Get all Tags", "This will return tags ordered alphabetically"]]}, "Korean Baby Name Ranking": {"tool_desc": "Popular Korean baby names, ranking, counts.", "apis": [["Korean baby girl names", "This endpoint will return the most popular Korean baby name in Korea.\nIt will show you the name, rank and total count."], ["Korean baby boy names", "This endpoint will return the most popular Korean baby name in Korea.\nIt will show you the name, rank and total count."]]}, "favicon-finder": {"tool_desc": "Parses favicons for a given URL", "apis": [["Find Favicon", "Find favicons for a URL"]]}, "Ukraine war data": {"tool_desc": "Data about the Ukrainian conflict", "apis": [["Refugee by country", "Ukranian refugees per country"]]}, "Facts by API-Ninjas": {"tool_desc": "Get endless interesting facts.", "apis": [["/v1/facts", "API Ninjas Facts API endpoint"]]}, "Bucket List by API-Ninjas": {"tool_desc": "Get inspired with thousands of innovative bucket list ideas.", "apis": [["/v1/bucketlist", "Returns a random bucket list idea."]]}, "Quotes Villa": {"tool_desc": "Quotes with different categories", "apis": [["getQuotesbyCategory", "For valid response try these categories listed below:-\n- Quotes Categories are:-\n\n    age   science  success  time  travel\n\n    wisdom   alone  art  attitude  courage\n\n    culture  dreams  friendship  happiness hope\n\n    humour  imagination  inspirational   life   motivational\n\n    nature  philosophy  poetry   popular  psychology"]]}, "quotsy": {"tool_desc": "api for quots", "apis": [["get_qoutes _by_page", "return quotes for the page no"], ["get_genres", "return all the genres"], ["get qoutes by authors", "return a paginated  list of qoutes for a specific author"], ["get all authors", "returns all  the authors as a json array ."], ["get quotes by genre", "returns first 10 list of quotes for the genre"], ["get_qoute", "get a quote by id"]]}, "Lab2": {"tool_desc": "An api for lab 2 for a course", "apis": [["Incognito Location", "Try to access a background location"]]}, "Sunnah Fasting": {"tool_desc": "List of sunnah fasting schedule.", "apis": [["/api/v1/types", "Get list of types"], ["/api/v1/sources", "Get list of sources"], ["/api/v1/fastings", "Get list of sunnah fasting"], ["/api/v1/categories", "Get list of categories"]]}, "JAK_API": {"tool_desc": "A API made by Jonak Adipta Kalita!!", "apis": [["Brawl Stars", "Get the JSON formated file containing details about Brawl Stars!!"], ["JAK", "Get the JSON formated file containing details about JAK!!"], ["Mughal Empire", "Get the JSON formated file containing details about The Mughal Empire!!"], ["Ben 10", "Get the JSON formatted data about Ben 10!!"], ["Genshin Impact", "Get the JSON formatted data about Genshin Impact"], ["Miraculous", "Get the JSON formated file containing details about Miraculous!!"]]}, "QR API": {"tool_desc": "qr code generator", "apis": [["QR_CODE_GEN", "Generates QR Code by URL"]]}, "Demo1": {"tool_desc": "demo1", "apis": [["CONTESTS", "Get list of contests"]]}, "HauteCouture-API": {"tool_desc": "An API that gives you informations about Haute Couture maisons", "apis": [["Get all artistic directors for a specific country", "Renders  all artistic directors for a specific country"], ["Get all maisons", "Get all the maisons who possessed the haute couture label"], ["Get all artistic directors for a specific category", "Renders all artistic directors in a specific category"], ["Get a maison by id", "Renders a maison by its id"], ["Get all artistic directors", "Renders all the maisons artistic directors"], ["get all maisons categories", "Renders all the maisons categories"], ["Get a random artistic director", "Renders a random artistic director"], ["Get a random maison", "Renders a maison who possessed the haute couture label"]]}, "AI endpoint": {"tool_desc": "This endpoint will give you answer to any question", "apis": [["Question endpoint", "Ask this endpoint any question"]]}, "Term Analysis": {"tool_desc": "Given a text, this API returns the lemmatized text", "apis": [["Term", "Given a text, this API returns lemma text"]]}, "uniswap-v2-api": {"tool_desc": "REST API of Uniswap V2", "apis": [["/pair/{id}", "Return the info of the Par by the address"], ["/transaction/{id}", "Return the info of the Transaction by the address"], ["/swap/{id}", "Return the info of the Swap by the address"], ["/ethPrice", "Return the current eth price in uniswap v2"], ["/token/{id}", "Return the info of the Token by the address"], ["/uniswapFactory", "Return the info like pair count of Uniswap V2"]]}, "IFC BIM Services": {"tool_desc": "IFC models related BIM services\nGITHUB Repository : https://github.com/aminov-jp/BIMIFCServices", "apis": [["ilod_status_ilod__ticket__get", "Check Result of an ILOD check"], ["exists_exists__ticket__get", "Check if the key ticket is available or not"], ["syntax_status_syntax__ticket__get", "Check Result of a syntax check"]]}, "Hafez": {"tool_desc": "Get Your Hafez Fal", "apis": [["Fal", "get a random a poem(Fal) and it's meaning!"]]}, "Ridet NC": {"tool_desc": "API permettant d'obtenir les informations sur une entreprise ou un \u00e9tablissement en Nouvelle-Cal\u00e9donie", "apis": [["Health", "Permet de v\u00e9rifier que l'application fonctionne."], ["Etablissements d'une entreprise", "Affiche les \u00e9tablissement d'une entreprise en Nouvelle Cal\u00e9donie."], ["Entreprise par rid", "Affiche les informations d'une entreprise de la Nouvelle Cal\u00e9donie \u00e0 partir de son rid."], ["Etablissement par ridet", "Affiche les informations d'un \u00e9tablissement d'une entreprise de la Nouvelle Cal\u00e9donie \u00e0 partir de son ridet."]]}, "hanime-python-api": {"tool_desc": "Hanime API  with more feature and free to use", "apis": [["getComment", "Get Hanime Video Info"], ["search/req", "Search API with Query\n\n**This request is limited, Please Refer to /search for more stuff**"], ["getVideo/premium", "Get 1080p Stream URL with Account Session Token\n**Required : Hanime Premium Subscription**"], ["getVideo", "Get All Stream URL from Hanime Video"], ["getInfo", "Get Hanime Video Info"]]}, "toptalOnlineTest": {"tool_desc": "a small api similar to the one I got in the toptal test, returns an array of strings only with the possibility to filter using query params", "apis": [["items", "gets an array of strings."]]}, "Uniblock": {"tool_desc": "Unified Blockchain API, use one, use them all.", "apis": [["Get Historical Token Balance", "Gets the user's historical portfolio value and balance records along with token info."], ["Format Units", "Gets a string representation of a given value formatted with unit digits."], ["Convert Units", "Gets the converted value (decimal units to number or number to decimal units) of a specified amount of a token."], ["Parse Ether", "Gets a string representation of a given value, parsed with 18 digits (in terms of wei)."], ["Create Wallet from Mnemonic", "Generates a wallet from a mnemonic phrase and index. If no index is provided, it will default to 0."], ["Generate Mnemonic", "Generates a random mnemonic, defaults to 128-bits of entropy"], ["Get Current Block Number", "Gets the current block number."], ["Look up Address", "Looks up the ens domain for a crypto address if there is any domain bound with the address."], ["Get Token Balance", "Gets the balance of an ERC-20 token."], ["Get Decimals", "Gets the number of decimal places used by an ERC-20 token."], ["Get Native Balance at Block", "Gets the native token balance of an address at a given block."], ["Get Total Supply", "Gets the total supply of an ERC-20 or ERC-721 token."], ["Get Approval For NFT Transfer", "Determines whether or not a spender address can transfer the NFTs of an owner address."], ["Get Event Logs", "Gets the logs of a contract."], ["Get Event Logs within Block range", "Gets the event logs in a block range, filtered by topics."], ["Get Collection NFTs", "Gets all NFTs in a collection"], ["Get Token Price History between Dates", "Gets the price chart of a token between two dates in USD."], ["Get Transaction By Hash", "Gets transaction information of a given hash"], ["Get Transactions For User", "Gets transaction records for a specified user."], ["Get Current Token Balance", "Gets the user's current portfolio value and balance records along with token info."], ["Ping Server", "Check API server status."], ["Get Current Price", "Gets the current price of a token in USD."], ["Get Token Price History by Period", "Gets the price chart of a token within a given period in USD."], ["Create Wallet", "Creates and gets a new wallet with a random private key, generated from cryptographically secure entropy sources."], ["Get Token Price History between Blocks", "Gets the price chart of a token between two blocks in USD"], ["Get Detailed Block Info", "Gets detailed block information of a given block number"], ["Get Timestamp of Block Number", "Gets a numerical timestamp of a given block number"], ["Get Block Number From Timestamp", "Gets the block number closest to the given timestamp."], ["Get Block Info with Transactions", "Gets a block with transactions of a given block number"], ["Get Block Info", "Gets the block of a given block number"], ["Resolve ENS Domain", "Resolves the ens domain to get the address."], ["Get Detailed Transaction By Hash", "Gets detailed transaction information of a given hash."], ["Get Native Balance", "Gets the native token balance of an address."], ["Get Allowance", "Gets the token allowance limit of a spender for tokens owned by another address."], ["Get Symbol", "Gets the symbol of a given ERC-20 token"], ["Format Ether", "Gets a string representation of a given value in terms of ether."], ["Parse Units", "Gets a string representation of value, parsed with unit digits."], ["Get Code", "Gets the code at a given address and network (chainId). This code can be used to distinguish between contract addresses and wallet addresses. Contract addresses return bytecode whereas wallet addresses return \"0x\"."], ["Commify", "Gets a string grouped by three digits separated by comma(s)."], ["Get Gas Price", "Gets the best estimate for gas price to use in a transaction."], ["Get Event Logs filtered by Topic", "Gets the event logs by address filtered by topics."], ["Get NFT Owner", "Gets the owner of a specific ERC-721 NFT."], ["Get Current NFT Balance for User", "Gets the NFT balance of a specific user."], ["Get NFT Collection Metadata", "Fetches NFT collection metadata."], ["Get Historical NFT Balances", "Gets the user's historical NFT balance records."], ["Get Nft Info", "Gets information of a specific NFT."], ["Get NFT Transfers For User", "Gets NFT transfer records for a specified user."], ["Get User Collections", "Gets all NFT collections of a specific user."], ["Get Token Transfers For User", "Gets token transfer records for a specified user."], ["Get NFT Transfers For NFT Collection", "Gets NFT transfer records for a specified NFT collection inclusive of token ID and addresses involved."]]}, "Node Express API Tutorial": {"tool_desc": "An API that allows users to be stored, retrieved, and deleted from a database.", "apis": [["Get Specific User", "This endpoint will return back the user with the specified ID."], ["Get All Users", "This endpoint will return all users stored in the database."]]}, "Horoscope Astrology": {"tool_desc": "The Horoscope API Server provides daily horoscope predictions for all zodiac signs.", "apis": [["Daily Phrase", "Get a daily phrase"], ["Sign", "Users can access the endpoint by sending a request for a specific sign, and receive a response with in-depth information about the traits, personality, and characteristics associated with that sign. This information can include compatibility with other signs, strengths and weaknesses, and general insights into the individual's nature and tendencies. The endpoint is designed to be easy to use, with a clear and concise format that makes it simple to access and understand the information."], ["Get three tarot card", "This endpoint returns a randomly selected tarot card from a traditional tarot deck, along with its corresponding interpretation and meaning. The tarot card reading is generated using a randomized algorithm, offering users a unique and personalized tarot experience. The API is designed to be easy to use, allowing developers to integrate tarot card readings into their own applications and websites."], ["Get a tarot card", "This endpoint returns a randomly selected tarot card from a traditional tarot deck, along with its corresponding interpretation and meaning. The tarot card reading is generated using a randomized algorithm, offering users a unique and personalized tarot experience. The API is designed to be easy to use, allowing developers to integrate tarot card readings into their own applications and websites."], ["Daily horoscope", "A daily horoscope is a personalized astrological prediction for an individual based on their birth date and zodiac sign. It provides insight and guidance on various aspects of life such as love, career, finances, and personal growth. The predictions take into account the current positions of the planets and other celestial bodies, offering a unique perspective on the individual's current astrological influences. Daily horoscopes are meant to be used as a tool for reflection and can provide helpful insights and advice for navigating life's challenges and opportunities. Whether you're looking to start your day off on the right foot or seeking guidance in a specific area of your life, a daily horoscope can be a valuable resource for gaining new insights and perspective."]]}, "Industrypedia Random Articles": {"tool_desc": "Retrieves a random informational article from [Industrypedia](https://industrypedia.net).", "apis": [["Retrieve Random Article", "Retrieves a random informational article from [Industrypedia](https://industrypedia.net)."]]}, "trainmyAPI27": {"tool_desc": "Just train", "apis": [["belajarpostAPI", "belajar post dan get"]]}, "DogBreeds": {"tool_desc": "An API showing all dog breeds and your characteristics", "apis": [["Get Specific dog breed", "Get all info from specific dog breed"], ["Get all dog breeds", "Get all info from dog breeds"]]}, "Dog API": {"tool_desc": "Do you care about accessing free images of dogs on the internet?", "apis": [["GetRandom", "DISPLAY SINGLE RANDOM IMAGE FROM ALL DOGS COLLECTION"]]}, "Neko SFW": {"tool_desc": "This Program will provide SFW images", "apis": [["SFW", "This endpoint will provide SFW images"]]}, "colegiosantaana": {"tool_desc": "Colegio Santa Ana", "apis": [["Inasistencias-2", "Inasistencia de alumnos 2"], ["Mensajes-1", "Mensajes del alumno 1"], ["Mensajes-2", "Mensajes del alumno 2"], ["Comunicado-2", "Comunicados del alumno 2"], ["Inasistencias-1", "Inasistencias de alumno 1"]]}, "World of Quotes": {"tool_desc": "API returns over 50,000+ famous quotes from over 10,000+ great authors and over 350+ different categories.", "apis": [["Get Quotes By Specific Category", "This API returns the collection of quotes by category you pass in the query params. Maximum you can get 20 quotes at a time and can be customized by *limit*. Our API support pagination and records can be paginated by *page* query param."], ["Get Quote of the Day", "This API returns the handpicked quote of the day among 45,000+ quotes based on the highest ratings.\nYou may also get quote of the day of specific *author* or *category*."], ["Get Quotes By Specific Author", "This API returns the collection of quotes by author you pass in the query params. Maximum you can get 20 quotes at a time and can be customized by *limit*. Our API support pagination and records can be paginated by *page* query param."], ["Get Authors", "This API returns array of over 10,000 authors we have in our library.\nThis returns an array of strings."], ["Get Quotes Category", "This API returns array of over 350 types of categories we have in our library.\nThis returns an array of strings. Real response will have more categories but in mock response we displayed a few."]]}, "Words to numbers": {"tool_desc": "API to convert natural language words into numbers.", "apis": [["words2number", "Returns the corresponding number for your input sentence. Specify the language with the associated request parameter (currently available for italian (\"it\") and english (\"en\"))"]]}, "ODAM": {"tool_desc": "ODAM", "apis": [["info", "Get information on the dataset"], ["tsv6", "Get the variable list within the specified category of a merged data subsets along with the metadata"], ["tsv4", "Get the entry list  of a merged data subsets"], ["build", "Building a database and indexing it, allows to accelerate considerably the response times on large files"], ["tsv3", "Get all values of a merged data subsets"], ["tsv5", "Get all values of a merged data subsets"], ["tsv", "Get the subset list of a dataset along with the metadata"], ["check", "Made automatically many test checks and return a list several status about the dataset implementation"], ["tsv2", "Get all values of a data subset"], ["tsv1", "Get all attribute metadata for all subsets of a dataset"]]}, "Test_v2": {"tool_desc": "API for testing Rapid API features", "apis": [["JSON RPC boolean format", "JSON RPC response format with single field of type boolean"]]}, "Quran Com": {"tool_desc": "The default API of Quran.com website", "apis": [["verses by page", "Get all verses of a specific Madani Mushaf page(1 to 604)"], ["rub el hizb recitations", "Get list of ayah recitations for a Rub el Hizb."], ["uthmani simple text", "Get Uthmani simple script(without tashkiq/diacritical marks) of ayah. Use query strings to filter results, leave all query string blank if you want to fetch script of whole Quran."], ["tafirs by id", "Get a single tafsir\n\nSee tafsirs endpoint to fetch available tafsirs.\n\nYou can also include more fields of tafsir using `fields` query string."], ["glyph code QCF v1 font", "Get glyph codes of ayah for QCF v1 font"], ["recitations by id", "Get list of reciters for a single recitaiton. See reciters endpoint to fetch available recitations.\n\nYou can also include more fields of audio files using `fields` query string."], ["indopak text", "Get Indopak script of ayah. Use query strings to filter results, leave all query string blank if you want to fetch Indopak script of whole Quran."], ["Tajweed colored uthmani text", "Get Uthmani color coded tajweed text of ayah. Tajweed rules are embeded in text as `tajweed` html tags."], ["reciters", "Get list of reciters"], ["translation by id", "Get a single translation\n\nsee translations endpoint to fetch available translations.\n\nYou can also include more fields of translation using `fields` query string."], ["verses by hizb", "Get all verses from a specific Hizb( half(1-60)."], ["chapters audio", "Get list of chapters audio for specific reciter"], ["chapter by id", "Get details of a single chapter."], ["info", "Get chapters information in specific language. Default to `English`."], ["list chapters by  reciters", "Get list of chapters by reciters."], ["list", "Get list of Chapter (Surah) with the whole information of the number of verses, order, page etc."], ["verses by rub el hizb", "Get all verses of a specific Rub el Hizb number(1-240)."], ["verses by juz", "Get all verses from a specific juz(1-30)."], ["random", "Get a random verse. You can get random verse by `chapter`,`page`, `juz`, `hizb`, `rub el hizb`, `ruku`, `manzil` number, or from whole Quran."], ["juz", "Get list of all juz"], ["verses by chapter id", "Get list of verses by Chapter / Surah number."], ["list hizb", "Get list of ayah recitations for a Hizb."], ["recitation info by id", "Get information of a specific recitation. Could include detail about the reciter, recitation style. When and who recorded it etc."], ["ayah recitations", "Get list of ayah recitations for a Hizb."], ["verse media", "Get media related to the verse."], ["tafsir info by id", "Get the information of a specific tafsir. Could include information about the author, when it was published etc."], ["languages", "Get all languages. You can get translated names of languages in specific language using `language` query parameter. For example\n\n  ```\n  /resources/languages?language=ur\n  ```\n\nwill return language names translated into Urdu"], ["tafsirs", "Get list of available tafsirs."], ["translations", "Get list of available translations. Use `language` query to get translated names of authors in specific language(e.g language=ur will send translation names in Urdu).\n\nFor list of available language see  #endpoint:EZsWyDnekGaDKaCpt endpoint."], ["recitations by chapter number", "Get list of ayah recitations for a Surah."], ["chapters info", "Get list of chaper info we've in different languages."], ["translation info by id", "Get information of a specific translation. Could include detail about the author, publishing date and publisher etc."], ["recitations", "Get list of available Recitations."], ["recitation style", "Get the available recitation styles."], ["recitations by juz number", "Get list of ayah recitations for a juz."], ["simple text without tashkil/diacritical", "Get Imlaei simple script(without tashkil/diacritical marks) of ayah."], ["recitations by page number", "Get list of ayah recitations for a Madani Mushaf page."], ["glyph codes QCF v2 font", "Get glyph codes of ayah for QCF v2 font"], ["uthmani text", "Get Uthmani script of ayah. Use query strings to filter results, leave all query string blank if you want to fetch Uthmani script of whole Quran."]]}, "Most Exclusive API": {"tool_desc": "Be exclusive !", "apis": [["/exclusiveness/{callerID}", "Check Exclusiveness. See if you are already exclusive, not yet or you get the exclusivity now."]]}}, "Business": {"CalendarEvents": {"tool_desc": "Retrieve Google Calendar Events from a public calendar", "apis": [["Calendar Events", "Retrieve Google Calendar Events from a public calendar"]]}, "Business Starter API": {"tool_desc": "API that generates a name, slogan and idea for a business", "apis": [["Businessplan", "Generate a Businessplan for your idea"], ["Business Idea", "Generate a business idea"], ["Business Slogan", "Generate a slogan for you Business name"], ["Business name for", "Generate a Business name for existing idea"], ["Business name", "Generate a random Business name"]]}, "Abuse IP Check": {"tool_desc": "Abuse IP Check is a project dedicated to helping combat the spread of hackers, spammers, and abusive activity on the internet.", "apis": [["CHECK Endpoint", "The check endpoint accepts a single IP address (v4 or v6). Optionally you may set the maxAgeInDays parameter to only return reports within the last x amount of days.\n\nThe desired data is stored in the data property. Here you can inspect details regarding the IP address queried, such as version, country of origin, usage type, ISP, and domain name. And of course, there is the valuable abusive reports.\n\nGeolocation, usage type, ISP, and domain name are sourced from the IP2Location\u2122 IP Address Geolocation Database. If you're looking for a performant IP database for geolocation, then use their product directly.\n\nThe isWhitelisted property reflects whether the IP is spotted in any of our whitelists. Our whitelists give the benefit of the doubt to many IPs, so it generally should not be used as a basis for action. The abuseConfidenceScore is a better basis for action, because it is nonbinary and allows for nuance. The isWhitelisted property may be null if a whitelist lookup was not performed.\n\nThe usageType is a string that describes the general usage of this address. Possible values are:\n\nCommercial\nOrganization\nGovernment\nMilitary\nUniversity/College/School\nLibrary\nContent Delivery Network\nFixed Line ISP\nMobile ISP\nData Center/Web Hosting/Transit\nSearch Engine Spider\nReserved\nThe maxAgeInDays parameter determines how far back in time we go to fetch reports. In this example, we ask for reports no older than 90 days. The default is 30.\n\nThe totalReports property is a sum of the reports within maxAgeInDays.\n\nReports are included in this response because the verbose flag was added. Omitting the verbose flag will exclude reports and the country name field. If you want to keep your response payloads light, this is recommended. The reports array is limited to 10,000 elements. Only reports within the timeframe of maxAgeInDays are considered.\n\nThe IP address should be url-encoded, because IPv6 addresses use colons, which are reserved characters in URIs."]]}, "GST Return Status": {"tool_desc": "GST Return Filing Status for India", "apis": [["/gstin", "Get Details about GSTIN (GST number) and following \n1. Latest Return filing list\n2. GST Compliance Classification\n3. HSN/SAC"]]}, "Import Export Verification": {"tool_desc": "Make your onboarding process safer, faster, and smarter by verifying the legitimacy of your merchants by using their import export certification.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Comparable Companies": {"tool_desc": "Our ML algorithm finds the most similar firms to any company.", "apis": [["/logo", "The Logo API is used to show company logos in the frontend. The API link is already included in results returned by the Similar companies API."], ["/similar", "The key feature of the comparable-companies API. This endpoint will return a list of companies that are similar to the one that has been provided. The endpoint will also return information about the queried domain through the variable \"frontend_company_info\".\n\nOccasionally, the algorithm finds new information that will take longer to crawl and process. In these cases, it will return results with the \"further_crawling\" variable set to true, indicating that we will have better results available in the next 10-15 sec. There is a possibility to establish a WebSocket connection through the \"connectionID\" parameter to be notified of these new results. This is not covered in this documentation, but our engineers will happily assist you with it.\n\nQuerying the same domain multiple times will only cost you a single search credit."], ["/rating", "Enables the user to rate the output returned by the /similar API. It is advisable to refresh results after ratings have been submitted as the algorithm fine-tunes its output based on them. Re-searching a company is always free of charge.\n\n*Example*: If a user searches similar companies for \"unilever.com\", and the first result is \"nestle.com\", then the user is able to rate how similar those companies are on a scale from 0-10 through this API. If the user submits a rating of 0, that comparable company (\"nestle.com\") will not show up when searching the same company (\"unilever.com\") in the future. If the user submits a rating higher than 5, then the algorithm will fine-tune its output to include more companies similar to that one (\"nestle.com\").\n\n*Including user ratings in the output is completely optional*."], ["/contacts", "Returns a list of contact persons (incl. email addresses) at a given company.\n\nQuerying the same domain multiple times will only cost a single search credit.\n\nQuerying a domain that you have already queried through the /similar endpoint will not cost any credit."]]}, "LinkedIn Profile Data": {"tool_desc": "Returns LinkedIn profile data from a given username.", "apis": [["Profile data", "Get LinkedIn profile data with username"]]}, "Realty in AU": {"tool_desc": "This API helps to query properties for sale, rent, sold,etc\u2026 in Australia to create a realtor, real estate site/application such as realestate.com.au", "apis": [["schools/list", "List schools around a GEO location"], ["properties/list", "List properties with options and filters"], ["auto-complete", "Get suggestions by term or phrase. The returned data will be used with .../properties/list endpoint"], ["properties/lookup", "Look for off-market property by id"], ["properties/detail", "Get detailed information of a property"]]}, "MyMemory - Translation Memory": {"tool_desc": "Get a better translation!", "apis": [["search translations", "This API gets a list of translation from the translation memory ranked by quality and similarity (what we call match). MyMemory will check if a sentence has been already translated in the private TM specified. If we don't find it in the private TM of the translator, we search it in the public TMs (shared among all the translators). Again, if we don't have this translation we ask MT providers to generate it.  In order to get the best from MyMemory, it is highly recommended to use different keys for each translators and also different keys for different topics (as a real Translation Memory)."], ["create key", "MyMemory provides a specific API to create a new private TM key. Such key can be then used in the API call to identify a private TM or to privately contribute to a TM. Every contribution that has been created with a private TM key will be only shown if the same private TM key is used in the GET call; no other users will see private contributions without the right private TM key."], ["set contribution", "The SET api is used to save a contribution. You can either save a contribution privately with your private TM key or add it to the public collaborative TM."]]}, "Bayut": {"tool_desc": "This API helps to query real estate in UAE to create a real estate site/application", "apis": [["properties/detail", "Get detail information of a property"], ["agencies/list", "List agencies or search for agencies by name"], ["agencies/get-listings", "Get listing belonging to an agency"], ["properties/list", "List properties with options and filters"], ["auto-complete", "Get suggestions of locations by term or phrase"]]}, "firstAPI_v2": {"tool_desc": "TESTING PURPOSE", "apis": [["getOrderById", "for testing purpose only"]]}, "prueba": {"tool_desc": "prueba de api", "apis": [["products", "Prueba de servicio products"]]}, "SOTI Sync": {"tool_desc": "Application to receive SOTI Sync Event Registration", "apis": [["Phone Number", "Fetch Customer Phone Number"], ["Price After Discount", "SOTI Sync ticket price after discount"], ["Total Amount", "Total Amount to be paid"], ["Enterprise Customer", "Is he a Enterprise Customer?"]]}, "DaysAPI": {"tool_desc": "An API that will count business days including holidays for the US.", "apis": [["calendar_arithmetic", "This endpoint will take in a date number of years, months, days,\nhours, minutes, and seconds as query parameters and return the date\nwith the addtion or subtraction produced from entered query\nparameters.\n\nThis endpoint can do addition and subtraction. To do subtraction just add\n`-` befor the integer like so `-8` and the endpoint will subtract based\non the query.\n\n**Note**: Please enter properly formatted dates and optionally times.\nThis endpoint will try and figure out what is entered but will output\nincorrect dates and times if date format isn't well formatted."], ["is_weekday", "Endpoint will return True or False of date entered is a weekday.\n\nIf date is a Saturday or Sunday, then `false` will be returned."], ["business_delta", "Given two dates. This endpoint will output the number of business\ndays between them.\n\nDates can be entered in any order. Please enter readable dates.\nDoesn't have to be ISO or RFC formatted dates."], ["business_days", "Calculate working days from given date with given number of days.\n\nThe timezone is set to US/Eastern due to US banks operate only in\nthat timezone."], ["is_weekend", "Endpoint will return True if date falls on the weekend, Saturday or\nSunday."], ["difference_calendar", "This endpoint takes in two dates and calculates the difference for\nyou with the queries you enter."]]}, "CloudWays_v2": {"tool_desc": "CloudWays", "apis": [["GET", "Response Class (Status 200)"]]}, "CallTrackingMetrics": {"tool_desc": "Track the performance of your advertising with instantly activated tracking numbers in 30 countries.", "apis": [["GET Calls", "The Calls API allows you easy access to all your call data. You can subscribe to new incoming calls to receive an HTTP request when a call is completed. You can also query the call API to retrieve all past calls."], ["List Numbers", "The numbers API allows you to search, purchase, and manage settings on each tracking number."], ["List Text Messages", "The SMS API allows you to search, send, and manage text messaging triggers for all capable numbers."], ["List Accounts", "The accounts API allows you to create and manage accounts."], ["List Users", "The users API allows you to create and manage users."]]}, "EU VAT Number Checker": {"tool_desc": "The EU VAT Number Validation API verifies the format and validity of EU VAT numbers and retrieves company information such as name, address, country code and VAT number.", "apis": [["Check 1 param", "Get details (1 param: full vat number, with country code)"], ["Check 2 params", "Get details (2 params: 'country' and 'vat num' )"]]}, "Google Play": {"tool_desc": "This is an API that retrieves information from Google API.", "apis": [["Get data safety attributes by app ID", "Returns the data safety attributes of a single application by its ID"], ["Get list of apps with pagination", "Returns a list of apps and a pagination token"], ["Get permissions by app ID", "Returns the permissions of a single application by its ID"], ["Get applications by developer ID", "Returns the list of applications of a single developer by its ID"], ["Get app by ID", "Returns a single application by its ID"], ["Get similar apps by ID", "Returns list of applications that is similar to a single application by its ID"], ["Get reviews by app ID", "Returns the reviews of a single application by its ID"]]}, "Healthcaremailing": {"tool_desc": "Healthcare mailing, a direct marketing business founded on a rock solid base of many successful years of experience building and managing lists used in direct marketing campaigns.", "apis": [["Healthcare mailing", "Healthcare mailing, a direct marketing business founded on a base of many successful years of experience building list."]]}, "Domain Authority": {"tool_desc": "Get Domain Authority and Page Authority of any Domain or URL.", "apis": [["Domain/URL Metrics", "This Will Get Domain Authority and Page Rank For Any Domain/URL"]]}, "Fake Brightcove": {"tool_desc": "Fake Brightcove API", "apis": [["Temp Upload URLs", "Generate Temp Upload URLs"]]}, "US Address Parser": {"tool_desc": "Parses US Street Addresses and Returns JSON", "apis": [["Parse", "Parses US Address as String and Returns JSON"]]}, "Public Holidays": {"tool_desc": "Retrieve religious, non-public and public holidays for 200+ countries worldwide and for any specific year", "apis": [["Public Holiday Endpoint", "The Public Holiday API allows you to gett the public, local, religious, and other holidays of a particular country."]]}, "token2go": {"tool_desc": "It is a  RESTful API intended to generate unique and verifiable tokens (cryptographic id codes).", "apis": [["Read a Link or Token by its id", "Read a link or token by its id. It is used to see the content (t=link or t=token), but cannot validate the signature."], ["Validate a token", "Submit a token (t=token) or a link (t=link) id in order to check if  it is a valid one. To be a valid token it must have a valid signature and not expired."]]}, "AndroidAPI": {"tool_desc": "for testing database storage", "apis": [["getOrderById", "get data  by Id"], ["get all data from api", "read all data from api to show on detail screen"]]}, "Email Scraper": {"tool_desc": "AI-powered email scraper for business lead generation.", "apis": [["dashboard_pro_access", "Call this endpoint (or click 'Test Endpoint') to get access to the dashboard with all features."], ["dashboard_free_access", "Call this endpoint (or click 'Test Endpoint') to get access to the dashboard."], ["email-extractor", "Get emails scraped from url provided"]]}, "CasinoSearch": {"tool_desc": "CasinoSearch API for calendar tournaments", "apis": [["Casino Tournaments List", "Casino Tournaments List with details"]]}, "GST Details & Filing Data": {"tool_desc": "Get company details, Return Status & Filing Data based on GSTIN\n- Monthly Data, Quarterly Data, Yearly Data & hsn codes\n-Update 21 May 2023: I have updated the API & it's even faster with zero errors.", "apis": [["Get GST info & Filing Data", "Just punch in the GSTIN & get company info & filing data."]]}, "Slovenia Company Data": {"tool_desc": "Access the official Slovenian Government company register, basic search only.", "apis": [["Basic Search", "Basic text based search for company names registered in Slovenia"]]}, "REMarketLite APIs": {"tool_desc": "The API set powered by PropMix, provides property listings by accepting various filters like Zip code, Street, City and State.", "apis": [["GetListingsByRadius Valuation", "Search listings around a point or address within the specified Radius"], ["GetListingsByGeo IDX", "API returns property listings by accepting various filters like Zip code, Street, City and State"], ["GetListingsByRadius IDX", "Search listings around a point or address within the specified Radius"], ["GetListingsByGeo Valuation", "API returns property listings by accepting various filters like Zip code, Street, City and State"]]}, "New Client": {"tool_desc": "Make sample map for app", "apis": [["njajal", "show nearby place from current location"]]}, "Australian Business Industries API": {"tool_desc": "Welcome to the Australian Business Industries API, a powerful and comprehensive tool designed to cater to the needs of businesses, developers, and data analysts in Australia.", "apis": [["Search", "Search Australian business industries"]]}, "Email Validation and Verification": {"tool_desc": "Improve your delivery rate and clean your email lists with our industry-leading email verification API", "apis": [["Email Validation API", "Email Validation and Verification API requires only a single email.\nChecking a misspelled email.\nChecking a malformed email."]]}, "Uganda Company Data": {"tool_desc": "Access the official Uganda Governmnent company register, ideal for KYB purposes", "apis": [["Search by company name", "Perform a search on the Uganda company register by name"]]}, "Email finder": {"tool_desc": "Find email of anyone from their first name, last name, and domain", "apis": [["Fetch email of a person", "Get email of anyone in the internet. Best for lead generation, prospecting, and cold marketing."]]}, "German Company Data_v2": {"tool_desc": "Enrich your CRM / MAS / ERP system with credible data about all incorporated companies from  Germany.", "apis": [["/companies/{id}/events", "This endpoint returns the latest events about the company with the given identifier since the given timestamp. This timestamp is optional and is specified via a query parameter. Events come with a type (companies' register event, blog article, press release, etc.), a category (change in management, finances, merger/acquisition, etc.), a text (the content of the event), a source, and a timestamp."], ["/companies/{id}/financials", "This endpoint returns the financial key figures (balance sheet total, revenue, profit, number of employees) for the company with the given identifier. For each key figure the endpoint returns a list of values associated with the corresponding year."], ["/companies/{id}/financials/exists", "This endpoint returns the list of years for which financial key figures (balance sheet total, revenue, profit, number of employees) for the company with the given identifier are available. The purpose of this endpoint is to give the user the opportunity to avoid potentially expensive and useless calles to the /financials-endpoint."], ["/companies/{id}/jobs", "This endpoint returns the latest job postings about the company with the given identifier since the given timestamp. This timestamp is optional and is specified via a query parameter. Job postings come with a title, a text (the content of the posting), a source, and a timestamp."], ["/companies/{id}/data", "This endpoint returns the basic information of the company with the given identifier. The information includes all the core data (name, address), web data if known (phone, fax, email, url, social media profiles), legal information (registry, founding date, capital), up to three industries, and revenue and employees class."], ["/companies/{id}/people", "This endpoint returns the information about people associated with the company with the given identifier. The information includes names, roles, email addresses, and phone numbers, if available."]]}, "Currency Exchange Rates": {"tool_desc": "Get live and historical data from 60+ fiat and crypto currencies via a modern REST API", "apis": [["Getting the latest exchange rate(s)", "The /live/ endpoint returns the most recent exchange rate(s) for a given set of currencies. The base currency is the currency you're converting FROM, while the target currency or currencies are what you're converting TO.\n\nIf no target currency or currencies are specified, then all available currencies are returned. You can see a full list of supported currencies at the bottom of this documentation."], ["Converting currencies", "The /convert/ endpoint is similar to the /live/ and /historical/ endpoints, except it allows you to convert an arbitrary amount of currency.\n\nFor example, it calculates how many EUR you would get for 1,337.99 USD today, or how many GBP and CAD you'd get for that amount on January 1, 2020."], ["Getting historical exchange rate(s)", "The /historical/ endpoint functions almost exactly like the /live/ endpoint, except it requires you to request a date parameter, and subsequently returns the returns the most recent exchange rate(s) for a given set of currencies.\n\nAs with the /live/ endpoint, the base currency is the currency you're converting FROM, while the target currency or currencies are what you're converting TO. Also, if no target currency or currencies are specified, then all available currencies are returned. You can see a full list of supported currencies at the bottom of this documentation."]]}, "ShopeeApi": {"tool_desc": "Wrapper for shopee api\ngenerate a affiliate link for shopee", "apis": [["Status", "Verify if is up"], ["GenerateShopeeLink", "/generateShopeeLink?url=SHOPEEURLPRODUCT\nGenerates a affiliate link \n\nHeaders\nx-shopee-appId: YOURAPPID\nx-shopee-secret: YOUR SECRET\n\nget this in https://affiliate.shopee.com.br/open_api"]]}, "Seloger": {"tool_desc": "This API helps to query properties for sale or rent in France to create a real estate site/application such as seloger.com", "apis": [["properties/count", "Count total properties returned with options and filters"], ["properties/detail", "Get property detailed information"], ["properties/list-in-boundary", "List properties in a bounding box with options and filters"], ["properties/list", "List properties with options and filters"], ["locations/search", "Search location by term or phrase"]]}, "eSignly": {"tool_desc": "eSignly revolutionary electronic signatures are transforming the way industries which include, but not limited to insurance, healthcare, government , real estate and finance and IT firms sign different documents.", "apis": [["API EndPoint", "main end point to access api"]]}, "Florida Realty API": {"tool_desc": "Find condos and townhouses in Florida (USA) and get access to the original listing service MLS with thousands of properties.", "apis": [["getListing", "Use this endpoint to get detailed information about a single condominium or townhouse."], ["getImage", "Load images of cities you retrieve by calling getCities()."], ["getCities", "Get a list of supported cities with some data about those cities like the number of residents, the latitude, longitude, altitude  and a description and image of the city."], ["getListings", "Use this endpoint to retrieve a list of condominiums and townhouses in Southwest Florida and on the East Coast."]]}, "Ziff": {"tool_desc": "An API Service that enables you to retrieve Live Exchange Rates which are accurate and up to date.", "apis": [["Base Currency Exchange Rates", "Get all Exchange Rates (in alphabetical order) for a Base Currency."], ["All Exchange Rates", "Get all Exchange Rates in alphabetical order; organised by Base Currency (also in alphabetical order)."]]}, "acopaer": {"tool_desc": "acopaer backed api", "apis": [["CountCompanies", "# Description GET Number Of Companies\r\n\r\nThis url is to get the number of Companies created is type `GET`, the url is `BASE_URL/companies/count` and returns the number of Companies."], ["FormBy:id", "# Description GET Form By id\r\n\r\nThis url is to get a Form by id is type `GET`, the url is `BASE_URL/forms/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Form to get details about this Form."], ["CountForms", "# Description GET Number Of Forms\r\n\r\nThis url is to get the number of Forms created is type `GET`, the url is `BASE_URL/forms/count` and returns the number of Forms."], ["AllCompanies", "# Description GET All Companies\r\n\r\nThis url is to get all Companies created is type `GET`, the url is `BASE_URL/companies` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params."], ["CompanyBy:tax_number", "# Description GET Company By tax_number\r\n\r\nThis url is to get a Company by tax_number is type `GET`, the url is `BASE_URL/companies/tax_number` and returns only an object.\r\n\r\nThe param is `tax_number` must type there the tax_number of Company to get details about this Company."], ["ScenarioBy:id", "# Description GET Scenario By id\r\n\r\nThis url provides a Scenario by id, method type `GET`.\r\n\r\n`BASE_URL/scenarios/id`\r\n\r\nreturns only an object.\r\n\r\n### Url parms:\r\n* `id`: scenario id"], ["AllScenarios", "# Description GET All Scenarios\r\n\r\nThis url provides all Scenarios created, method type `GET`.\r\n\r\n `BASE_URL/scenarios`\r\n \r\n returns an array of objects or only an object depends on how many are there.\r\n\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params."], ["CountAnswersForms", "# Description GET Number Of Answers Forms\r\n\r\nThis url is to get the number of Answers Forms created is type `GET`, the url is `BASE_URL/answers-forms/count` and returns the number of Answers Forms."], ["AllForms", "# Description GET All Forms\r\n\r\nThis url is to get all Forms created is type `GET`, the url is `BASE_URL/forms` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params."], ["FormActionBy:id", "# Description GET Form Action By id\r\n\r\nThis url is to get a Form Action by id is type `GET`, the url is `BASE_URL/form-actions/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Form Action to get details about this Form Action."], ["ReviewerBy:id", "# Description GET Reviewer By id\r\n\r\nThis url is to get a Reviewer by id is type `GET`, the url is `BASE_URL/reviewers/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Reviewer to get details about this Reviewer."], ["AllReviewers", "# Description GET All Reviewers\r\n\r\nThis url is to get all Reviewers created is type `GET`, the url is `BASE_URL/reviewers` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params."], ["AllFormActions", "# Description GET All Form Actions\r\n\r\nThis url is to get all Form Actions created is type `GET`, the url is `BASE_URL/form-actions` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params."], ["AnswerFormBy:id", "# Description GET Answer Form By id\r\n\r\nThis url is to get a Answer Form by id is type `GET`, the url is `BASE_URL/answers-forms/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Answer Form to get details about this Answer Form."], ["AllAnswersForms", "# Description GET All Answers Forms\r\n\r\nThis url is to get all Answers Forms created is type `GET`, the url is `BASE_URL/answers-forms` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params."], ["CountScenarios", "# Description GET Number Of Scenarios\r\n\r\nThis url provides the Scenarios quantity created, method type `GET`.\r\n\r\n`BASE_URL/scenarios/count`\r\n\r\nreturns the Scenarios quantity."], ["CountFormActions", "# Description GET Number Of Form Actions\r\n\r\nThis url is to get the number of Form Actions created is type `GET`, the url is `BASE_URL/form-actions/count` and returns the number of Form Actions."], ["CountReviewers", "# Description GET Number Of Reviewers\r\n\r\nThis url is to get the number of Reviewers created is type `GET`, the url is `BASE_URL/reviewers/count` and returns the number of Reviewers."]]}, "SEA Games 31": {"tool_desc": "C\u1ed5ng th\u00f4ng tin ch\u00ednh th\u1ee9c c\u1ee7a SEA Games 31 - Vi\u1ec7t Nam 2021.", "apis": [["SEA Games 31", "C\u1ed5ng th\u00f4ng tin ch\u00ednh th\u1ee9c c\u1ee7a SEA Games 31 - Vi\u1ec7t Nam 2021. \u0110\u1ea1i h\u1ed9i Th\u1ec3 thao \u0110\u00f4ng Nam \u00c1 2021. \u0110\u1ea1i h\u1ed9i Th\u1ec3 thao \u0110\u00f4ng Nam \u00c1 - SEA Games 2021, s\u1ebd di\u1ec5n ra \u1edf H\u00e0 N\u1ed9i, Vi\u1ec7t Nam t\u1eeb ng\u00e0y 12 th\u00e1ng 5 \u0111\u1ebfn ng\u00e0y 23 th\u00e1ng 5 n\u0103m 2022.\nWebsite http://seagames.info/ \nEmail:info@seagames.info\nGoogle map: https://www.google.com/maps?cid=10302187337639672513 \n\u0110\u1ecba ch\u1ec9 : 36 P. Tr\u1ea7n Ph\u00fa, \u0110i\u1ec7n Bi\u00ean, Ba \u0110\u00ecnh, H\u00e0 N\u1ed9i Hanoi, Vietnam 100000\n#vietnamxseagames31 #H\u00e0_N\u1ed9i #Vi\u1ec7t_Nam #L\u1ecbch_thi_\u0111\u1ea5u_SEA Games 31\nhttps://seagames.info/sea-games-31/ \nhttps://www.facebook.com/vietnamxseagames31 \nhttps://sites.google.com/view/vietnamxseagames31 \nhttps://connect.garmin.com/modern/profile/9fba05fe-267e-4843-9511-74c0fd2d697d\nhttps://gitlab.haskell.org/seagamesinfo\nhttps://cartoonmovement.com/cartoonist/18495\nhttps://www.feedsfloor.com/profile/seagamesinfo\nhttps://deepai.org/profile/seagamesinfo\nhttps://www.bark.com/en/gb/company/seagamesinfo/kVPmo/\nhttps://community.tubebuddy.com/index.php?members/103488/#about\nhttps://start.me/p/jja0qL/seagamesinfo\nhttps://marketplace.apartmenttherapy.com/store/d03759a3-53fa-4a94-a31b-dbbba532f142\nhttps://www.lifeofpix.com/photographers/seagamesinfo/\nhttps://kuula.co/post/NHp4C\nhttp://wiki.cs.hse.ru/\u0423\u0447\u0430\u0441\u0442\u043d\u0438\u043a:Seagamesinfo\nhttps://bibliocrunch.com/profile/seagamesinfo/\nhttps://www.dday.it/profilo/seagamesinfo\nhttps://www.mountainproject.com/user/201342996/seagames-info\nhttps://www.thingiverse.com/seagamesinfo/designs\nhttps://www.trepup.com/seagamesinfo-100997554504555\nhttps://sharree.com/User-seagamesinfo\nhttps://orcid.org/0000-0002-5432-601X\nhttps://zindi.africa/users/seagamesinfo\nhttps://ourstage.com/seagamesinfo\nhttps://infogram.com/seagamesinfo-1h8n6m35qeovz4x?live\nhttps://kyteapp.mn.co/members/11333334\nhttps://www.bhimchat.com/seagamesinfo\nhttp://pixelhub.me/seagamesinfo"]]}, "24hkhoedep": {"tool_desc": "24hkhoedep.com l\u00e0 trang b\u00e1n l\u1ebb tr\u1ef1c tuy\u1ebfn tr\u1ef1c thu\u1ed9c C\u00f4ng Ty TNHH Ch\u0103m S\u00f3c Kho\u1ebb V\u00e0 \u0110\u1eb9p Vi\u1ec7t Nam \u2013 m\u1ed9t c\u00f4ng ty chuy\u00ean nh\u1eadp kh\u1ea9u v\u00e0 ph\u00e2n ph\u1ed1i \u0111\u1ed9c quy\u1ec1n cho c\u00e1c h\u00e3ng d\u01b0\u1ee3c m\u1ef9 ph\u1ea9m v\u00e0 trang thi\u1ebft b\u1ecb y t\u1ebf t\u1eeb Ch\u00e2u  u.", "apis": [["24hkhoedep", "24hkhoedep.com l\u00e0 trang b\u00e1n l\u1ebb tr\u1ef1c tuy\u1ebfn tr\u1ef1c thu\u1ed9c C\u00f4ng Ty TNHH Ch\u0103m S\u00f3c Kho\u1ebb V\u00e0 \u0110\u1eb9p Vi\u1ec7t Nam \u2013 m\u1ed9t c\u00f4ng ty chuy\u00ean nh\u1eadp kh\u1ea9u v\u00e0 ph\u00e2n ph\u1ed1i \u0111\u1ed9c quy\u1ec1n cho c\u00e1c h\u00e3ng d\u01b0\u1ee3c m\u1ef9 ph\u1ea9m v\u00e0 trang thi\u1ebft b\u1ecb y t\u1ebf t\u1eeb Ch\u00e2u  u.\n#khoedep #khoedepvietnam #mypham #myphamchauau #duocphamchauau #duocmypham\n#m\u1ee5n th\u1ecbt #r\u1ed1i lo\u1ea1n ti\u00eau h\u00f3a #ng\u1ef1c ch\u1ea3y x\u1ec7\n\u0110\u1ecba ch\u1ec9 : 40/19 B\u00e0u C\u00e1t 2, Ph\u01b0\u1eddng 14, Qu\u1eadn T\u00e2n B\u00ecnh, TP. HCM, Vi\u1ec7t Nam\nHotline 028 - 6296 2262 | 0931320062\nEmail: hbcvn@healthbeautycare.com.vn\nGoogle map https://www.google.com/maps?cid=5320003827413062825 \nWebsite https://24hkhoedep.com/ \nhttps://24hkhoedep.com/mun-thit-la-gi-nguyen-nhan-va-cach-chua-mun-thit-an-toan-hieu-qua/ \nhttps://24hkhoedep.com/roi-loan-tieu-hoa-la-gi/ \nhttps://24hkhoedep.com/nguc-chay-xe-phai-lam-gi-cach-nang-nguc-chay-xe-tai-nha/ \nhttps://www.facebook.com/24hkhoedepHBC \nhttps://twitter.com/24hkhoedep \nhttps://community.opengroup.org/24hkhoedep \nhttps://www.pinterest.com/24hkhoedep/ \nhttps://www.instagram.com/comem_homelab \nhttps://www.beatstars.com/24hkhoedep/about \nhttps://gifyu.com/24hkhoedep\nhttps://folkd.com/user/24hkhoedep\nhttps://www.blogger.com/profile/06161746755325811075 \nhttps://www.youtube.com/channel/UCk-noRhYKMPmPdKN2s1mIlQ \nhttps://soundcloud.com/24hkhoedep\nhttps://www.behance.net/24hkhoedep\nhttps://www.openstreetmap.org/user/24hkhoedep\nhttps://issuu.com/24hkhoedep\nhttps://profile.hatena.ne.jp/hkhoedep/profile\nhttps://ko-fi.com/24hkhoedep\nhttps://gitlab-test.eclipse.org/24hkhoedep \nhttps://www.twitch.tv/24hkhoedep/about\nhttps://dribbble.com/24hkhoedep/about\nhttps://onlyfans.com/khoedep24h \nhttps://myspace.com/24hkhoedep\nhttps://www.goodreads.com/user/show/151102363-24hkhoedep\nhttps://linktr.ee/24hkhoedep\nhttps://www.deviantart.com/24hkhoedep\nhttps://about.me/dep.24hkhoe \nhttps://www.yumpu.com/xx/document/view/66823841/24hkhoedep\nhttps://tawk.to/24hkhoedep \nhttps://gallery.autodesk.com/users/5EB2PJGRPF8CEZU6 \nhttps://sketchfab.com/24hkhoedep \nhttps://li.sten.to/24hkhoedep\nhttps://connect.garmin.com/modern/profile/7b87f84b-717b-463c-9760-9a2f431f11c7"]]}, "PetStoreAPI2.0": {"tool_desc": "This is a sample server Petstore server.", "apis": [["getInventory", "Returns a map of status codes to quantities"], ["getPetById", "Returns a single pet"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"]]}, "FM_API_RELEASE v0.1": {"tool_desc": "a set of routines, protocols, and tools for building software applications.", "apis": [["/api/FollowMe/uploadFileAnonymously", "The aim of the FollowMe Tracking Servie API is to enable developers on brining our tracking services to more convenient and accessible platforms for users"]]}, "Proxy Detection": {"tool_desc": "Proxy Rotator is the world's first enterprise grade proxy ip rotation service.", "apis": [["Proxy Detection API", "API will detect if an ip address is related to a proxy of any kind. Checks through a database of over 26 million proxies."]]}, "NY times - Archive ": {"tool_desc": "Newyork times archive API", "apis": [["/{year}/{month}.json", "Pass in year and month and get back JSON with all articles for that month. The response can be big (~20 megabytes) and contain thousands of articles, depending on the year and month."]]}, "OFAC Service": {"tool_desc": "Searches an entity from OFAC's Sanctions List with fuzzy logic on its name search field to look for potential matches on the Specially Designated Nationals (SDN) List and on its Non-SDN Consolidated Sanctions List.", "apis": [["GET /data/entity/{uid}", "Gets an entity record by `uid`."], ["GET /data/info", "Gets an information about OFAC database."]]}, "Fraudlabs": {"tool_desc": "The FraudLabs Credit Card Fraud Detection Web Service allows instant detection of fraudulent online credit card order transactions which helps internet retailers to avoid loss of revenue, waste of productivity and increase of operation costs in chargebacks or refunds.", "apis": [["FraudLabs API", "Credit Card Fraud Detection API"]]}, "Web scraping and proxy": {"tool_desc": "Scrape and extract data from any website, with powerful options like proxy / browser customization, CAPTCHA handling, ad blocking, and more.", "apis": [["Target URL", "To make a request, you simply include the target URL  API will return the data from that site. Optional configuration options, like proxies, location of the request, and more are possible to include."]]}, "DL Format Validation": {"tool_desc": "Confirms that the submitted driver\u2019s license formatting is the correct format as stipulated for the submitted state.", "apis": [["GetArchiveReport", "Gets Archived DL Report"]]}, "Zoopla_v2": {"tool_desc": "This API helps to query for properties for rent, sale in UK to create a real estate site/application such as zoopla.com", "apis": [["properties/list", "List properties for sale or rent with options and filters"], ["house-prices/get-points-of-interest", "Get nearest points of interest"], ["house-prices/estimate", "Returned list of estimated house prices"], ["properties/get-nearby", "Get nearest points of interest"], ["auto-complete", "Get auto complete suggestion by term or phrase"], ["house-prices/get-market-activity", "Get market activity in an area"]]}, "Company Domain Finder": {"tool_desc": "Finds the matching domain given a company name", "apis": [["Get Company Domain", "Enter the name of a company and the API will return the matching domain."]]}, "0MMO": {"tool_desc": "0MMO", "apis": [["0MMO", "0MMO is the number 1 site offering the very best software designed for Internet Marketers from 2008!\nAddress Novokosinskaya 14k7, Moscow,119034, Russia\nHotline 0945273782\nEmail: support@0mmo.net\nhttps://www.0mmo.net \nhttps://www.0mmo.net/gb \nhttps://www.0mmo.net/im-tools \nhttps://www.0mmo.net/wp \nhttps://www.0mmo.net/tutorials \nhttps://www.liveinternet.ru/users/0mmo/profile\nhttps://dribbble.com/0mmo/about\nhttps://infogram.com/0mmonet-1h7g6k0e17ry02o?live\nhttps://www.babelcube.com/user/0m-mo\nhttps://www.spreaker.com/user/15816794\nhttps://sketchfab.com/0mmo\nhttps://gitlab-test.eclipse.org/0mmo\nhttps://w3techs.com/users/profile/2751735\nhttps://www.scoop.it/topic/0m-mo\nhttps://0mmo.hpage.com/\nhttps://www.diigo.com/user/ommonet\nhttps://forums.iis.net/members/0mmo.aspx\nhttps://www.podomatic.com/podcasts/0mmonet9\nhttps://pinshape.com/users/1775513-0mmonet#designs-tab-open\nhttps://osf.io/xmzqj/\nhttps://gitlab.tue.nl/0mmo\nhttps://git.qt.io/0mmo\nhttps://communities.bentley.com/members/53bef9c4_2d00_8015_2d00_43ab_2d00_8a9c_2d00_d7d0b2a8d418\nhttps://myanimelist.net/profile/0mmo\nhttps://app.glosbe.com/profile/6875826798379142906\nhttps://8tracks.com/users/0mmo\nhttps://0mmo.cgsociety.org/profile\nhttps://api.rakuten.net/user/0mmonet\nhttps://www.forexfactory.com/0mmonet\nhttps://os.mbed.com/users/0mmonet/\nhttps://xclams.xwiki.org/xwiki/bin/view/XWiki/0mmonet\nhttp://photozou.jp/user/top/3300078\nhttps://www.designspiration.com/0mmonet9/saves/\nhttps://piqs.de/user/0mmo/account/\nhttps://hypothes.is/users/0mmo\nhttps://www.renderosity.com/users/0mmonet\nhttps://onmogul.com/0mmo\nhttps://www.hulkshare.com/0mmo\nhttps://writeablog.net/qur56j124j\nhttps://www.noteflight.com/profile/137b8a32fba12c039d5987842f5b20676af05440\nhttps://blogfreely.net/me/posts/\nhttps://www.cakeresume.com/dashboard\nhttps://appsliced.co/u/0mmo\nhttps://dashburst.com/0mmo\nhttps://timeswriter.com/members/0mmo/profile/\nhttps://www.csslight.com/profile/0mmo\nhttps://git.feneas.org/0mmonet9\nhttps://www.phuot.vn/members/0mmo.267461/\nhttps://startupmatcher.com/p/0mmo\nhttps://getpocket.com/@0mmo\nhttps://www.free-ebooks.net/profile/1356925/0mmo\nhttps://www.cnccode.com/user/0mmo\nhttps://amara.org/en/profiles/profile/pOFx88VGGOI-X9mHsomnquPySAFAWbW6JlrFYtYIgKU/\nhttps://en.eyeka.com/u/0mmo\nhttp://gitlab.aic.ru/0mmo\nhttp://www.asmetalwork.1gb.ua/forum/user/edit/56363.page\nhttps://band.us/band/86095136\nhttps://www.tripline.net/0mmo/\nhttps://bookme.name/0mmonet\nhttps://able2know.org/user/0mmo/\nhttps://profile.hatena.ne.jp/huyss/profile\nhttps://lackky.com/0mmonet\nhttps://www.webmasterpro.de/user/0mmonet/\nhttps://openuserjs.org/users/0mmo\nhttps://www.linkedin.com/in/0mmo/"]]}, "cvr.dev": {"tool_desc": "Data about companies from the Danish Business Authority", "apis": [["R\u00e5 CVR virksomhed", "Dette endpoint returnerer alt data om en virksomhed, som den er i CVR. Dette dataformat er bestemt af Virk, ikke af cvr.dev."]]}, "DOMAINE nc": {"tool_desc": "API REST pour interagir avec les noms de domaine, de connaitre leur date d'expiration.", "apis": [["GET Domaine", "R\u00e9cup\u00e8re les d\u00e9tails d'un domaine, cela permet de rechercher en mode API le contenu disponible en web sur [DOMAINE.nc](https://www.domaine.nc/whos)."], ["GET All domaines", "Get all domain names"]]}, "Entity Risk": {"tool_desc": "The Entity Risk API accesses our risk intelligence data.", "apis": [["Audit", "This endpoint retrieves individual audit records. An audit record represents the request and response that was submitted using Sigma's API and it is used for traceability."], ["Indicator Categories", "List the available Sigma indicator categories to filter by."], ["Sources", "Lists the available Sigma Sources to search on. Sigma Sources are specific integrations which Sigma has constructed to impose structure to its various datasets. Use the name field as value to filter sources on."], ["Account Status", "Check the status of this account (api key)"]]}, "Project Gutenberg API": {"tool_desc": "This is a stable and reliable unofficial API for Project Gutenberg, allowing you to download ebooks as well as get information about a certain book (title, author, language, copyrights and publish date).", "apis": [["Search Books", "Search for books using full name or just a snippit and get the book's ID."], ["Extract Info", "Get all the informations about a book using it's ID\nInformations : \n- title.\n- authors.\n- language.\n- download links.\n- download count.\nand much more ..."]]}, "Free OFAC Scan": {"tool_desc": "A FREE and simple OFAC scan that returns TRUE (if the target was found) or FALSE (if the target was not found).", "apis": [["free_ofac.api", "This API returns a simple TRUE (target found) or FALSE (target not found) value n response to an OFAC scan request."]]}, "Basic Info vikkon Assets": {"tool_desc": "Get information from vikkon platform.", "apis": [["Get Device-Asset by Identifier_copy", "External info Device-Asset by Identifier"], ["Get Device-Asset by Identifier", "External info Device-Asset by Identifier"]]}, "Phone Validator API": {"tool_desc": "Validate and verify phone numbers in your apps.", "apis": [["Fetch full metadata", "This endpoint will return the full metadata of the number included on the request."], ["Country code number", "Returns the digits between the `+` and the national number when the number is written in international format."], ["Format number", "Returns the phone number on standardized formats."], ["Is fixed?", "Returns `true` or `false` depending on whether the number is fixed or not."], ["Is mobile?", "Returns `true` or `false` depending on whether the number is a mobile line or not."], ["Is possible?", "Validates phone number length, returns `true` or `false`."], ["Is valid?", "Validates both phone number length and the actual phone number digits, returns `true` or `false`."], ["Type", "Returns phone number type (`fixed line`, `mobile`, `toll free`, etc); or `undefined` if the number is invalid or if there are no phone number type regular expressions for this country in metadata."], ["Country ISO 3166", "Returns the officially assigned ISO alpha-2 country code, on [ISO 3166-1 alpha-2 format](https://en.wikipedia.org/wiki/ISO_3166-2)."]]}, "AcroSuite OAuther": {"tool_desc": "Get OAuth/OpenID Connect authentication information.", "apis": [["OpenID Connecter", "OAuth/OpenID Connect(OIDC) authentication information from the third-party providers(**Google/LINE/YahooJP/Azure**) will be available. \nAfter calling the API, you will get an OIDC list without **oAuthCode** or OIDC authentication information with **oAuthCode**.\nWhen you get an OIDC list, you may choose an **OAuthURL** to call it, then you will get OIDC authentication information.\nAnd it is not necessary to input redirectHost/redirectPort parameter here.\nPlease refer to the sample[**OIDC Authentication**] in the following demo page.\nhttps://mars.restgate.net/intro/en/suite_en.html#oauther\n\n\u30b5\u30fc\u30c9\u30d1\u30c6\u30a3\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc(**Google/LINE/YahooJP/Azure**)\u304b\u3089OAuth **OpenID Connect(OIDC)**\u8a8d\u8a3c\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u3053\u306eAPI\u3092\u547c\u3073\u51fa\u3057\u305f\u3089\u3001OIDC\u4e00\u89a7(**oAuthCode**\u4ed8\u304d\u306a\u3057\u306e\u5834\u5408)\u53c8\u306f\u8a8d\u8a3c\u60c5\u5831(**oAuthCode**\u4ed8\u304d\u306e\u5834\u5408)\u304c\u623b\u3089\u308c\u307e\u3059\u3002\nOIDC\u4e00\u89a7\u304c\u623b\u3055\u308c\u305f\u5834\u5408\u306f\u3001\u7d9a\u3044\u3066**OAuthURL**\u3092\u9078\u3093\u3067\u547c\u3073\u51fa\u3059\u3068\u3001\u8a72\u5f53\u3059\u308b\u8a8d\u8a3c\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3053\u3053\u3067\u306f\u3001redirectHost/redirectPort\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7121\u8996\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u5b9f\u969b\u306e\u6319\u52d5\u306f\u3001\u4e0b\u8a18\u306e\u30c7\u30e2\u30da\u30fc\u30b8\u306b\u547c\u3073\u51fa\u3057\u30b5\u30f3\u30d7\u30eb[**OIDC\u8a8d\u8a3c**]\u3092\u3054\u53c2\u8003\u304f\u3060\u3055\u3044\u3002\nhttps://mars.restgate.net/intro/jp/suite_jp.html#oauther\n<hr>\nThe following external document is for directly calling AcroSuite original APIs. Some Auth parameters may be neglected here.\nhttps://mars.acrochannel.com:8443/AcroSuite/v0_1/CstService/apiInfo/doc?appId=10006&language=2&withTitle=true&apiCode=02301016\n\n\u4e0b\u8a18\u306e\u5916\u90e8\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001AcroSuite\u30aa\u30ea\u30b8\u30ca\u30ebAPI\u306b\u5bfe\u3059\u308b\u8cc7\u6599\u3067\u3042\u308a\u3001\u3053\u3053\u3067\u306f\u4e00\u90e8\u306e\u8a8d\u8a3c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7701\u7565\u3057\u307e\u3059\u3002\nhttps://mars.acrochannel.com:8443/AcroSuite/v0_1/CstService/apiInfo/doc?appId=10006&language=1&withTitle=true&apiCode=02301016"]]}, "Real Estate": {"tool_desc": "Real Estate and commercial property for sale and for rent in the United States", "apis": [["properties/rent", "U.S properties for rent"], ["property/details", "Get detailed information on U.S properties"], ["properties/sale", "U.S properties for sale"]]}, "Personas": {"tool_desc": "API provides a single API to read user-level and account-level customer data.", "apis": [["PersonasAPI", "RapidAPI\u2019s official API that allows you to add or update your API\u2019s definition."]]}, "print": {"tool_desc": "some print api", "apis": [["Get all", "Gets all the data"]]}, "Petstore": {"tool_desc": "Petstore API Example", "apis": [["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"]]}, "Website Categorization API": {"tool_desc": "Identifies the top 3 categories for any website or text", "apis": [["Categorize Website", "Returns the top 3 categories for any website."]]}, "TEXTKING Translation": {"tool_desc": "The TEXTKING Translation API is a RESTful web service to access and manage translation projects on https://www.textking.com.", "apis": [["Upload source document", "Uploads the source document for a job."], ["Get language", "Returns a single language with the given ISO 639 language code."], ["List source languages", "Returns a collection of all source languages supported by TEXTKING."], ["List topics", "Returns a collection of all available topics."], ["List projects", "Returns a collection of projects of the authorized customer."], ["Download source document", "Downloads the source document for a job."], ["Get price info for word count", "Returns price information for a specific number of words for all available quality levels."], ["Get project", "Returns a single project with the given ID."], ["Get topic", "Returns a single topic area with the given ID."], ["Get job", "Returns a single job with the given ID."], ["Download translated document", "Downloads the translated document for a job."], ["List a project's jobs", "Returns a collection of jobs for a project."]]}, "Convert Company Name to Website URL": {"tool_desc": "Convert Company Names to Website URL", "apis": [["getWebsite", "Get Company Website from Company Name"]]}, "Job Title Categorization": {"tool_desc": "Accurately classify any job title.", "apis": [["Categorize Job Title", "Easily categorize any job title"]]}, "SignNow": {"tool_desc": "Deliver a seamless eSignature experience from your website, CRM, or custom app by integrating the signNow REST API.", "apis": [["[Embedded signing] Get role ids", "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document."], ["Get field and field invite id", "The endpoint returns field and field invite ids."], ["Get role ids", "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document."], ["Get signing links", "The endpoint allows to get all existing signing links and IDs of these signing links."], ["Get role ids for template", "The endpoint allows to get role ids for a template."]]}, "Ticketbud": {"tool_desc": "Events happening globally on ticketbud.", "apis": [["Tickets for an Event", "All tickets for an event that you have access to"], ["A Single Ticket", "Information about a single ticket."], ["A Single Event", "Information about a single event you have access to"], ["Your Events", "A list of events owned or accessible by the current token holder"]]}, "Croatia Company Data": {"tool_desc": "Access to the official Croatian government business register with this API, ideal for KYB purposes", "apis": [["Search by MBS or OIB", "Search the Croatian company register by either MBS or OIB company identifiers (osobni identifikacijski broj)"]]}, "Streak CRM for GMAIL": {"tool_desc": "connects to \"Streak CRM\"\r\nStreak offers a simple CRM extension to use with Gmail.", "apis": [["Pipeline", "Pipelines represent a business process that a user would like managed."]]}, "CPF Format Validation": {"tool_desc": "Validation of the Brazilian CPF format.", "apis": [["TOKEN", "Returns the authentication token."]]}, "YC Hacker news official": {"tool_desc": "The official hacker news API", "apis": [["job stories", "Up to 200 of the latest Job HN Stories!"], ["ask stories", "Up to 200 of the latest Ask HN Stories!"], ["updates", "Get the changed items and profiles"], ["top stories", "Returns the current top 100 stories."], ["user by id", "Users are identified by case-sensitive ids"], ["max item", "Get the current largest item id"], ["show stories", "Up to 200 of the latest Show HN Stories!"], ["new stories", "Returns the current top 100 stories."], ["best stories", "Returns up to the current best 500 stories."], ["item by id", "Stories, comments, jobs, Ask HNs and even polls are just items. They're identified by their ids, which are unique integers."]]}, "Forbes worlds billionaires list": {"tool_desc": "This api can get Forbes worlds billionaires list by year.", "apis": [["Get Billionaires", "This method can get you full list of Forbes billionaires by year.If you want you can search by name or filtered by country or country of citizenship. This api can get list of people page by page and you can search max 100 limit per one request."]]}, "360 Business Tool": {"tool_desc": "360 Business Tool er et dansk designet og udviklet CRM & virksomhedssystem.", "apis": [["GetDocumentTypes", "Get all document types"], ["GetCompaniesSince", "Get companies modified since"], ["GetCasesSince", "Get cases modified since"], ["GetDocumentTypesSince", "Get document types modified since"], ["GetAllRecordsSince", "Get all data modified since"]]}, "789bettnet": {"tool_desc": "789bet l\u00e0 nh\u00e0 c\u00e1i c\u00e1 c\u01b0\u1ee3c tr\u1ef1c tuy\u1ebfn uy t\u00edn top \u0111\u1ea7u khu v\u1ef1c ch\u00e2u \u00c1, cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 c\u00e1 c\u01b0\u1ee3c nh\u01b0 casino, c\u00e1 c\u01b0\u1ee3c th\u1ec3 thao, n\u1ed5 h\u0169, b\u1eafn c\u00e1, t\u00e0i x\u1ec9u.", "apis": [["789betlinkvao2022", "789bet l\u00e0 nh\u00e0 c\u00e1i c\u00e1 c\u01b0\u1ee3c tr\u1ef1c tuy\u1ebfn uy t\u00edn top \u0111\u1ea7u khu v\u1ef1c ch\u00e2u \u00c1, cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 c\u00e1 c\u01b0\u1ee3c nh\u01b0 casino, c\u00e1 c\u01b0\u1ee3c th\u1ec3 thao, n\u1ed5 h\u0169, b\u1eafn c\u00e1, t\u00e0i x\u1ec9u.\n#789bettnet #789bet #nhacai789bet #linkvao #dangky789bet #dangnhap789bet\nHotline 0985 433 336\n\u0110\u1ecba ch\u1ec9 : 89 Ng\u00f5 15 Gi\u1ea3i Ph\u00f3ng, Ho\u00e0ng Li\u1ec7t, Hai B\u00e0 Tr\u01b0ng, H\u00e0 N\u1ed9i, Vi\u1ec7t Nam \nGoogle map https://www.google.com/maps?cid=5871956287660487504 \nGmaiL: 789bett.net@gmail.com\nWebsite https://789bett.net/ \nhttps://789bett.net/dang-ky-789bet/ \nhttps://789bett.net/khuyen-mai-789bet/ \nhttps://sites.google.com/view/789bettnet/home \nhttps://dailygram.com/index.php/profile-432167\nhttps://www.mtbproject.com/user/201407644/789bett-net\nhttps://mydramalist.com/profile/789bettnet\nhttps://my.desktopnexus.com/789bettnet/\nhttps://worldcosplay.net/member/1058048\nhttps://www.tetongravity.com/community/profile/789bettnet/\nhttps://community.amplifi.com/user/789bett-net\nhttps://www.gaiaonline.com/profiles/789bettnet/45915060/\nhttps://www.hackathon.io/789bettnet\nhttps://pawoo.net/@789bettnet\nhttp://pixelhub.me/789bettnet\nhttps://guides.co/p/789bett-net\nhttps://www.allmyfaves.com/789bettnet\nhttps://my.mamul.am/en/profile/1314087/info\nhttp://www.effecthub.com/people/789bettnet\nhttps://kuwestions.248am.com/user/789bettnet\nhttps://www.mapleprimes.com/users/789bettnet\nhttps://www.bahamaslocal.com/userprofile/137779/789bettnet.html\nhttps://www.misterpoll.com/users/4137466\nhttps://yarabook.com/789bettnet\nhttps://anchor.fm/789bettnet\nhttps://www.bitsdujour.com/profiles/Vj49if"]]}, "apfd": {"tool_desc": "apfd", "apis": [["getPetById", "Returns a single pet"], ["getInventory", "Returns a map of status codes to quantities"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"]]}, "MCA Corporate Verifications": {"tool_desc": "Make your onboarding process safer, faster, and smarter by verifying if your merchants are registered with the Registrar of Companies, and are registered with the same details that you expect.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Realtor Data API for Real Estate": {"tool_desc": "Data API for Realtor USA\nYou can use this API to get all the Realtor Property data, Realtor Agents data and Realtor School data.", "apis": [["RealtorPropertyList", "This endpoint will give you the Realtor Property List with the data as given below, if you provide the city, state_code and offset.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\noffset: min = 0 and max can be depends on the total number of results. but the maximum number of results you can see at a time is 42. So you need to keep increasing the offset value by 42 to achieve a pagination.  To achieve pagination you have to start the offset from 0 and increase the offset by 42.\n\n`{\n    \"agent\": [\n      {\n        \"office_name\": \"CENTURY21 REAL ESTATE ALLIANCE\"\n      },\n      {\n        \"office_name\": null\n      }\n    ],\n    \"branding\": [\n      {\n        \"name\": \"CENTURY 21 Real Estate Alliance\",\n        \"photo\": null,\n        \"type\": \"Office\"\n      }\n    ],\n    \"last_update_date\": \"2022-12-06T01:24:16Z\",\n    \"list_date\": \"2022-08-23T23:24:23Z\",\n    \"list_price\": 875000,\n    \"listing_id\": \"2946989531\",\n    \"location\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"coordinate\": {\n          \"lat\": 37.71979,\n          \"lon\": -122.462898\n        },\n        \"line\": \"9 Garfield St\",\n        \"postal_code\": \"94132\",\n        \"state\": \"California\",\n        \"state_code\": \"CA\"\n      },\n      \"county\": {\n        \"fips_code\": \"06075\",\n        \"name\": \"San Francisco\"\n      },\n      \"street_view_url\": \"https://maps.googleapis.com/maps/api/streetview?channel=rdc-streetview&client=gme-movesalesinc&location=9%20Garfield%20St%2C%20San%20Francisco%2C%20CA%2094132&size=640x480&source=outdoor&signature=NniMw06UKhWMjlwyIN-dwOajrxo=\"\n    },\n    \"open_house_description\": \"No Open House Available\",\n    \"other_listings\": {\n      \"rdc\": [\n        {\n          \"listing_id\": \"2946989531\",\n          \"listing_key\": null,\n          \"primary\": true,\n          \"status\": \"for_sale\"\n        }\n      ]\n    },\n    \"permalink\": \"https://www.realtor.com/realestateandhomes-detail/9-Garfield-St_San-Francisco_CA_94132_M23343-72866\",\n    \"photos\": [\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\"\n      },\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b145756411s.jpg\"\n      }\n    ],\n    \"price_reduced_amount\": null,\n    \"primary_photo\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\",\n    \"property_description\": {\n      \"baths\": 1,\n      \"baths_1qtr\": null,\n      \"baths_3qtr\": null,\n      \"baths_full\": 1,\n      \"baths_half\": null,\n      \"beds\": 0,\n      \"garage\": 2,\n      \"lot_sqft\": 2539,\n      \"name\": null,\n      \"sold_date\": \"2017-08-17\",\n      \"sold_price\": 45373,\n      \"sqft\": 1094,\n      \"stories\": null,\n      \"sub_type\": null,\n      \"type\": \"single_family\",\n      \"year_built\": 1947\n    },\n    \"property_id\": \"2334372866\",\n    \"source\": \"BDCA\",\n    \"status\": \"for_sale\",\n    \"tax_record\": \"6A966F0C987E7C5A1DB0D29A6B22116A\",\n    \"type\": \"mls\",\n    \"virtual_tour_link\": \"No Virtual Tour Available\"\n  }`"], ["RealtorSchoolList", "This endpoint will give you the Realtor School List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York etc\nstate_code: CA or NY etc\nschool_level: It can be either one of them (elementary, middle, high, private & charter)\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"coordinates\": {\n      \"lat\": 37.247605,\n      \"lon\": -121.946069\n    },\n    \"funding_type\": \"public\",\n    \"grades\": [\n      \"K\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"id\": \"078653021\",\n    \"location\": {\n      \"city\": \"San Jose\",\n      \"city_slug_id\": \"San-Jose_CA\",\n      \"state\": \"CA\"\n    },\n    \"name\": \"Carlton Elementary School\",\n    \"parent_rating\": 4,\n    \"rating\": 9,\n    \"review_count\": 27,\n    \"school url\": \"https://www.realtor.com/local/schools/Carlton-Elementary-School-078653021\"\n  }`"], ["RealtorAgentList", "This endpoint will give you the Realtor Agent List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"agent_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"agent_bio\": \"Mark Lafferty Office: 925-216-6203 nEmail Me Keller Williams Tri-Valley Realtyn2300 First St. #316nLivermore, CA 94550nnExperiencenAs an agent who's an expert in this local area, I bring a wealth of knowledge and expertise about buying and selling real estate here. It's not the same everywhere, so you need someone you can trust for up-to-date information. I am eager to serve you. Here are some of the things I can do for you:nnFind Your Next HomenYou need someone who knows this area inside and out! I can work with you to find the right home at the right price for you, including all the neighborhood amenities that matter - not to mention the essential criteria you have for your ideal homennSell a HomenWhen it's time to move, you need someone who will advertise your home, show to prospective buyers, negotiate the purchase contract, arrange financing, oversee the inspections, handle all necessary paperwork and supervise the closing. I can take care of everything you need, from start to close.nnConsult on Home Selling TacticsnOftentimes buyers don't visualize living in your home the way you do. I can make your home attractive to its ideal audience - which can help you get top dollar. Things like staging the home, making repairs or minor improvements, or even simply painting the walls can be the difference between a home resting on the market and one that's sold fast.n..\",\n    \"agent_languages\": [],\n    \"agent_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": true,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_12D2140114631531\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      }\n    ],\n    \"agent_photo\": \"http://p.rdcpix.com/v01/aaa120200-c0o.jpg\",\n    \"agent_rating\": 0,\n    \"agent_recommendations_count\": 0,\n    \"agent_reviews_count\": 0,\n    \"agent_served_areas\": [\n      {\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"agent_slogan\": \"\",\n    \"agent_specializations\": [\n      {\n        \"name\": \"Buyer\"\n      },\n      {\n        \"name\": \"Commercial\"\n      },\n      {\n        \"name\": \"First Time\"\n      },\n      {\n        \"name\": \"Golf\"\n      },\n      {\n        \"name\": \"Investment Properties\"\n      },\n      {\n        \"name\": \"Land\"\n      },\n      {\n        \"name\": \"Ranch\"\n      },\n      {\n        \"name\": \"Seller\"\n      },\n      {\n        \"name\": \"Vinyard\"\n      },\n      {\n        \"name\": \"Winery\"\n      }\n    ],\n    \"agent_team_details\": {\n      \"is_team_member\": false\n    },\n    \"agent_type\": [\n      \"buyer\",\n      \"seller\"\n    ],\n    \"agent_website\": \"http://www.marklafferty.com\",\n    \"for_sale\": {\n      \"count\": 4,\n      \"last_listing_date\": \"2023-01-31T01:52:43Z\",\n      \"max\": 1970000,\n      \"min\": 849950\n    },\n    \"is_realtor\": true,\n    \"joined\": [\n      0,\n      0\n    ],\n    \"license\": [\n      {\n        \"country\": \"US\",\n        \"license_number\": \"01344268\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"marketing_areas\": [\n      {\n        \"city_state\": \"Fremont_CA\",\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Sunol_CA\",\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Livermore_CA\",\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Pleasanton_CA\",\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Milpitas_CA\",\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"San Jose_CA\",\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"East Foothills_CA\",\n        \"name\": \"East Foothills\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Alum Rock_CA\",\n        \"name\": \"Alum Rock\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Mount Hamilton_CA\",\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"office_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"office_fulfillment_id\": 1424399,\n    \"office_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": true,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_153013A10033\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      }\n    ],\n    \"office_name\": \"KELLER WILLIAMS TRI-VALLEY\",\n    \"office_party_id\": \"3145631\",\n    \"office_phone\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 397-4200\",\n        \"type\": \"Office\"\n      }\n    ],\n    \"office_website\": \"WWW.PIERCETHEMARKET.COM\",\n    \"party_id\": 4232697,\n    \"person_name\": \"MARK M. LAFFERTY\",\n    \"phones\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 216-6203\",\n        \"type\": \"Mobile\"\n      }\n    ],\n    \"position\": \"Agent\",\n    \"profile_url\": \"https://www.realtor.com/realestateagents/MARK-M.-LAFFERTY_PLEASANTON_CA_135850_943184397\",\n    \"profile_url_id\": \"https://www.realtor.com/realestateagents/56b01aefbb954c01006a3382\",\n    \"recently_sold\": {\n      \"count\": 30,\n      \"last_sold_date\": \"2023-01-13\",\n      \"max\": 2850000,\n      \"min\": 630000\n    },\n    \"served_zip_codes\": [\n      \"94539\",\n      \"94550\",\n      \"94551\",\n      \"94566\",\n      \"94586\",\n      \"95035\",\n      \"95036\",\n      \"95101\",\n      \"95103\",\n      \"95106\",\n      \"95108\",\n      \"95109\",\n      \"95110\",\n      \"95111\",\n      \"95112\",\n      \"95113\",\n      \"95115\",\n      \"95116\",\n      \"95121\",\n      \"95122\",\n      \"95127\",\n      \"95131\",\n      \"95132\",\n      \"95133\",\n      \"95134\",\n      \"95135\",\n      \"95138\",\n      \"95140\",\n      \"95148\",\n      \"95150\",\n      \"95151\",\n      \"95152\",\n      \"95153\",\n      \"95154\",\n      \"95155\",\n      \"95156\",\n      \"95157\",\n      \"95158\",\n      \"95159\"\n    ],\n    \"types\": \"agent\",\n    \"video_url\": null\n  }`"]]}, "Rotating Proxies": {"tool_desc": "Proxy Rotator is the world's first enterprise grade proxy ip rotation service.", "apis": [["Rotating Proxy API", "API will respond with a random proxy currently active in the pool upon each request."]]}, "Tor detect": {"tool_desc": "A fast and simple API to identify and retrieve information about Tor nodes.", "apis": [["Check IP", "Check IP and get info"]]}, "Giay tay nam": {"tool_desc": "Gi\u00e0y t\u00e2y nam", "apis": [["\u0110\u1ed3 da Laforce", "\u0110\u1ed3 da Laforce l\u00e0 th\u01b0\u01a1ng hi\u1ec7u uy t\u00edn t\u1ea1i H\u00e0 N\u1ed9i c\u0169ng nh\u01b0 tr\u00ean to\u00e0n qu\u1ed1c v\u1ec1 s\u1ea3n ph\u1ea9m \u0111\u1ed3 da nh\u01b0 gi\u00e0y, t\u00fai, v\u00ed, th\u1eaft l\u01b0ng, g\u0103ng tay."]]}, "Sigma Scooters": {"tool_desc": "Electric Scooter rental in Athens", "apis": [["electric scooters", "electric scooter rental similar to lime"]]}, "AppraisalQC": {"tool_desc": "Automated Appraisal Validation process by PropMix using Artificial Intelligence \u2013 machine learning and image recognition", "apis": [["ValidationReport", "The API returns the XML validation report of the Appraisal Report uploaded"]]}, "CatalogAPI": {"tool_desc": "Catalog API is a service that ties your application to our catalog and order support department.", "apis": [["Search Catalog", "Searches the catalog based on the parameters passed."], ["Place Order", "This method places as order using the address and items in the cart. Once the order is placed, the cart is deleted."], ["Catalog Breakdown", "Breaks down the catalog into its categories"], ["Remove Item", "Removes items from the cart."], ["Empty", "Removes all items in the cart."], ["List Available Catalogs", "Lists the Available Catalogs"], ["Order List", "This method returns a list of order numbers (the Catalog API order numbers, not external_order_number) that match a given external_user_id."], ["View Item", "Returns an image and description of the item"], ["Unlock", "Unlocks a cart that has been locked via the cart_validate method."], ["View", "Returns the current address and items in the cart."], ["Validate", "Validates the address and items in the cart. You should call this method just before placing an order to make sure that the order will not be rejected."], ["Set Address", "Adds a shipping address to the cart"], ["Set Item Quantity", "Adds items to the cart. The quantity passed to this call overrides the quantity of a duplicate item."], ["Track Order", "Tracks an order given an order number."], ["Add Item", "Adds items to the cart"]]}, "Self-help Quotes": {"tool_desc": "Hand-picked quotes from the best self-help books around.", "apis": [["Get a random quote from a specific book", "Get a random self-help quote from a specific book by passing the book_id"], ["Get all available tags for self-help quotes", "List all available tags for the hand-picked self-help quotes"], ["Get all available self-help books", "Get a list of all available books in addition to the total count of quotes available from that book"], ["Get a random self-help quote", "Get a random hand-picked self-help quote in addition to its tags and the book it was taken from"]]}, "Testing out Sharing w/ Rachael": {"tool_desc": "Rachael is awesome!", "apis": [["Input test", "description of the endpoint"], ["LastName", "Last name of customer"]]}, "Business and company name API": {"tool_desc": "Use this Know-Your-Business Process (KYB) API to validate registered companies and business names recognised by the Corporate Affairs Commission (CAC).", "apis": [["Search By Registration Number", "Search company information by the company or business' registration number issued by the CAC. It returns a single match if the registration number exists."], ["Search Company By Name", "Do you know the company name? you can make a search of company information with just the name. You will get hits of all companies and businesses that are matching that particular name."], ["Get All Companies (Paginated)", "This endpoint gets all the companies and business as in the CAC database."]]}, "AE6888 Link vao nha cai AE688  2022": {"tool_desc": "AE6888  - Ae6888.net\u2b50 Trang ch\u1ee7 \u0111\u0103ng k\u00fd, \u0111\u0103ng nh\u1eadp AE888 m\u1edbi nh\u1ea5t \u2b50\ufe0f bao g\u1ed3m: \u0111\u00e1 g\u00e0 thomo, t\u00e0i x\u1ec9u, th\u1ec3 thao, l\u00f4 \u0111\u1ec1 online \u2b50\ufe0f Link v\u00e0o ae388 - ae688 - ae88 ch\u00ednh th\u1ee9c.", "apis": [["AE6888 Link vao nha cai AE688 Trang Chu dang ky chinh thuc ]", "AE6888  - Ae6888.net\u2b50 Trang ch\u1ee7 \u0111\u0103ng k\u00fd, \u0111\u0103ng nh\u1eadp AE888 m\u1edbi nh\u1ea5t \u2b50\ufe0f bao g\u1ed3m: \u0111\u00e1 g\u00e0 thomo, t\u00e0i x\u1ec9u, th\u1ec3 thao, l\u00f4 \u0111\u1ec1 online \u2b50\ufe0f Link v\u00e0o ae388 - ae688 - ae88 ch\u00ednh th\u1ee9c.\n#\u0111\u0103ng_k\u00fd_ae6888 #n\u1ea1p_ti\u1ec1n_ae6888  #link_v\u00e0o_ae6888 #t\u1ea3i app ae6888 #/m/033_l8  /m/033_l8 #Casino #l\u1ecbnkvaoae68882022 #dangnhap #\u0111\u0103ng_nh\u1eadp_ae6888\n\u0110\u1ecba ch\u1ec9 : 74 Ng\u00f5 238 T\u00e2n Mai, T\u00e2n Mai, Hai B\u00e0 Tr\u01b0ng, H\u00e0 N\u1ed9i, Vi\u1ec7t Nam\t\nHotline 0839138910\t\nGmail: ae6888net@gmail.com\t\nWebsite https://ae6888.net/\nhttps://ae6888.net/huong-dan-dang-ky-ae6888/ \t\nhttps://ae6888.net/huong-dan-nap-tien-ae6888/   \t\nhttps://ae6888.net/link-vao-ae6888-ae388-ae888/  \t\nhttps://ae6888.net/huong-dan-tai-app-ae6888/  \t\nhttps://en.wikipedia.org/wiki/Online_casino    \nhttps://sites.google.com/view/ae6888net/ \nhttps://comicvine.gamespot.com/profile/ae6888net/\nhttps://gifyu.com/ae6888net\nhttps://folkd.com/user/ae6888net\nhttps://phab.mercurial-scm.org/p/ae6888net/\nhttp://ae6888net.wikidot.com/system:welcome\nhttps://bikepgh.org/message-board/users/ae6888net/\nhttps://gotartwork.com/Profile/ae6888-net/149316/\nhttps://bibliocrunch.com/profile/ae6888net/\nhttps://ko-fi.com/ae6888net\nhttps://linktr.ee/ae6888net\nhttp://uid.me/ae6888_net\nhttps://www.scribblemaps.com/maps/view/ae6888net/F8ABhGlKGR\nhttps://gitlab.manjaro.org/ae6888net\nhttps://gitlab.pasteur.fr/ae6888net\nhttps://repo.getmonero.org/ae6888net\nhttps://career.habr.com/ae6888net\nhttps://gitlab.haskell.org/ae6888net\nhttps://cartoonmovement.com/cartoonist/18696\nhttps://forum.umbandaeucurto.com/usuario/ae6888net\nhttps://www.pinterest.com/ae6888net/_saved/\nhttps://www.behance.net/ae6888net\nhttps://vi.gravatar.com/ae6888net\nhttps://www.jigsawplanet.com/ae6888net?viewas=0f0bf43f18f5\nhttps://binaryoptionrobotinfo.com/forums/users/ae6888net/\nhttps://www.divephotoguide.com/user/ae6888net\nhttps://mootools.net/forge/profile/ae6888net\nhttps://fr.ulule.com/ae6888net/#/projects/followed\nhttps://my.archdaily.com/us/@ae6888net\nhttp://codepad.org/users/ae6888net"]]}, "Idealista_v2": {"tool_desc": "Query for rent and sale properties in Spain, Italy, Portugal", "apis": [["properties/list", "List properties for sale or rent in Italy, Spain, Portugal with options and filters"], ["zois/detail", "Get information about specific zone of interest"], ["auto-complete", "Get auto complete suggestion by term or phrase"]]}, "Company Enrichment": {"tool_desc": "Enrich any domain or email with accurate company data, including headcount, location and industry.", "apis": [["Company Enrichment Endpoint", "With Company Enrichment API, you can get the company details of any domain."]]}, "Lake B2B": {"tool_desc": "Lake B2B combines research and experience to offer unique email marketing lists &amp; healthcare database for customized b2b marketing across industries and geographies.", "apis": [["Email Marketing", "Lake B2B provides best email marketing services and programs across the globe to meet your marketing needs thus helping business to run more efficiently."]]}, "Free Cashback": {"tool_desc": "Free Cashback API is a free to use api which makes it easy for you to provide Cashbacks on more than 100 leading shopping websites in India, to your users.", "apis": [["Cashabck", "Access this for cashback feed"]]}, "ExplorArc's Internel Links Crawler": {"tool_desc": "The Best API t Fetch all the Internel Links from an given URL", "apis": [["Crawler", "The Best API t Fetch all the Internel Links from an given URL"]]}, "enrich": {"tool_desc": "We are the leading enrichment API for businesses around the world.", "apis": [["Email", "Enrich data from person email"]]}, "Validate VAT": {"tool_desc": "Verifies EU & GB VAT Numbers and gets company information, and address details.", "apis": [["Validate VAT", "\u201cValidate VAT\u201d validates VAT numbers, get company information, including address, returned for each VAT number."]]}, "NY Times - Top Stories": {"tool_desc": "Newyork times top stories API", "apis": [["List stories by section", "The Top Stories API returns an array of articles currently on the specified section."]]}, "Chartbeat": {"tool_desc": "Chartbeat collects various metrics about each visitor on your site.", "apis": [["Live Geo v3", "Returns geographical information about the most recent visitors. This call returns sampled data."], ["Historical Engagement Series", "Returns series of the engaged seconds where the default time span of each data point is 5 minutes. You should use this call if you want to see a more granular picture of your data."], ["Historical Social Stats", "Returns social activity summarized over the given timespan. You should use this call if you want to discover broad information about your data where we already did the work providing the max, min, average or median."], ["Historical Social Series", "Returns series of the social activity where the default time span between each data point is 5 minutes. You should use this call if you want to see a more granular picture of your data."], ["Live Histogram v3", "Returns a histogram where field values are summarized within ranges, as specified by breaks. The resulting histogram is returned as a list with one more element than the number of breaks. This call returns real-time data."], ["Historical Engagement Stats", "Returns engaged seconds summarized over the given timespan. You should use this call if you want to discover broad information about your data where we already did the work providing the max or min."], ["Live Summary v3", "Returns either numeric or categorical summaries of event fields given a host and optional path. Numeric summaries include min, max, sum, nonzero observations, observations and sum of squares. Categorical summaries include field keys with associated counts. This call return real-time data."], ["Historical Traffic Series", "Returns series of the traffic sources and/or page load time where the default time span of each data point is 5 minutes. You should use this call if you want to see a more granular picture of your data."], ["Live Quick Stats v3", "Returns an overview summary of the people on your domain right now. The number of people on a page, reading, writing, idle, etc... This call returns real-time data."], ["Live Top Pages v3", "Returns a list of pages, ordered by which ones have most visitors right now. This call returns real-time data."], ["Live Referrers v3", "Returns a list of referrers for the domain."], ["Live Path Summary v3", "Returns summary data (refer to the summary API call), but for top paths of given a host. This call returns real-time data."], ["Live Recent v3", "Returns information about the most recent visitors to a given host. This call returns real-time data."], ["Historical Traffic Stats", "Returns traffic sources and/or page load time summarized over the given timespan. You should use this call if you want to discover broad information about your data where we already did the work providing the max or min."]]}, "567 Live app 2022": {"tool_desc": "567 Live c\u00f3 trang ch\u1ee7 567live.io duy nh\u1ea5t ch\u00ednh x\u00e1c.", "apis": [["567 Live | T\u1ea3i App M\u1edbi Nh\u1ea5t 2022 T\u1ea1i Trang Ch\u1ee7 Ch\u00ednh Th\u1ee9c", "567 Live c\u00f3 trang ch\u1ee7 567live.io duy nh\u1ea5t ch\u00ednh x\u00e1c. Cung c\u1ea5p \u0111\u1ee7 link t\u1ea3i 567 live app an to\u00e0n cho b\u1ea1n phi\u00ean b\u1ea3n m\u1edbi nh\u1ea5t.\n\u0110\u1ecba ch\u1ec9 : 99 Gi\u1ea3i Ph\u00f3ng, \u0110\u1ed3ng T\u00e2m, Hai B\u00e0 Tr\u01b0ng, H\u00e0 N\u1ed9i\nGoogle map https://www.google.com/maps?cid=7118718670140148249 \nHotline 0978720550\nGmail:  567liveapp@gmail.com\nWebsite https://567live.io/ \nhttps://sites.google.com/view/567live-app/\nhttps://567live.io/tai-ve/567live-apk \nhttps://567live.io/tai-ve/567live-ios\nhttps://567live.io/thu-muc/app-live/ \nhttps://folkd.com/user/567liveapp\nhttps://sketchfab.com/567liveapp\nhttps://forums.iis.net/members/567liveapp.aspx\nhttps://wefunder.com/567live\nhttps://www.ultimate-guitar.com/u/567liveapp\nhttps://www.thingiverse.com/567liveapp/designs\nhttps://www.tickaroo.com/user/61fe0be0ed68b63b06bd40d5\nhttps://www.goodreads.com/user/show/147284265-567live\nhttps://gifyu.com/567liveapp\nhttps://ignitiondeck.com/id/dashboard/?backer_profile=153894\nhttps://www.sqlservercentral.com/forums/user/567liveapp\nhttps://abroadsanjal.com/index.php?qa=user&qa_1=567live\nhttps://beermapping.com/account/567liveapp\nhttps://www.zoimas.com/profile/567liveapp1/about\nhttps://www.eduvision.edu.pk/counseling/index.php?qa=user&qa_1=567liveapp\nhttps://567live.hpage.com/\nhttps://www.leetchi.com/en/c/5Yj6J40r\nhttps://public.tableau.com/app/profile/567live\nhttps://www.brownbook.net/user-profile/4782891\nhttps://amara.org/en/profiles/profile/MndaPixiSx4HXYOyjdeCtoryc1vYtjp933bdJZs6MYo/\nhttps://cycling74.com/author/6201cfb5d540c65659fc25e7\nhttps://api.rakuten.net/user/567liveapp\nhttps://lnk.bio/567live\nhttps://www.pozible.com/profile/567live\nhttps://new.edmodo.com/home\nhttp://www.nfomedia.com/profile?uid=rKfQfiD&result=ep5dbp81\nhttps://degreed.com/profile/567liveapp/overview\nhttps://bittube.tv/profile/567live\nhttps://git.feneas.org/567liveapp\nhttps://forum.singaporeexpats.com/memberlist.php?mode=viewprofile&u=370389\nhttps://sallatunturinkoulu.purot.net/profile/567liveapp\nhttps://liveviewsports.com/community/profile/567live/\nhttp://q2a.sydt.com.tw/index.php?qa=user&qa_1=567live"]]}, "VAT validation and tax rates": {"tool_desc": "Stay compliant with our simple, reliable, and powerful API for all your domestic and cross-border sales.", "apis": [["VAT validation API endpoint", "The Validate Endpoint takes a VAT number in the request, checks if that number is valid, and if it is valid, returns addition details about the company associated with that VAT number."], ["VAT rates & categories API endpoint", "The /categories/ endpoint makes it easy to get the latest VAT rates, including the reduced rates for certain categories, for a specific country."], ["VAT price calculation API endpoint", "The Calculate Endpoint makes it easy to calculate a VAT compliant price given a country and price, as well as such optional values as the type of goods."]]}, "Realty in US": {"tool_desc": "This API helps to query properties for sale, rent, sold,etc\u2026 to create a real estate site/application such as realtor.com", "apis": [["properties/v2/list-for-sale (Deprecated)", "List properties for sale"], ["properties/v2/list-by-mls (Deprecated)", "List properties by MLS ID"], ["properties/v2/detail (Deprecated)", "Get property detail information"], ["properties/list-for-rent (Deprecated)", "List properties for rent"], ["properties/v2/list-for-rent (Deprecated)", "List properties for rent"], ["locations/auto-complete (Deprecated)", "Get auto complete suggestions by city, ward, street name to pass in other endpoints. This endpoint also helps to get a specific property id by its address"], ["locations/v2/auto-complete", "Get auto complete suggestions by city, ward, street name to pass in other endpoints. This endpoint also helps to get a specific property id by its address"], ["schools/detail", "Get detailed information of a school"], ["schools/list", "List schools with options and filters"], ["schools/get-school-district", "Get detailed information of a school district"], ["properties/list-for-sale (Deprecated)", "List properties for sale"], ["properties/v3/detail", "Get property detail information (include new Home Value feature)"], ["properties/v3/get-surroundings", "Get surroundings data around  a property"], ["properties/v2/list-similar-homes (Deprecated)", "List similar properties for sale\n* This endpoint is deprecating, the official have changed to use .../properties/v2/list.... endpoints to list similar properties."], ["properties/v3/get-photos", "Get photos of a property"], ["properties/detail (Deprecated)", "Get property detail information"], ["properties/v3/get-commute-time", "Get commute time to travel to a location"], ["mortgage/check-equity-rates", "Check mortgage equity rates"], ["schools/list-nearby (Deprecated)", "List schools that are near the property"], ["agents/list", "List agents with filters and options"], ["properties/v2/list-similar-rental-homes (Deprecated)", "List similar properties for rent\n* This endpoint is deprecating, the official have changed to use .../properties/v2/list.... endpoints to list similar properties."], ["properties/list-by-mls (Deprecated)", "List properties by MLS ID"]]}, "USPTO Trademark": {"tool_desc": "Instant trademark search.", "apis": [["v1/ownerSearch", "Does a search on **owner name** or **postcode** and returns details about the trademarks found for that owner. Duplicate owner results can be returned by this endpoint, especially when an owner had an address change.\n\nYou can use literal 'null' if you don't want to use a param. So you can either search just for a keyword or just for a postcode or together if you want to filter by both."], ["/v1/trademarkAvailable", "returns if the given keyword is available"], ["/v1/trademarkSearch", "Does a keyword search and returns trademark name, serial number,services code, status, owner, address, filing date and registration date."], ["/v1/serialSearch", "Does a serial number search and returns details about the trademark attributes."], ["/v1/databaseStatus", "Returns info about the freshness of the Trademark Search API database.\n\n`last_update_date` holds the date of the newest entry from USPTO filling entries that is synced to the API. \n\n`latest_trademark` array holds 10 random samples from the most recent confirmed registered trademarks, the `keyword`, the `registration_number` and the `registration_date` . Please note the date could be a few days back as not every day are published new registration of trademarks. They publish daily new partial filings and abandoned trademarks."]]}, "11BET": {"tool_desc": "11BET", "apis": [["11bet link", "11BET \u2b50\ufe0ftrang  Web c\u00e1 c\u01b0\u1ee3c th\u1ec3 thao, b\u00f3ng \u0111\u00e1 \u0111\u1ec9nh cao uy t\u00edn nh\u1ea5t Vi\u1ec7t Nam \u2b50\ufe0f C\u00f3 nh\u1eefng \u01b0u \u0111\u00e3i l\u1edbn cho ng\u01b0\u1eddi ch\u01a1i, Link truy c\u1eadp v\u00e0o nh\u00e0 c\u00e1i 11bet m\u1edbi nh\u1ea5t.\t\n#\u0111\u0103ng k\u00fd 11bet #n\u1ea1p ti\u1ec1n 11bet #t\u1ea3i \u1ee9ng d\u1ee5ng 11bet #r\u00fat ti\u1ec1n_11bet  #/m/033_l8  /m/033_l8 #Casino\n\u0110\u1ecba ch\u1ec9 : 43 L\u00fd Th\u00e1nh T\u00f4ng, An \u0110\u00e0o, \u0110a T\u1ed1n, Gia L\u00e2m, H\u00e0 N\u1ed9i, Vi\u1ec7t Nam\nHotline 0376202879\nGmail: 11betlink@gmail.com\t\nWebsite https://11bet.link/  \t\nhttps://11bet.link/dang-ky-11bet/  \t\nhttps://11bet.link/nap-tien-11bet/    \t\nhttps://11bet.link/rut-tien-11bet/\nhttps://11bet.link/tai-ung-dung-11bet/  \t\nhttps://sites.google.com/view/11betlink/11bet-di-dong-link-vao-nha-cai-11bet-tren-mobile \nhttps://sites.google.com/view/11betlink \nhttps://11betlink.blogspot.com/ \t\nhttps://en.wikipedia.org/wiki/Online_casino\nhttps://issuu.com/11betlink?\nhttps://profile.hatena.ne.jp/betlink11/\nhttps://www.liveinternet.ru/users/nhacaibetlink/profile\nhttps://www.openstreetmap.org/user/11betlink\nhttps://ok.ru/profile/589311685548\nhttps://linktr.ee/11betlink\nhttps://www.bark.com/en/gb/company/11betlink/gyvgQ/\nhttp://community.getvideostream.com/user/11betlink\nhttps://www.110designs.com/profile/28077-11betlink\nhttps://myspace.com/11betlink\nhttps://hub.docker.com/u/11betlink\nhttps://about.me/link11bet\nhttps://start.me/p/ADxp7n/11bet\nhttps://tawk.to/11betlink\nhttps://www.doyoubuzz.com/11bet-link\nhttps://www.reverbnation.com/11betlink\nhttps://note.com/11betlink/\nhttps://www.discogs.com/fr/user/11betlink\nhttps://fliphtml5.com/homepage/sfodp\nhttps://www.producthunt.com/@11bet_link\nhttps://gallery.autodesk.com/users/AMUJJ9W5QP6HQP8T?relProf=1\nhttps://support.wedesignthemes.com/users/11betlink/\nhttps://descubre.beqbe.com/p/-11betlink\nhttps://ko-fi.com/11betlink\nhttp://wpc.hotlog.ru/profile.php?user_id=423307"]]}, "Custom QR Code": {"tool_desc": "Design QR Code with custom colors for Background, Foreground, eyes and eyeballs.", "apis": [["Dynamic QR Codes", "Generate dynamic QR Codes with custom colors for Qr Code Background, Qr Code Body, eyes and eyeballs.  Choose designs for QR Body, QR eyes and eyeballs. Encode URL, TEXT, EMAIL, PHONE, SMS, VCARD, LOCATION, FACEBOOK, TWITTER, YOUTUBE, WIFI, EVENT, BITCOIN  in your QR Code."]]}}, "Science": {"Planets by API-Ninjas": {"tool_desc": "Get statistics on thousands of planets in the known universe.", "apis": [["/v1/planets", "Get a list of planets matching specified parameters. Returns at most 30 results. To access more than 30 results, use the offset parameter to offset results in multiple API calls."]]}, "Astronomy Picture of The day": {"tool_desc": "This api returns a stunning astronomical picture every day with explanation from professionals.", "apis": [["Picture Of The Day", "This Endpoint returns an astronomy image of the univers with caption and explanation from professionals."]]}, "Atmosphere nitrous oxide levels": {"tool_desc": "This API provides on a monthly basis, the amount of nitrous oxide in the atmosphere from 2001 to the present.", "apis": [["Nitrous endpoint", "The response will be an object with no CORS resources enabled."]]}, "CarbonSutra": {"tool_desc": "Carbon Emission Estimations for Organizations.", "apis": [["Cluster Data", "Emissions can be grouped into self-defined clusters and retrieved using those labels. This eliminates the need to store the results at developer's end. A key will need to be generated, which is then passed as a Bearer Token (within Authorization) in all calculations, so that the user can be identified and the results are securely delivered.\n\nUse the POST API of RegisterKey to obtain your API_KEY which will be used in all estimation calculations for which clustering is required. Your email address and a secret phrase (password) will be required to generate this key.\n\nThe POST API of RetrieveKey will give you the key again if it was misplaced, as long as the correct password is entered.\n\nNote that if clustering is not needed then you do not need API_KEY.\n\nThe GET API of ClusterData returns all the estimations that were calculated for a specific cluster_name."], ["Distance between Airports", "Returns the distance between two IATA airport codes in kilometers."], ["Airports by Keyword", "Returns the lists of airport names and IATA code which matches the keyword."], ["Nearest Airport from Postal Code", "This is an advanced algorithm which takes a postal code and country code as input and returns the nearest airport its lat-long value. It is important to note that the straight line distance between the lat-long of postal code and airport is measured. The returned value is in kilometers. The source of 1.5 million postal code data is taken as it is from https://public.opendatasoft.com/explore/dataset/geonames-postal-code/. For airports, the publicly available database of IATA codes and airport names is used."], ["Vehicles Models", "List of Vehicle Models for a Make. A list of every make and model used by this API is at https://www.carbonsutra.com/data-vehicle-make-model.html"], ["Vehicles Makes", "List of Vehicle Makes. A list of every make and model used by this API is at https://www.carbonsutra.com/data-vehicle-make-model.html"]]}, "Atmosphere methane concentration": {"tool_desc": "This API provides on a monthly basis, the amount of methane in the atmosphere from 1983 to the present.", "apis": [["Methane endpoint", "The response will be an object with no CORS resources enabled."]]}, "Astrologer": {"tool_desc": "Astrology made easy!", "apis": [["Now", "Gets astrological data for the current moment at UTC."]]}, "EveryEarthquake": {"tool_desc": "Get every earthquake and any other event that registers on the richter scale ever catalogued by the USGS, with very detailed location data.", "apis": [["Recent Earthquakes", "Get the 100 most recent earthquakes from all over in the world, from now to the date and time determined by the 'interval' property."], ["M1.0+ Earthquakes, Past Day", "Magnitude 1.0+ Earthquakes, Past Day"], ["All Earthquakes, Past 30 Days", "All Earthquakes, Past Thirty Days"], ["M1.0+ Earthquakes, Past 30 Days", "Magnitude 1.0+ Earthquakes, Past Thirty Days"], ["M2.5+ Earthquakes, Past 30 Days", "Magnitude 2.5+ Earthquakes, Past Thirty Days"], ["M4.5+ Earthquakes, Past 30 Days", "Magnitude 4.5+ Earthquakes, Past Thirty Days"], ["Significant Earthquakes, Past 30 Days", "Significant Earthquakes, Past Thirty Days"], ["All Earthquakes, Past 7 Days", "All Earthquakes, Past Seven Days"], ["M1.0+ Earthquakes, Past 7 Days", "Magnitude 1.0+ Earthquakes, Past Seven Days"], ["M2.5+ Earthquakes, Past 7 Days", "Magnitude 2.5+ Earthquakes, Past Seven Days"], ["M4.5+ Earthquakes, Past 7 Days", "Magnitude 4.5+ Earthquakes, Past Seven Days"], ["Significant Earthquakes, Past 7 Days", "Significant Earthquakes, Past Seven Days"], ["M4.5+ Earthquakes, Past Day", "Magnitude 4.5+ Earthquakes, Past Day"], ["M2.5+ Earthquakes, Past Day", "Magnitude 2.5+ Earthquakes, Past Day"], ["M1.0+ Earthquakes, Past Hour", "Magnitude 1.0+ Earthquakes, Past Hour"], ["M2.5+ Earthquakes, Past Hour", "Magnitude 2.5+ Earthquakes, Past Hour"], ["M4.5+ Earthquakes, Past Hour", "Magnitude 4.5+ Earthquakes, Past Hour"], ["API Test", "Simple call to determine if the API is available and responding."], ["Earthquakes By Date", "Get the 100 most recent earthquakes from all over in the world, within a specified date range."], ["Types", "Return all types of events ever recorded by the USGS, such as earthquakes, explosions, landslides and many more."], ["Earthquakes", "Get the 100 most recent earthquakes from all over in the world. No parameters required."], ["Latest Earthquake Near Me", "Call this endpoint with your latitude and longitude and you'll receive a simple return for the most recent earthquake, within 100 miles, of the lat/long coordinates provided."]]}, "Materials Platform for Data Science": {"tool_desc": "Curated data for materials science, thermodynamics, metallurgy, semiconductors, nanotechnology, solid state physics, crystallography, etc.", "apis": [["MPDS", "Retrieve materials data, see www.mpds.io"]]}, "Stars by API-Ninjas": {"tool_desc": "Get key statistics for thousands of stars discovered in the known universe.", "apis": [["/v1/stars", "Get a list of stars matching specified parameters. Returns at most 30 results. To access more than 30 results, use the offset parameter to offset results in multiple API calls."]]}, "manatee jokes": {"tool_desc": "A CORS-enabled collection of manatee jokes", "apis": [["random", "retrieves a random manatee joke"], ["get by id", "gets a specific joke by id"], ["find all", "retrieves all available jokes"]]}, "Beekeeping Research": {"tool_desc": "Temperature, Humidity and Weight sensor readings from thousands of honeybee hives around the world.", "apis": [["Basic endpoint", "See full docs on https://research.docs.beekeeping.io"]]}, "Daily Knowledge": {"tool_desc": "Getting a daily information of knowledge for specific project.", "apis": [["/sustainable-development-goals-en.json", "The UN global goals for sustainable development."], ["/wcag-en.json", "Success criteria to fulfill WCAG."], ["/countries-en.json", "Capitals, currencies, flags and more."], ["/plants-de.json", "H\u00e4ufige Pflanzenarten in Europa."], ["/untools-en.json", "Thinking tools to help you solve problems, make decisions and understand systems."], ["/chemical-elements-en.json", "Periodic table of elements."], ["/logical-fallacies-en.json", "Learn to identify flaws in reasoning."]]}, "crossref": {"tool_desc": "Crossref makes research outputs easy to find, cite, link, assess, and reuse.", "apis": [["DOI", "Information of a article with specified doi."], ["Search", "Let\u2019s look at some of the results"], ["RecordCount", "How many records do we have?"]]}, "CarbonFootprint": {"tool_desc": "Calculate the carbon footprint in various situations, such as travel and hydro usage.", "apis": [["AirQualityHealthIndex", "Return the official air quality health index (1 to 10) bases on key parameters.The national AQHI is based on three-hour average concentrations of ground-level ozone (O3), nitrogen dioxide (NO2), and fine particulate matter (PM2.5). O3 and NO2 are measured in parts per billion (ppb) while PM2.5 is \t measured in micrograms per cubic metre (ug/m3)"], ["TreeEquivalent", "Calculate how many trees it took to create paper."], ["TraditionalHydroToCarbonFootprint", "Calculate CO2e from the use of traditional hydro provider"], ["CleanHydroToCarbonFootprint", "Return the CO2e in Kg from the consumption of clean hydro energy"], ["FuelToCO2e", "Transform liters of Diesel, Petrol or LPG into CO2 Equivalent in Kg."], ["CarbonFootprintFromCarTravel", "Returns the CO2e in Kg from a travel by car"], ["CarbonFootprintFromFlight", "Calculate CO2e in Kg from a travel by air."], ["CarbonFootprintFromMotorBike", "Returns the CO2e in Kg from a motorbike travel"], ["CarbonFootprintFromPublicTransit", "Return CO2e in Kg from the use of public transporation."]]}, "Daily atmosphere  carbon dioxide concentration": {"tool_desc": "This API provides on a quasi-daily basis, the amount of carbon dioxide (CO2) in the atmosphere from 2010.01.01 to the present.", "apis": [["Carbon dioxide endpoint", "The response will be an object with no CORS resources enabled."]]}, "Al-Quran": {"tool_desc": "Quickly retrieve original Arabic text, translation, transliteration and Word Search from the Koran /Quran", "apis": [["Get range of verses", "Responds with a collection of *Ayahs/Verses* in a specific *Chapter/Surah* along with original Arabic text, translation, transliteration and verse ID in JSON"], ["Get base information", "Responds with JSON including some properties of the Quran. *(deprecated)*"], ["Get entire Surah/Chapter", "Possible values: ***1-114*** \nResponds with entire Surah/Chapter of the Koran including all verses in the Surah and some additional information."], ["Get specific Ayah/Verse", "Responds with a specific *Ayah/Verse* in a specific *Chapter/Surah* along with original Arabic text, translation, transliteration and verse ID in JSON"], ["Search for a word in Quran", "Looks for a given keyword (English) in ***translation_eng*** key in the entire Koran and responds with all the verses containing the given keyword and toal matches in JSON"]]}, "teste": {"tool_desc": "teste", "apis": [["getInventory", "Returns a map of status codes to quantities"], ["getPetById", "Returns a single pet"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions"]]}, "Yawin Indian Astrology": {"tool_desc": "Indian astrology API for planet positions, ascension calculations, and prediction findings, Basic tools that help in astrological calculations", "apis": [["Birth Details", "Get Basic astrological details from the birth date and birth time"], ["Get Tamil Calendar Date", "Find the Tamil calendar date from the given English calendar date"], ["Convert Planet Degree to  Planet Angle", "Convert a Planet Degree to  Angle Format . (Degree is 67.5666666667, converted to Angle as 67.34.0)"], ["Convert Planet Angle  to Planet Degree", "Convert a Planet Angle to  Degree Format . (Angle is 67.34.0, converted to Degree as 67.5666666667)"], ["Get Sun Rise and Sun Set Time", "Find the Sun Rise and Sun Set Time on a day with timezone"], ["Get Planet Position Angles", "Find the Planet position angles on a birth date and time"]]}, "Astronomy": {"tool_desc": "A data retrieval interface for the skies...", "apis": [["Search", "Search endpoint can be used to get information for stars and deep space objects."], ["Get positions for body", "Returns properties of the given body for the given date range in tabular format.\n\nSupported bodies are \"sun\" ,\"moon\", \"mercury\", \"venus\", \"earth\", \"mars\", \"jupiter\", \"saturn\", \"uranus\", \"neptune\", \"pluto\""], ["Get all bodies positions", "Returns a iterable list of bodies and their properties in tabular format."]]}, "dna2protein": {"tool_desc": "A set of simple end-points to convert DNA and mRNA sequences to amino-acids", "apis": [["DNA2mRNA", "This end-point converts a DNA sequence into an mRNA sequence."], ["DNA2AminoAcid", "Transform a DNA sequence into a sequence of Amino Acids"], ["mRNA2AminoAcid", "Transform an mRNA sequence into a sequence of Amino Acids."], ["mRNA2DNA", "This endpoint transforms an mRNA sequence to its DNA sequence equivalent."]]}}, "Sports": {"OS Sports Perform": {"tool_desc": "OS Sports Perform has everything, from simple live scores to deep statistics and detailed player analysis.", "apis": [["Daily unique tournaments", "Get daily unique tournaments by date and sport"], ["Category list", "Get a list of categories"], ["Tournament events", "Get events of the tournament"], ["Player heatmap", "Get player heatmap by event_id"], ["Player statistics", "Get player statistics. Use `regularSeason` - for hockey"], ["Games (esports)", "Get games (esports) by event_id"], ["Player statistics seasons", "Get seasons of the player"], ["Events Player statistics", "Get player statistics by event_id"], ["Attribute overviews", "Get player attribute overviews"], ["Player events", "Get events by player ID"], ["Streaks", "Get team streaks by event_id"], ["Odds all", "Get all odds by event_id. You can convert them to decimals. `provider_id`: 1 - Bet365, 100 - betano, 101 - bilyoner"], ["Lineups (esports)", "Get games (esports) by event_id"], ["Goal distributions", "Get goal distributions by team ID, unique tournament ID, season ID"], ["Player latest media", "Get player's latest media by player_id"], ["Heatmap", "Get heatmap player by event_id and team_id"], ["Transfer history", "Get player transfer history"], ["Rounds (esports)", "Get rounds (esports) by event_id"], ["Incidents", "Get incidents by event_id"], ["Player Heatmap", "Get a player's heatmap"], ["Player characteristics", "Get player characteristics by player ID"], ["Event managers", "Get team managers by event_id"], ["Predict", "Get predict by event_id"], ["Last ratings", "Get the latest player rating"], ["Point by point", "Get point by point data by event_id. (tennis)"], ["Form", "Get pregame team form by event_id"], ["Team near events", "Get team near events by team ID"], ["Search transfers", "Search transfers by parameters"], ["Races (motorsport)", "Get races by team ID (motorsport)"], ["Player photo", "Get player photo by player ID"], ["Odds winning", "Get winning odds by event_id. You can convert them to decimals."], ["Graph points", "Get graph points by event_id"], ["Team shirts", "Get team shirts by event_id"], ["Seasons for team statistics", "Get seasons for team statistics by team ID"], ["Team Latest media", "Get latest media by team ID. Ex. Full Highlights"], ["Team rankings", "Get team rankings by team ID"], ["Career history (motorsport)", "Get team career history (motorsport)"], ["Teams Player statistics", "Get overall player statistics by team ID, unique tournament ID, season ID"], ["Statistics overall", "Get team overall statistics by team ID, unique tournament ID, season ID"], ["Shotmap", "Get shotmap by event_id"], ["Players of team", "Get players of team by team ID"], ["Transfers of team", "Get transfers of team by team ID"], ["Team recent form", "Get team recent form by team ID"], ["Team logo", "Get team logo by team ID"], ["Current team tournaments", "Get current team tournaments by team ID"], ["National team statistics", "Get player's stats by national teams"], ["Innings (cricket)", "Get innings (cricket) by event_id"], ["Country channels (stage)", "Get tv country channels (stage) by stage_id"], ["Tweets", "Get tweets by event_id"], ["Media", "Get media by event_id"], ["H2H events", "Get h2h events by custom_event_id"], ["Schedule live", "Get live events schedule"], ["Sub events", "Get sub events by event_id"], ["Schedule odds", "Get events schedule odds by date"], ["Categories", "Get actual categories by date and sport"], ["Team events", "Get events by team ID"], ["Lineups", "Get lineups by event_id"], ["Statistics", "Get statistics by event_id"], ["Manager data", "Get manager data by manager ID"], ["Events", "Get events of the season"], ["Sports Number live events", "Get number of live events in the sports"], ["Seasons standings", "Get seasons of the standings by team ID"], ["Unique stages list (motorsport)", "Get list of the unique stages by category_id (motorsport)"], ["Ranking current", "Get the current rating"], ["Multi search", "Multi search. Search by teams, referees, managers, players, tournaments"], ["Referee statistics", "Get referee statistics by referee ID"], ["Manager photo", "Get manager photo by manager ID"], ["Sport list", "Get a list of sports"], ["Suggest", "Suggest search. Search Suggest automatically recommends popular searches as you type your query into the search field"], ["Ranking by season", "Get the current by season"], ["Referee data", "Get referee data by referee ID"], ["Team-week rounds", "Get team-week rounds of the season"], ["Channels list", "Get a list of channels by country"], ["Team-week players", "Get team-week players of the season"], ["Manager events", "Get events of the manager"], ["Teams statistics", "Get teams statistics of the season"], ["Country channels", "Get tv country channels by event_id"], ["Standings", "Get standings of the season"], ["Team events", "Get team event of the season"], ["Standing competitor (motorsport)", "Get standing competitor by stage_id (motorsport)"], ["Manager career-history", "Get the manager's career history"], ["Stage logo (motorsport)", "Get stage logo by stage_id (motorsport)"], ["Rounds", "Get rounds of the season"], ["Unique seasons list (motorsport)", "Get list of the unique stages by category_id (motorsport)"], ["Season data", "Get data about the season"], ["Substages (motorsport)", "Get substages by stage_id (motorsport)"], ["Tournament data", "Get tournament data by tournament id"], ["Unique tournaments list", "Get a list of unique tournaments by category id"], ["Channels data (stage)", "Get channels data (stage)"], ["Players statistics", "Get players statistics of the season"], ["Stage data (motorsport)", "Get stage data by stage_id (motorsport)"], ["Unique tournament seasons", "Get seasons of the unique tournament"], ["Unique tournaments top list", "Get a top list of unique tournaments by category id"], ["Cup trees", "Get cup trees data"], ["Unique stage logo (motorsport)", "Get unique stage logo by unique_stage_id (motorsport)"], ["Unique tournament logo", "Get unique tournament logo by unique tournament id"], ["Latest media", "Get media of the unique tournament"], ["Tournaments list", "Get a list of tournaments by category id"], ["Tournament seasons", "Get seasons of the tournament"], ["Tournament info", "Get tournament info by tournament id"], ["Standing teams (motorsport)", "Get standing teams by stage_id (motorsport)"], ["Featured events", "Get featured events of the unique tournament"], ["Number live events", "Get number of live events in the category by sport ID"], ["Unique tournament data", "Get unique tournament data by unique tournament id"], ["Schedule by category", "Get event schedule by category and date"], ["Bans (esports)", "Get bans (esports) by event_id"], ["News feed", "Get news feed of the team"], ["Fan rating", "Get fan rating by event_id"], ["Best players", "Get best players by event_id"], ["Seasons for player statistics", "Get seasons for player statistics by team ID"], ["H2H stats", "Get H2H stats by event_id"], ["Team data", "Get team data by team ID"], ["Stage seasons (motorsport)", "Get team stage seasons (motorsport)"], ["Statistics (esports)", "Get statistics (esports) by event_id"], ["Recent unique tournaments", "Get recent unique tournaments by team ID"], ["Popular events", "Get today's popular events"], ["Event data", "Get event data by event_id"], ["Player data", "Get player data by player ID"], ["Last year summary", "Get last year summary of the player"], ["Schedule by date", "Get event schedule by date"], ["Referee events", "Get events by referee ID"]]}, "Ultimate Tennis": {"tool_desc": "Welcome to the Ultimate Tennis API!", "apis": [["Player Info By ID", "This endpoint provides YTD and Career details for a selected player. You can obtain the Player ID from the WTA Rankings endpoint."], ["Player Stats by ID and Year", "Via this endpoint you can retrieve official updated statistics for a given WTA player. Values are updated after every played match. ID can be retrieved from the Official WTA Players Rankings endpoint."], ["Official WTA Players Rankings", "This endpoint allows you to retrieve the rankings(**singles**+ **doubles**) of the current tennis season. You can arbitrarily decide the number of players displayed (nplayers) and the time window to refer to (timestamp).\n\nFor example, if nplayers = 10,  category= \"singles\" and timestamp = 2022-04-11 you will receive the top 10 singles standings at the corresponding timestamp (**IMPORTANT**: The timestamp must be in the following format **YYYY-MM-DD** )"], ["Tournament Results by ID and Year WTA", "Via this endpoint, you can retrieve all the matches played in the selected tournament, in a given year. The results are added instantly for every match that ends. You can Retrieve the list of the IDs from the tournament list WTA endpoint."], ["Tournament List WTA", "Via this endpoint, you can retrieve the list of all tournaments to be played in a selected year (from *1960* to *2022*).  We return some basic info about every row such as tournament venue, surface, prizemoney, etc. Results by Id and Year** endpoint"], ["Official ATP Players Rankings", "This endpoint allows you to retrieve the rankings(**singles**+ **doubles**) of the current tennis season. You can arbitrarily decide the number of players displayed (nplayers) and the time window to refer to (timestamp).\n\nFor example, if nplayers = 10,  category= \"singles\" and timestamp = 2022-04-11 you will receive the top 10 singles standings at the corresponding timestamp (**IMPORTANT**: The timestamp must be in the following format **YYYY-MM-DD** and the date **must fall on Monday** since the rankings are updated at the start of every week)"], ["Tournament List", "Via this endpoint, you can retrieve the list of all tournaments to be played in a selected year.  We return some basic info about every row such as tournament venue, surface, winners, etc. If you want to have all the details regarding the matches played in a single tournament you can use the **Tournament Results by Id and Year** endpoint"], ["ATP Player Stats by ID", "Via this endpoint you can retrieve official updated statistics for a given ATPplayer. Values are updated after every played match. ID can be retrieved from the Official ATP Players Rankings endpoint."], ["Live Matches Stats", "You can retrieve all te details related to a single match such as Aces, Break points, First Serve %, first serve returns, second serves, ecc.."], ["Live Scores with Live Betting Odds", "This endpoint provides info about all the live matches from ATP + WTA. It includes live and prematch odds."], ["Global Players Statistics", "This endpoint allows you to retrieve global statistics about tennis players. You can customize the statistic (aces, breakpoints converted, 1st serve points won...), the season (all, 2022, 2021...), or the surface(clay, hard, grass).\nYou can find the list of available options under every parameter."], ["Live Players Rankings", "With this endpoint, you can retrieve info about the live tennis rankings for a given number of players, with position/points/info about the last match played in the current active tournament. Please note that in the ATP circuit the official leaderboard is updated every Monday."], ["Tournament Results by ID and Year", "Via this endpoint, you can retrieve all the matches played in the selected tournament, in a given year. The results are added instantly for every match that ends. You can Retrieve the list of the IDs from the tournament_list endpoint."], ["Player Ranking History by ID", "You can access all the history of the rankings for a selected player. ID **must** be provided, you can retrieve a player ID from the Players Rankings endpoint."], ["Player Details by ID", "This endpoint allows you to retrieve specific details about a single player. ID **must** be provided, you can retrieve a player ID from the Players Rankings endpoint."]]}, "Zeus API": {"tool_desc": "This API returns information on the 5 major European football leagues.", "apis": [["Competitions Matches", "List the current matches for a league \ud83c\udd9a."], ["Competitions Standings", "List the current standings for a league \ud83d\udd1d."], ["Competitions Scorers", "List the current scorers for a league \u26bd."], ["Competitions ID", "List one competition given by id \ud83d\udd0d."], ["Competitions", "List all available competitions \ud83c\udfc6."], ["Areas ID", "List one area given by id \ud83d\udd0d."], ["Areas", "List all available areas \ud83c\udf0d."]]}, "Spectation Sports Events API": {"tool_desc": "View upcoming events, fighters, fights and more from Spectation Sports.", "apis": [["Fighter", "Get a single fighter by ID"], ["Fighters", "Get a list of fighters"], ["Fight", "Get a single fight by ID"], ["Fights", "Fetch fights for upcoming/previous events"], ["Event", "Get a single event by ID"]]}, "Betigolo Tips": {"tool_desc": "Historical results here: https://www.betigolo.com/tips_premium.php\n\nThe Betigolo Tips API is a powerful tool that provides EV+ tips for football matches, based on machine Learning algorithms predictions to helping users make informed decisions about their bets.", "apis": [["Premium Tips", "List of active Premium Tips"], ["Premium History", "Historical result of Premium Tips in past 30 days"]]}, "F1 Latest News": {"tool_desc": "This API scrapes the most recent F1 news articles from, the official F1 website, Sky F1, BBC F1, WTF1, and Autosport.", "apis": [["News from individual source", "With this endpoint you can specify the source of the articles you wish to get\n/news/f1 for example, or any of the other 4: skyf1, BBCF1, WTF1, autosport."], ["GET recent F1 news from all sources", "This endpoint returns back recent articles from all sources"]]}, "Soccerway Feed": {"tool_desc": "Soccerway covers over 1000 football leagues & cups from 134+ countries.", "apis": [["Match list", "Get list of the match by date. Status: Played, Playing, Fixture, Cancelled"], ["Match data", "Get match data by match uuid. Ex.: season, competition, area, form, h2h, table, lineup, commentaries, teams stats"], ["Match list alt", "Get list of the match by date. Status: Played, Playing, Fixture, Cancelled"], ["Search multi", "Search team, player by query"], ["Explore competitions", "Get a list of competitions by area_id"], ["Explore areas", "Get a list of areas"], ["Team Squad statistics", "Get Team Squad statistics"], ["Area flag", "Get area flag by area_uid"], ["Player data", "Get player data. Ex.: clubs career, internationals career"], ["Team Data", "Get team data. Squad, staff, tables, matches, rankings"]]}, "Formula 1 Standings": {"tool_desc": "F1 Constructor and Drivers Standings.", "apis": [["Races", "It will return the current season races with basic information."], ["Constructor Standings", "Get the current season constructor standings."], ["Driver Standings", "Will return the current F1 season driver standings."]]}, "TransferMarket": {"tool_desc": "This API helps to query for transfer news, latest or record transfers, rumors, player market value, etc...", "apis": [["competitions/get-table", "Get table by competition and season"], ["players/get-header-info", "Get header information of player on the top of page"], ["referees/get-profile", "Get profile of specific referee"], ["news/list-by-competition", "List latest news relating to specific competition or league"], ["matches/get-game-information", "Get game information of specific match"], ["matches/get-stats", "Get stats of specific match"], ["matches/list-by-club", "List matches by specific club"], ["matches/list-by-game-plan", "List matches by game plan"], ["statistic/list-uefa-5year-rankings", "List UEFA 5-year rankings"], ["competitions/get-header-info", "Get brief description of specific competition"], ["competitions/list-seasons", "List passed seasons of specific competition"], ["competitions/list-champions", "List champions of competition through years"], ["staffs/get-profile", "Get profile of specific staff"], ["players/get-performance", "Get players performance of specific club"], ["players/get-performance-summary", "Get player performance summary or by specific season"], ["players/get-market-value", "Get player's market value"], ["clubs/get-squad", "Get squad of club"], ["clubs/get-profile", "Get profile of club"], ["clubs/get-short-info", "Get short information of one or more clubs"], ["search", "Search for relating players, clubs, competitions, etc... by familiar term or phrase"], ["players/detail (Deprecated)", "Get detail information of player\n* Use .../players/get-header-info endpoint instead"], ["players/get-achievements", "Get achievements of a player"], ["players/get-short-info", "Get short information of one or more players"], ["players/get-transfer-history", "Get transfer history of a player"], ["players/get-performance-detail", "Get player performance detail by specific season and competition"], ["news/detail", "Get detail of specific news"], ["news/list-by-player", "List latest news relating to specific player"], ["news/list-by-club", "List latest news relating to specific club"], ["matches/get-live-table", "Get live table relating to specific match"], ["matches/get-result", "Get result of specific match"], ["matches/get-events", "Get events of specific match"], ["matches/get-highlights", "Get highlights of specific match"], ["matches/get-live-ticker", "Get live ticker of specific match"], ["matches/get-line-ups", "Get line ups of specific match"], ["matches/get-club-comparison", "Get club comparison of specific match"], ["matches/list-by-date", "List matches by specific date"], ["statistic/list-fifa-world-rankings", "List FIFA world rankings"], ["statistic/list-best-fifa-players", "List best FIFA players"], ["statistic/list-most-valuable-competitions", "List most valuable competitions"], ["statistic/list-most-valuable-team", "List most valuable team"], ["statistic/list-most-valuable-clubs", "List most valuable clubs"], ["transfers/list-rumors", "List transfer rumors along with players info, and estimated market value"], ["transfers/list-by-club", "List transfers relating to specific club"], ["transfers/list-market-value", "List players info, and estimated market value"], ["transfers/list-records", "List records transfers information along with player info, and trade value"], ["transfers/list", "List transfers information along with player info, and market value"], ["competitions/get-game-plan", "Get game plan by competition and season"], ["competitions/get-short-info", "Get short information of one or more competitions"], ["staffs/get-short-info", "Get short information of one or more staffs"], ["staffs/list-by-competition", "List staffs relating to specific competition or league"], ["staffs/list-by-club", "List staffs of specific club"], ["clubs/get-header-info", "Get header info of club"], ["clubs/list-by-competition", "List clubs in specific competition"], ["competitions/list-default", "List most popular competitions"]]}, "Baseball - DataFeeds by Rolling Insights": {"tool_desc": "Real-time Play by Play, Season Schedule, Weekly Schedules, Daily Schedules, Team Information, Team Stats, Player Information, Player Stats, Injuries and Depth Charts for the MLB.", "apis": [["Season Schedule", "Returns season schedule for the specified season. If omitted, returns the schedule for current season."], ["Team Depth Charts", "Returns player depth charts for a team"], ["Player Injuries", "Returns a record of each player's injury on a team"], ["Player Season Statistics", "Returns Player Season Statistics"], ["Team Season Statistics", "Returns statistics for teams"], ["Live Game Data", "This endpoint provides real-time game box scores."], ["Daily Schedule", "Returns season schedule for the specified date or \"now\" returns current day's schedule. Daily schedule is changed at 10 AM ET."], ["Weekly Schedule", "Returns all events from the date specified plus 7 days in advance"], ["Player Information", "This endpoint returns player demographic information"], ["Team Information", "This endpoint returns team information"]]}, "WOSTI-Futbol TV Spain": {"tool_desc": "Gu\u00eda de partidos de f\u00fatbol televisados en Espa\u00f1a.", "apis": [["GetTeams", "Obtener el listado de equipos de f\u00fatbol televisados en Espa\u00f1a."], ["GetCompetitionsId", "Obtener competici\u00f3n por identificador \u00fanico del listado de competiciones de partidos de f\u00fatbol televisados en Espa\u00f1a.\n\n> Este endpoints requiere de un par\u00e1metro denominado Id."], ["GetEventsId", "Obtener el evento por identificador \u00fanico  del listado de eventos de partidos de f\u00fatbol televisados en Espa\u00f1a.\n\n> Este endpoints requiere de un par\u00e1metro denominado Id."], ["GetEvents", "Obtener el listado de eventos de partidos de f\u00fatbol televisados en Espa\u00f1a.\n\n> Este endpoints no requiere de ning\u00fan par\u00e1metro."], ["GetCompetitions", "Obtener el listado de competiciones de partidos de f\u00fatbol televisados en Espa\u00f1a.\n\n> Este endpoints no requiere de ning\u00fan par\u00e1metro."]]}, "ViperScore": {"tool_desc": "ViperScore is the cheapest sports API for all hobby and business projects with over 25 endpoints, 20+ sports and 5100+ leagues!", "apis": [["Get scheduled games by country", "With \"Get scheduled games by country\" you'll receive all games which a scheduled for a specific country and date."], ["Get All Season Games", "This returns all games for a competition season. Please note that this only includes scheduled games. For example the NFL Super Bowl event is not included at the start of the season."], ["Get Team Logo", "Returns the logo of the team as a png"], ["Get All Games For Round (if round-based)", "Get all games for a Round if the competition is round-based. You get all rounds from the competition ."], ["Get Rounds (if exist)", "Get all rounds for a season for a round-based competition"], ["Get team transfers", "Here you'll get all in and outgoing transfers"], ["Get team details", "You'll get all details to a specific team by its id."], ["Search competition", "Search for any competition"], ["Search Team", "Search for any team"], ["Search player", "Search for any player"], ["Search manager", "Search for any manager"], ["Get players last ratings", "Get the last game ratings of a player."], ["Get player attributes", "Isn't it interesting how a player performs?"], ["Get player details", "Get more information about a playerId"], ["Get next games", "This will return the next games. Please keep in mind that -1 means that no score or winner has been there because the game didn't started."], ["Get last games", "With that call you'll receive the last games in a multipage request"], ["Get latest highlights", "This will return the latest video highlights of the competition."], ["Get best players in playoffs (if exist)", "Works the same like regular season just for the playoffs."], ["Get best players in regular seasons", "If you e.g. call this for Premier League you only have regular season!\nThis call will return a list with the best players in this season.\nThis call loads a bunch of data, please remind that in loading times."], ["Get standings", "Get competition standings by season"], ["Get competition seasons", "Here you'll also find historic data from the last seasons"], ["Get competition details", "Find out more about your competition by just providing the competition id."], ["Get game highlights", "Want to use the highlight video after a match? Here you get all information you need"], ["Get managers", "You want to know who's behind the teams at this game? Here you go!"], ["Get game statistics", "You are a statistics freak? We too! Here you can check all statistics!"], ["Get game lineup", "With \"Get game lineup\" you'll receive the full lineup and if it is confirmed or a forecast"], ["Get best player", "\"Get best player\" will return the best player of each team with their rating."], ["Get pregame form", "If you're a detail hunter this is the place for you! Get the information about the last games both teams accomplished."], ["Get game details", "With \"Get game details\" you'll get the basic information about the game you were looking for."], ["Get scheduled games", "With \"Get scheduled games\" you'll receive all games which a scheduled for a specific date."], ["Get live games", "With \"Get live games\" you'll receive a full list of all live games with their current status and score."], ["Get countries by sport", "With \"Get countries by sport\" you'll receive all countries with specific sport ids which ever supports the sport you've searched."], ["Get number of games today", "With \"Get number of games today\" you'll receive all sports we support, how many games are today and how many of them are live."], ["Get all competitions", "With \"Get all competitions\" you'll receive a list with top competitions (like NFL, Premier League, ...) and all competitions from every sport."]]}, "Tank01 NFL Live In-Game Real Time Statistics NFL": {"tool_desc": "NFL Live, In-Game Fantasy Stats - NFL (National Football League).", "apis": [["Get NFL Team Schedule", "This call returns the schedule of any team, using the teamID that can be found in \"getNFLTeams\" call.\n\nCall needs to look like this:\n/getNFLTeamSchedule?teamID=1\nYou can also use the team Abbreviation:\n/getNFLTeamSchedule?teamAbv=CHI   \n\nThat will return a list of the team's games in the body. \n\nTo get a list of appropriate team abbreviations, use the getNFLTeams call.\n\nYou can also add the \"season\" parameter if you want to specify season.  Good for seasons 2022 and 2023."], ["Get NFL Games and Stats For a Single Player", "This call will grab a map of all of the games a player has played this season.   \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \n\nExample:\nCorrect way to get the stats for Justin Fields for his game against Detroit on 11/13/2022 would be this:\n/getNFLGamesForPlayer?playerID=4362887&gameID=20221113_DET@CHI\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getNFLGamesForPlayer?playerID=4362887\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getNFLBoxScore call with that specific gameID.\n\nYou can choose which season you pull games from with parameter: season .   \nNFL Season that runs from 2022-2023 is season 2022.  And so on.\nIf you call without season parameter then it will pull back current season's games.\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for."], ["Get NFL Team Roster", "This call returns the current or historical* roster of any team, using the teamID that can be found in \"getNFLTeams\" call.\n\nRosters are updated a few times throughout the day.  Usually every hour.  \n \nHistorical rosters are saved on a daily basis as of 20230505 and moving forward. \n\nCall needs to look like this:\n/getNFLTeamRoster?teamID=6\nor\n/getNFLTeamRoster?teamAbv=CHI\n\nThat will return a list of the team's current roster players in the body.\n\nAdd parameter archiveDate to the call to get a list of roster players (playerID's only) for that specific date.  Historical roster dates only are kept as far back as 20230505."], ["Get NFL Teams", "This call will retrieve the list of NFL teams. Included is their name, city, abbreviation, and teamID which can be used in other calls.  Their current record and current W/L streak is included as well. Optional data that can be included are the team rosters and their schedules.      \n\nIncluded in team rosters is all players injuries. \n/getNFLTeams\n\nOptional parameters are ?schedules=true    or    ?rosters=true"], ["Get NFL Betting Odds", "This grabs NFL betting/gambling lines and odds from some of the most popular online sportsbooks (fanduel, betrivers, betmgm, caesars, pointsbet, etc). \n\nYou can call this for specific game or a specific date.  Check out the example responses here for the type of data you can expect back.   Some of the sportsbooks do not offer live betting, so data from those sportsbooks will not be returned after the game starts.  \n\nEither gameDate or gameID is required.\nExamples of what the calls can look like:\n/getNFLBettingOdds?gameDate=20230101\n/getNFLBettingOdds?gameID=20230101_CHI@DET"], ["Get Player Information", "Call this to get general information on each player (name, team, experience, birthday, college, etc).\n\nYou can call with their playerID, if you know it.  playerID calls will always be quicker as it acts on the key of the table.  \n\nYou can also call with playerName.  This call will return a list of players who have that name.  If you want to include spaces in the search name, then use underscore.  So if you want to find Justin Fields, you can use \"Justin_fields\" and it will bring him back.  Or try with playerName=justin and it will return a list of guys with justin in their name.\n\n/getNFLPlayerInfo?playerID=4374033\n\n/getNFLPlayerInfo?playerName=justin_fields\n\netc"], ["Get Player List", "Grabs all of this season's players and their IDs.  \n\nONE CALL is all you need to retrieve every player.  No need to call multiple times to get the full list.\n\nRosters are updated multiple times per day during the season.\n\nYou mainly will use this to match a player with his playerID.\n\nThere are no parameters, just a simple call..\n\n/getNFLPlayerList"], ["Get Daily NFL Schedule", "Get basic information on which games are being played during a day.  \ncall is like this:\n/getNFLGamesForDate?gameDate=20221211\nThe above call will return all of the games from December 11th, 2022.  Date must be in that format.  \nThey come back in a list format within the body of the response."], ["Get General Game Information", "This call pulls back the most general information for a game: away team, home team, game date, and game start time.  All times are in Eastern (ET) time zone.  \ngameID is needed.  You can retrieve gameID from a few different calls.  The \"getNFLGamesForDate\" call or the \"getNFLTeamSchedule\" call will be the best ways to get the gameID's.   \n\nCall should look like this: \n/getNFLGameInfo?gameID=20221212_NE@ARI"], ["Get NFL Game Box Score - Live Real Time", "Retrieves the entire box score for a game either in progress or already completed for the current season.  The stats retrieved here are what are normally shown in box scores or used in fantasy games.  If there are any stats here that you'd like to see, please message me.  \n\nThe call looks like this /getNFLBoxScore?gameID=20221212_NE@ARI\n\nThe call needs to be exactly in the same format as above.  8 digit date, underscore, then the away team abbreviation, @, then home team abbreviation.  Complete list of team abbreviations can be retrieved with the getNFLTeams call or various other calls.  \n\nBut, the best way to find specific game ID's are either from the \"getNFLGamesForDate\" call, or the \"getNFLTeamSchedule\" call."], ["Get Daily Scoreboard - Live - Real Time", "This call will pull game scores and no other stats.  \n/getNFLScoresOnly\nCall it with no parameters, it will return the current date's game list with their scores.  \n\nYou can use both gameID and gameDate for parameters.  gameID will give you only the scores for one specific game.  gameDate will give you the scores for every game on that date.  \n\nExample, to get all games for December 11, 2022\n/getNFLScoresOnly?gameDate=20221211\nor you can use this call to get just one specific game \n/getNFLScoresOnly?gameID=20221211_NYJ@BUF\nor call with no parameters for the games for 'current processing day'."]]}, "WOSTI-Futbol TV Peru": {"tool_desc": "Gu\u00eda de partidos de f\u00fatbol televisados en Per\u00fa.", "apis": [["GetTeams", "Obtener el listado de equipos de f\u00fatbol televisados en Per\u00fa."], ["GetCompetitions", "Obtener el listado de competiciones de partidos de f\u00fatbol televisados en Per\u00fa.\n\n> Este endpoints no requiere de ning\u00fan par\u00e1metro."], ["GetEvents", "Obtener el listado de eventos de partidos de f\u00fatbol televisados en Per\u00fa.\n\n> Este endpoints no requiere de ning\u00fan par\u00e1metro."], ["GetEventsId", "Obtener el evento por identificador \u00fanico  del listado de eventos de partidos de f\u00fatbol televisados en Per\u00fa.\n\n> Este endpoints requiere de un par\u00e1metro denominado Id."], ["GetCompetitionsId", "Obtener competici\u00f3n por identificador \u00fanico del listado de competiciones de partidos de f\u00fatbol televisados en Per\u00fa.\n\n> Este endpoints requiere de un par\u00e1metro denominado Id."]]}, "BetsAPI": {"tool_desc": "bet365 events/scores/stats/odds", "apis": [["Bet365 InPlay Event", "inplay event with all scores/stats/markets"], ["Bet365 Result", "to view bet365 event result"]]}, "Betcity": {"tool_desc": "Games and pre-game Odds for Betcity", "apis": [["Odds", "Latest Odds by Betcity"], ["Matches", "Latest matches by Betcity"]]}, "\u26bd Football Live Score \ud83d\udd25": {"tool_desc": "Live Football Scores, Fixtures & Results", "apis": [["Live score", "Get live football score & history"]]}, "Morpheus Predictions ": {"tool_desc": "Morpheus Soccer Predictions (Beta)", "apis": [["Best Sign 2", "Today's best 2 sign"], ["Best Sign 1", "Today's best 1 sign"], ["Best Quote", "The best predictions with good odds"], ["TopOver25", "Today top Over 2,5 prediction."], ["Best of the day", "Bet prediction for day"], ["Best Over 1.5", "Today's best over 1.5"]]}, "Cricbuzz Cricket": {"tool_desc": "This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc", "apis": [["matches/get-team", "Get players attended the match"], ["news/list-by-category", "List latest news by category"], ["news/list-by-topic", "List latest news by topic"], ["players/get-news", "Get news by player"], ["venues/get-stats", "Get stats by venue"], ["teams/get-schedules", "Get scheduled matches for a team"], ["teams/get-players", "Get players by team"], ["teams/get-results", "Get matched results by team"], ["series/get-matches", "Get recent and upcoming matches by series"], ["series/get-squads", "Get squads by series"], ["series/get-points-table", "Get points table by series"], ["get-image", "This endpoint is used to get image by id"], ["news/get-topics", "Get all available topics"], ["news/get-categories", "Get all available categories"], ["players/search", "Search player by name"], ["venues/get-matches", "Get scheduled matches by venue"], ["teams/get-stats", "Get stats by team"], ["teams/get-news", "Get news by team"], ["series/get-venues", "Get venues by series"], ["series/get-players", "Get players by squad and series"], ["series/get-news", "Get news by series"], ["matches/list", "List live, recent, upcoming matches"]]}, "Live Sports Odds": {"tool_desc": "Odds data API for NFL, NBA, MLB, EPL, AFL and loads more, from US, UK, EU and Aussie bookmakers.", "apis": [["/v4/sports/{sport}/odds", "Returns list of live and upcoming games for a given sport, showing bookmaker odds for the specified region and markets. Set the `sport` to a `sport_key` from the /sports endpoint. Alternatively if `sport=upcoming`, it will return a list of the next 8 upcoming games across all sports, as well as any live games. For more info, see [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html) and [list of available bookmakers](https://the-odds-api.com/sports-odds-data/bookmaker-apis.html)."], ["/v4/sports/{sport}/scores", "Returns list of live and upcoming games for a given sport, and optionally recently completed games. Live and completed games will contain scores. **Currently in beta** and only available for selected sports. For more info, see the [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html)"], ["/v4/sports", "Returns a list of available sports and tournaments. Use the `sports_key` in requests for /odds and /scores endpoints."]]}, "FIA Formula 1 Championship Statistics": {"tool_desc": "FIA Formula 1 Championship Statistics is a REST API.", "apis": [["Team Details", "Use this endpoint to retrieve a detailed information about a specific team. You will need to provide the team's name in the path parameter called team_name. You can specify either full name of the team or partial. If partial name is provided as parameter, still the api will make an attempt to search and return the expected result. The expected response will hold information about team's base location , team chief, chassis & more additional statistical data.\nEXAMPLE: redbull or red, haas or haasf1team, alfaromeo or alfa romeo"], ["Drivers", "Use this endpoint to retrieve this season's official F1 line-up. The result from the endpoint will be a breakdown of drivers, points and current positions."], ["Race Results", "Use this endpoint to retrieve race results data about a specific F1 championship by specifying a year. If you ommit the ***year*** query parameter, a default value will be set to current year. The response data will contain information about the Grand Prix, Date, Winner, Car (Team), Laps & overall time of each driver in the form of a collection."], ["Race Result", "Use this endpoint to retrieve information about a specific race result by passing path parameters year & location. The path parameters are required."], ["Hall of Fame", "Use this endpoint to retrieve information about all F1 champions also known as the Hall of Fame. The result of the endpoint will be a breakdown of driver's name and in which year the driver was crowned champion."], ["Driver Details", "Use this endpoint to retrieve a detailed information about a specific driver. You will need to provide the driver's name in the path parameter called team_name. You can specify either full name of the team or partial. If partial name is provided as parameter, still the api will make an attempt to search and return the expected result. Check out the example response for an overview of the result."], ["Teams", "Use this endpoint to retrieve information about this year's F1 teams. The result will be a breakdown of the Team's Rank (current position in the standings), Points, Team name & Drivers."], ["Race Calendar", "Use this endpoint to retrieve the current championship schedule and information about the **next round**. Time zone is GMT +00:00 Europe/London"], ["Practice Session Results", "Use this endpoint to retrieve information about a specific practice session by passing path parameters for **session number**, **year** &  **location**."], ["Qualifying Results", "Use this endpoint to retrieve the qualifying results for a specific race by specifying the year and location as path parameters. The parameters are required."], ["Starting Grid", "Use this endpoint to retrieve information about a specific race starting grid by passing path parameters for year & location. The parameters are required."], ["Pitstop Summary", "Use this endpoint to retrieve the pitstop summary about a specific race by passing path parameters year & location. The path parameters are required."], ["Fastest Laps Result", "Use this endpoint to retrieve information about fastest laps for a specific race by passing path parameters location & year. The path parameters are required."], ["Constructors Standings", "Use this endpoint to retrieve constructor standings data about a specific F1 championship by specifying a year. If you ommit the ***year *** query parameter, a default value will be set to current year."], ["Fastest Laps", "Use this endpoint to retrieve fastest laps data about a specific F1 championship by specifying a year. If you ommit the year query parameter, a default value will be set to current year. The response data will contain information about the Grand Prix, Driver, Car & Fastest Lap Time in the form of a collection."], ["Drivers Standings", "Use this endpoint to retrieve drivers standings data about a specifit F1 championship by specifying a year. If you ommit the ***year*** query parameter, a default value will be set to current year. The response data will contain information about the position in the rank list, driver's name, nationality, team and total points accumulated."]]}, "Free NBA": {"tool_desc": "Unofficial NBA API for Historical NBA Data", "apis": [["Get a Specific Team", "This endpoint retrieves a specific team"], ["Get All Games", "This endpoint retrieves all games.  Seasons are represented by the year they began. For example, 2018 represents season 2018-2019."], ["Get a Specific Game", "This endpoint retrieves a specific game"], ["Get All Players", "This endpoint retrieves all players from all seasons."], ["Get Specific Player", "This endpoint retrieves a specific player."], ["Get All Teams", "This endpoint retrieves all teams for the current season."]]}, "Surebets 2": {"tool_desc": "#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers", "apis": [["USA latest Matches", "Latest matches in the USA by bookie - updated every 24 hours"], ["Norway latest Matches", "Latest matches in Norway by bookie - updated every 24 hours"], ["Japan latest Matches", "Latest matches in Japan by bookie - updated every 24 hours"], ["Euro latest matches", "Latest matches international in europe by bookie - updated every 24 hours"], ["England latest Matches", "Latest matches in England by bookie - updated every 24 hours"], ["Copa Libertadores latest matches", "Latest matches of Copa Libertadores by bookie - updated every 24 hours"], ["Brazil latest matches", "Latest matches in Brazil by bookie - updated every 24 hours"], ["Valuebets", "Positive EV-Bets. \nThese involve risk but have the advantage to bet against just one bookie.\nThe attribut \"ev_profit_in_%\" includes the chance to win this bet (p_market) but also the overpricing of the bookmakers odd (bookieodd) vs. the market odd (marketodd).\n Please be careful and always verifiy the odds and the matched games."], ["Brazil latest Odds", "Latest odds for Brazilian matches - Updated every 6 hours"], ["Copa Sudamericana latest Odds", "Latest odds for Copa Sudamericana matches - Updated every 6 hours"], ["Norway latest Odds", "Latest odds for matches in Norway - updated every 6 hours"], ["Euro latest Odds", "Latest odds for international matches in europe - updated every 6 hours"], ["England latest Odds", "Latest odds for matches in England - updated every 6 hours"], ["Copa Libertadores latest Odds", "Latest odds for Copa Libertadores matches - Updated every 6 hours"], ["World latest Odds", "Latest odds for international matches - updated every 6 hours"], ["World latest Matches", "Latest matches international matches by bookie - updated every 24 hours"], ["Japan latest Odds", "Latest odds for matches in Japan - updated every 6 hours"], ["Argentina latest Odds", "Latest odds for matches in Argentina - updated every 6 hours"], ["Argentina latest Matches", "Latest matches in Argentina by bookie - updated every 24 hours"], ["Surebets", "The provided endpoint lists all the latest arbitrage opportunities, sorted in chronological order. Surebets can be led together by the same \"id\".\nPlease be careful and always verifiy the odds and the matched games."], ["Countries by Bookie", "This endpoint gets all available links. In addition you will have a URL to the leagues. (not every bookie included)"], ["USA latest Odds", "Latest odds for matches in the USA - updated every 6 hours"], ["Copa Sudamericana latest matches", "Latest matches of Copa Sudamericana by bookie - updated every 24 hours"]]}, "LiveScore_v2": {"tool_desc": "This API helps to query for football, cricket, basketball, tennis, hockey matches, leagues, news, etc...", "apis": [["matches/v2/detail (Deprecated)", "Get detail information of a match\n*The default timezone currently is UTC+7"], ["news/v2/list-by-sport", "List news relating to a specific sport by category"], ["matches/v2/list-live", "List available live matches at request time\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png"], ["matches/v2/get-innings", "Get innings of a match (for \"cricket\" as category)"], ["matches/v2/get-h2h", "Get head to head information in the past"], ["matches/v2/get-scoreboard", "Get scoreboard of a match"], ["matches/v2/get-info", "Get where the match takes place"], ["teams/get-team-stats", "Get team statistics relating to a competition"], ["teams/get-player-stats", "Get players statistics relating to a competition"], ["teams/get-table", "Get table of a team"], ["teams/detail", "Get team information, recent and up coming matches"], ["competitions/get-team-stats", "Get teams statistics in a competition"], ["competitions/get-player-stats", "Get players statistics in a competition"], ["competitions/get-table", "Get table relating to a competition"], ["competitions/detail", "Get competition information, recent and up coming matches"], ["matches/list-by-league (Deprecated)", "List all matches by specific league"], ["matches/get-table (Deprecated)", "Get table of related match"], ["matches/v2/list-by-date", "List all matches by specific date\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png"], ["matches/detail (Deprecated)", "Get detail information of a match"], ["news/list (Deprecated)", "List all news of specific category"], ["news/v2/list", "List latest news relating to all sports at once"], ["matches/v2/list-by-league", "List all matches by specific league and table\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png"], ["matches/list-live (Deprecated)", "List available live matches at request time"], ["matches/list-by-date (Deprecated)", "List all matches by specific date"], ["matches/v2/get-pregame-form", "Get pregame form of competitors"], ["matches/v2/get-statistics", "Get statistics of a match"], ["matches/v2/get-commentary", "Get comments in a match"], ["leagues/list (Deprecated)", "List all leagues by category (football, cricket, basketball, tennis, hockey)"], ["leagues/v2/list", "List all leagues by category (football, cricket, basketball, tennis, hockey)\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png"], ["leagues/v2/get-table", "Get table league by category (football, cricket, basketball, tennis, hockey) and competition\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png"], ["matches/v2/get-incidents", "Get incidents in a match"]]}, "Sports odds BetApi": {"tool_desc": "Sports data and odds Bets Api for all sports: football, basketball, hockey, tennis, cricket, eSports", "apis": [["Data Country All", "Data from all countries for all sports"], ["Data Tournaments All", "Data Tournaments All Sports & All Countries"], ["Concrete match", "data of  concrete match"]]}, "Nba Latest News": {"tool_desc": "Nba api that returns latest news articles based on teams or players from espn, bleacher report, nba.com, yahoo, and slam", "apis": [["Get all latest Nba articles", "GET /articles\nReturns a list of all the latest nba articles.\n\nOptional params:\n\nsource returns articles based on chosen source\n\noptions: nba-canada, nba, bleacher-report, yahoo, espn, slam\n\nExample /articles?source=bleacher-report\n\nteam returns articles based on chosen team\n\nExample /articles?team=lakers\n\nlimit returns the maximum number of articles desired\n\nExample /articles?limit=5\n\nplayer returns articles based on chosen player\n\nUse dash to seperate names\n\nSearching by players full name seperated by dash produces best results\n\nExample /articles?player=kevin-durant&limit=10"]]}, "Bet-at-Home": {"tool_desc": "Games and pre-game Odds for Bet-at-Home.", "apis": [["Odds", "Latest Odds by Bet-at-Home"], ["Matches", "Latest matches by Bet-at-Home"]]}, "Pinnacle Odds": {"tool_desc": "Pinnacle Sport API is a RESTful service for getting pre-match and live odds.", "apis": [["Betting status", "Get a betting status. Checking the Pinnacle server"], ["List of special markets", "Get a list of special markets. Always first issue a snapshot call and continue with the delta calls. Calls return changes since the provided `since` value. You must always use the since parameter, after the first call. Please note that prematch and live events are different"], ["Event details", "Get a event details and history odds. history:[time, value, max bet]. `Period_results - status`: 1 = Event period is settled, 2 = Event period is re-settled, 3 = Event period is cancelled, 4 = Event period is re-settled as cancelled, 5 = Event is deleted"], ["List of periods", "Get a list of periods"], ["List of archive events", "Get a list of archive events. Use pagination"], ["List of sports", "Get a list of sports"], ["List of markets", "Get a list of markets. Always first issue a snapshot call and continue with the delta calls. Calls return changes since the provided `since` value.  You must always use the `since` parameter, after starting your program cycle. You can make request without a `since` parameter no more than 15 times in 5 minutes. Please note that `prematch` and `live` events are different"], ["List of leagues", "Get a list of leagues"]]}, "Dreambet": {"tool_desc": "Games and pre-game Odds for Dreambet", "apis": [["Odds", "Latest Odds for Dreambet"], ["Matches", "Latest Matches for Dreambet"]]}, "Satellite API": {"tool_desc": "This Read-Only API Allows Users To Access Their Sleeper Fantasy Football Leagues.", "apis": [["LOOKUP", "Lookup active Sleeper leagues for a given username."]]}, "FIFA 2022 Schedule and Stats": {"tool_desc": "Get the latest FIFA World Cup Schedule and Stats", "apis": [["Get matches on a specific date", "Parameters:\n1.  date - Date to query the matches\n2. utc_offset - Change the utc offset of the date to suit your timezone.\n\nReturns the matches on the specified date and timezone.\nWorks for both historical, live, and future dates.\nMatch data consists of date, time, home team, away team, and many more, see the example response for an example."]]}, "Cricket": {"tool_desc": "This API only for testing", "apis": [["live score", "to view live score"]]}, "Fantasy Cricket": {"tool_desc": "Most Accurate, Realtime, Fast and Reliable Fantasy Cricket API in the market.", "apis": [["Upcoming Matches API", "A list of Upcoming cricket matches from around the world. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com"], ["Series List API", "A list of currently running  and upcoming cricket series from around the world. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com"], ["Matchlist By Seriesid", "Using Series ID get the name, participating teams, start date, end date and match keys for the matches of a specified Series. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com"], ["Live Fantasy Score", "Real-time and Low-Latency Match Live Score API. Get the match score, Batting, bowling and fielding information for a specified match in real time\nAny issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com"], ["Fantasy Squad API", "Using match ID get the list of players in the squad for the match as announced by the teams. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com"], ["Playing Eleven API", "Get Playing Eleven by matchid when it's announced by the teams. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com"], ["Live Matches API", "A list of cricket matches from around the world that are currently Live. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com"]]}, "AmericanFootballApi": {"tool_desc": "Here at the AmericanFootballApi you can find all the results and live scores from the biggest and most popular American football league in the world - NFL and when regular NFL season is finished, follow live scores of NFL playoffs and Superbowl.", "apis": [["ManagerImage", "Get the image for a specific American Football manager in PNG format by providing the manager ID."], ["ManagerLastMatches", "This operation retrieves the last matches for a given American Football manager ID. It returns a paginated list of events (matches), with the latest match first."], ["MatchStreaks", "Get the win/loss streaks for the two teams involved in a specific American Football match."], ["MatchVotes", "Get votes for a specific American Football match by providing its ID."], ["MatchSchedules", "This operation returns the match schedules for the given date, including match timings, teams, and other relevant information."], ["MatchStatistics", "Get match statistics for a specific American Football match."], ["MatchLineups", "Get the match lineups for a specific American Football match by providing the match ID."], ["PreMatchForm", "Get pre-match form data for a specific American Football match by providing the match ID."], ["ManagerDetails", "Get the details of a specific American Football manager using the manager id."], ["PlayerPlaceholderImage", "Get the player placeholder image in PNG format."], ["PlayerRegularSeasonStatistics", "This endpoint retrieves regular season statistics for a specific player in a given tournament and season."], ["PlayerMedia", "This endpoint retrieves media for a specific player."], ["ManagerPlaceholderImage", "Get the manager placeholder image in PNG format."], ["PlayerNearMatches", "Get the upcoming and recent matches for an American Football player using their ID."], ["MatchOdds", "Get betting odds for a specific American Football match by providing the match ID."], ["TVCountries", "Get a list of countries and their respective TV channels broadcasting a specific Football match."], ["MatchTvChannelDetails", "Get the details of a specific TV channel broadcasting a specific Football match."], ["MatchIncidents", "Get match incidents for a specific American Football match by providing the match ID."], ["TeamMedia", "Get media information for a specific American Football team by providing its ID."], ["MatchGraph", "Get match graph data for a specific American Football match by providing the match ID."], ["TeamPlayoffsBestPlayers", "Get the top players of a specific American Football team during the playoffs by providing the team ID, tournament ID, and season ID."], ["PlayerStatisticsSeasons", "Get player statistics seasons."], ["TournamentPlaceholderImage", "Get the tournament placeholder image in PNG format."], ["LeagueSeasons", "Get the seasons of an American Football league for a specific tournament, including the start and end dates of each season."], ["MatchBestPlayers", "Get the best players for a specific American Football match by providing its ID."], ["PlayerLastMatches", "Get the last matches played by a specific American Football player by providing the team ID and page number."], ["LiveMatches", "Get live American Football matches that are currently taking place."], ["LeagueCupTrees", "This endpoint retrieves cup trees for a specific league in a given season."], ["TeamPlayersStatisticsSeasons", "Get the seasons for which player statistics are available for a specific American Football team by providing the team ID."], ["LeagueTotalTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for both home and away events."], ["MatchHighlights", "Get video highlights for a specific American Football match by providing the match ID."], ["Categories", "Get all tournament categories. It's the top level of tournaments and represent countries."], ["TeamStandingsSeasons", "Get the seasons for which standings are available for a specific American Football team by providing the team ID."], ["TeamRegularSeasonBestPlayers", "Get the top players of a specific American Football team during the regular season by providing the team ID, tournament ID, and season ID."], ["LeagueAwayStandings", "This endpoint retrieves away standings for a specific league in a given season."], ["LeagueNextMatches", "Get the next matches of an American Football league for a specific tournament and season, including match timings, teams, and other relevant information."], ["LeagueHomeStandings", "This endpoint retrieves home standings for a specific league in a given season."], ["TeamLastMatches", "Get the last matches played by a specific American Football team by providing the team ID and page number."], ["TeamDetails", "Get detailed information for a specific American Football team by providing its ID."], ["TeamNearMatches", "Get the list of near matches for a specific American Football team by providing its ID."], ["LeagueTopPlayersPlayoffs", "This endpoint retrieves the top players for a specific league in playoffs during a given season."], ["HeadToHeadMatches", "Get head-to-head match data for a specific American Football match using its custom ID."], ["CategoryMatchSchedules", "Get match schedules of the day from the specified American Football category."], ["LeagueAwayTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for away events."], ["CategoryTournaments", "Get all leagues from the specified American Football category."], ["LeagueTotalStandings", "This endpoint retrieves total standings for a specific league in a given season."], ["MatchH2HDuel", "Get head-to-head match data for a specific American Football match by providing the match ID."], ["TeamLogo", "This operation retrieves the logo image for an American Football team, given its team ID. The image is returned in PNG format."], ["LeagueDetails", "Get the details of an American Football league for a specific tournament, including the league's name, logo, country, and other relevant information."], ["PlayerPlayoffsStatistics", "This endpoint retrieves playoffs statistics for a specific player in a given tournament and season."], ["TeamTournaments", "Get team tournaments they are participating."], ["LeagueMedia", "Get the media of an American Football league for a specific tournament, including images and videos related to the league."], ["MatchPlayerStatistics", "Get individual player statistics for a specific American Football match by providing the match ID and player ID."], ["MatchManagers", "Get managers for a specific American Football match by providing its ID."], ["PlayerImage", "Get the PNG image of an American Football player using their ID."], ["LeagueTopPlayersRegularSeason", "This endpoint retrieves the top players for a specific league in regular season during a given season."], ["MatchDetails", "Get detailed information for a specific American Football match by providing the match ID."], ["PlayerDetails", "Get the details of an American Football player using their ID."], ["TeamPlaceholderImage", "Get the team placeholder image in SVG format."], ["TeamNextMatches", "Get the upcoming matches for a specific American Football team by providing the team ID and page number. You can expect empty responses if no upcoming matches are scheduled."], ["Search", "This operation searches for players, teams, and tournaments using the provided search term."], ["LeagueLogo", "This operation retrieves the logo image for an American Football league, given its unique tournament ID. The image is returned in PNG format."], ["LeagueLastMatches", "Get the last matches of an American Football league for a specific tournament and season, including match timings, teams, and other relevant information."], ["LeagueTopPlayersTypes", "Get the types of best players in the american football league."], ["CategoryFlag", "Get the flag image of a specific category in PNG format."]]}, "Live Golf Data": {"tool_desc": "PGA Tour and LIV Tour live golf data for your application needs such as rankings, leaderboards, scorecards, and results.", "apis": [["World Ranking", "Fetch the world rankings for a given year"], ["earnings", "Fetch the player earnings for a given `tournId` and `year`."], ["points", "Fetch official FedExCup points earned per player for a given `tournId` and `year`. Note that PGA Tour non-members will not be officially ranked."], ["tournaments", "Fetch tournament information, such as metadata, players, courses, and earnings. Query the `schedule` endpoint to retrieve the necessary `tournId` and `year` parameters. This info will be updated with a players entry list the Friday before the tournament."], ["players", "Fetch a PGA Tour player by his last name, first name, playerId, or a combination of these parameters.\n\nYou must provide at least one search parameter to the API."], ["schedules", "Fetch the schedule for the desired year and organization."], ["organizations", "Fetch the organizations that are supported by this golf data API."], ["FedExCup Ranking", "Fetch the FedExCup ranking leaderboard for a given year. These rankings are updated live during a tournament to show the player's projected ranking."], ["scorecards", "Fetch a scorecard for a given `tournId`, `year`, `playerId`, and `roundId`.  Scorecards include shot-by-shot granularity."], ["leaderboards", "Fetch the most recent leaderboard for a given `tournId`, `year`,  and `roundId`. Query the `schedule` endpoint for the desired `tournId` and `year`.\n\nLeaderboards are available 1-2 days before the event begins."]]}, "Handball Data": {"tool_desc": "Broadage Handball API will give you wide range of data of world's top handball leagues, including fixtures, standings, match lists and many more.", "apis": [["Daily Match List-Scheduled", "Daily match list including scheduled matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Daily Match List-All", "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Daily Match List-Live", "Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Tournament List", "List of tournaments in your data coverage."], ["Tournament Teams", "List of teams participating in a specific tournament."], ["Tournament Info", "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament."], ["Tournament Standings", "Team Rankings for a specific competition."], ["Tournament Fixture", "Full match list with period and final scores."], ["Daily Match List-Results", "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Team Schedule", "Team fixtures by all the tournaments a team participates."], ["Result Statistics: Goals", "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Handbal Match List or Fixture endpoints.**"], ["Seasonal Statistics: Goals", "Provides the goal statistics of the team in the tournament."], ["Recent Match List", "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Handball Match List or Fixture endpoints.**"]]}, "Dafabet": {"tool_desc": "Games and pre-game Odds for Dafabet", "apis": [["Matches", "Latest Matches for Dafabet"], ["Odds", "Latest Odds for Dafabet"]]}, "F1 Live Motorsport Data": {"tool_desc": "Formula 1 data for the ultimate motorsport fanatic!", "apis": [["Session", "Provides session details for a given `session id` found in the Races endpoint. Contains information on drivers times, session weather, speed traps, and session status. Updated throughout each session."], ["Seasons", "Lists available F1 seasons to query - starting point for the application."], ["Constructors", "Lists constructors for a given season."], ["Drivers", "Lists all drivers by season."], ["Driver Standings", "Displays the driver standings for a given season."], ["Races", "Lists races and session details for a given season"], ["Constructor Standings", "Lists constructor standings for given season."]]}, "UFC Fighters_v2": {"tool_desc": "API to get any ufc fighter stats [name, nickname, height, weight, win, loss, draw, champion]", "apis": [["Get specific fighter", "endpoint to get specific fighter stats\nFirstname_Lastname\nfirst letter of first name shoud be upper and same for last name\nfirstname and lastname seprated with underscore _"], ["Get all fighters", "endpoint with all ufc fighters stats in the history"]]}, "NFL Team Stats_v2": {"tool_desc": "NFL Team Stats is an API that always provides up-to-date stats for all NFL teams such as: Wins, Passing, Rushing and Recieving.", "apis": [["Get Team Receiving Data", "Provides a JSON Response containg a list of all teams' receiving data. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year."], ["Get Team Rushing Data", "Provides a JSON Response containg a list of all teams' rushingdata. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year."], ["Get Team Passing Data", "Provides a JSON Response containg a list of all teams' passing data. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year."], ["Get Team Win Data", "Provides a JSON Response containg a list of all teams' win/loss data. Parameters include a specific year.\n\nThe year parameter should be a year between these years: 1920 - current year."]]}, "NBA Stats_v2": {"tool_desc": "Statistics for every NBA player for every season.", "apis": [["get_career_totals_allstar", "Api to query career totals allstar"], ["get_per36_career_post_season", "Api to query per36 career post season"], ["get_per36_career_regular_season_by_id", "Api to query per36 career regular season"], ["get_career_totals_regular_season_by_id", "Api to query career totals regular season"], ["get_per_game_career_regular_season", "Api to query per game career regular season"], ["get_per36_career_post_season_by_id", "Api to query per36 career post season"], ["get_players", "Api to query players"], ["get_per36_career_regular_season", "Api to query per36 career regular season"], ["get_per_game_career_regular_season_by_id", "Api to query per game career regular season"], ["get_per_game_career_post_season", "Api to query per game career post season"], ["get_career_totals_post_season", "Api to query career totals post season"], ["get_per36_regular_season", "Api to query per36 regular season"], ["get_per_game_post_season_by_id", "Api to query per game post season"], ["get_per_game_regular_season", "Api to query per game regular season"], ["get_per36_post_season_by_id", "Api to query per36 post season"], ["get_rankings_post_season_by_id", "Api to query rankings post season"], ["get_rankings_regular_season_by_id", "Api to query rankings regular season"], ["get_season_totals_post_season", "Api to query season totals post season"], ["get_per36_post_season", "Api to query per36 post season"], ["get_players_by_id", "Api to query players"], ["get_per_game_regular_season_by_id", "Api to query per game regular season"], ["get_rankings_regular_season", "Api to query rankings regular season"], ["get_career_totals_allstar_by_id", "Api to query career totals allstar"], ["get_per_game_career_post_season_by_id", "Api to query per game career post season"], ["get_per36_regular_season_by_id", "Api to query per36 regular season"], ["get_season_totals_allstar_by_id", "Api to query season totals allstar"], ["get_rankings_post_season", "Api to query rankings post season"], ["get_season_totals_regular_season", "Api to query season totals regular season"], ["get_per_game_post_season", "Api to query per game post season"], ["get_career_totals_post_season_by_id", "Api to query career totals post season"], ["get_teams", "Api to query teams"], ["get_season_totals_allstar", "Api to query season totals allstar"], ["get_season_totals_regular_season_by_id", "Api to query season totals regular season"], ["get_teams_by_id", "Api to query teams"], ["get_season_totals_post_season_by_id", "Api to query season totals post season"], ["get_career_totals_regular_season", "Api to query career totals regular season"]]}, "MLB Data": {"tool_desc": "Baseball MLB Data about players, teams, reports, and other stats.", "apis": [["Projected Hitting Stats", "Retrieve a players projected hitting stats for a given season.  Omitting the season parameter will return the actual stats for the players earliest major league season."], ["Season Pitching Stats", "Retrieve a players pitching stats for a given season."], ["Broadcast Info", "Retrieve information on broadcasts over a given period.  start_date and end_date parameters should be in the YYYYMMDD format.  Although you can omit the home_away parameter to retrieve both home and away game data, one will include the other. For example, a New York Mets home game result will include data for the visiting team."], ["Career Hitting Stats", "Retrieve a players career hitting stats for a given game type."], ["League Hitting Stats", "Retrieve a players career hitting stats for a given game type split by the league."], ["Get Roster by Seasons", "Retrieve a teams roster between a given start and end season."], ["League Pitching Stats", "Retrieve a players career hitting stats for a given game type, split by league."], ["Get Teams by Season", "Retrieve a list of major league teams that were active during a given season.  If all_star_sw is set to 'Y', you will instead receive data on the all star teams for that season.  You can sort using the sort_order paramater. Ex: Sort in ascending order by the name field using sort_by='name_asc'"], ["Career Pitching Stats", "Retrieve a players career hitting stats for a given game type."], ["Player Teams", "Retrieve the teams a player has played for over the course of a season, or their career."], ["Player Search", "Search for active and historic/inactive players by name.  The active_sw parameter should be set depending on whether you want to search for active or inactive players. You can omit this parameter, though you will notice a slower response time as the search is done across all (active and inactive) players."], ["Pitching Leaders", "Retrieve n leaders for a given hitting statistic.  This endpoint is best used alongside col_in/col_ex to prune response data. Without, it returns entire player objects.  For best results, include the player\u2019s name, id, and the stat as a starting point.  See: Using col_in & col_ex"], ["Injuries", "Retrieve all players which are currently injured."], ["Get Transactions Over Period", "Retrieve all transactions between a given period. start_date and end_date parameters should be in the YYYYMMDD format."], ["Get 40-Man Roster", "Retrieve a team\u2019s 40 man roster."], ["Hitting Leaders", "Retrieve n leaders for a given hitting statistic.  This endpoint is best used alongside col_in/col_ex to prune response data. Without, it returns entire player objects.  For best results, include the player\u2019s name, id, and the stat as a starting point.  See: Using col_in & col_ex"], ["Game Type Info", "Retrieve a list of one or numerous game types.  For example, if you wanted to know when the National League Championship Series was played, this endpoint could tell you that."], ["Projected Pitching Stats", "Retrieve a players projected pitching stats for a given season.  Omitting the season parameter will return the actual stats for the players earliest major league season."], ["Season Hitting Stats", "Retrieve a players hitting stats for a given season."], ["Player Info", "Retrieve general information on a player. This includes name variants, education information, country of origin and attributes like height, weight and age."]]}, "IceHockeyApi": {"tool_desc": "IceHockeyApi offers you real time hockey livescore, tables, statistics, fixtures and results for more than 70 ice hockey leagues, cups and tournaments.", "apis": [["Search", "Perform a search for players, teams, and tournaments in Ice Hockey using the provided search term."], ["ManagerPlaceholderImage", "Get the manager placeholder image in PNG format."], ["MatchTvChannelDetails", "Get the details of a specific TV channel broadcasting a specific Football match."], ["TournamentPlaceholderImage", "Get the tournament placeholder image in PNG format."], ["TeamPlaceholderImage", "Get the team placeholder image in SVG format."], ["TVCountries", "Get a list of countries and their respective TV channels broadcasting a specific Football match."], ["ManagerDetails", "Get the details of a specific Ice Hockey manager using the manager id."], ["CategoryFlag", "Get the flag image of a specific category in PNG format."], ["ManagerImage", "Get the image for a specific Ice Hockey manager in PNG format by providing the manager ID."], ["ManagerLastMatches", "Get the last matches of a specific Ice Hockey manager using the manager id and a zero-based page number."], ["PlayerPlaceholderImage", "Get the player placeholder image in PNG format."], ["LeagueTopPlayersTypes", "Get the top players types for a specific Ice Hockey league by providing the tournament ID and season ID."], ["TeamLogoImage", "Get the logo image for a specific Ice Hockey team in PNG format by providing the team ID."], ["LeagueAwayTeamEvents", "Get the away team events for a specific Ice Hockey league by providing the tournament ID and season ID."], ["PlayerPlayoffsStatistics", "Get the playoffs statistics for a specific Ice Hockey player by providing the player ID, tournament ID, and season ID."], ["LeagueTotalStandings", "Get the total standings for a specific Ice Hockey league by providing the tournament ID and season ID."], ["PlayerRegularSeasonStatistics", "Get the regular season statistics for a specific Ice Hockey player by providing the player ID, tournament ID, and season ID."], ["LeagueOverallTopPlayersPerGame", "Get the top players types for a specific Ice Hockey league by providing the tournament ID and season ID."], ["TeamPlayers", "Get the players for a specific Ice Hockey team by providing the team ID."], ["TeamRegularSeasonTopPlayers", "Get the top players of a particular ice hockey team for a given regular season and tournament."], ["TeamLastMatches", "Get the list of last matches played by a specific Ice Hockey team."], ["PlayerOverallStatistics", "Get the regular season statistics for a specific Ice Hockey player by providing the player ID, tournament ID, and season ID."], ["TeamDetails", "Get details for a specific Ice Hockey team by providing the team ID."], ["TeamNextMatches", "Get the list of upcoming matches of a specific Ice Hockey team."], ["LeagueMedia", "Get the media for a specific Ice Hockey league by providing the tournament ID."], ["LeaguePlayoffsTopPlayersPerGame", "Get the top players types for a specific Ice Hockey league by providing the tournament ID and season ID."], ["PlayerImage", "Get the image for a specific Ice Hockey player in PNG format by providing the player ID."], ["LeagueAwayStandings", "Get the away standings for a specific Ice Hockey league by providing the tournament ID and season ID."], ["LeagueNextMatches", "Get the next matches for a specific Ice Hockey league by providing the tournament ID, season ID, and the page number."], ["LeagueOverallTopPlayers", "Get the top players for a specific Ice Hockey league by providing the tournament ID and season ID."], ["PlayerStatisticsSeasons", "Get the statistics seasons for a specific Ice Hockey player by providing the player ID."], ["LeagueSeasons", "Get the seasons for a specific Ice Hockey league by providing the tournament ID."], ["LeagueLastMatches", "Get the last matches for a specific Ice Hockey league by providing the tournament ID, season ID, and the page number."], ["LeaguePlayoffsTopTeams", "Get the top teams for a specific Ice Hockey league by providing the tournament ID and season ID."], ["CategorySchedules", "Get the schedules of ice hockey matches for a given date and category, including match timings, teams, and other relevant information."], ["PlayerNearMatches", "Get the near matches for a specific Ice Hockey player by providing the player ID."], ["TeamNearMatches", "Get the near matches for a specific Ice Hockey team by providing the team ID."], ["LeagueRegularSeasonTopPlayersPerGame", "Get the top players types for a specific Ice Hockey league by providing the tournament ID and season ID."], ["Categories", "Get all ice hockey categories."], ["LeaguePlayoffsTopPlayers", "Get the top players for a specific Ice Hockey league during playoffs by providing the tournament ID and season ID."], ["LeagueTotalTeamEvents", "Get the total team events for a specific Ice Hockey league by providing the tournament ID and season ID."], ["LeagueCupTrees", "Get the cup trees for a specific Ice Hockey league by providing the tournament ID and season ID."], ["PlayerLastMatches", "Get the list of last matches played by a specific Ice Hockey player."], ["LeagueLogoImage", "Get the logo image for a specific Ice Hockey league in PNG format by providing the tournament ID."], ["LeagueHomeTeamEvents", "Get the home team events for a specific Ice Hockey league by providing the tournament ID and season ID."], ["PlayerMedia", "Get the media for a specific Ice Hockey player by providing the player ID."], ["MatchOdds", "Get the odds for a specific Ice Hockey match using the match id."], ["CategoryTournaments", "Get all ice hockey tournaments for a given category ID."], ["MatchVotes", "Get the votes for a specific Ice Hockey match using the match id."], ["MatchStreaks", "Get the streaks for a specific Ice Hockey match using the match id."], ["MatchH2HDuel", "Get the head-to-head duel for a specific Ice Hockey match using the match id."], ["MatchPlayerStatistics", "Get detailed statistics for a specific player in an Ice Hockey match using the match ID and player ID."], ["LeagueRegularSeasonTopTeams", "Get the top teams for a specific Ice Hockey league by providing the tournament ID and season ID."], ["MatchLineups", "Get detailed information on the lineups for a specific Ice Hockey match using the match ID."], ["TeamMedia", "Get media for a specific Ice Hockey team by providing the team ID."], ["HeadToHeadMatches", "Get head-to-head match data for a specific Ice Hockey match using its custom ID."], ["MatchStreakOdds", "Get the streak odds for a specific Ice Hockey match using the match id."], ["PreMatchForm", "Get the pre-match form for a specific Ice Hockey match using the match id."], ["MatchIncidents", "This operation returns incidents for a specific ice hockey match, including red cards, yellow cards, and other relevant data."], ["PlayerDetails", "Get the details for a specific Ice Hockey player by providing the player ID."], ["TeamPlayoffsTopPlayers", "This operation returns the best players of an Ice Hockey team for the playoffs of a specific tournament and season."], ["TeamPlayersStatisticsSeasons", "Get the statistics of the players in a particular ice hockey team for each season."], ["LeagueHomeStandings", "Get the home standings for a specific Ice Hockey league by providing the tournament ID and season ID."], ["MatchStatistics", "This operation returns statistics for a specific ice hockey match, including player statistics and other relevant data."], ["LeagueDetails", "Get the details of a specific Ice Hockey league by providing the tournament ID."], ["TeamTournaments", "This operation returns the unique tournaments in which an Ice Hockey team has participated."], ["MatchDetails", "Get detailed information for a specific ice hockey match by providing the match ID."], ["MatchSchedules", "Get the schedules of ice hockey matches for a given date, including match timings, teams, and other relevant information."], ["MatchBestPlayers", "Get the best players for a specific Ice Hockey match using the match id."], ["LeagueRegularSeasonTopPlayers", "Get the top players for a specific Ice Hockey league during the regular season by providing the tournament ID and season ID."], ["MatchHighlights", "Get the highlights for a specific Ice Hockey match using the match id."], ["MatchManagers", "Get the managers for a specific Ice Hockey match using the match id."], ["LiveMatches", "Get all live ice hockey matches."]]}, "RugbyAPI2": {"tool_desc": "Rugby live score service at RugbyApi has all the live scores, results, fixtures, statistics and league tables from the major rugby union leagues like England Aviva Premiership, Australia National Rugby League - NRL, Wales rugby league and France TOP 14.", "apis": [["TVCountries", "Get a list of countries and their respective TV channels broadcasting a specific Football match."], ["MatchTvChannelDetails", "Get the details of a specific TV channel broadcasting a specific Football match."], ["get-rugby-union-rankings", "Get the current Rugby Union rankings."], ["Search", "Perform a search for players, teams, and tournaments in Rugby."], ["TeamPlaceholderImage", "Get the team placeholder image in SVG format."], ["CategoryFlag", "Get the flag image of a specific category in PNG format."], ["ManagerImage", "Get the logo image for a specific Rugby team. The image is in PNG format."], ["ManagerDetails", "Get the list of the last matches managed by the specified rugby manager."], ["ManagerLastMatches", "Get the list of the last matches managed by the specified rugby manager."], ["PlayerNearMatches", "Get near matches for a specific Rugby player."], ["TournamentPlaceholderImage", "Get the tournament placeholder image in PNG format."], ["PlayerImage", "Get the image for a specific Rugby player. The image is in PNG format."], ["PlayerLastMatches", "Get the last matches for a specific Rugby player."], ["LeagueHomeTeamEvents", "Get the home team events for a specific Rugby league and season."], ["PlayerDetails", "Get the details for a specific Rugby player."], ["LeagueTotalTeamEvents", "Get the total team events for a specific Rugby league and season."], ["LeagueSeasons", "Get the seasons of a specific Rugby league."], ["TeamLogoImage", "Get the logo image for a specific Rugby team. The image is in PNG format."], ["MatchLineups", "Get lineups for a specific Rugby match."], ["MatchH2HDuel", "Get the head-to-head duel information for a specific Rugby match."], ["MatchManagers", "Get the managers of a specific Rugby match."], ["LeagueAwayStandings", "Get the away standings for a specific Rugby league and season."], ["LiveMatches", "Get live Rugby matches."], ["ManagerPlaceholderImage", "Get the manager placeholder image in PNG format."], ["PlayerPlaceholderImage", "Get the player placeholder image in PNG format."], ["LeagueHomeStandings", "Get the home standings for a specific Rugby league and season."], ["MatchOdds", "Get odds for a specific Rugby match."], ["TeamNearMatches", "Get near matches for a specific Rugby team."], ["MatchVotes", "Get the votes of a specific Rugby match."], ["TeamStandingsSeasons", "Get team standings seasons for a specific Rugby team."], ["TeamPlayers", "Get the players for a specific Rugby team."], ["TeamNextMatches", "Get the next matches for a specific Rugby team."], ["LeagueDetails", "Get the details of a specific Rugby league."], ["TeamDetails", "Get details for a specific Rugby team."], ["HeadToHeadMatches", "Get head-to-head matches for a specific Rugby match."], ["TeamLastMatches", "Get the last matches for a specific Rugby team."], ["MatchSchedules", "Get schedules of Rugby matches for a specific day."], ["LeagueLastMatches", "Get the last matches for a specific Rugby league and season."], ["LeagueAwayTeamEvents", "Get the away team events for a specific Rugby league and season."], ["MatchStatistics", "Get statistics for a specific Rugby match."], ["MatchHighlights", "Get highlights of a specific Rugby match."], ["LeagueTotalStandings", "Get the total standings for a specific Rugby league and season."], ["LeagueNextMatches", "Get the upcoming matches for a specific Rugby league and season."], ["LeagueMedia", "Get media for a specific Rugby league."], ["Categories", "Get the list of available rugby categories, including their names and IDs."], ["CategoryTournaments", "Get the list of all rugby leagues from the specified category, including their names and IDs."], ["LeagueLogoImage", "Get the logo image for a specific Rugby league. The image is in PNG format."], ["TeamMedia", "Get media for a specific Rugby team."], ["MatchIncidents", "Get incidents for a specific Rugby match."], ["Match", "Get information of a Rugby match by its ID."], ["PreMatchForm", "Get the pre-match form information for a specific Rugby match."], ["CategorySchedules", "Get the schedules of rugby matches for the given date and category, including match timings, teams, and other relevant information."]]}, "Match APi": {"tool_desc": "+1000 football leagues & cups.", "apis": [["Get all match play today by competitions", "Retrieve all matches info (teams, time,result) that are scheduled to be played today by competition id."], ["Get all competitions information", "Retrieve all competitions information"]]}, "SheScoresAPI": {"tool_desc": "API for Women's World Cup 2023", "apis": [["Get players by country", "Gets all the players from a team"], ["Get player by ID", "Get a player's information by ID"], ["Get all countries", "Gets all countries participating"], ["Get all players", "Gets all the players from all the teams"]]}, "Free Football (Soccer) Videos_v2": {"tool_desc": "Embed codes for the latest goals' videos and video highlights from the matches of the Premier League, La Liga, Bundesliga and many more", "apis": [["Feed", "You can retrieve the highlights and goals of the latest football matches in JSON format from this endpoint"]]}, "Divanscore": {"tool_desc": "The most powerful sports API for live scores and football scores, results and stats.", "apis": [["matches/get-all-odds", "Get all available odds relating to a match"], ["matches/get-featured-odds", "Get featured odds relating to a match"], ["matches/get-team-streaks", "Get team streaks information"], ["teams/get-logo", "Get logo image of specific team"], ["tournaments/get-logo", "List logo image of specific league"], ["managers/get-image", "Get image of specific manager"], ["players/get-image", "Get image of specific player"], ["tournaments/get-last-matches", "Get last matches of specific league by season"], ["tournaments/get-cuptrees", "Get cuptrees of specific league\n- Only some sports support this feature (Ex : tennis)"], ["tournaments/get-media", "Get latest media of specific league"], ["tournaments/get-standings", "Get fixture of specific league by season"], ["tournaments/get-top-teams", "List top teams of specific league"], ["tournaments/get-live-events", "List recent events or matches by specific sport"], ["tournaments/detail", "List information of specific league"], ["tournaments/get-scheduled-events", "List scheduled events of specific league"], ["matches/get-managers", "Get managers controlling the match"], ["tournaments/get-team-of-the-week-rounds", "This endpoint is used together with \u2026/tournaments/get-team-of-the-week endpoint to get corresponding roundId"], ["tournaments/get-next-matches", "Get current and next matches of specific league by season"], ["tournaments/get-seasons", "List seasons of specific league"], ["tournaments/get-team-of-the-week", "Get team of the week by league, season and round"], ["tournaments/get-rounds", "List rounds of specific league"], ["tournaments/search", "Search for tournaments by name"], ["tournaments/get-top-players", "List top players of specific league"], ["tournaments/get-featured-events", "List featured events of specific league"], ["managers/detail", "Get information of specific manager"], ["managers/get-last-matches", "Get last matches in which the manager controlled"], ["managers/get-next-matches", "Get recent and future matches in which the manager control"], ["managers/get-career-history", "Get career history of specific manager"], ["managers/search", "Search for manager by name"], ["players/get-next-matches", "Get recent matches and future matches in which the player attend"], ["players/get-last-matches", "Get last matches in which the player attended in the past"], ["players/get-statistics", "Get statistics of specific player in chosen season and league"], ["players/get-attribute-overviews", "Get attribute overviews of specific player recently"], ["players/get-last-ratings", "Get ratings of specific player recently"], ["players/get-characteristics", "Get characteristics of specific player"], ["players/get-national-team-statistics", "Get statistics of specific player in national team"], ["players/detail", "Get information of specific player"], ["players/get-statistics-seasons", "This endpoint is used together with \u2026/players/get-statistics endpoint to get corresponding seasonId"], ["players/get-last-year-summary", "Get summary of specific player in last year"], ["tournaments/list", "List all leagues in specific category or nation"], ["categories/list-live", "List all categories or nations having matches or events recently"], ["matches/get-esport-games", "Get eSport games (Only supports eSport matches)"], ["matches/get-player-heatmap", "Get player heatmap in a match\n- Link to SVG file to draw the background image of the football pitches https://apidojo.net/heatmap.svg"], ["matches/get-head2head", "Get head-to-head information between two teams"], ["matches/get-player-statistics", "Get player statistics in a match"], ["matches/get-tweets", "Get latest tweets relating to the match"], ["matches/get-media", "Get latest media relating to the match"], ["matches/get-statistics", "Get statistics of specific match"], ["matches/get-incidents", "Get incidents before match"], ["matches/get-votes", "Get votes for match, and players"], ["esport-games/get-rounds", "Get eSport game's rounds"], ["esport-games/get-statistics", "Get eSport game's statistics"], ["esport-games/get-lineups", "Get eSport game's lineups"], ["esport-games/get-bans", "Get eSport game's bans"], ["matches/get-best-players", "Get best players of specific match"], ["matches/get-graph", "Get graph to describe recent form between two teams"], ["players/get-transfer-history", "Get transfer history of specific player"], ["players/search", "Search for players by name"], ["teams/get-next-matches", "Get recent matches and future matches in which the team attend"], ["teams/get-last-matches", "Get last matches in which the team attended in the past"], ["teams/get-player-statistics", "Get player statistics of specific team in chosen season and league"], ["teams/get-player-statistics-seasons", "This endpoint is used together with \u2026/teams/get-player-statistics endpoint to get corresponding seasonId"], ["teams/get-statistics", "Get statistics of specific team in chosen season and league"], ["teams/get-near-events", "Get recent events of specific team"], ["teams/get-tournaments", "Get attended tournaments of specific team"], ["teams/detail", "Get information of specific team"], ["teams/get-transfers", "Get transfers of specific team"], ["teams/get-squad", "Get squad of specific team"], ["teams/search", "Search for teams by name"], ["teams/get-statistics-seasons", "This endpoint is used together with \u2026/teams/get-statistics endpoint to get corresponding seasonId"], ["teams/get-rankings", "Get rankings of specific team"], ["teams/get-performance", "Get performance of specific team"], ["auto-complete", "Get suggestions by term or phrase"], ["categories/list", "List all categories or nations for tournaments and leagues"]]}, "NFL Team Stats": {"tool_desc": "Current and historical team stats for every NFL football team.", "apis": [["Team Stats", "Over 500 different categorized statistics for each team in the NFL (depending on league year).  Optionally, pass in a league year and/or team to narrow the query results."]]}, "Cbet": {"tool_desc": "Games and pre-game Odds for Cbet", "apis": [["Matches", "Latest Matches for Cbet"], ["Odds", "Latest Odds for Cbet"]]}, "Rugby Live Data": {"tool_desc": "Rugby fixtures, results, standings and live match coverage from around the world.", "apis": [["Fixtures and Results By Team", "All fixtures and results for a given team"], ["Fixtures By Team By Season", "Fixtures and results for a given team within a given season, across all competitions they play in."], ["Fixtures By Date", "Returns fixtures and results by date. When date is not present, defaults to today."], ["Match", "Detailed match data given a valid match_id."], ["Fixtures By Team", "Lists only upcoming/in play fixtures for a given team. \n\n**Note** it will not list any results, so when a match reaches result status it drops off. Use Fixtures and Results By Team OR Fixtures  And Results by Team by Season endpoint for this functionality."], ["Teams By Competition Season", "Lists teams for a given competition and season"], ["Competitions", "Lists active competitions available to query"], ["Fixtures", "Lists fixtures for entire season using competion_id and season_id combination"], ["Standings", "Lists season standings for a given comp_id and season_id combination."]]}, "hockey-LIVE.sk data": {"tool_desc": "Get data for top hockey leagues and tournaments as NHL, IIHF World Championships and Olympic Games.", "apis": [["Game report", "Get game score, goals, penalties and team statistics for a certain game ID"], ["Last game report by teams", "Get the last game report of the two teams"], ["Games schedule", "Get games list for certain league and year"], ["Player statistics", "Get player historical statistics by his name or his ID"], ["Team standings", "Get current or historical team standings for the certain league and year"]]}, "168predict VIP Football Predictions": {"tool_desc": "168predict offers \"Daily\" accurate football predictions from 168 football leagues worldwide.", "apis": [["Today Sure VIP Under 3.5 Goals", "This endpiont delivers daily sure and precise under 3.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Tomorrow Sure VIP Under 3.5 Goals", "This endpiont delivers tomorrow sure and precise under 3.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Today Super Sure VIP HT/FT Forcast", "This group delivers daily HT/FT match forecasts. All of the forecasts have been carefully selected. Visit [**168predict**](www.168predict.site) for more information."], ["Tomorrow Super Sure VIP Double Chance Matches", "This endpiont delivers tomorrow super sure and precise Double Chance Matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Yesterday Super Sure VIP Double Chance Matches", "This endpiont delivers yesterday Double Chance Matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Today Super Sure VIP Double Chance Matches", "This endpiont delivers daily super sure and precise Double Chance matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Tomorrow Super Sure VIP Draw Matches", "This endpiont delivers tomorrow super sure and precise **Draw** matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Yesterday Super Sure VIP Draw Matches", "This endpiont delivers yesterday super sure and precise **Draw** matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Today Super Sure VIP Draw Matches", "This endpiont delivers daily super sure and precise Draw matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Tomorrow Super Sure VIP HT/FT Matches", "This endpiont delivers tomorrow super sure and precise HT/FT matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Yesterday Super Sure VIP HT/FT Matches", "This endpiont delivers yesterday super sure VIP HT/FT matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Tomorrow Super Sure VIP Prediction", "This endpiont delivers tomorrow super sure and precise match forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Yesterday Super Sure VIP Prediction", "This endpiont delivers yesterday super sure and precise match forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Today Super Sure VIP Predictions", "This endpiont delivers daily super sure and precise match forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Today Sure VIP Matche's Goals", "This endpiont delivers daily sure and precise matches for today. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Tomorrow Sure VIP BTTS/ Goal Goal", "This endpiont delivers tomorrow sure and precise BTTS/Goal Goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Yesterday Sure VIP BTTS/Goal Goal", "This endpiont delivers yesterday BTTS/Goal Goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Today Sure VIP BTTS/Goal Goal", "This endpiont delivers daily sure and precise BTTS/Goal Goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Yesterday Sure VIP Over 2.5 Goals", "This endpiont delivers yesterday over 2.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Tomorrow Sure VIP Over 2.5 Goals", "This endpiont delivers tomorrow sure and precise over 2.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Today Sure VIP Over 2.5 Goals", "This endpiont delivers daily sure and precise over 2.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Tomorrow Sure VIP Over 1.5 Goals", "This endpiont delivers tomorrow sure and precise over 1.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Yesterday Sure VIP Over 1.5 Goals", "This endpiont delivers yesterday over 1.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Today Sure VIP Over 1.5 Goals", "This endpiont delivers daily sure and precise over 1.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."], ["Yesterday Sure VIP Under 3.5 Goals", "This endpiont delivers yesterday under 3.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."]]}, "MMA Stats": {"tool_desc": "", "apis": [["UFC Fight Night: Vettori vs. Cannonier (June 17, 2023)", "**UFC Fight Night: Vettori vs. Cannonier**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."], ["UFC Fight Night: Emmett vs. Topuriar (June 24, 2023)", "**UFC Fight Night: Emmett vs. Topuria**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."], ["UFC 289: Nunes vs. Aldana (June 10, 2023)", "**Get details to  UFC 289: Nunes vs. Aldana**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."], ["UFC Fight Night: Holloway vs. Allen ( April 15, 2023)", "**Get details to UFC Fight Night: Holloway vs. Allen**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."], ["UFC Fight Night: Song vs. Simon ( April 28, 2023)", "**Get details to UFC Fight Night: Song vs. Simon**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."], ["UFC Fight Night: Pavlovich vs. Blaydes ( April 22, 2023)", "**Get details to UFC Fight Night: Pavlovich vs. Blaydes**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."], ["UFC Fight Night: Dern vs. Hill (May 20, 2023)", "**Get details to UFC Fight Night: Dern vs. Hill**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."], ["UFC 288: Sterling vs. Cejudo (  May 06, 2023)", "**Get details to  UFC 288: Sterling vs. Cejudo**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."], ["UFC Fight Night: Rozenstruik vs. Almeida (May 13, 2023)", "**Get details to UFC Fight Night: Rozenstruik vs. Almeida**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."], ["UFC Fight Night: Kara-France vs. Albazi (June 03, 2023)", "**Get details to UUFC Fight Night: Kara-France vs. Albazi**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."], ["search fighter stats by age", "The search functionality provided helps you find fighter statistics and UFC/MMA history based on their age. It compares your search criteria with the fighters' information and returns a list of fighters that match all the specified criteria, including their statistics, averages, titles, wins, losses, and more."], ["search fighter stats", "The search functionality provided helps you find fighter statistics and UFC/MMA history based on their names. It compares your search criteria with the fighters' information and returns a list of fighters that match all the specified criteria, including their statistics, averages, titles, wins, losses, and more."], ["search event details", "This lets you search for specific fights by the names of the fighters involved. The response returned by the API endpoint includes details such as the date of the fight, the name of the fighters involved, and the outcome of the fight."], ["UFC 287: Pereira vs. Adesanya 2 (April 08 2023)", "**Get details to UFC 287: Pereira vs. Adesanya 2.**.    \n  .Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."]]}, "SportScore": {"tool_desc": "Multiple sports API.", "apis": [["Referee list", "Returns a list of referees"], ["Manager transfers", "Returns a manager transfers"], ["Medias by player ID", "Get a list of media belonging to a specified player"], ["List of common translations", "Returns a list of translation"], ["Transfers by player ID", "Get a list of transfer histories belonging to a specified player. Returns a list of transfer histories"], ["Lineups by event ID", "Get a list of lineups belonging to a specified event. Returns a list of lineups. Use `Meta/Player positions list` to translate"], ["Medias by event ID", "Get a list of media belonging to a specified event. Returns a list of media."], ["Events by section ID", "Get a list of events belonging to a specified section. Returns a list of events"], ["Manager list", "Returns a list of managers"], ["Event list", "Returns a list of events. Simple pagination is used"], ["Series by event ID", "Get a list of series belonging to a specified event. Returns a list of series."], ["Player list", "Returns a list of players"], ["Event data", "Returns event data by event ID"], ["Challenges list", "Returns a list of challenges"], ["Statistics by player ID", "Get player statistics list by player ID. Season statistics. Returns a list of statistics"], ["Tennis rankings WTA list", "Returns a list of tennis rankings WTA"], ["Teams by sport ID", "Get a list of teams belonging to a specified sport. Returns a list of teams"], ["Teams by player ID", "Get a list of teams belonging to a specified player. Returns a list of teams"], ["Event live list", "Get a list of live events. Returns list of events"], ["Standings-tables by season ID", "Get a list of standing-tables belonging to a specified season. Returns a list of standing-tables"], ["Lineups by team ID", "Get a list of lineups belonging to a specified team. Returns a list of lineup"], ["Events by sport ID and date", "Get a list of events belonging to a specified sport and date. Returns a list of events. Use `Meta/List of event status` to translate"], ["Events by league ID", "Get a list of events belonging to a specified league. Returns a list of events"], ["Season list", "Returns a list of seasons"], ["Media list", "Returns a list of medias. Simple pagination is used"], ["Markets by event ID", "Returns a list of markets belonging to a specified event"], ["Venues list", "Returns a list of venues"], ["Tennis points by event ID", "Sports: tennis. Get a list of points by points belonging to a specified event. Returns a list of points."], ["Player data", "Get player data by player ID. Returns player data"], ["League list", "Returns a list of league"], ["Events by referee ID", "Get a list of events belonging to a specified referee. Returns a list of events"], ["Statistics by event ID", "Get a list of statistics belonging to a specified event. Returns a list of statistics."], ["Player positions list", "Returns a list of player positions"], ["Challenges by league ID", "Get a list of challenges belonging to a specified league. Returns a list of challenges"], ["Event list by date", "Returns a list of events by date. Use your own filters to filter the resulting list more accurately."], ["Team list", "Returns a list of team"], ["Challenges by section ID", "Get a list of challenges belonging to a specified section. Returns a list of challenges"], ["Managers by sport ID", "Get a list of managers belonging to a specified sport. Returns a list of managers"], ["Events by season ID", "Get a list of events belonging to a specified season. Returns a list of events"], ["Section list", "Returns a list of section"], ["LineupToPlayer by player ID", "Get a list of lineup-to-players belonging to a specified player"], ["Sport list", "Returns a list of sports. This is the main way to get the IDs of the available sports for future inquiries."], ["Sections by sport ID", "Get a list of sections belonging to a specified sport. Returns a list of sections"], ["Seasons by player ID", "Get a list of seasons belonging to a specified player. Returns a list of seasons"], ["Leagues by sport ID", "Get a list of leagues belonging to a specified sport. Returns a list of leagues"], ["Challenges by sport ID", "Get a list of challenges belonging to a specified sport. Returns a list of challenges"], ["Incidents by event ID", "Get a list of incidents belonging to a specified event. Sort in order. Returns a list of incidents."], ["\u0421up-trees by season ID", "Get a list of cup-trees belonging to a specified season. Returns a list of cup-trees"], ["Leagues by section ID", "Get a list of leagues belonging to a specified section. Returns a list of leagues"], ["Players by team ID", "Get a list of players belonging to a specified team. Returns a list of players"], ["H2H events by team ID", "Get a list of events belonging to a specified team. Returns a list of events"], ["Sub teams by team ID", "Returns a list of sub-teams"], ["Players by sport ID", "Get a list of players belonging to a specified sport. Returns a list of players"], ["Seasons by league ID", "Get a list of seasons belonging to a specified league. Returns a list of seasons"], ["Teams by season ID", "Get a list of teams belonging to a specified season. Returns a list of teams"], ["Events live by sport ID", "Get a live list of events belonging to a specified sport. Returns a list of live events"], ["Events by sport ID", "Get a list of events belonging to a specified sport. Returns a list of events"], ["Seasons by sport ID", "Get a list of seasons belonging to a specified sport. Returns a list of seasons"], ["Seasons by team ID", "Get a list of seasons belonging to a specified team. Returns a list of seasons"], ["Tennis rankings ATP list", "Returns a list of tennis rankings ATP"], ["Metrika by team ID", "Get team metrika and statistics. Returns metrika data."], ["Events by team ID", "Get a list of events belonging to a specified team. Returns a list of events"]]}, "Soccer Data": {"tool_desc": "Broadage Soccer API brings a wide range of data for Soccer in fixtures, livescores, standings and many more.", "apis": [["Red Card Leaderboard", "List of players shown most red cards of the competition supported with player stats."], ["Team Squad", "List of players in a team."], ["Daily Match List-Results", "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Daily Match List-All", "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Yellow Card Leaderboard", "List of players shown most yellow cards of the competition supported with player stats."], ["Tournament Teams", "List of teams participating in a specific tournament."], ["Tournament Info", "Current season, stage structure(groups,knockout stages etc.), country and many more information about a tournament."], ["Daily Match List-Scheduled", "Daily match list including scheduled matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Goal Leaderboard", "Top scorers of the competition supported with player stats."], ["Match Events", "Goals, yellow cards, red cards and substitutions in a match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**"], ["Tournament Standings", "Team Rankings for a specific competition."], ["Team Squad with Stats", "List of players in a team with their respective stats."], ["Team Schedule", "Team fixtures by all the tournaments a team participates."], ["Match Events-All", "All of the events occuring in a match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**"], ["Daily Match List-Live", "Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Match Commentary", "Live event based commentary with texts and events.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**"], ["Missing Player List", "List of injured and suspended players for the matches in a specific date.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today +- 7 days.**"], ["Match Lineup", "Team lineups, formations and head coaches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**"], ["Match Statistics", "Live in match team statistics for each team in a match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**"], ["Match Summary", "Match scores, match status, team names, stadium, referee and weather forecast.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**"], ["Seasonal Market Statistics: Goals", "Provides under/over, both team to score and also total goals statistics of the team in the tournament.\n\nP.S.\nFull data is available at Seasonal Market Statistics: Goals endpoint but can not be shown in mock response."], ["Market Tables: Under/Over", "Provides under/over statistics of the teams in the tournament, ordered by the tournament standings.\n\nP.S.\nFull data is available at Market Tables: Under/Over endpoint but can not be shown in mock response."], ["Market Tables: Total Goals", "Provides total goals statistics of the teams in the tournament, ordered by the tournament standings.\n\nP.S.\nFull data is available at Market Tables: Total Goals endpoint but can not be shown in mock response."], ["Market Tables: Both Teams to Score", "Provides both team to score statistics of the teams in the tournament, ordered by the tournament standings.\n\nP.S.\nFull data is available at Market Tables: Both Teams to Score endpoint but can not be shown in mock response."], ["Referee Statistics", "Provides the information about referee and his/her statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**"], ["Goal Analysis: Scoring First in Between", "Provides the scoring first goal statistics of the teams between in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints."], ["Seasonal Goal Analysis: Goal Conceded Minutes", "Provides the goal conceded goal statistics of the teams against to other teams in the tournament in the minutes intervals(0-10, 11-20, 21-30...etc.)"], ["Seasonal Goal Analysis: Goal Minutes", "Provides the goals statistics of the teams against to the other teams(in tournament) in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints."], ["Recent Match List", "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.\n\nP.S.\nFull data is available at Recent Match List endpoint but can not be shown in mock response."], ["Market Statistics: Goals", "Provides the market goals statistics which are \u201cBoth Teams to Score\u201d, \u201cUnder/Over\u201d and also \u201cTotal Goals\u201d for both two teams against the other teams in the tournament.\n\nP.S.\nFull data is available at Market Statistics: Goals endpoint but can not be shown in mock response.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints."], ["Seasonal Statistics: Goals", "Provides the goal statistics of the team in the tournament."], ["Seasonal Goal Analysis: Conceding First", "Provides the conceding first goal statistics of the teams against to other teams in the tournament in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints."], ["Result Statistics", "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints."], ["Team Streaks", "Provides the streaks(winning, draw, losing...etc.) of both two teams in tournament.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints."], ["Goal Analysis: Goal Minutes in Between", "Provides the goals statistics of the teams between in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints."], ["Seasonal Goal Analysis: Scoring First", "Provides the scoring first goal statistics of the teams against to other teams in tournaments in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**"], ["Tournament List", "Provides list of tournaments."], ["Tournament Fixture", "Full match list with half time and final scores, with additional info for each match such as referee and stadium."], ["Assist Leaderboard", "Provides assist leaderboard data of the tournament."]]}, "Decathlon Sport Places": {"tool_desc": "GeoJSON-based open API used to reference geospatial data across Canada, the US/Canada, Europe, and Hong Kong.", "apis": [["Places", "List out places around a location"]]}, "Basketball - DataFeeds by Rolling Insights": {"tool_desc": "Real-time Play by Play, Season Schedule, Weekly Schedules, Daily Schedules, Team Information, Team Stats, Player Information, Player Stats, Injuries and Depth Charts for the NBA.", "apis": [["Team Information", "This endpoint returns team information"], ["Player Injuries", "Returns a record of each player's injury on a team"], ["Daily Schedule", "Returns season schedule for the specified date or \"now\" returns current day's schedule. Daily schedule is changed at 10 AM ET."], ["Player Season Statistics", "Returns Player Season Statistics"], ["Team Season Statistics", "Returns statistics for teams"], ["Weekly Schedule", "Returns all events from the date specified plus 7 days in advance"], ["Team Depth Charts", "Returns player depth charts for a team"], ["Live Game Data", "This endpoint provides real-time game box scores."], ["Player Information", "This endpoint returns player demographic information"], ["Season Schedule", "Returns season schedule for the specified season. If omitted, returns the schedule for current season."]]}, "Chillybets": {"tool_desc": "Games and pre-game Odds for Chillybets", "apis": [["Matches", "Latest Matches for Chillybets"], ["Odds", "Latest Odds for Chillybets"]]}, "SureBets": {"tool_desc": "API for Surebets in sports betting", "apis": [["Get Bookmakers", "Get a list of all supported bookmakers"], ["List", "Get all available Surebets"]]}, "Football - DataFeeds by Rolling Insights": {"tool_desc": "Real-time Play by Play, Season Schedule,  Weekly Schedules, Daily Schedules, Team Information, Team Stats, Player Information, Player Stats, Injuries  and Depth Charts for the NFL.", "apis": [["Team Depth Charts", "Returns player depth charts for a team"], ["Player Injuries", "Returns a record of each player's injury on a team"], ["Player Season Statistics", "Returns Player Season Statistics"], ["Player Information", "This endpoint returns player demographic information"], ["Team Season Statistics", "Returns statistics for teams"], ["Team Information", "This endpoint returns team information"], ["Live Game Data", "This endpoint provides real-time game box scores."], ["Daily Schedule", "Returns season schedule for the specified date or \"now\" returns current day's schedule. Daily schedule is changed at 10 AM ET."], ["Season Schedule", "Returns season schedule for the specified season. If omitted, returns the schedule for current season."], ["Weekly Schedule", "Returns all events from the date specified plus 7 days in advance"]]}, "Tank01 Fantasy Stats": {"tool_desc": "NBA (National Basketball League) Live In Game Fantasy Stats - NBA.", "apis": [["Get NBA Games and Stats for a Single Player", "This call will grab a map of all of the games a player has played in the season.     \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \nseason is an optional parameter.  Currently only 2022 (last season) and 2023 (this season) are available.  If you do not include season as a parameter, it will return this season's games. \n\nExample:\nCorrect way to get the stats for Nikola Vucevic for his game against the Heat on 10/19/2022 would be this:\n/getNBAGamesForPlayer?playerID=28268405032&gameID=20221019_CHI@MIA\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nIf you want his games from last season, do this..\n/getNBAGamesForPlayer?playerID=28268405032&season=2022\n\nBut if you wanted to get all of his games this season, you don't have to include the season. Simply make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getNBABoxScore call with that specific gameID."], ["Get Teams", "This call will retrieve the list of NBA teams. Included is their name, city, abbreviation, and teamID which can be used in other calls.   This also includes standings (win/loss/ppg/oppg/streak) data.\n\nIn the team rosters, all player information is available, which includes current injury status. \n\n/getNBATeams\n\nOptional parameters are schedules=true ,  rosters=true , and/or topPerformers=true\n\ntopPerformers get returned in a list for each stat, since a team might have multiple leaders averaging the same amount of whichever stat."], ["Get NBA Betting Odds", "This grabs NBA betting/gambling lines and odds from some of the most popular online sportsbooks (fanduel, betrivers, betmgm, caesars, pointsbet, etc). \n\nYou can call this for specific game or a specific date.  Check out the example responses here for the type of data you can expect back.   Some of the sportsbooks do not offer live betting, so data from those sportsbooks will not be returned after the game starts.  \n\n\nEither gameDate or gameID is required.\nExamples of what the calls can look like:\n/getNBABettingLines?gameDate=20221227\n/getNBABettingLines?gameID=20221227_DEN@SAC"], ["Get Player Information", "Call this to get general information on each player (name, team, experience, birthday, college, etc).\n\nYou can call with their playerID, if you know it.  playerID calls will always be quicker as it acts on the key of the table.  \n\nYou can also call with playerName.  This call will return a list of players who have that name.  If you want to include spaces in the search name, then use underscore.  So if you want to find LeBron, you can use lebron_james and it will bring him back.  Or try with playerName=smith and it will return a list of guys with smith in their name.\n\n/getNBAPlayerInfo?playerID=28908111729\n\n/getNBAPlayerInfo?playerName=smith\n\netc"], ["Get NBA Injury List History", "This table currently has injury history from the years 2020, 2021, 2022, and 2023 for players who played an NBA game in the 21-22 season and afterwards.  Consider this table as \"beta\" at this point, as we are still collecting previous seasons' data and working through some challenges. \n\nparameters:\n(All dates must be in format YYYYMMDD)\nplayerID - Use this if you only want to pull back injury history from a specific player.\ninjDate - Use this is to pull back injury history for only a specific date.\nThe next two are used to pull back a range of dates.  You can use one or the other. Or none. \nbeginningInjDate - Lower boundary of the range of dates. Inclusive\nendInjDate - Upper boundary of the range of dates.  Inclusive.\nyear - If your range of dates include multiple years, the api will only pull back dates for one year.  If year isn't selected then you will get injuries from current year.   Using \"year\" without any other parameters will do nothing and the api will still bring back the default, last 14 days of injuries.\nnumberOfDays - Valid for numbers 0 through 30, you can pull back information from the previous 0 to 30 days.  \nCalling this endpoint with no parameters will give a list of all players injuries from the last 14 calendar days. \n\nAgain, please consider this endpoint as not fully functional and it could be buggy.  We'll update the description here whenever we add more years, add options, or finalize the interface.\n\nWe encourage testing and feedback here.  Thanks in advance!"], ["Get Team Roster", "This call returns the current or historical* roster of any team, using the teamID that can be found in \"getNBATeams\" call.\n\nRosters are updated a few times throughout the day.  Usually once per hour and before each game starts.\n \nCall needs to look like this:\n/getNBATeamRoster?teamID=1\nor\n/getNBATeamRoster?teamAbv=ATL\n\n\nThat will return a list of the team's current roster players in the body.\n\nHistorical rosters are saved on a daily basis as of 20230505 and moving forward. \n\nAdd parameter archiveDate to the call to get a list of roster players (playerID's only) for that specific date.  Historical roster dates only are kept as far back as 20230505."], ["Get Team Schedule", "This call returns the schedule of any team, using the teamID that can be found in \"getNBATeams\" call.\n\nCall needs to look like this:\n\n/getNBATeamSchedule?teamID=1\n\nYou can also use the team Abbreviation:\n\n/getNBATeamSchedule?teamAbv=CHI   \n\nThat will return a list of the team's games in the body. \n\nTo get a list of appropriate team abbreviations, use the getTeams call.\n\nYou can also add the \"season\" parameter if you want to specify season.  Right now we only have season 2022 and 2023.   \nDefault season is current season."], ["Get Player List", "Grabs all of this season's players and their IDs.  \n\nONE CALL is all you need to retrieve every player.  No need to call multiple times to get the full list.\n\nRosters are updated multiple times per day during the season.\n\nYou mainly will use this to match a player with his playerID.\n\nThere are no parameters, just a simple call..\n\n/getNBAPlayerList"], ["Get Daily Schedule", "Get basic information on which games are being played during a day.  \ncall is like this:\n/getNBAGamesForDate?gameDate=20220310\nThe above call will return all of the games from March 10th, 2022.  Date must be in that format.  \nFor March 10th, there were two games. They come back in a list format within the body of the response."], ["Get General Game Information", "This call pulls back the most general information for a game: away team, home team, game date, and game start time.  All times are in Eastern (ET) time zone.  \ngameID is needed.  You can retrieve gameID from a few different calls.  The \"getNBAGamesForDate\" call or the \"getNBATeamSchedule\" call will be the best ways to get the gameID's.   \n\nCall should look like this: \n/getNBAGameInfo?gameID=20220310_BKN@PHI"], ["Get Game Box Score - Live - Real Time", "Retrieves the entire box score for a game either in progress or already completed for the current season.  The stats retrieved here are what are normally shown in box scores or used in fantasy games.  If there are any stats here that you'd like to see, please message me.  \n\nThis does retrieve live stats, however please keep in mind that NBA games tend to begin about 10 minutes later than their official start time.  This can be even longer for nationally televised games.  So if you are looking for live stats of a game that starts at 7, and you don't see anything even at 7:10, don't worry.  It will show up almost immediately after the game starts.    \n\nThe call looks like this /getNBABoxScore?gameID=20220310_BKN@PHI\n\nThe call needs to be exactly in the same format as above.  8 digit date, underscore, then the away team abbreviation, @, then home team abbreviation.  Complete list of team abbreviations can be retrieved with the getNBATeams call or various other calls.  \n\nBut, the best way to find specific game ID's are either from the \"getNBAGamesForDate\" call, or the \"getNBATeamSchedule\" call."], ["Get Daily Scoreboard - Live - Real Time", "This call will pull game scores and no other stats.  \n/getNBAScoresOnly\nCall it with no parameters, it will return the current date's game list with their scores.  \n\nYou can use both gameID and gameDate for parameters.  gameID will give you only the scores for one specific game.  gameDate will give you the scores for every game on that date.  \n\nExample, to get all games for March 11, 2022\n/getNBAScoresOnly?gameDate=20220311\nor you can use this call to get just one specific game \n/getNBAScoresOnly?gameID=20220311_DAL@HOU\nor call with no parameters for the games for 'current processing day'.\n\nIf you want to include the top performers from each team when game is in progress, include  topPerformers paremter. \n It needs to be &topPerformers=true"]]}, "AllScores": {"tool_desc": "Beware!", "apis": [["Stats", "Get competitor or competition stats."], ["Sports", "Get list of sports."], ["Paging Games", "Get games from paging for competitors or competitions."], ["Custom Scores", "Get custom scores for competitors and competitions."], ["Athlete Small Image", "Get athlete small image. It generates image/png."], ["Competition Large Image", "Get competition large image. It generates image/png."], ["Competitor Large Image", "Get competitor large image. It generates image/png."], ["Competitor Current Games", "Get competitor current games."], ["Competition Small Image", "Get competition small image. It generates image/png."], ["Results", "Get results for competitors or competitions."], ["Competitor Small Image", "Get competitor small image. It generates image/png."], ["Athlete Large Image", "Get athlete large image. It generates image/png."], ["Athlete Trophy Stats", "Get athlete trophy stats."], ["Country Flag", "Get country flag. It generates image/png."], ["Fixtures", "Get fixtures for competitors or competitions."], ["Game H2H Matches", "Get game h2h matches."], ["Countries", "Get list of countries."]]}, "NCAA Final Four": {"tool_desc": "Historical data for every NCAA Men's Final Four.", "apis": [["Champion", "Get championship team data for the given year."], ["Most Outstanding Player", "Get the tournament Most Outstanding Player for the given year.  '*' indicates player was not on the championship team."], ["Seeds", "Get the number 1 seeds for the given year (only available from 1979 onwards)."], ["List of nicknames", "Get a list of every Final Four team nickname sorted alphabetically."], ["Team appearances", "Get a list of every team and the years they appeared in the Final Four."], ["Team championships by  count", "Get a list of teams ranked by total number of championships."], ["Coach appearances", "Get a list of every coach along with the team and year of each Final Four appearance."], ["Team appearances by count", "Get a list of team appearances in the Final Four ranked by count."], ["Coach championships by count", "Get a list of coaches ranked by total number of championships."], ["Coach appearances by count", "Get a list of coach appearances in the Final Four ranked by count."], ["Detail", "Get the full Final Four data set for the given year."], ["List of schools", "Get a list of every Final Four school sorted alphabetically."], ["List of teams", "Get a list of every Final Four team sorted alphabetically."], ["List of locations", "Get a list of every Final Four location sorted alphabetically."], ["List of venues", "Get a list of every Final Four venue sorted alphabetically."], ["List of MOPs", "Get a list of every Final Four Most Outstanding Player sorted alphabetically."], ["List of coaches", "Get a list of every Final Four coach sorted alphabetically."], ["List of champions", "Get a list of every National Champion sorted alphabetically."], ["Runner-up", "Get runner-up team data for the given year."], ["Schools", "Get number of schools in tournament for the given year."], ["Summary", "Get the basic Final Four data set for the given year."], ["Location", "Get the Final Four city and venue for the given year."], ["Fourth Place", "Get fourth place team data (only available between 1946 and 1981) for the given year."], ["Third Place", "Get third place data (only available between 1946 and 1981) for the given year."], ["Final Four", "Get the Final Four teams for the given year."]]}, "NCAA Champions": {"tool_desc": "API that provides yearly historical data for NCAA Division I  tournaments", "apis": [["Get NCAA Men 2000-2021", "This endpoint retrieves NCAA championship data from 2000 until 2021"]]}, "Betmaster": {"tool_desc": "Games and pre-game Odds for Betmaster", "apis": [["Odds", "Latest Odds by Betmaster."], ["Matches", "Latest Matches by Betmaster"]]}, "BaseballApi": {"tool_desc": "Check baseball live scores on BaseballAPi every game in real time.", "apis": [["Search", "Search for baseball-related entities using the provided search term, and filter the results to show only baseball-related entities."], ["PlayerPlaceholderImage", "Get the player placeholder image in PNG format."], ["TeamPlaceholderImage", "Get the team placeholder image in SVG format."], ["LeagueAwayStandings", "Get the away standings of a specific baseball league for a specific season."], ["PlayerNearMatches", "Get the near matches for a specific baseball player using the player ID."], ["TVCountries", "Get a list of countries and their respective TV channels broadcasting a specific Football match."], ["CategoryFlag", "Get the flag image of a specific category in PNG format."], ["MatchLineups", "Get the lineups for a specific baseball match by providing its ID."], ["LeagueDetails", "Get the details of a specific baseball league using the unique tournament ID."], ["MatchStatistics", "Get the statistics for a specific baseball match by providing its ID."], ["PlayerRegularSeasonStatistics", "Get the regular season statistics for a specific baseball player using the player ID, tournament ID, and season ID."], ["LeagueHomeStandings", "Get the home standings of a specific baseball league for a specific season."], ["PlayerStatisticsSeasons", "Get the statistics seasons for a specific baseball player using the player ID."], ["PlayerLastMatches", "Get the last matches played by a specific Baseball player by providing the player ID and page number."], ["LeagueTotalStandings", "Get the total standings of a specific baseball league for a specific season."], ["TeamStandingsSeasons", "Get the team standings for different seasons for a given team by providing its ID."], ["LeagueNextMatches", "Get the next matches for a specific baseball league using the tournament ID, season ID, and page."], ["LeagueMedia", "Get the media for a specific baseball league using the unique tournament ID."], ["PlayerImage", "Get the image for a specific baseball player using the player ID. Generates a PNG image."], ["TeamTournaments", "Get the tournaments in which a specific baseball team participates."], ["MatchHighlights", "Get the highlights of a specific baseball match using the match ID."], ["LeagueTotalTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for both home and away events."], ["LeagueCupTrees", "Get the cup trees for a specific baseball league using the tournament ID and season ID."], ["CategoryTournaments", "Get a list of all leagues from a specific baseball category using the category ID."], ["TournamentPlaceholderImage", "Get the tournament placeholder image in PNG format."], ["MatchSchedules", "This operation returns the baseball match schedules for the given date, including match timings, teams, and other relevant information."], ["MatchDetails", "Get detailed information for a specific baseball match by providing the match ID."], ["PlayerDetails", "Get the details for a specific baseball player using the player ID."], ["LeagueAwayTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for away events."], ["LeagueSeasons", "Get the seasons for a specific baseball league using the unique tournament ID."], ["TeamLogoImage", "Get the logo image for a specific baseball team using the team ID. Generates a PNG image."], ["LiveMatches", "Get live baseball matches that are currently taking place."], ["TeamNextMatches", "Get upcoming baseball matches for a specific team."], ["CategorySchedules", "Get the baseball match schedules for a specific day and category using the category ID, day, month, and year."], ["MatchOdds", "Get the odds for a specific baseball match using the match ID."], ["LeagueLogoImage", "Get the logo image for a specific baseball league using the unique tournament ID. Generates a PNG image."], ["TeamDetails", "Get the details for a specific baseball team using the team ID."], ["MatchH2HDuel", "Get the head-to-head duel for a specific baseball match using the match ID."], ["MatchTvChannelDetails", "Get the details of a specific TV channel broadcasting a specific Football match."], ["TeamNearMatches", "Get the near matches for a specific baseball team using the team ID."], ["get-manager-placeholder", "Get the manager placeholder image in PNG format."], ["TeamLastMatches", "Get the last matches for a specific baseball team by providing its ID and page number."], ["LeagueLastMatches", "Get the last matches for a league by providing the unique tournament ID, season ID, and the page number (0-based)."], ["MatchVotes", "Get the votes for a specific baseball match using the match ID."], ["TeamMedia", "Get the media for a specific baseball team using the team ID."], ["HeadToHeadMatches", "Get head-to-head match data for a specific baseball match using its custom ID."], ["PreMatchForm", "Get the pre-match form for a specific baseball match using the match ID."], ["TeamPlayers", "Get the players for a specific baseball team using the team ID."], ["LeagueHomeTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for home events."], ["Categories", "Get a list of all baseball categories."]]}, "Football xG Statistics": {"tool_desc": "Football (soccer) xG statistics.", "apis": [["Tournaments List By CountryId", "The method is used to get a list of leagues (divisions) by the country id."], ["Seasons List By TournamentId", "The method is used to get a list of seasons  by the league id."], ["Fixture By FixtureId", "The method is used to get info and events of fixtures by the fixture id."], ["Odds For Upcoming Fixtures", "Get odds of future fixtures. \nUpdates every minute."], ["Fixtures List By SeasonId", "The method is used to get a list of fixtures by the season id."], ["Countries List", "The method is used to get list of all countries"]]}, "Formula 1 - fixed": {"tool_desc": "F1", "apis": [["Listoffinishingstatusforaspecificseason", "To fetch the list of finishing status of a specific season(year)."], ["Driverstandingsafterarace", "To fetch the driver standings after a specific race(round) in a season(year), use this endpoint."], ["Listofalldrivers", "To obtain a list of all drivers.\n\nDriver lists can be refined by adding one or more of the following criteria:\n\n/circuits/<circuitId>\n/constructors/<constructorId>\n/drivers/<driverId>\n/grid/<position>\n/results/<position>\n/fastest/<rank>\n/status/<statusId>\n\nFor example, to list all drivers who have driven for a specific constructor at a particular circuit:\n\nhttp://ergast.com/api/f1/constructors/mclaren/circuits/monza/drivers\n\nAlternatively, to list the drivers who have achieved a particular final position in the championship:\n\nhttp://ergast.com/api/f1/driverStandings/1/drivers\n\nDrivers who participated in the 2014 season onwards have a permanent driver number."], ["CircuitInformation", "Each constructor listed in the response is identified by a unique circuitId which is used to identify the constructor throughout the API. To obtain information about a particular circuit append the circuitId (name of the circuit)\n\nThis endpoint is to obtain the information of a particular circuit based on the circuitId (circuit name)"], ["Listofalldriverswithinaraceinayear", "This endpoint is to obtain a list of all drivers in a particular race(round) of a season(year)"], ["Listofalldriverswithinayear", "This endpoint is to obtain a list of all drivers in a particular season (year)"], ["Listofallcircuits", "This endpoint is to obtain a list of all constructors.\n\n\nCircuit lists can be refined by adding one or more of the following criteria:\n\n/constructors/<constructorId>\n/drivers/<driverId>\n/grid/<position>\n/results/<position>\n/fastest/<rank>\n/status/<statusId>\n\nFor example, to list all circuits at which a specific driver has driven for a particular constructor:\n\nhttp://ergast.com/api/f1/drivers/alonso/constructors/mclaren/circuits"], ["DriverInformation", "Each driver listed in the response is identified by a unique driverId which is used to identify the driver throughout the API. To obtain information about a particular driver append the driverId\n\nThis endpoint is to obtain the information of a particular driver based on the driverid (driver name)"], ["Listofallconstructors", "This endpoint is to obtain a list of all constructors.\n\nConstructor lists can be refined by adding one or more of the following criteria:\n\n/circuits/<circuitId>\n/constructors/<constructorId>\n/drivers/<driverId>\n/grid/<position>\n/results/<position>\n/fastest/<rank>\n/status/<statusId>\n\nFor example, to list all constructors a specific driver has driven for at a particular circuit:\n\nhttp://ergast.com/api/f1/drivers/alonso/circuits/monza/constructors\n\nAlternatively, to list all the constructors who have achieved a particular final position in the championship:\n\nhttp://ergast.com/api/f1/constructorStandings/1/constructors"], ["SeasonsList", "This endpoint gives the seasons currently supported by the API.\n\n\nSeason lists can be refined by adding one or more of the following criteria:\n\n/circuits/<circuitId>\n/constructors/<constructorId>\n/drivers/<driverId>\n/grid/<position>\n/results/<position>\n/fastest/<rank>\n/status/<statusId>\n\nFor example, to list all seasons where a specific driver has driven for a particular constructor:\n\nhttp://ergast.com/api/f1/drivers/alonso/constructors/renault/seasons\n\nAlternatively, to list the seasons where a specific driver or constructor has achieved a particular final position in the championship:\n\nhttp://ergast.com/api/f1/drivers/alonso/driverStandings/1/seasons\nhttp://ergast.com/api/f1/constructors/renault/constructorStandings/1/seasons"], ["Informationforaspecificpitstop", "This endpoint requires the season(year), race(round) and pit stop number(pitstopnumber) to be specified."], ["Allwinnersofdrivers'championships", "To fetch all the winners information of drivers."], ["Seasonenddriverstandings", "Driver Standings at the end of the season(year)."], ["Listofallfinishingstatuscodes", "Every driver has a finishing status like 'finished', disqualified', 'accident', '+1 lap', '+2 lap', etc. This endpoint will give the list of all such statuses. Example request and response attached"], ["Infoaboutaspecificrace", "To obtain the schedule of races for a specific race(round) in a season(year), use this endpoint."], ["Listoffinishingstatusforaspecificroundinaseason", "To fetch the list of finishing status of a specific race(round) in a season(year)."], ["Mostrecentraceresult", "Results from the most recent race can be obtained using this endpoint."], ["Scheduleofracesforaseason", "To obtain the schedule of races for a specific season use this endpoint required season (year)."], ["Listofallconstructorswithinayear", "This endpoint is to obtain a list of all constructors in a particular season (year)"], ["ConstructorInformation", "Each constructor listed in the response is identified by a unique constructorId which is used to identify the constructor throughout the API. To obtain information about a particular constructor append the constructorId (name of the constructor)\n\nThis endpoint is to obtain the information of a particular constructor based on the constructorId (constructor name)"], ["Constructorstandingsbyspecifyingtheconstructor", "Constructor standings by giving in the constructorid(name of the constructor)."], ["Currentdrivers'standing", "Current driver standings can always be obtained using this endpoint."], ["Pitstopdataforarace", "This endpoint requires the season(year) and race(round) to be specified."], ["Listofallconstructorswithinaraceinayear", "This endpoint is to obtain a list of all constructors in a particular race(round) of a season(year)"], ["Seasonendconstructorstanding", "Constructor Standings at the end of the season(year)."], ["Constructorstandingsafterarace", "To list the constructor standings after a specific race (round) in a season(year), use this endpoint."], ["RaceResult", "This endpoint gives the result for a specific race (round) in a season(year).\n\n\nIf the results for the specified race are not yet available the RaceTable element in the response will be empty."], ["Scheduleofthecurrentseason", "To obtain the schedule of races for the current season, use this endpoint."], ["Laptime", "This endpoint requires the season(year), race(round) and lap number(lapnumber) to be specified."], ["Currentconstructor'sstanding", "Current constructor standings can always be obtained using this endpoint."], ["Driverstandingsbyspecifyingthedriver", "Driver standings by giving in the driverid(name of the driver)."], ["Allwinnersofconstructors'championships", "To fetch all the winners information of constructors."]]}, "Golf Leaderboard Data": {"tool_desc": "Major golf tours, fixtures, results and up to the minute leaderboard data to enhance your applications.", "apis": [["PGA Scorecards", "Provides scorecards for a given player in a given tournament"], ["Projected PGA Rankings", "This endpoint allows you to see the projected PGA rankings throughout a PGA event"], ["World Rankings", "World Golf Rankings for players across all tours. Big file, shouldn't be queried often."], ["Tour Rankings", "See player rankings accross the various tours given a `tour_id` and `season`"], ["Fixtures", "Lists tournament fixtures for a given tour_id and season_id. You'll need to query the \"Tours\" endpoint to get the correct tour_id and season_id you're looking for."], ["Entry List", "Entry List for given tournament - query this to see who will be taking part."], ["Tours", "Lists available tours and seasons"], ["Leaderboard", "Lists information for a given tournament_id. Includes leaderboard and per player round information. Also includes live tournament status."]]}, "Cricket Live Data": {"tool_desc": "Fixtures, Results, and scorecards for the worlds most popular cricket tournaments", "apis": [["Series", "Lists available cricket series' to query"], ["Fixtures", "Lists next 50 fixtures across all series'"], ["Fixtures By Series", "Lists Fixtures and Results for a given tournament."], ["Fixtures By Date", "Lists fixtures for a given date"], ["Results", "Lists last 50 Results across all series'"], ["Results By Date", "Lists results for given date"], ["Match Scorecard", "Lists full scorecard (updated live) for a given match id."]]}, "Tank01 MLB Live In-Game Real Time Statistics": {"tool_desc": "Tank01 back with an API providing you with MLB (Major League Baseball) STATS!!", "apis": [["Get Player Information", "Call this to get general information on each player (name, team, experience, birthday, college, image link, etc).\n\nThis can accept either \"playerID\" or \"playerName\".    \n\nIf you use playerID then the body will return one object.  playerID values can be found from performing a get on the team roster API. playerID is the unique identifier for each player, and is the preferred parameter to use in this call.\n\nIf you use playerName then it will return a list of objects, since many players can have the same name.  It acts as more of a search/scan than direct access, and will be a slower call than if you use playerID.\n\nAlso, you don't have to call the full name with playerName.  You can use partial name.  For example, if you call with only playerName=smith then it will return all players with smith in their full name."], ["Get MLB Games and Stats For a Single Player", "This call will grab a map of all of the games a player has played this season.   \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \n\nseason is an optional parameter.  Currently only 2022 (last season) and 2023 (this season) are available.  If you do not include season as a parameter, it will return this season's games. \n\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.\n\nExample:\nCorrect way to get the stats for Aaron Judge for the season opener against SF on 3/30/2023, would be this:\n/getMLBGamesForPlayer?playerID=592450&gameID=20230330_SF@NYY\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getMLBGamesForPlayer?playerID=592450\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getMLBBoxScore call with that specific gameID."], ["Get Team Roster", "This call returns the current or historical* roster of any team, using the teamID that can be found in \"getMLBTeams\" call.\n\nRosters are updated hourly during the day.\n\nHistorical rosters are saved on a daily basis as of 20230505 and moving forward. \n \nHere are examples of the two ways to call and get the White Sox roster:\n/getMLBTeamRoster?teamID=6\nor\n/getMLBTeamRoster?teamAbv=CHW\n\nAdd parameter archiveDate to the call to get a list of roster players (playerID's only) for that specific date.  Historical roster dates only are kept as far back as 20230505."], ["Get Team Schedule", "This endpoint returns the full season schedule for any MLB team identified in the parameters.\n\nExample:\n\n/getMLBTeamSchedule?teamID=6\nor\n/getMLBTeamSchedule?teamAbv=CHW\n\nCalling it either way will return the same result, a list of the White Sox games this season, each game in it's own map.  If the game has been played, the linescore and game result will be included in the game's map.\n\nYou can also add the \"season\" parameter if you want to specify season.  Right now we only have season 2022 and 2023.   \nDefault season is current season."], ["Get Box Score - Live - Real Time", "Retrieves the entire box score for a game either in progress or already completed.  The stats retrieved here are what are normally shown in box scores or used in fantasy games.  If there are any stats not here that you'd like to see, we can add them.  \n\nThe call looks like this /getMLBBoxScore?gameID=20220409_CHW@DET\n\nThe call needs to be exactly in the same format as above.  8 digit date, underscore, then the away team abbreviation, @, then home team abbreviation.  Complete list of team abbreviations can be retrieved with the getMLBTeams call or various other calls.  \n\nBut, the best way to find specific game ID's are either from the \"getMLBGamesForDate\" call, or the \"getMLBTeamSchedule\" call.   \n\nThe response will look like this:\n\n`{\n\"statusCode\":200\n\"body\":\"{\"GameLength\": \"3:11\", \"Umpires\": \"HP: Adrian Johnson. 1B: John Tumpane. 2B: Ryan Blakney. 3B: Marvin Hudson.\", \"playerStats\": {\"28418863327\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"2\", \"AB\": \"2\", \"battingOrder\": \"8\", \"H\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".000\", \"OPS\": \".250\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"2\", \"LOB\": \"3\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"DET\", \"startingPosition\": \"1B\", \"allPositionsPlayed\": \"1B\", \"mlbName\": \"Spencer Torkelson\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28418863327\", \"longName\": \"Spencer Torkelson\"}, \"28738341769\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"3\", \"battingOrder\": \"9\", \"H\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".167\", \"OPS\": \".619\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"2\", \"LOB\": \"1\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"CHW\", \"startingPosition\": \"3B\", \"allPositionsPlayed\": \"3B\", \"mlbName\": \"Jake Burger\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28738341769\", \"longName\": \"Jake Burger\"}, \"28808175329\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"BB\": \"0\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"decision\": \"\", \"Flyouts\": \"1\", \"Inherited Runners\": \"0\", \"H\": \"0\", \"HR\": \"0\", \"ER\": \"0\", \"Strikes\": \"6\", \"Inherited Runners Scored\": \"0\", \"Groundouts\": \"0\", \"R\": \"0\", \"ERA\": \"0.00\", \"InningsPitched\": \"1.0\", \"Batters Faced\": \"3\", \"SO\": \"1\", \"Pitches\": \"9\"}, \"Hitting\": {\"2B\": \"0\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"False\", \"team\": \"DET\", \"allPositionsPlayed\": \"P\", \"mlbName\": \"Joe Jimu00e9nez\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28808175329\", \"longName\": \"Joe Jimenez\"}, \"28986584052\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"2\", \"battingOrder\": \"1\", \"H\": \"1\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"1\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".571\", \"OPS\": \"1.285\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"0\", \"LOB\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"CHW\", \"startingPosition\": \"RF\", \"allPositionsPlayed\": \"RF\", \"mlbName\": \"AJ Pollock\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28986584052\", \"longName\": \"A.J. Pollock\"}, \"28918608009\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"3\", \"battingOrder\": \"9\", \"H\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"GIDP\": \"1\", \"3B\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".000\", \"OPS\": \".000\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"2\", \"LOB\": \"3\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"DET\", \"startingPosition\": \"CF\", \"allPositionsPlayed\": \"CF\", \"mlbName\": \"Akil Baddoo\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28918608009\", \"longName\": \"Akil Baddoo\"}, \"28058605227\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"note\": \"Ran for Pollock in the 3rd.\", \"Hitting\": {\"BB\": \"0\", \"AB\": \"2\", \"battingOrder\": \"1\", \"H\": \"1\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"1\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".333\", \"OPS\": \"1.166\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"1\", \"SO\": \"0\", \"LOB\": \"1\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"False\", \"team\": \"CHW\", \"allPositionsPlayed\": \"PR-RF\", \"mlbName\": \"Andrew Vaughn\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28058605227\", \"longName\": \"Andrew Vaughn\"}, \"28248934929\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"2\", \"AB\": \"2\", \"battingOrder\": \"7\", \"H\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"GIDP\": \"1\", \"3B\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".250\", \"OPS\": \"1.500\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"1\", \"LOB\": \"4\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"DET\", \"startingPosition\": \"C\", \"allPositionsPlayed\": \"C\", \"mlbName\": \"Eric Haase\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28248934929\", \"longName\": \"Eric Haase\"}, \"28158563969\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"2\", \"H\": \"2\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"2\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"1\", \"AVG\": \".500\", \"OPS\": \"1.125\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"0\", \"LOB\": \"2\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"1\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"CHW\", \"startingPosition\": \"CF\", \"allPositionsPlayed\": \"CF\", \"mlbName\": \"Luis Robert\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28158563969\", \"longName\": \"Luis Robert\"}, \"28968190527\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"BB\": \"0\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"decision\": \"\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"H\": \"3\", \"HR\": \"0\", \"ER\": \"1\", \"Strikes\": \"12\", \"Inherited Runners Scored\": \"0\", \"Groundouts\": \"2\", \"R\": \"1\", \"ERA\": \"13.50\", \"InningsPitched\": \"0.2\", \"Batters Faced\": \"5\", \"SO\": \"0\", \"Pitches\": \"21\"}, \"Hitting\": {\"2B\": \"0\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"False\", \"team\": \"DET\", \"allPositionsPlayed\": \"P\", \"mlbName\": \"Jason Foley\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28968190527\", \"longName\": \"Jason Foley\"}, \"28138355329\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"5\", \"H\": \"1\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"1\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".250\", \"OPS\": \".500\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"2\", \"SO\": \"0\", \"LOB\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"CHW\", \"startingPosition\": \"LF\", \"allPositionsPlayed\": \"LF\", \"mlbName\": \"Eloy Jimu00e9nez\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28138355329\", \"longName\": \"Eloy Jimenez\"}, \"28978081329\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"BB\": \"2\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"decision\": \"\", \"Flyouts\": \"0\", \"Inherited Runners\": \"1\", \"H\": \"2\", \"HR\": \"0\", \"ER\": \"1\", \"Strikes\": \"15\", \"Inherited Runners Scored\": \"1\", \"Groundouts\": \"2\", \"R\": \"1\", \"ERA\": \"9.00\", \"InningsPitched\": \"1.0\", \"Batters Faced\": \"6\", \"SO\": \"0\", \"Pitches\": \"28\"}, \"Hitting\": {\"2B\": \"0\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"False\", \"team\": \"CHW\", \"allPositionsPlayed\": \"P\", \"mlbName\": \"Reynaldo Lu00f3pez\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28978081329\", \"longName\": \"Reynaldo Lopez\"}, \"28618589089\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"BB\": \"0\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"decision\": \"L\", \"Flyouts\": \"7\", \"Inherited Runners\": \"0\", \"H\": \"7\", \"HR\": \"1\", \"ER\": \"4\", \"Strikes\": \"51\", \"Inherited Runners Scored\": \"0\", \"Groundouts\": \"4\", \"R\": \"4\", \"ERA\": \"7.20\", \"InningsPitched\": \"5.0\", \"Batters Faced\": \"22\", \"SO\": \"2\", \"Pitches\": \"81\"}, \"Hitting\": {\"2B\": \"0\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"DET\", \"allPositionsPlayed\": \"P\", \"mlbName\": \"Casey Mize\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28618589089\", \"longName\": \"Casey Mize\"}, \"28018056809\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"BB\": \"0\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"decision\": \"H\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"H\": \"1\", \"HR\": \"0\", \"ER\": \"0\", \"Strikes\": \"4\", \"Inherited Runners Scored\": \"0\", \"Groundouts\": \"1\", \"R\": \"0\", \"ERA\": \"0.00\", \"InningsPitched\": \"0.2\", \"Batters Faced\": \"2\", \"SO\": \"0\", \"Pitches\": \"6\"}, \"Hitting\": {\"2B\": \"0\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"False\", \"team\": \"CHW\", \"allPositionsPlayed\": \"P\", \"mlbName\": \"Josu00e9 Ruiz\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28018056809\", \"longName\": \"Jose Ruiz\"}, \"28118792149\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"4\", \"H\": \"1\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"2\", \"GIDP\": \"1\", \"3B\": \"0\", \"2B\": \"1\", \"R\": \"1\", \"AVG\": \".250\", \"OPS\": \".625\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"1\", \"SO\": \"1\", \"LOB\": \"2\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"DET\", \"startingPosition\": \"3B\", \"allPositionsPlayed\": \"3B\", \"mlbName\": \"Jeimer Candelario\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28118792149\", \"longName\": \"Jeimer Candelario\"}, \"28546661352\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"4\", \"H\": \"1\", \"IBB\": \"0\", \"HR\": \"1\", \"TB\": \"4\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"1\", \"AVG\": \".143\", \"OPS\": \".821\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"2\", \"SO\": \"1\", \"LOB\": \"5\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"CHW\", \"startingPosition\": \"C\", \"allPositionsPlayed\": \"C\", \"mlbName\": \"Yasmani Grandal\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28546661352\", \"longName\": \"Yasmani Grandal\"}, \"28536595229\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"note\": \"Struck out for Baddoo in the 9th.\", \"Hitting\": {\"BB\": \"0\", \"AB\": \"1\", \"battingOrder\": \"0\", \"H\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".000\", \"OPS\": \".000\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"1\", \"LOB\": \"2\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"False\", \"team\": \"DET\", \"allPositionsPlayed\": \"PH\", \"mlbName\": \"Dustin Garneau\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28536595229\", \"longName\": \"Dustin Garneau\"}, \"28036573429\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"3\", \"H\": \"2\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"3\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"1\", \"R\": \"2\", \"AVG\": \".286\", \"OPS\": \".804\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"0\", \"LOB\": \"3\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"CHW\", \"startingPosition\": \"1B\", \"allPositionsPlayed\": \"1B\", \"mlbName\": \"Josu00e9 Abreu\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28036573429\", \"longName\": \"Jose Abreu\"}, \"28488244062\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"6\", \"H\": \"1\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"1\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".286\", \"OPS\": \".804\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"1\", \"SO\": \"1\", \"LOB\": \"1\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"DET\", \"startingPosition\": \"2B\", \"allPositionsPlayed\": \"2B\", \"mlbName\": \"Jonathan Schoop\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28488244062\", \"longName\": \"Jonathan Schoop\"}, \"28468725739\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"BB\": \"0\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"decision\": \"S\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"H\": \"2\", \"HR\": \"0\", \"ER\": \"0\", \"Strikes\": \"15\", \"Inherited Runners Scored\": \"0\", \"Groundouts\": \"0\", \"R\": \"0\", \"ERA\": \"10.80\", \"InningsPitched\": \"1.0\", \"Batters Faced\": \"5\", \"SO\": \"3\", \"Pitches\": \"24\"}, \"Hitting\": {\"2B\": \"0\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"False\", \"team\": \"CHW\", \"allPositionsPlayed\": \"P\", \"mlbName\": \"Aaron Bummer\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28468725739\", \"longName\": \"Aaron Bummer\"}, \"28548315769\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"6\", \"H\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".000\", \"OPS\": \".000\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"0\", \"LOB\": \"1\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"CHW\", \"startingPosition\": \"DH\", \"allPositionsPlayed\": \"DH\", \"mlbName\": \"Gavin Sheets\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28548315769\", \"longName\": \"Gavin Sheets\"}, \"28208115769\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"BB\": \"0\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"decision\": \"H\", \"Flyouts\": \"1\", \"Inherited Runners\": \"1\", \"H\": \"0\", \"HR\": \"0\", \"ER\": \"0\", \"Strikes\": \"9\", \"Inherited Runners Scored\": \"0\", \"Groundouts\": \"1\", \"R\": \"0\", \"ERA\": \"0.00\", \"InningsPitched\": \"1.1\", \"Batters Faced\": \"3\", \"SO\": \"1\", \"Pitches\": \"13\"}, \"Hitting\": {\"2B\": \"0\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"False\", \"team\": \"CHW\", \"allPositionsPlayed\": \"P\", \"mlbName\": \"Bennett Sousa\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28208115769\", \"longName\": \"Bennett Sousa\"}, \"28808116349\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"2\", \"H\": \"2\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"2\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"1\", \"AVG\": \".500\", \"OPS\": \"1.500\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"1\", \"LOB\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"DET\", \"startingPosition\": \"LF\", \"allPositionsPlayed\": \"LF\", \"mlbName\": \"Austin Meadows\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28808116349\", \"longName\": \"Austin Meadows\"}, \"28748745449\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"BB\": \"0\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"decision\": \"\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"H\": \"0\", \"HR\": \"0\", \"ER\": \"0\", \"Strikes\": \"7\", \"Inherited Runners Scored\": \"0\", \"Groundouts\": \"1\", \"R\": \"0\", \"ERA\": \"0.00\", \"InningsPitched\": \"1.0\", \"Batters Faced\": \"3\", \"SO\": \"2\", \"Pitches\": \"11\"}, \"Hitting\": {\"2B\": \"0\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"False\", \"team\": \"DET\", \"allPositionsPlayed\": \"P\", \"mlbName\": \"Michael Fulmer\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28748745449\", \"longName\": \"Michael Fulmer\"}, \"28086504532\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"8\", \"H\": \"2\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"5\", \"3B\": \"1\", \"GIDP\": \"0\", \"2B\": \"1\", \"R\": \"1\", \"AVG\": \".250\", \"OPS\": \".875\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"0\", \"LOB\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"CHW\", \"startingPosition\": \"2B\", \"allPositionsPlayed\": \"2B\", \"mlbName\": \"Josh Harrison\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28086504532\", \"longName\": \"Josh Harrison\"}, \"28018152299\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"BB\": \"3\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"decision\": \"W\", \"Flyouts\": \"2\", \"Inherited Runners\": \"0\", \"H\": \"2\", \"HR\": \"0\", \"ER\": \"1\", \"Strikes\": \"46\", \"Inherited Runners Scored\": \"0\", \"Groundouts\": \"3\", \"R\": \"1\", \"ERA\": \"1.80\", \"InningsPitched\": \"5.0\", \"Batters Faced\": \"20\", \"SO\": \"8\", \"Pitches\": \"79\"}, \"Hitting\": {\"2B\": \"0\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"CHW\", \"allPositionsPlayed\": \"P\", \"mlbName\": \"Dylan Cease\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28018152299\", \"longName\": \"Dylan Cease\"}, \"28378135769\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"BB\": \"0\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"decision\": \"\", \"Flyouts\": \"0\", \"Inherited Runners\": \"2\", \"H\": \"0\", \"HR\": \"0\", \"ER\": \"0\", \"Strikes\": \"7\", \"Inherited Runners Scored\": \"0\", \"Groundouts\": \"3\", \"R\": \"0\", \"ERA\": \"0.00\", \"InningsPitched\": \"1.1\", \"Batters Faced\": \"4\", \"SO\": \"0\", \"Pitches\": \"11\"}, \"Hitting\": {\"2B\": \"0\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"False\", \"team\": \"DET\", \"allPositionsPlayed\": \"P\", \"mlbName\": \"Will Vest\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28378135769\", \"longName\": \"Will Vest\"}, \"28808238329\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"note\": \"Ran for Vaughn in the 7th.\", \"Hitting\": {\"BB\": \"0\", \"AB\": \"1\", \"battingOrder\": \"1\", \"H\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".000\", \"OPS\": \".000\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"1\", \"LOB\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"False\", \"team\": \"CHW\", \"allPositionsPlayed\": \"PR-RF\", \"mlbName\": \"Adam Engel\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28808238329\", \"longName\": \"Adam Engel\"}, \"28178284052\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"7\", \"H\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".000\", \"OPS\": \".000\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"1\", \"LOB\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"CHW\", \"startingPosition\": \"SS\", \"allPositionsPlayed\": \"SS\", \"mlbName\": \"Leury Garcu00eda\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"1\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28178284052\", \"longName\": \"Leury Garcia\"}, \"28698930862\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"3\", \"H\": \"2\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"2\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".444\", \"OPS\": \".888\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"1\", \"LOB\": \"1\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"DET\", \"startingPosition\": \"SS\", \"allPositionsPlayed\": \"SS\", \"mlbName\": \"Javier Bu00e1ez\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28698930862\", \"longName\": \"Javier Baez\"}, \"28416884532\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"AB\": \"4\", \"battingOrder\": \"1\", \"H\": \"0\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"0\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".143\", \"OPS\": \".476\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"0\", \"LOB\": \"2\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"DET\", \"startingPosition\": \"RF\", \"allPositionsPlayed\": \"RF\", \"mlbName\": \"Robbie Grossman\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"28416884532\", \"longName\": \"Robbie Grossman\"}, \"2858676669\": {\"gameID\": \"20220409_CHW@DET\", \"Pitching\": {\"Balk\": \"0\", \"Groundouts\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"0\", \"Inherited Runners\": \"0\", \"Batters Faced\": \"0\", \"Pitches\": \"0\", \"Strikes\": \"0\", \"Inherited Runners Scored\": \"0\"}, \"Hitting\": {\"BB\": \"1\", \"AB\": \"3\", \"battingOrder\": \"5\", \"H\": \"1\", \"IBB\": \"0\", \"HR\": \"0\", \"TB\": \"1\", \"3B\": \"0\", \"GIDP\": \"0\", \"2B\": \"0\", \"R\": \"0\", \"AVG\": \".286\", \"OPS\": \".661\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"RBI\": \"0\", \"SO\": \"2\", \"LOB\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"started\": \"True\", \"team\": \"DET\", \"startingPosition\": \"DH\", \"allPositionsPlayed\": \"DH\", \"mlbName\": \"Miguel Cabrera\", \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"playerID\": \"2858676669\", \"longName\": \"Miguel Cabrera\"}}, \"decisions\": [{\"name\": \"Dylan Cease\", \"team\": \"CHW\", \"decision\": \"W\", \"playerID\": \"28018152299\"}, {\"name\": \"Bennett Sousa\", \"team\": \"CHW\", \"decision\": \"HLD\", \"playerID\": \"28208115769\"}, {\"name\": \"Jose Ruiz\", \"team\": \"CHW\", \"decision\": \"HLD\", \"playerID\": \"28018056809\"}, {\"name\": \"Aaron Bummer\", \"team\": \"CHW\", \"decision\": \"S\", \"playerID\": \"28468725739\"}, {\"name\": \"Casey Mize\", \"team\": \"DET\", \"decision\": \"L\", \"playerID\": \"28618589089\"}], \"gameStatus\": \"Completed\", \"Attendance\": \"17,469\", \"teamStats\": {\"away\": {\"Pitching\": {\"Groundouts\": \"7\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"3\", \"Inherited Runners\": \"2\", \"Batters Faced\": \"36\", \"Pitches\": \"150\", \"Strikes\": \"89\", \"Inherited Runners Scored\": \"1\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"1\", \"PO\": \"0\"}, \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"1\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"Hitting\": {\"BB\": \"0\", \"2B\": \"2\", \"R\": \"5\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"H\": \"10\", \"RBI\": \"5\", \"IBB\": \"0\", \"TB\": \"17\", \"3B\": \"1\", \"GIDP\": \"0\"}}, \"home\": {\"Pitching\": {\"Groundouts\": \"10\", \"Balk\": \"0\", \"Wild Pitch\": \"0\", \"Flyouts\": \"8\", \"Inherited Runners\": \"2\", \"Batters Faced\": \"37\", \"Pitches\": \"133\", \"Strikes\": \"83\", \"Inherited Runners Scored\": \"0\"}, \"BaseRunning\": {\"CS\": \"0\", \"SB\": \"0\", \"PO\": \"0\"}, \"Fielding\": {\"Passed Ball\": \"0\", \"E\": \"0\", \"Outfield Assists\": \"0\", \"Pickoffs\": \"0\"}, \"Hitting\": {\"BB\": \"5\", \"2B\": \"1\", \"R\": \"2\", \"SF\": \"0\", \"SAC\": \"0\", \"HBP\": \"0\", \"H\": \"7\", \"RBI\": \"2\", \"IBB\": \"0\", \"TB\": \"8\", \"3B\": \"0\", \"GIDP\": \"3\"}}}, \"gameDate\": \"20220409\", \"Venue\": \"Comerica Park\", \"awayResult\": \"W\", \"currentCount\": \"\", \"homeResult\": \"L\", \"away\": \"CHW\", \"Weather\": \"39 degrees, Cloudy\", \"lineScore\": {\"away\": {\"H\": \"10\", \"R\": \"5\", \"team\": \"CHW\", \"scoresByInning\": {\"1\": \"2\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"2\", \"7\": \"1\", \"8\": \"0\", \"9\": \"0\"}, \"E\": \"1\"}, \"home\": {\"H\": \"7\", \"R\": \"2\", \"team\": \"DET\", \"scoresByInning\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"2\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\"}, \"E\": \"0\"}}, \"currentOuts\": \"\", \"FirstPitch\": \"1:11 PM\", \"currentInning\": \"\", \"gameID\": \"20220409_CHW@DET\", \"Wind\": \"5 mph, Out To CF\", \"home\": \"DET\"}\"\n}`"], ["Get General Game Information", "This returns very basic information about each game.  The some data points that you will get from this call which you won't get from other calls are the time that the game starts, the game ID and link  for mlb.com and espn.com, and the game status (Postponed/scheduled/completed/in-progress/etc).  All game start times are in Eastern time zone.  \n\nExample:\n\n/getMLBGameInfo?gameID=20220409_CHW@DET\n\nwill return:\n\n```\n\n{\n\"statusCode\":200\n\"body\":\"{\"espnID\": \"401354266\", \"mlbLink\": \"https://www.mlb.com/gameday/white-sox-vs-tigers/2022/04/09/662864#game_tab=box,game=662864\", \"gameStatus\": \"Completed\", \"season\": \"2022\", \"gameDate\": \"20220409\", \"gameTime\": \"1:10p\", \"away\": \"CHW\", \"mlbID\": \"662864\", \"gameID\": \"20220409_CHW@DET\", \"espnLink\": \"https://www.espn.com/mlb/boxscore/_/gameId/401354266\", \"home\": \"DET\"}\"\n}\n```"], ["Get Line Score - Real Time", "This endpoint provides the basic \"line score\" for a game, whether completed earlier this season, or currently happening now, in real time. \n\nA baseball line score consists of the basic R/H/E, plus the scores by inning and any pitching scoring decisions. \n\nExample:\n\n/getMLBLineScore?gameID=20220409_CHW@DET\n\n..will return this:\n\n```\n{\n\"statusCode\":200\n\"body\":\"{\"decisions\": [{\"name\": \"Dylan Cease\", \"team\": \"CHW\", \"decision\": \"W\", \"playerID\": \"28018152299\"}, {\"name\": \"Bennett Sousa\", \"team\": \"CHW\", \"decision\": \"HLD\", \"playerID\": \"28208115769\"}, {\"name\": \"Jose Ruiz\", \"team\": \"CHW\", \"decision\": \"HLD\", \"playerID\": \"28018056809\"}, {\"name\": \"Aaron Bummer\", \"team\": \"CHW\", \"decision\": \"S\", \"playerID\": \"28468725739\"}, {\"name\": \"Casey Mize\", \"team\": \"DET\", \"decision\": \"L\", \"playerID\": \"28618589089\"}], \"awayResult\": \"W\", \"gameStatus\": \"Completed\", \"homeResult\": \"L\", \"away\": \"CHW\", \"lineScore\": {\"away\": {\"H\": \"10\", \"R\": \"5\", \"team\": \"CHW\", \"scoresByInning\": {\"1\": \"2\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"2\", \"7\": \"1\", \"8\": \"0\", \"9\": \"0\"}, \"E\": \"1\"}, \"home\": {\"H\": \"7\", \"R\": \"2\", \"team\": \"DET\", \"scoresByInning\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"2\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\"}, \"E\": \"0\"}}, \"gameDate\": \"20220409\", \"gameID\": \"20220409_CHW@DET\", \"home\": \"DET\"}\"\n}\n```"], ["Get Daily Scoreboard - Live - Real Time", "Use this if you want basic game data returned.  It's lighter/quicker than getting the full boxscore, for applications that do not need anything but basic data like line score, away/home, etc.\n\n/getMLBScoresOnly\n\nThis can be called using ?gameDate (returns all games for a date, format YYYYMMDD)  or ?gameID (returns one game, format YYYYMMDD_AWAY@HOME)\n\nExample:\n\n/getMLBScoresOnly?gameID=20220409_CHW@DET\n\nreturns:\n`{2 items\n\"statusCode\":200\n\"body\":\"{\"20220409_CHW@DET\": {\"away\": \"CHW\", \"home\": \"DET\", \"gameID\": \"20220409_CHW@DET\", \"gameStatus\": \"Completed\", \"lineScore\": {\"away\": {\"H\": \"10\", \"R\": \"5\", \"team\": \"CHW\", \"scoresByInning\": {\"1\": \"2\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"2\", \"7\": \"1\", \"8\": \"0\", \"9\": \"0\"}, \"E\": \"1\"}, \"home\": {\"H\": \"7\", \"R\": \"2\", \"team\": \"DET\", \"scoresByInning\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"2\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\"}, \"E\": \"0\"}}, \"currentInning\": \"\", \"currentOuts\": \"\", \"currentCount\": \"\", \"awayResult\": \"W\", \"homeResult\": \"L\"}}\"\n}`"], ["Get MLB Betting Odds", "This grabs MLB betting/gambling lines and odds from some of the most popular online sportsbooks (fanduel, betrivers, betmgm, caesars, pointsbet, etc). \n\nYou can call this for specific game or a specific date.  Check out the example responses here for the type of data you can expect back.   Some of the sportsbooks do not offer live betting, so data from those sportsbooks will not be returned after the game starts.  \n\n\nEither gameDate or gameID is required.\nExamples of what the calls can look like:\n/getMLBBettingLines?gameDate=20230410\n/getMLBBettingLines?gameID=20230410_HOU@PIT"], ["Get Daily Schedule", "Get basic information on which games are being played during a day.\n\nExample call: \n\n/getMLBGamesForDate?gameDate=20220410\n\nThe above call will return all of the games from April 10th, 2022.  Date must be in the format YYYYMMDD.\n\nGames are returned in a list like shown below:\n\n```\n{\"statusCode\":200\n\"body\":\"[{\"gameID\": \"20220410_BAL@TB\", \"away\": \"BAL\", \"gameDate\": \"20220410\", \"home\": \"TB\"}, {\"gameID\": \"20220410_TEX@TOR\", \"away\": \"TEX\", \"gameDate\": \"20220410\", \"home\": \"TOR\"}, {\"gameID\": \"20220410_SD@ARI\", \"away\": \"SD\", \"gameDate\": \"20220410\", \"home\": \"ARI\"}, {\"gameID\": \"20220410_CHW@DET\", \"away\": \"CHW\", \"gameDate\": \"20220410\", \"home\": \"DET\"}, {\"gameID\": \"20220410_HOU@LAA\", \"away\": \"HOU\", \"gameDate\": \"20220410\", \"home\": \"LAA\"}, {\"gameID\": \"20220410_PIT@STL\", \"away\": \"PIT\", \"gameDate\": \"20220410\", \"home\": \"STL\"}, {\"gameID\": \"20220410_BOS@NYY\", \"away\": \"BOS\", \"gameDate\": \"20220410\", \"home\": \"NYY\"}, {\"gameID\": \"20220410_NYM@WAS\", \"away\": \"NYM\", \"gameDate\": \"20220410\", \"home\": \"WAS\"}, {\"gameID\": \"20220410_MIL@CHC\", \"away\": \"MIL\", \"gameDate\": \"20220410\", \"home\": \"CHC\"}, {\"gameID\": \"20220410_LAD@COL\", \"away\": \"LAD\", \"gameDate\": \"20220410\", \"home\": \"COL\"}, {\"gameID\": \"20220410_SEA@MIN\", \"away\": \"SEA\", \"gameDate\": \"20220410\", \"home\": \"MIN\"}, {\"gameID\": \"20220410_CLE@KC\", \"away\": \"CLE\", \"gameDate\": \"20220410\", \"home\": \"KC\"}, {\"gameID\": \"20220410_OAK@PHI\", \"away\": \"OAK\", \"gameDate\": \"20220410\", \"home\": \"PHI\"}, {\"gameID\": \"20220410_MIA@SF\", \"away\": \"MIA\", \"gameDate\": \"20220410\", \"home\": \"SF\"}, {\"gameID\": \"20220410_CIN@ATL\", \"away\": \"CIN\", \"gameDate\": \"20220410\", \"home\": \"ATL\"}]\"\n}\n```"], ["Get Player List", "One call grabs the FULL MLB player list. This is mainly used for associating players with their \"playerID\" which is what you'll want to use when cross referencing with box scores.\n\nNo parameters, just make the call:\n\n/getMLBPlayerLIst"], ["Get Teams", "This endpoint provides you with all teams, their cities, names, abbreviations, and some other general information.  This endpoint isn't necessary to call very often, as the data here won't change much throughout the season.  Perhaps make a point to call it once a week, as we will most likely be adding information to it every once in a while.\n\nThis takes no parameters. It just returns the same full list every time. \n\nExample:\n\n/getMLBTeams\n\nwill return:\n\n```\n{\n\"statusCode\":200\n\"body\":\"[{\"teamAbv\": \"PIT\", \"teamCity\": \"Pittsburgh\", \"teamID\": \"22\", \"teamName\": \"Pirates\"}, {\"teamAbv\": \"NYM\", \"teamCity\": \"New York\", \"teamID\": \"18\", \"teamName\": \"Mets\"}, {\"teamAbv\": \"MIL\", \"teamCity\": \"Milwaukee\", \"teamID\": \"16\", \"teamName\": \"Brewers\"}, {\"teamAbv\": \"ATL\", \"teamCity\": \"Atlanta\", \"teamID\": \"2\", \"teamName\": \"Braves\"}, {\"teamAbv\": \"LAA\", \"teamCity\": \"Los Angeles\", \"teamID\": \"13\", \"teamName\": \"Angels\"}, {\"teamAbv\": \"CLE\", \"teamCity\": \"Cleveland\", \"teamID\": \"8\", \"teamName\": \"Guardians\"}, {\"teamAbv\": \"COL\", \"teamCity\": \"Colorado\", \"teamID\": \"9\", \"teamName\": \"Rockies\"}, {\"teamAbv\": \"ARI\", \"teamCity\": \"Arizona\", \"teamID\": \"1\", \"teamName\": \"Diamondbacks\"}, {\"teamAbv\": \"CHW\", \"teamCity\": \"Chicago\", \"teamID\": \"6\", \"teamName\": \"White Sox\"}, {\"teamAbv\": \"TEX\", \"teamCity\": \"Texas\", \"teamID\": \"28\", \"teamName\": \"Rangers\"}, {\"teamAbv\": \"WAS\", \"teamCity\": \"Washington\", \"teamID\": \"30\", \"teamName\": \"Nationals\"}, {\"teamAbv\": \"SF\", \"teamCity\": \"San Francisco\", \"teamID\": \"24\", \"teamName\": \"Giants\"}, {\"teamAbv\": \"TB\", \"teamCity\": \"Tampa Bay\", \"teamID\": \"27\", \"teamName\": \"Rays\"}, {\"teamAbv\": \"CHC\", \"teamCity\": \"Chicago\", \"teamID\": \"5\", \"teamName\": \"Cubs\"}, {\"teamAbv\": \"BOS\", \"teamCity\": \"Boston\", \"teamID\": \"4\", \"teamName\": \"Red Sox\"}, {\"teamAbv\": \"SD\", \"teamCity\": \"San Diego\", \"teamID\": \"23\", \"teamName\": \"Padres\"}, {\"teamAbv\": \"NYY\", \"teamCity\": \"New York\", \"teamID\": \"19\", \"teamName\": \"Yankees\"}, {\"teamAbv\": \"STL\", \"teamCity\": \"St. Louis\", \"teamID\": \"26\", \"teamName\": \"Cardinals\"}, {\"teamAbv\": \"CIN\", \"teamCity\": \"Cincinnati\", \"teamID\": \"7\", \"teamName\": \"Reds\"}, {\"teamAbv\": \"HOU\", \"teamCity\": \"Houston\", \"teamID\": \"11\", \"teamName\": \"Astros\"}, {\"teamAbv\": \"BAL\", \"teamCity\": \"Baltimore\", \"teamID\": \"3\", \"teamName\": \"Orioles\"}, {\"teamAbv\": \"OAK\", \"teamCity\": \"Oakland\", \"teamID\": \"20\", \"teamName\": \"Athletics\"}, {\"teamAbv\": \"TOR\", \"teamCity\": \"Toronto\", \"teamID\": \"29\", \"teamName\": \"Blue Jays\"}, {\"teamAbv\": \"PHI\", \"teamCity\": \"Philadelphia\", \"teamID\": \"21\", \"teamName\": \"Phillies\"}, {\"teamAbv\": \"SEA\", \"teamCity\": \"Seattle\", \"teamID\": \"25\", \"teamName\": \"Mariners\"}, {\"teamAbv\": \"KC\", \"teamCity\": \"Kansas City\", \"teamID\": \"12\", \"teamName\": \"Royals\"}, {\"teamAbv\": \"MIN\", \"teamCity\": \"Minnesota\", \"teamID\": \"17\", \"teamName\": \"Twins\"}, {\"teamAbv\": \"DET\", \"teamCity\": \"Detroit\", \"teamID\": \"10\", \"teamName\": \"Tigers\"}, {\"teamAbv\": \"MIA\", \"teamCity\": \"Miami\", \"teamID\": \"15\", \"teamName\": \"Marlins\"}, {\"teamAbv\": \"LAD\", \"teamCity\": \"Los Angeles\", \"teamID\": \"14\", \"teamName\": \"Dodgers\"}]\"\n}\n```"]]}, "Bildbet": {"tool_desc": "Games and pre-game Odds for Bildbet", "apis": [["Odds", "Latest Odds for Bildbet"], ["Matches", "Latest Matches for Bildbet"]]}, "Betbro Sportbook": {"tool_desc": "Betbro Soccer SportBook\nComplete Football sportbook with InPlay and PreGame 114 markets, updated in realtime.", "apis": [["/fixture_tree/InPlay/sport/{sport_id}", "Get a tree list of fixtures suitable for constructing a SportBook navigation side menu.\nResponse tree consists of sport, region, competition and fixtures."], ["/fixture_tree/PreGame/sport/{sport_id}", "Get a tree list of fixtures suitable for constructing a SportBook navigation side menu.\nResponse tree consists of sport, region, competition and fixtures."], ["/fixture/{fixture_id}", "Get full fixture SportBook\nwhat the fuck is going on !"]]}, "Football Betting Odds": {"tool_desc": "Live and Upcoming Football Betting Odds", "apis": [["/provider1/live/upcoming", "get upcoming matches list"], ["/provider1/live/inplaying", "get inplaying matches list"], ["/provider4/live/upcoming", "get upcoming matches list"], ["/provider4/live/inplaying", "get inplaying matches list"], ["/provider3/live/upcoming", "get upcoming matches list"], ["/provider3/live/inplaying", "get inplaying matches list"], ["/provider2/live/inplaying", "get inplaying matches list"], ["/provider2/live/upcoming", "get upcoming matches list"], ["/oddsnames", "get all odds names"]]}, "Pinaculo": {"tool_desc": "Pinaculo API provides over 15 different sports odds.", "apis": [["Sport Live Matchups", "Get sport live matchups."], ["Sport Markets Straight", "Get sport market straight."], ["Sport Highlighted Markets Straight", "Get sport highlighted market straight"], ["Matchup Related Markets Straight", "Get matchup related markets straight."], ["Sport Markets Live Straight", "Get sport markets live straight."], ["League Markets Straight", "Get league markets straight."], ["Sport Highlighted Matchups", "Get sport highlighted matchups."]]}, "Basketball Data": {"tool_desc": "Broadage Basketball API can deliver any type of data for a basketball match, tournament or team; including livescores, play-by-play, boxscore, match statistics & many more.", "apis": [["Tournament Info", "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament."], ["Tournament List", "List of tournaments in your data coverage."], ["Tournament Teams", "List of teams participating in a specific tournament."], ["Daily Match List-Results", "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Match Game Leaders", "Live points, rebounds and assists leaderboards of the game for triple-double hunting.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**"], ["Match Statistics", "Live in match team statistics for each team in a match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**"], ["Rebound Leaderboard", "Rebounds-per-game leaders of the competition supported with player stats."], ["Team Schedule", "Team fixtures by all the tournaments a team participates."], ["Assist Leaderboard", "Assists-per-game leaders of the competition supported with player stats."], ["Daily Match List-Live", "Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Match Summary", "Basic summary about the match that includes match scores, match status, team names, venue, and round info.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**"], ["Team Squad", "List of players in a team."], ["Daily Match List-All", "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Daily Match List-Scheduled", "Daily match list including scheduled matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Tournament Standings", "Team rankings for a specific competition."], ["Point Leaderboard", "Points-per-game leaders of the competition supported with player stats."], ["Result Statistics", "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**"], ["Recent Match List", "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**"], ["Tournament Fixture", "Full match list with quarter, half time and final scores with venue info."], ["Seasonal Statistics: Quarter Analysis", "Provides the seasonal quater analysis and statistics of the team in the tournament."], ["Seasonal Market Statistics: Points", "Provides the seasonal market points statistics of the team in the tournament."], ["Match Margins", "Provides the average match margin statistics of the team in the tournament."], ["Market Statistics (Points)", "Provides the market points statistics which are \u201cFirst Quarter Result\u201d, \u201cHighest Scoring Quarter\u201d and also \u201cOrdinary/Half Time Winning Margins\u201d for both two teams against the other teams in the tournament.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**"], ["Quarter Analysis", "Provides the analyst data for each quarters including Quarter Winning Avereages, Quarter Winning Counts, Quarter Winning Percentages with home team / away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**"], ["Seasonal Advanced Team Statistics", "Provides the season-wide advanced team statistics with home team / away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**"], ["Under / Over Analysis", "Provides the under/over score analysis and statistics with the home/away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**\n\nP.S.\nFull data is available at Under / Over Analysis endpoint but can not be shown in mock response."], ["Match Boxscore", "Live, detailed team and player statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**"], ["Match Play by Play", "Live match events with scores.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**"], ["Seasonal Statistics: Points", "Provides the points statistics of the team in the tournament."]]}, "TransferMarkt DB": {"tool_desc": "Transfermarkt / Transfermarket - The football website for transfers, market values, rumours, stats, scores, results, news and fixtures.", "apis": [["Quick search", "Quick search. Search players, coaches, agents, clubs, referees by name"], ["List of News", "Get list of the news by date"], ["Club Fixtures", "Get club fixtures by club_id"], ["News Comments", "Get news comments by news_id"], ["Best players", "Get a list of the best players. Ex. https://www.transfermarkt.com/statistik/spielertitel?titel_id=195"], ["News Explorer", "Get list of the news by club IDs"], ["Available coaches", "Get the list of available coaches"], ["Market value of players", "Get market value of players"], ["Club Trend", "Get the club trend by club_ids"], ["Clubs short info", "Get short info about clubs by IDs"], ["Transfers competition statistics", "Get the transfers competition statistics"], ["News Details", "Get news details by news_id"], ["Most valuable teams", "Get the list of the most valuable teams"], ["Club Rankings", "Get club rankings by club_id"], ["Club Transfers", "Get club transfers by club_id. List of incoming and outgoing transfers"], ["Longest tenure as a coach", "Get a list of the longest tenure as a coach"], ["List of National competitions", "Get the list of National competitions"], ["FIFA rankings", "These are the most recent FIFA world rankings. Ex. https://www.transfermarkt.com/statistik/weltrangliste"], ["Competition Play day matches", "Get competition play day matches"], ["List of Most valuable teams", "Get the list of most valuable teams by competition_id"], ["Players performance", "Get performance of the competition players"], ["Staff Profile", "Get staff (coaches) profile by IDs"], ["Short Info", "Get short info about staff (coaches) by IDs"], ["List of Top cup competitions", "Get the list of Top cup competitions by locale"], ["Competitions Short info", "Get competitions short info by competition IDs"], ["List of Club competitions", "Get the list of Club competitions"], ["Competition Game plan", "Get competition game plan"], ["Staff Achievements", "Get staff (coaches) achievements by IDs"], ["Rumor Details", "Get rumor details by rumor_id"], ["List of Top competitions", "Get the list of Top competitions by locale"], ["List of Transfers", "Get list of transfers"], ["Fixture Report", "Get report by fixture_id"], ["List Top 10", "Get list of top 10 players"], ["Fixtures list", "Get list of fixtures by date. Use `Club Short info` to get team names"], ["Fixture Highlights", "Get fixture highlights by fixture_id"], ["Fixture Result", "Get fixture result by fixture_id"], ["Fixture Info", "Get fixture info by fixture_id"], ["Fixture Statistics", "Get fixture statistics by fixture_id"], ["Fixture events", "Get fixture events by fixture_id"], ["List of Rumors", "Get list of rumors"], ["Fixture Lineups", "Get fixture lineups by fixture_id"], ["Fixture Ticker", "Get fixture ticker by fixture_id, live-ticker"], ["Fixture Standings", "Get fixture standings by fixture_id"], ["Country Competitions", "Get country competitions by countries ID"], ["Countries Short info", "Get short info about countries by IDs"], ["Country Cups", "Get country cups by countries ID"], ["Countries", "Get list of countries"], ["Clean sheets", "Get a list of clean sheets players. Ex. https://www.transfermarkt.com/statistik/weisseweste"], ["Most valuable players", "Get the most valuable players, eleven players (virtual team)"], ["Clubs upcoming fixtures", "Get upcoming fixtures by club_ids"], ["Seasons of clubs", "Get short seasons of clubs by club_id"], ["Club Info", "Get club info by club_id"], ["Most valuable competitions", "Get the list of the most valuable competitions"], ["Club Squad", "Get club squad by club_id"], ["Golden boot", "Get a list of golden boot (shoe) players. Ex. https://www.transfermarkt.com/statistik/goldenerschuh"], ["Club Profile", "Get club profile by club_id. Main facts, stadium, additional teams"], ["Transfers records", "Get the transfers records"], ["Compare players", "Compare players by player_ids"], ["Player Profile", "Get player profile. Name, image, shirt number, nationalities, market value, club, age, foot, height"], ["Player Market value progress", "Get player market value"], ["Player Images", "Get player images by player_ids"], ["Player Transfers", "Get player transfers by player_id"], ["Compare clubs", "Compare clubs by club_ids, only 2 clubs"], ["Players Short info", "Get short info about players by IDs"], ["Club Staff", "Get club staff by club_id. List of staff"], ["Club News", "Get the latest club news by club_id"], ["Player Injuries", "Get player injuries. Date and description"], ["European champions", "European champions. Titles and success"], ["UEFA rankings", "Get countries within 5 years. Ex. https://www.transfermarkt.com/statistik/5jahreswertung"], ["List of Champions", "Get a list of champions"], ["List of clubs", "Get a list of clubs"], ["Player Performance details", "Get player performance details"], ["Referee profile", "Get referee profile by referee_id"], ["Player Info", "Get player info. Name, image, shirt number, nationalities, market value, club"], ["World Cup champions", "World cup champions. Titles and success"], ["List of Coaches", "Get a list of coaches. Use endpoint `Staff Short info` to get more information by coach ID"], ["Competition News", "Get news about competition"]]}, "CricketAPI2": {"tool_desc": "Cricket live score service at CricketApi allows you to follow real time cricket results, standings and fixtures.", "apis": [["Search", "Search cricket players, teams, and tournaments using a search term."], ["TeamTournaments", "Get a list of unique tournaments for a specific Cricket team by providing its team ID."], ["TeamPlayers", "Get a list of players for a cricket team using their team ID."], ["TeamMedia", "Get media for a cricket team using their team ID."], ["TeamStandingsSeasons", "Get the standing seasons for a cricket team by specifying the team ID."], ["CategoryFlag", "Get the flag image of a specific category in PNG format."], ["PlayerLastMatches", "Get the last matches for a cricket player by specifying the player ID and the page number (starting from 0)."], ["TeamPlayersStatisticsSeasons", "Get a list of seasons with player statistics for a cricket team using their team ID."], ["PlayerDetails", "Get detailed information about a cricket player using their player ID."], ["TeamLogoImage", "Get the logo image for a cricket team in PNG format, using the team's ID."], ["LeagueLogoImage", "Get the logo image for a cricket league in PNG format, using the league's ID."], ["TournamentPlaceholderImage", "Get the tournament placeholder image in PNG format."], ["PlayerImage", "Get the image of a cricket player as a PNG file using their player ID."], ["TVCountries", "Get a list of countries and their respective TV channels broadcasting a specific Football match."], ["LeagueMedia", "Get media of a cricket league using the unique tournament ID."], ["TeamDetails", "Get detailed information about a cricket team using their team ID."], ["MatchOdds", "Get the odds for a specific cricket match."], ["MatchIncidents", "Get the incidents for a specific Cricket match using its match ID."], ["PlayerOverallStatistics", "Get the overall statistics for a specific cricket player for a given tournament and season."], ["PlayerNearMatches", "Get a list of upcoming and recent matches for a cricket player using their player ID."], ["LiveMatches", "Get live cricket matches that are currently taking place."], ["TeamNearMatches", "Get a list of cricket matches that the team with the specified ID has in the near future."], ["TeamPlaceholderImage", "Get the team placeholder image in SVG format."], ["TeamNextMatches", "Get the next matches for a cricket team by specifying the team ID and the page number (starting from 0)."], ["MatchLineups", "Get the lineups for a specific Cricket match using its match ID."], ["LeagueTotalStandings", "Get the total standings for a specific Cricket league for a given season by providing its unique tournament ID and season ID."], ["MatchTvChannelDetails", "Get the details of a specific TV channel broadcasting a specific Football match."], ["PlayerStatisticsSeasons", "This operation returns the statistics for a given cricket player by season."], ["CategoryTournaments", "Get all cricket leagues associated with a specific category."], ["LeagueLastMatches", "Get a list of last matches for a cricket league using the tournament ID, season ID, and page number."], ["HeadToHeadMatches", "Get head-to-head match data for a specific Cricket match using its custom ID."], ["LeagueDetails", "Get details of a cricket league using the unique tournament ID."], ["LeagueSeasons", "Get a list of seasons for a cricket league using the unique tournament ID."], ["MatchInnings", "Get the innings for a specific Cricket match using its match ID."], ["MatchVotes", "Get the votes for a specific cricket match."], ["CategorySchedules", "Get cricket schedules of a specific day for a given category."], ["LeagueOverallTopPlayers", "Get the overall top players for a specific cricket league in a given season, including player statistics and other relevant information."], ["LeagueTotalTeamEvents", "Get the total team events for a specific Cricket league for a given season by providing its unique tournament ID and season ID."], ["PreMatchForm", "Get pre-match form information for a specific cricket match."], ["get-player-placeholder", "Get the player placeholder image in PNG format."], ["Categories", "Get a list of all cricket categories."], ["LeagueNextMatches", "Get a list of next matches for a cricket league using the tournament ID, season ID, and page number."], ["TeamLastMatches", "Get the last matches for a cricket team by specifying the team ID and the page number (starting from 0)."], ["MatchDetails", "Get detailed information for a specific cricket match by providing the match ID."], ["ManagerPlaceholderImage", "Get the manager placeholder image in PNG format."], ["MatchSchedules", "This operation returns the cricket match schedules for the given date, including match timings, teams, and other relevant information."], ["MatchH2HDuel", "Get head-to-head duel information for a specific cricket match."]]}, "Football Data": {"tool_desc": "Broadage Football API can deliver any type of data for a football match, tournament or team; including livescores, play-by-play, boxscore, match statistics and many more.", "apis": [["Daily Match List-Live", "Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Match Game Leaders", "Live passing, rushing and receiving stats leaders of the game.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**"], ["Tournament Fixture", "Full match list with quarter, half time and final scores."], ["Daily Match List-Scheduled", "Daily match list including scheduled matches.\n\nThe data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days."], ["Match Boxscore", "Live, detailed team and player statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**\n\nP.S.\nFull data is available at Boxscore endpoint but can not shown in mock  response."], ["Daily Match List-All", "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Tournament Info", "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament."], ["Tournament Standings", "Team Rankings for a specific competition."], ["Daily Match List-Results", "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Tournament List", "List of tournaments in your data coverage."], ["Match Team Statistics", "Provides the team statistics of the match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**"], ["Tournament Teams", "List of teams participating in a specific tournament."], ["Match Play by Play", "Provides all match drives and plays during the match with their detailed informations.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**"], ["Match Key Statistics", "Live key match statistics for both team of the match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**"]]}, "Football_v2": {"tool_desc": "More than 315+ competitions implemented (Increasing day by day).", "apis": [["SquadName", "Search a squad in a table by its name. You don't need to search for the full name, you can also use some letters or a part of it."], ["SquadPosition", "Search a squad in a table for its position."], ["Transfers", "Get a list of transfers for the current season"], ["Results", "Get all the results from a championship."], ["Table", "Get the current championship table"], ["News", "Search all the news for a specific championship."], ["Competitions", "Get a list of all available competitions"], ["Fixtures", "Get all the fixtures from a championship"]]}, "WNBA API": {"tool_desc": "This API offer every basketball fan an easy way to stay on top of the latest data for all operations and players in the WNBA.", "apis": [["WNBA TEAM INFO", "This endpoint gets team information for a specific WNBA team."], ["WNBA Teams.", "The endpoint provides you with a list of all WNBA teams."], ["WNBA Standings", "The endpoint provides you with the team standings for the WNBA"], ["WNBA ScoreBoard", "This endpoint provides you with the WNBA scoreboard data for a specified date if available."], ["WNBA Schedule", "This endpoint provides you with the WNBA schedule data for a specified date as long as it is available."], ["WNBA Summary", "This endpoint gets the WNBA game summary data for a specific game."], ["WNBA Box Score", "This endpoint returns the WNBA game box score data for a specified game."], ["WNBA Play By Play", "This endpoint provides the NBA game play-by-play data for a specific game."]]}, "Betano": {"tool_desc": "Games and pre-game Odds for Betano", "apis": [["Odds", "Latest Odds by Betano."], ["Matches", "Latest matches by Betano."]]}, "Daily Betting Tips": {"tool_desc": "We provide 90% hit rate daily soccer and basketball betting predictions, Our predictions are generated by AI powered analysis of previous matches and other factors key to the game's result", "apis": [["Get Coupons Endpoint", "- This Endpoint provides daily AI analyzed Betting coupons with high win rate.\n- To load all tips organized in Ascending order pass parameter sort with value \"-id\"."], ["Get Predictions by Date", "This Endpoint is used to load Betting Tips from API the tips, this returns only tips for a given date passed as parameter.\nTo load tips for a given date organised in Ascending order pass parameter sort with value \"-id\".\nThe date format for a given date should be \"dd.MM.yyyy\", else response from API will be empty."], ["Get All Predictions", "This Endpoint is used to load all Betting Tips from API the tips are organised into multiple coupons.\nTo load all tips organised in Ascending order pass parameter sort with value \"-id\"."], ["Get Predictions performance statistics", "This Endpoint is used to check the predictions performance for a given date.\nThe date format for a given date should be \"dd.MM.yyyy\", else response from API will be empty."]]}, "MMAAPI": {"tool_desc": "MMAAPI is your ultimate source for the latest updates, scores, and results from the world of mixed martial arts.", "apis": [["Search", "This operation allows you to search for MMA teams and tournaments based on the search term provided."], ["Categories", "This operation allows you to retrieve MMA categories."], ["TournamentLastMainEvents", "Get last main events for a unique tournamente"], ["UniqueTournamentDetails", "This operation allows you to retrieve details for a specified MMA tournament."], ["CategoryTournaments", "This operation allows you to retrieve all leagues from a specified MMA category."], ["TournamentDetails", "This operation allows you to retrieve details for a specified MMA tournament."], ["TournamentFeaturedEvents", "Get featured events for a unique tournament"], ["TournamentAllEvents", "Get all MMA events for a unique tournament and tournament ID"], ["HeadToHeadEvents", "Get information about head-to-head tennis events for a specific event."], ["TeamCareerStatistics", "Get the career statistics for a specific team."], ["EventForm", "This operation returns the pre game form for a specific MMA event, including team statistics and player data."], ["TournamentLogoImage", "Get tournament logo image in PNG format for a specific tournament."], ["FemaleFighterImagePlaceholder", "Get female fighter placeholder image"], ["TeamImage", "Get player image in PNG format for a specific team."], ["TeamDetails", "Get detailed information about a specific team."], ["TeamNextEvents", "Get information about the next events for a specific team."], ["EventStatistics", "Get statistics for a specific MMA event."], ["TournamentNextMainEvents", "Get next main events for a unique tournamente"], ["MaleFighterImagePlaceholder", "Get male fighter placeholder image"], ["EventDetails", "Get information about a MMA event based on its ID."], ["TeamLastEvents", "Get information about the last events for a specific team."], ["MmaOctogonImage", "Get MMA octagon image"], ["TournamentRnkingSummary", "Get ranking summary for a unique tournament"], ["EventStreaks", "Get streak information for a specific MMA event."]]}, "IPL API": {"tool_desc": "It is api thats gives the data about IPL(2008-2020) matches data .", "apis": [["getMatchesByTeam", "get all the matches by a particular team"], ["getMatchs", "to get all the match details ."], ["getMatchByWinner", "get all  the matches by winner"], ["getMatchesByCity", "get all the matches by **city**"]]}, "Golf Course Finder": {"tool_desc": "This API will return golf courses within a mile radius of the passed latitude and longitude.", "apis": [["Get Courses", "This endpoint will return courses within a mile radius of the passed latitude and longitude"], ["Course Details", "This endpoint will return the course details from Google Places"]]}, "Premier League Upcoming Matches": {"tool_desc": "This API will provide you information about future matches of different clubs in Premier League", "apis": [["/fixtures", "When making a request to this API, it will return a JSON containing a list of upcoming matches in Premier League"], ["/competitions", "This API will return an array of **5 biggest competitions** in which all clubs in* Premier League* are able to participate"], ["/clubs", "This API will supply client info about all clubs that are playing the First Premier League Competition"]]}, "PredictX": {"tool_desc": "predictX API is a comprehensive sports prediction API hosted on RapidAPI that offers a wide range of features to enhance your sports-related applications.", "apis": [["Get Next Predictions", "\"Get Next Predictions\" is a powerful feature offered by the predictX API that allows developers to retrieve accurate predictions for upcoming events happening on the current day. This feature provides users with valuable insights and helps them make informed decisions about upcoming matches.\n\n These predictions are generated using advanced algorithms and statistical models that take into account various factors such as team performance, player statistics, historical data, and other relevant parameters."], ["Get Today's Predictions", "\"Get Today's Predictions\" is a powerful feature offered by the predictX API that allows developers to retrieve accurate predictions for events happening on the current day. This feature provides users with valuable insights and helps them make informed decisions about upcoming matches.\n\n These predictions are generated using advanced algorithms and statistical models that take into account various factors such as team performance, player statistics, historical data, and other relevant parameters."]]}, "AllSportsApi": {"tool_desc": "AllSportsApi offers real-time football, esports, motorsport, ice hockey, basketball, tennis, baseball, cricket and american football scores.", "apis": [["TennisTeamPreviousTournaments", "Get team or players previous tournaments."], ["TennisTeamStandingsSeasons", "Get team or players standings seasons."], ["TennisTeamRankings", "Get player or team rankings."], ["TennisMultipleDaysCategories", "Get the categories of tennis matches along with their tournaments for up to 5 specified days in a month."], ["BasketballLeagueHomeStandings", "Get league home standings."], ["BasketballLeagueAwayStandings", "Get league away standings."], ["BasketballLeagueShotActionsAreasRegularSeason", "Get the shot actions areas for the basketball league during the regular season."], ["BasketballLeagueShotActionsAreasPlayoffs", "Get the shot actions areas for the basketball league during the playoffs."], ["BasketballPlayerLastMatches", "Get player last matches."], ["BasketballPlayerShotActionsPlayoffs", "Get the shot actions of a player in the basketball league during the playoffs."], ["BasketballPlayerShotActionsRegularSeason", "Get the shot actions of a player in the basketball league during the regular season."], ["BasketballLeagueOverallPerGameTopPlayers", "Get league per game top players."], ["BasketballLeaguePlayoffsPerGameTopPlayers", "Get league per game top players."], ["BasketballLeagueRegularSeasonPerGameTopPlayers", "Get league per game top players."], ["BasketballLeagueTopPlayersTypes", "Get the types of best players in the basketball league."], ["BasketballLeaguePlayoffsTopTeams", "Get the best teams in the basketball league during the playoffs."], ["BasketballLeagueRegularSeasonTopTeams", "Get the best teams in the basketball league during the regular season."], ["TennisLeagueSeasonInfo", "Get information about a tennis league's season."], ["TennisTeamImage", "Get player image. It generates png image."], ["TennisTeamLastEvents", "Get player or team last events."], ["TennisTeamNextEvents", "Get player or team next events."], ["TennisTeamNearEvents", "Get near events for a specific team."], ["TennisTeamDetails", "The team ID you want to retrieve the details."], ["RugbyLeagueNextMatches", "Get league next matches."], ["BasketballMatchTeamShotmap", "Get the shotmap of a team in a basketball match."], ["BasketballMatchPlayerShotmap", "Get match player shotmap."], ["Basketball PreMatch Form", "Get pre match form."], ["RugbyLeagueAwayTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for away events."], ["RugbyPlayerLastMatches", "Get player last matches."], ["RugbyLeagueTotalTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for both home and away events."], ["IceHockeyLeagueRegularSeasonTopPlayersPerGame", "Get league per game top players."], ["IceHockeyLeagueAwayTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for away events."], ["FootballUEFAClubRankings", "Get the current UEFA club rankings of Football teams."], ["BasketballLeagueTotalTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for both home and away events."], ["BasketballLeagueRounds", "Get league team rounds."], ["FootballLeagueEventsByRound", "This operation allows you to retrieve events for a specified football league, season, and round."], ["RugbyManagerImage", "Get manager image. It generates png image."], ["RugbyUnionRankings", "Get the current Rugby Union rankings."], ["RugbyLeagueHomeTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for home events."], ["FootballMatchAwayPlayerJersey", "Get the away player jersey for a specific Football match."], ["FootballLeagueEventsByRoundAndSlug", "This operation allows you to retrieve events for a specified football league, season, round and slug."], ["FootballRefereeNextMatches", "Get the list of the next matches by a football referee, paginated by the given page number."], ["FootballRefereeImage", "Get the image of a football referee with the given ID."], ["FootballRefereeStatistics", "Get the statistics of a specific Football referee."], ["FootballRefereeLastMatches", "Get the list of the last matches by a football referee, paginated by the given page number."], ["FootballRefereeDetails", "Get the details of a specific Football referee."], ["FootballLeagueAwayTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for away events."], ["FootballLeagueHomeTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for home events."], ["FootballLeagueTotalTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for both home and away events."], ["EsportsLeagueTotalTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for both home and away events."], ["CricketLeagueTotalTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for both home and away events."], ["CricketPlayerLastMatches", "Get player last matches."], ["BasketballManagerLastMatches", "Get manager last matches."], ["BasketballLeagueOverallTopPlayers", "Get league overall top players."], ["BasketballLeagueGroupMatches", "Get league group matches."], ["BasketballLeagueOverallTopTeams", "Get league overall top players."], ["BasketballLeagueAwayTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for away events."], ["BasketballLeagueHomeTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for home events."], ["BasketballMatchSeries", "Get matches in the series for a specific basketball match."], ["BaseballLeagueAwayTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for away events."], ["BaseballPlayerLastMatches", "Get player last matches."], ["BaseballLeagueHomeTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for home events."], ["BaseballLeagueTotalTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for both home and away events."], ["BaseballLeagueAwayStandings", "Get league away standings."], ["BaseballLeagueHomeStandings", "Get league home standings."], ["AmericanFootballPlayerLastMatches", "Get the last matches played by a specific American Football player by providing the player ID and page number."], ["AmericanFootballManagerImage", "Get manager image. It generates png image."], ["AmericanFootballLeagueAwayTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for away events."], ["AmericanFootballLeagueHomeTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for home events."], ["AmericanFootballLeagueTotalTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for both home and away events."], ["AmericanFootballLeagueAwayStandings", "This endpoint retrieves away standings for a specific league in a given season."], ["AmericanFootballLeagueHomeStandings", "This endpoint retrieves home standings for a specific league in a given season."], ["AmericanFootballLeagueTopPlayersTypes", "Get the types of best players in the american football league."], ["ManagerPlaceholderImage", "Get the manager placeholder image in PNG format."], ["PlayerPlaceholderImage", "Get the player placeholder image in PNG format."], ["TeamPlaceholderImage", "Get the team placeholder image in SVG format."], ["TournamentPlaceholderImage", "Get the tournament placeholder image in PNG format."], ["Tennis League Total Standings", "Get league total standings."], ["Football League Group Matches", "Get league group matches."], ["Basketball Player Statistics Overall", "Get player regular season statistics overall."], ["Football League Team Performance", "Get league team performance."], ["Football League Per Game Top Players", "Get league per game top players."], ["Football League Overall Top Team", "Get league overall top team."], ["Football Player Overall Heatmaps", "Get player overall heatmaps. Check the tutorials to see html example."], ["Football Match Players Average Positions", "Get match players average positions."], ["Tennis League Rounds Events", "Get league round events."], ["Football Player Summary", "Get player last 12 months summary."], ["Football League Players Statistics", "Get league players statistics."], ["Football Player Last Matches", "Get player last matches."], ["All Sports Match Tv Channel Details", "Get match country tv channel details."], ["All Sports Match Tv Countries", "Get match tv channel countries."], ["Football Match Player Shotmap", "Get match player shotmap."], ["All Sports Category Flag", "Get category flag. It can be used for all sports. It generates image/png"], ["Baseball Player Near Matches", "Get player near matches."], ["Tennis Player Image", "Get player image. It generates png image."], ["Tennis Player Or Team Next Events", "Get player or team next events."], ["Football Match Best Players", "Get match best players."], ["Tennis League Last Events", "Get league last events."], ["American Football Schedules", "Get schedules of the day."], ["Baseball Team Next Matches", "Get team next matches."], ["Tennis Team Or Players Standings Seasons", "Get team or players standings seasons."], ["Tennis Event", "Get event by id."], ["Tennis Event Point By Point", "Get event point by point."], ["Football League Overall Top Players", "Get league overall top players."], ["Football League Home Standings", "Get league home standings."], ["Football League Total Standings", "Get league total standings."], ["Baseball Category Schedules", "Get schedules of the day from the category."], ["Football Team Overall Top Players", "Get team overall top players."], ["Football Schedules Bottom", "Get less relevant schedules of the day."], ["Baseball Team Standings Seasons", "Get team standings seasons."], ["Baseball Team Last Matches", "Get team last matches."], ["Football Player Statistics Seasons", "Get player statistics seasons."], ["American Football Player Regular Season Statistics", "Get player regular season statistics."], ["IceHockeyPlayerOverallStatistics", "Get player overall statistics."], ["IceHockeyPlayerLastMatches", "Get player last matches."], ["IceHockeyLeagueRegularSeasonTopTeams", "Get league overall top team."], ["IceHockeyLeaguePlayoffsTopTeams", "Get league overall top team."], ["IceHockeyLeaguePlayoffsTopPlayersPerGame", "Get league per game top players."], ["IceHockeyLeagueOverallTopPlayersPerGame", "Get league per game top players."], ["IceHockeyLeagueTopPlayersTypes", "Get the top players types for a specific Ice Hockey league by providing the tournament ID and season ID."], ["IceHockeyLeagueOverallTopPlayers", "Get league overall top players."], ["IceHockeyLeagueHomeTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for home events."], ["IceHockeyLeagueTotalTeamEvents", "This endpoint retrieves the last 5 matches for a specific league in a given season for both home and away events."], ["FootballUEFACountryRankings", "Get the current UEFA country rankings of Football teams."], ["FootballLeaguePowerRankingByRoundById", "This operation returns the power ranking round for the specified tournament, season and round ID for a football league."], ["FootballLeaguePowerRankingRounds", "This operation returns the power ranking rounds for the specified tournament and season ID for a football league."], ["FootballMatchHomeGoalkeeperJersey", "Get the home goalkeeper jersey for a specific Football match."], ["FootballMatchAwayGoalkeeperJersey", "Get the away goalkeeper jersey for a specific Football match."], ["FootballMatchHomePlayerJersey", "Get the home player jersey for a specific Football match."], ["Tennis League Old Cup Trees", "Get league old cup trees structures."], ["Baseball Schedules", "Get schedules of the day."], ["Football Player Transfer History", "Get player transfer history."], ["Tennis Calendar", "Get calendar of the month."], ["Basketball Team Top Players Playoffs", "Get team playoffs top players."], ["American Football Match Best Players", "Get match best players."], ["Rugby Schedules", "Get schedules of the day."], ["Basketball Player Statistics Seasons", "Get player statistics seasons."], ["Ice Hockey Team Playoffs Top Players", "Get team playoffs top players."], ["American Football Team Near Matches", "Get team near matches."], ["Cricket Player Image", "Get player image. It generates png image."], ["Ice Hockey Search", "Search players, teams and tournaments."], ["Football Player Penalty History", "Get player penalty history."], ["Baseball Team Near Matches", "Get team near matches."], ["Tennis Player Or Team Last Events", "Get player or team last events."], ["Baseball Category Tournaments", "Get all leagues from category."], ["Tennis Player or Team Rankings", "Get player or team rankings."], ["Tennis Player or Team Near Events", "Get player or team near events."], ["Tennis League Next Events", "Get league next events."], ["Football Manager Last Matches", "Get manager last matches."], ["Ice Hockey Manager Image", "Get manager image. It generates png image."], ["Football Player Near Matches", "Get player near matches."], ["Baseball League Last Matches", "Get league last matches."], ["Baseball Search", "Search players, teams and tournaments."], ["Football League Logo Image", "Get league logo image. It generates png image."], ["Baseball PreMatch Form", "Get pre match form."], ["Football Search", "Search players, teams and tournaments."], ["E-Sports Category Schedules", "Get schedules of the day from the category."], ["Football PreMatch Form", "Get pre match form."], ["Football Manager Next Matches", "Get manager next matches."], ["Tennis Category Schedules", "Get schedules of the day from the category."], ["Cricket Player Near Matches", "Get player near matches."], ["E-Sports Event", "Get event by id."], ["Football League Season Info", "Get league season info."], ["Tennis League Logo Image", "Get league logo image. It generates png image."], ["Football Team Overall Statistics", "Get team overall statistics."], ["E-Sports League Total Standings", "Get league total standings."], ["Baseball League Cup Trees", "Get league cup trees."], ["Tennis Category Tournaments", "Get all leagues from category."], ["Baseball League Next Matches", "Get league next matches."], ["American Football Team Next Matches", "Get team next matches."], ["Baseball League Logo Image", "Get league logo image. It generates png image."], ["Football Manager Career History", "Get manager career history."], ["Baseball Match", "Get match by id."], ["Football League Next Matches", "Get league next matches."], ["Baseball League Total Standings", "Get league total standings."], ["Baseball Team Logo Image", "Get team logo image. It generates png image."], ["Baseball Player Image", "Get player image. It generates png image."], ["Baseball Player Statistics Seasons", "Get player statistics seasons."], ["Tennis Team Or Players Previous Tournaments", "Get team or players previous tournaments."], ["Tennis Search", "Search players, teams and tournaments."], ["Baseball Player Regular Season Statistics", "Get player regular season statistics."], ["Ice Hockey Schedules Top", "Get schedules of the day."], ["Football Player Last Ratings", "Get player last ratings."], ["Tennis Event Power Graph", "Get event power graph."], ["Tennis Schedules Odds", "Get schedules odds of the day."], ["Ice Hockey Category Schedules", "Get schedules of the day from the category."], ["Football League Cup Trees", "Get league cup trees."], ["Tennis League Cup Trees", "Get league cup trees."], ["Cricket League Logo Image", "Get league logo image. It generates png image."], ["E-Sports Event H2H Duel", "Get event h2h duel."], ["Basketball Team Next Matches", "Get team next matches."], ["Basketball Player Transfer History", "Get player transfer history."], ["Rugby Category Schedules", "Get schedules of the day from the category."], ["Rugby League Logo Image", "Get league logo image. It generates png image."], ["American Football Team Regular Season Top Players", "Get team regular season top players."], ["E-Sports Team Logo Image", "Get team logo image. It generates png image."], ["Basketball League Cup Trees", "Get league cup trees."], ["American Football League Cup Trees", "Get league cup trees."], ["Basketball League Last Matches", "Get league last matches."], ["Ice Hockey Player Regular Season Statistics", "Get player regular season statistics."], ["Ice Hockey Team Logo Image", "Get team logo image. It generates png image."], ["American Football Player Statistics Seasons", "Get player statistics seasons."], ["American Football Manager Last Matches", "Get manager last matches."], ["Basketball Team Top Players Regular Season", "Get team regular season top players."], ["American Football League Top Players Playoffs", "Get league playoffs top players."], ["American Football Team Players Statistics Seasons", "Get team players statistics seasons."], ["Rugby Player Image", "Get player image. It generates png image."], ["Ice Hockey Category Tournaments", "Get all leagues from category."], ["Rugby League Away Standings", "Get league away standings."], ["Basketball Team Last Matches", "Get team last matches."], ["Cricket Search", "Search players, teams and tournaments."], ["American Football Category Tournaments", "Get all leagues from category."], ["Cricket Category Tournaments", "Get all leagues from category."], ["Rugby Player Near Matches", "Get player near matches."], ["Cricket Schedules", "Get schedules of the day."], ["Rugby League Last Matches", "Get league last matches."], ["Cricket Match H2H Duel", "Get match h2h duel."], ["Rugby Team Logo Image", "Get team logo image. It generates png image."], ["Basketball Player Near Matches", "Get player near matches."], ["Basketball Search", "Search players, teams and tournaments."], ["Basketball Category Tournaments", "Get all leagues from category."], ["Ice Hockey Team Next Matches", "Get team next matches."], ["Basketball League Next Matches", "Get league next matches."], ["Basketball Player Image", "Get player image. It generates png image."], ["Basketball Player Statistics Regular Season", "Get player regular season statistics."], ["Basketball Category Schedules", "Get schedules of the day from the category."], ["Basketball Team Players Statistics Seasons", "Get team players statistics seasons."], ["Motorsport Search", "Search players, teams and tournaments."], ["American Football League Next Matches", "Get league next matches."], ["American Football Team Standings Seasons", "Get team standings seasons."], ["Rugby Team Last Matches", "Get team last matches."], ["Football Category Schedules", "Get schedules of the day from the category."], ["Football Player Image", "Get player image. It generates png image."], ["Tennis Schedules", "Get schedules of the day."], ["Baseball Match H2H Duel", "Get match h2h duel."], ["Rugby Match", "Get match by id."], ["Rugby League Home Standings", "Get league home standings."], ["American Football Search", "Search players, teams and tournaments."], ["Cricket League Next Matches", "Get league next matches."], ["Motorsport Category Stages", "Get all leagues from category."], ["Cricket Category Schedules", "Get schedules of the day from the category."], ["Motorsport Stage Substages", "Get all stage's substages."], ["American Football Player Playoffs Statistics", "Get player playoffs statistics."], ["American Football Team Playoffs Top Players", "Get team playoffs top players."], ["Basketball Team Near Matches", "Get team near matches."], ["American Football League Top Players Regular Season", "Get league regular season top players."], ["Motorsport Stage Seasons", "Get seasons of the stage."], ["American Football League Logo Image", "Get league logo image. It generates png image."], ["Basketball Manager Image", "Get manager image. It generates png image."], ["Cricket Team Next Matches", "Get team next matches."], ["Basketball Schedules", "Get schedules of the day."], ["Ice Hockey League Logo Image", "Get league logo image. It generates png image."], ["E-Sports Team Next Matches", "Get team next matches."], ["American Football Player Near Matches", "Get player near matches."], ["Rugby League Total Standings", "Get league total standings."], ["E-Sports Character Image", "Get character image. It generates png image."], ["Ice Hockey League Regular Season Top Players", "Get league regular season top players."], ["Rugby Category Tournaments", "Get all leagues from category."], ["Ice Hockey Team Regular Season Top Players", "Get team regular season top players."], ["American Football Match Player Statistics", "Get match player statistics."], ["Basketball Team Standings Seasons", "Get team standings seasons."], ["American Football Team Logo Image", "Get team logo image. It generates png image."], ["Basketball Match Best Players", "Get match best players."], ["Basketball Player Statistics Playoffs", "Get player playoffs statistics."], ["American Football Player Image", "Get player image. It generates png image."], ["Football League Last Matches", "Get league last matches."], ["Ice Hockey Match Player Statistics", "Get match player statistics."], ["Football Team Last Matches", "Get team last matches."], ["Ice Hockey League Last Matches", "Get league last matches."], ["Football Match Player Statistics", "Get match player statistics."], ["Tennis Event H2H Duel", "Get event h2h duel."], ["Football League Away Standings", "Get league away standings."], ["Rugby Manager Last Matches", "Get manager last matches."], ["Ice Hockey Player Playoffs Statistics", "Get player playoffs statistics."], ["Football League Rounds", "Get league team rounds."], ["Football Match H2H Duel", "Get match h2h duel."], ["Football Player National Team Statistics", "Get player national team statistics."], ["E-Sports League Last Matches", "Get league last matches."], ["Football Team Next Matches", "Get team next matches."], ["Ice Hockey Team Players Statistics Seasons", "Get team players statistics seasons."], ["Football Match Player Heatmap", "Get player heatmap in the  match. Check the tutorials to see html example."], ["Football Category Tournaments", "Get all leagues from category."], ["American Football Match H2H Duel", "Get match h2h duel."], ["E-Sports Category Tournaments", "Get all leagues from category."], ["Ice Hockey League Total Standings", "Get league total standings."], ["Football Schedules", "Get schedules of the day."], ["Football Match Streak Odds", "Get match streak odds."], ["E-Sports Team Last Matches", "Get team last matches."], ["Football Team Statistics Seasons", "Get team statistics seasons."], ["Football League Team Of The Week", "Get league team of week."], ["American Football Team Last Matches", "Get team last matches."], ["American Football PreMatch Form", "Get pre match form."], ["Ice Hockey League Cup Trees", "Get league cup trees."], ["Ice Hockey League Home Standings", "Get league home standings."], ["Ice Hockey Player Near Matches", "Get player near matches."], ["E-Sports League Logo Image", "Get league logo image. It generates png image."], ["American Football League Last Matches", "Get league last matches."], ["Rugby Team Near Matches", "Get team near matches."], ["Basketball Match H2H Duel", "Get match h2h duel."], ["E-Sports Schedules", "Get schedules of the day."], ["E-Sports Team Near Matches", "Get team near matches."], ["E-Sports Search", "Search players, teams and tournaments."], ["Ice Hockey League Playoffs Top Players", "Get league playoffs top players."], ["American Football League Total Standings", "Get league total standings."], ["Football Team Players Statistics Seasons", "Get team players statistics seasons."], ["Ice Hockey Team Last Matches", "Get team last matches."], ["Basketball Match", "Get match by id."], ["Rugby Team Standings Seasons", "Get team standings seasons."], ["Ice Hockey Player Image", "Get player image. It generates png image."], ["Football Team Near Matches", "Get team near matches."], ["Ice Hockey Player Statistics Seasons", "Get player statistics seasons."], ["E-Sports League Next Matches", "Get league next matches."], ["Basketball League Logo Image", "Get league logo image. It generates png image."], ["Rugby Match H2H Duel", "Get match h2h duel."], ["Rugby Team Next Matches", "Get team next matches."], ["Football Player Overall Statistics", "Get player overall statistics."], ["Cricket League Overall Top Players", "Get league overall top players."], ["Ice Hockey Manager Last Matches", "Get manager last matches."], ["American Football Category Schedules", "Get schedules of the day from the category."], ["Ice Hockey Team Near Matches", "Get team near matches."], ["E-Sports League Season Info", "Get league season info."], ["Ice Hockey PreMatch Form", "Get pre match form."], ["Ice Hockey Match", "Get match by id."], ["Cricket Team Last Matches", "Get team last matches."], ["Motorsport Team Stage Seasons", "Get team stage seasons."], ["Motorsport Unique Stage Image", "Get unique stage image."], ["Cricket PreMatch Form", "Get pre match form."], ["Football Team Logo Image", "Get team logo image. It generates png image."], ["Football Match", "Get match by id."], ["Ice Hockey Match Streak Odds", "Get match streak odds."], ["Ice Hockey Match H2H Duel", "Get match h2h duel."], ["Rugby PreMatch Form", "Get pre match form."], ["E-Sports Player Image", "Get player image. It generates png image."], ["Ice Hockey Match Best Players", "Get match best players."], ["Ice Hockey League Next Matches", "Get league next matches."], ["Ice Hockey League Away Standings", "Get league away standings."], ["Football Schedules Top", "Get top schedules of the day."], ["Football League Team Of The Week Rounds", "Get league team rounds."], ["Football Manager Image", "Get manager image. It generates png image."], ["E-Sports Map Image", "Get map image. It generates png image."], ["Cricket Player Overall Statistics", "Get player overall statistics."], ["Basketball League Top Players Regular Season", "Get league regular season top players."], ["Rugby Search", "Search players, teams and tournaments."], ["Basketball League Total Standings", "Get league total standings."], ["Basketball League Top Players Playoffs", "Get league playoffs top players."], ["Cricket League Total Standings", "Get league total standings."], ["Cricket Player Statistics Seasons", "Get player statistics seasons."], ["Cricket Match", "Get match by id."], ["American Football Match", "Get match by id."], ["Cricket Team Logo Image", "Get team logo image. It generates png image."], ["Basketball Team Logo Image", "Get team logo image. It generates png image."], ["Cricket Team Near Matches", "Get team near matches."], ["Cricket Team Players Statistics Seasons", "Get team players statistics seasons."], ["Cricket League Last Matches", "Get league last matches."], ["Cricket Team Standings Seasons", "Get team standings seasons."]]}, "Betigolo Predictions": {"tool_desc": "The Betigolo Predictions API is a powerful tool that provides probability estimates for various sports events, such as football, basketball, and baseball.", "apis": [["Sample predictions", "Get a list of a sample of matches of the previous day, including predictions for many markets."], ["Baseball predictions by day", "Get a list of all matches for a specific day, including predictions for many markets."], ["Futsal predictions by day", "Get a list of all matches for a specific day, including predictions for many markets."], ["Handball predictions by day", "Get a list of all matches for a specific day, including predictions for many markets."], ["Ice-Hockey predictions by day", "Get a list of all matches for a specific day, including predictions for many markets."], ["Basketball predictions by day", "Get a list of all matches for a specific day, including predictions for many markets."], ["Football predictions by day", "Get a list of all matches for a specific day, including predictions for many markets."]]}, "Sportsbook Odds": {"tool_desc": "LIVE ODDS W/ PLAYER PROPS from Fanduel, DraftKings, Caesars, BetMGM, Bovada, BetOnline, WynnBet, PointsBet, Sugarhouse/BetRivers, SuperBook, FoxBet, BallyBet and more to come soon.", "apis": [["Arbitrage & Low Hold", "This returns the bets that have arbitrage and all bets that have low holds. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage."], ["Game Odds - By Category Schedule", "If you query the category schedule and do not include a \"sport\" and \"category\" parameter it will return all possible values of sport and their respective categories. If you do include those parameters it will return a schedule of all sites for that sport and category. Remember that the categories are hashes, 0 is moneylines, 1 is spreads, 2 is over under, etc. There are a lot of categories, refer to the deconstruct ID code to determine which is which."], ["Game Odds - Basic Lines Schedule", "This is a schedule that shows moneylines, spreads, and over under offerings by all bookmakers."], ["Games List", "Valid League Names: \"NBA\", \"NCAA Basketball\", \"NFL\", \"NCAA Football\", \"NHL\", \"MLB\"\n\nThis will return a dictionary of games where the keys will be hashes describing the game and the values will be dictionaries of all of the games attributes including which sites have that game for betting and when our data last updated that site.\n\nIf you want all of the games for all of the leagues just leave the \"league_name\" parameter empty."], ["Game Odds - Flat Schedule", "This is a flat schedule of lines where the keys of \nthe dictionary are tags that fully describe the bet. \nThere is a program in the documentation called \ndecode_hash.py that will break these hashes down into \ndescriptions.\n\nIf the bet has both an over and an under then the \nvf_odds_pct will represent the implied win percent of \nthis bet from the vig free line.\n\nStructure:\n{\n  \"bet_hash Eg. PP^0^(Jaylen Brown)^25.5*O\": {\n    \"Site1 Eg. Fanduel\": {\n      \"site\": \"Fanduel\",\n      \"line\": 25.5,\n      \"dec_odds\": 1.87,\n      \"full_hash\": \"20001x20004@2023-02-09T00_PP^0^(Jaylen Brown)^25.5*O_FanDuel\",\n      \"am_odds\": \"-115\",\n      \"open\": true,\n      \"vf_odds_pct\": 0.50411\n    }\n  }\n}"], ["Low Hold Bets", "This returns the bets that have low hold bets. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage."], ["Arbitrage Bets", "This returns the bets that have arbitrage. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage."], ["Game Odds - Tiered Schedule", "This is a schedule that is tiered and separated with qualitative information. It is used for the website BookBreakers.us to create accordion tables of bet data.\n\nThe Tiers:\n1. Bet Type and Game Period (Eg. P3^0 is 3 Pointers Full Game in Basketball)\n2. Player (Eg. Jayson Tatum) (NOTE: If this is not a prop this tier will not exists)\n3. Lines Available (Eg. 2.5, 3.5)\n4. Outcomes for Those Lines (Eg. O, U for Over and Under)\n5. Sites (Eg. Fanduel, DraftKings, ETC.)"], ["Line Updates (Changes in Odds)", "All new odds and changes to odds from all sites are compiled in these dictionaries. The dictionaries are timestamped for exactly when they were processed and the exact update times in UTC of the lines are shown in the dictionary (labeled \"ut\" for \"update time\"). Use GET param \"since_timestamp\" as a UTC timestamp to get updates since a given time. If you do not include this parameter it give only the most recent updates file. 3 minutes is the maximum amount of updates stored by the server."], ["Game Odds - By Site Schedule", "This is a schedule that is separated by site. Upper and lower case doesn't matter as long as it has the correct letters for the request (DraftKings is same as draftkings)\n\nThe Sites:\n1. Fanduel\n2. DraftKings\n3. Caesars\n4. WynnBet\n5. PointsBet\n6. BetMGM\n7. SuperBook\n8. FoxBet\n9. Kambis    (SugarHouse/BetRivers/Barstool)"], ["BookBreakers Team Lookups", "This will return our dictionary of team names and aliases that different sites use for this game. Our matching games algorithm uses this to determine which team names on different sites correspond to the team name on ESPN's schedule of games."]]}, "Football Prediction": {"tool_desc": "The Football Prediction API provides predictions for upcoming football matches, average bookie odds, results for past matches and prediction performance statistics for past results.", "apis": [["Predictions", "This endpoint returns a list of the football predictions scheduled to start in the next 48hours. URL parameters can be specified to show past predictions or to filter by federation and prediction market."], ["List available markets", "List all available markets and the ones that are enabled for your subscription plan"], ["Head To Head", "Shows head to head stats and previous encounters for the home and away team of an upcoming match."], ["Home Team League Stats", "Shows the league table and stats for the home team of an upcoming match."], ["Home Team Last 10 Matches", "Grab the statistics and list of the last 10 matches played by the home team for a certain ID"], ["Away Team Last 10 Matches", "Grab the statistics and list of the last 10 matches played by the away team for a certain ID"], ["Away Team League Stats", "Shows the league table and stats for the away team of an upcoming match."], ["Prediction Details", "Grab all available predictions for a match id"], ["List available federations", "Returns an array of all the available federations."], ["Performance stats for past predictions", "Returns information about the accuracy of past predictions. (in the last day, 7 days, 14 days and 30 days) Can be additionally filtered by federation and market. If no market filter is provided it defaults to classic"], ["Get list of fixture IDs", "Returns a list of fixture IDs that can be used to make requests to endpoints expecting a ID url parameter.\nCan be filtered by:\n\n- iso_date\n- market\n- federation"]]}, "FDJ": {"tool_desc": "Games and pre-game Odds for FDJ", "apis": [["Odds", "Latest Odds for FDJ"], ["Matches", "Latest Matches for FDJ"]]}, "SofaSport": {"tool_desc": "SofaSport has everything, from simple live scores to deep statistics and detailed player analysis.", "apis": [["Number live events", "Get number of live events in the category by sport ID"], ["Tournament info", "Get tournament info by tournament id"], ["Latest media", "Get media of the unique tournament"], ["Schedule live", "Get live events schedule"], ["Country channels (stage)", "Get tv country channels (stage) by stage_id"], ["Races (motorsport)", "Get races by team ID (motorsport)"], ["Unique tournaments list", "Get a list of unique tournaments by category id"], ["Tournament data", "Get tournament data by tournament id"], ["Unique tournament data", "Get unique tournament data by unique tournament id"], ["Team rankings", "Get team rankings by team ID"], ["Unique tournament logo", "Get unique tournament logo by unique tournament id"], ["Unique tournament seasons", "Get seasons of the unique tournament"], ["Ranking by season", "Get the current by season"], ["Ranking current", "Get the current rating"], ["Tournaments list", "Get a list of tournaments by category id"], ["Tournament events", "Get events of the tournament"], ["Featured events", "Get featured events of the unique tournament"], ["Search transfers", "Search transfers by parameters"], ["Sports Number live events", "Get number of live events in the sports"], ["Sport list", "Get a list of sports"], ["Manager events", "Get events of the manager"], ["Manager photo", "Get manager photo by manager ID"], ["H2H events", "Get h2h events by custom_event_id"], ["Unique seasons list (motorsport)", "Get list of the unique stages by category_id (motorsport)"], ["Streaks", "Get team streaks by event_id"], ["Tweets", "Get tweets by event_id"], ["Lineups (esports)", "Get games (esports) by event_id"], ["Predict", "Get predict by event_id"], ["Point by point", "Get point by point data by event_id. (tennis)"], ["Heatmap", "Get heatmap player by event_id and team_id"], ["Sub events", "Get sub events by event_id"], ["Media", "Get media by event_id"], ["Incidents", "Get incidents by event_id"], ["Schedule by category", "Get event schedule by category and date"], ["Graph points", "Get graph points by event_id"], ["Event data", "Get event data by event_id"], ["Schedule by date", "Get event schedule by date"], ["Goal distributions", "Get goal distributions by team ID, unique tournament ID, season ID"], ["Stage seasons (motorsport)", "Get team stage seasons (motorsport)"], ["Statistics", "Get statistics by event_id"], ["Seasons standings", "Get seasons of the standings by team ID"], ["Seasons for team statistics", "Get seasons for team statistics by team ID"], ["Career history (motorsport)", "Get team career history (motorsport)"], ["Players of team", "Get players of team by team ID"], ["Transfers of team", "Get transfers of team by team ID"], ["Team Latest media", "Get latest media by team ID. Ex. Full Highlights"], ["Team recent form", "Get team recent form by team ID"], ["Team near events", "Get team near events by team ID"], ["Team data", "Get team data by team ID"], ["Statistics (esports)", "Get statistics (esports) by event_id"], ["Current team tournaments", "Get current team tournaments by team ID"], ["Team events", "Get events by team ID"], ["Recent unique tournaments", "Get recent unique tournaments by team ID"], ["Schedule odds", "Get events schedule odds by date"], ["Statistics overall", "Get team overall statistics by team ID, unique tournament ID, season ID"], ["Popular events", "Get today's popular events"], ["Team logo", "Get team logo by team ID"], ["Channels data (stage)", "Get channels data (stage)"], ["Channels list", "Get a list of channels by country"], ["Teams Player statistics", "Get overall player statistics by team ID, unique tournament ID, season ID"], ["Lineups", "Get lineups by event_id"], ["Seasons for player statistics", "Get seasons for player statistics by team ID"], ["Country channels", "Get tv country channels by event_id"], ["News feed", "Get news feed of the team"], ["Category list", "Get a list of categories"], ["Unique tournaments top list", "Get a top list of unique tournaments by category id"], ["Tournament seasons", "Get seasons of the tournament"], ["Multi search", "Multi search. Search by teams, referees, managers, players, tournaments"], ["Manager career-history", "Get the manager's career history"], ["Suggest", "Suggest search. Search Suggest automatically recommends popular searches as you type your query into the search field"], ["Player Heatmap", "Get a player's heatmap"], ["Referee statistics", "Get referee statistics by referee ID"], ["Transfer history", "Get player transfer history"], ["Attribute overviews", "Get player attribute overviews"], ["Player latest media", "Get player's latest media by player_id"], ["Player events", "Get events by player ID"], ["Last year summary", "Get last year summary of the player"], ["Player statistics seasons", "Get seasons of the player"], ["Player data", "Get player data by player ID"], ["Daily unique tournaments", "Get daily unique tournaments by date and sport"], ["Referee data", "Get referee data by referee ID"], ["National team statistics", "Get player's stats by national teams"], ["Player characteristics", "Get player characteristics by player ID"], ["Referee events", "Get events by referee ID"], ["Player statistics", "Get player statistics. Use `regularSeason` - for hockey"], ["Manager data", "Get manager data by manager ID"], ["Last ratings", "Get the latest player rating"], ["Team-week rounds", "Get team-week rounds of the season"], ["Categories", "Get actual categories by date and sport"], ["Cup trees", "Get cup trees data"], ["Team events", "Get team event of the season"], ["Events", "Get events of the season"], ["Rounds", "Get rounds of the season"], ["Standings", "Get standings of the season"], ["Standing competitor (motorsport)", "Get standing competitor by stage_id (motorsport)"], ["Teams statistics", "Get teams statistics of the season"], ["Standing teams (motorsport)", "Get standing teams by stage_id (motorsport)"], ["Season data", "Get data about the season"], ["Unique stage logo (motorsport)", "Get unique stage logo by unique_stage_id (motorsport)"], ["Player photo", "Get player photo by player ID"], ["Stage data (motorsport)", "Get stage data by stage_id (motorsport)"], ["Substages (motorsport)", "Get substages by stage_id (motorsport)"], ["Unique stages list (motorsport)", "Get list of the unique stages by category_id (motorsport)"], ["Events Player statistics", "Get player statistics by event_id"], ["Stage logo (motorsport)", "Get stage logo by stage_id (motorsport)"], ["Players statistics", "Get players statistics of the season"], ["Odds winning", "Get winning odds by event_id. You can convert them to decimals."], ["Player heatmap", "Get player heatmap by event_id"], ["Team-week players", "Get team-week players of the season"], ["H2H stats", "Get H2H stats by event_id"], ["Team shirts", "Get team shirts by event_id"], ["Rounds (esports)", "Get rounds (esports) by event_id"], ["Bans (esports)", "Get bans (esports) by event_id"], ["Games (esports)", "Get games (esports) by event_id"], ["Best players", "Get best players by event_id"], ["Form", "Get pregame team form by event_id"], ["Odds all", "Get all odds by event_id. You can convert them to decimals. `provider_id`: 1 - Bet365, 100 - betano, 101 - bilyoner"], ["Shotmap", "Get shotmap by event_id"], ["Event managers", "Get team managers by event_id"], ["Fan rating", "Get fan rating by event_id"], ["Innings (cricket)", "Get innings (cricket) by event_id"]]}, "FootApi": {"tool_desc": "FootApi offers real-time football scores of all live matches that are being played.", "apis": [["Search", "This operation allows you to search for football players, teams, and tournaments based on the search term provided."], ["ManagerDetails", "Get details of a football manager, including their name, age, nationality, and other relevant information."], ["ManagerLastMatches", "Get the list of the last matches played by a football manager, paginated by the given page number."], ["PlayerNationalTeamStatistics", "Get the national team statistics for a specific Football player."], ["PlayerMedia", "Get the media of a specific Football player."], ["CategoryFlag", "Get the flag image of a specific category in PNG format."], ["PlayerLastYearSummary", "Get the last year summary for a specific Football player."], ["ManagerNextMatches", "Get details of the next matches for a football manager, including the teams playing, match timings, and other relevant information."], ["RefereeStatistics", "Get the statistics of a specific Football referee."], ["PlayerLastMatches", "Get the list of the last matches played by a football player, paginated by the given page number."], ["PlayerStatisticsSeasons", "Get the statistics seasons for a specific Football player."], ["PlayerAttributes", "Get the attributes of a specific Football player."], ["PlayerTransferHistory", "Get the transfer history of a specific Football player."], ["ManagerImage", "Get the image of a football manager with the given ID."], ["PlayerNearMatches", "Get the near matches for a specific Football player."], ["MatchTvChannelDetails", "Get the details of a specific TV channel broadcasting a specific Football match."], ["PlayerOverallHeatmaps", "Get the overall heatmaps for a specific football player for a given tournament and season."], ["PlayerLastRatings", "Get the last ratings for a specific Football player in a specific tournament and season."], ["PlayerOverallStatistics", "Get the overall statistics for a specific Football player in a specific tournament and season."], ["TournamentPlaceholderImage", "Get the tournament placeholder image in PNG format."], ["MatchSchedulesTop", "Get top football schedules for a specific day, month, and year."], ["PlayerPenaltyHistory", "Get the penalty history of a specific Football player."], ["TVCountries", "Get a list of countries and their respective TV channels broadcasting a specific Football match."], ["PlayerPlaceholderImage", "Get the player placeholder image in PNG format."], ["TeamPlaceholderImage", "Get the team placeholder image in SVG format."], ["TeamPlayers", "Get the players for a specific Football team."], ["TeamLogoImage", "Get the logo image of a specific football team using its ID."], ["ManagerPlaceholderImage", "Get the player placeholder image in PNG format."], ["TeamTransfers", "Get the transfers for a specific Football team."], ["RefereeImage", "Get the image of a football player with the given ID."], ["TeamLastMatches", "Get the last matches for a specific Football team."], ["MatchOdds", "Get odds data for a specific football match using its ID."], ["TeamMedia", "Get the media for a specific Football team."], ["TeamNearMatches", "Get the near matches for a specific Football team."], ["MatchHeadToHeadDuel", "This operation returns a head-to-head summary for a specific football match, including previous matches and other relevant data."], ["RefereeNextMatches", "Get the list of the last matches by a football referee, paginated by the given page number."], ["MatchVotes", "Get votes data for a specific football match using its ID."], ["MatchHomePlayerJersey", "Get the home player jersey for a specific Football match."], ["MatchLineups", "Get the lineups for a specific Football match."], ["MatchPlayerStatistics", "Get the statistics of a specific player in a specific Football match."], ["TeamStatisticsSeasons", "Get the statistics seasons for a specific Football team."], ["PlayerDetails", "Get the details of a specific Football player."], ["TeamOverallTopPlayers", "Get the best players for a specific Football team in a particular tournament and season."], ["TeamPlayersStatisticsSeasons", "Get the players' statistics seasons for a specific Football team."], ["MatchPlayerShotmap", "Get the shotmap of a specific player in a specific Football match."], ["FootballMatchAwayPlayerJersey", "Get the away player jersey for a specific Football match."], ["RefereeLastMatches", "Get the list of the last matches by a football referee, paginated by the given page number."], ["TeamNextMatches", "Get the next matches for a specific Football team."], ["PlayerCharacteristics", "Get the characteristics of a specific Football player."], ["MatchPlayersAveragePositions", "Get the average positions of players for a specific Football match."], ["MatchStreaks", "Get data about the streaks in a specific football match using its ID."], ["MatchAwayGoalkeeperJersey", "Get the away goalkeeper jersey for a specific Football match."], ["LeagueHomeTeamEvents", "Get last 5 home matches of a specific Football league."], ["MatchGraph", "Get the graph for a specific Football match."], ["MatchSchedulesBottom", "Get less relevant Football match schedules for a specific date, including match timings, teams, and other relevant information."], ["LeagueLogoImage", "Get the logo image of a specific football league using its ID."], ["UEFAClubRankings", "Get the current UEFA club rankings of Football teams."], ["MatchShotmap", "Get the shotmap of a specific Football match."], ["FIFARankings", "Get the current FIFA rankings of Football teams."], ["MatchIncidents", "Get the incidents for a specific Football match."], ["LeagueMeta", "Get meta information for a specific football tournament."], ["LeagueTotalTeamEvents", "Get last 5 matches of a specific Football league."], ["LeagueOverallTopTeams", "Get the overall top teams for the given tournament and season ID."], ["PlayerImage", "Get the image of a football player with the given ID."], ["TeamDetails", "Get the details for a specific Football team."], ["MatchBestPlayers", "Get data about the best players in a specific football match using its ID."], ["MatchHighlights", "This operation returns highlights of a specific football match, including key moments and player actions."], ["MatchManagers", "Get information about the managers for a specific football match using its ID."], ["TeamTournaments", "Get the unique tournaments a specific Football team has participated in."], ["LeagueHomeStandings", "Get the home standings of a specific Football league."], ["Match", "Get detailed information about a specific Football match by providing the match ID."], ["LeagueEventsByRound", "This operation allows you to retrieve events for a specified football league, season, and round."], ["RefereeDetails", "Get the details of a specific Football referee."], ["LeaguePowerRankingByRoundById", "This operation returns the power ranking round for the specified tournament, season and round ID for a football league."], ["LeagueSeasons", "Get the available seasons for a specific football league."], ["ManagerCareerHistory", "Get the career history of a football manager, including information on the teams they have managed, their win-loss record, and other relevant information."], ["UEFACountryRankings", "Get the current UEFA country rankings of Football teams."], ["MatchHomeGoalkeeperJersey", "Get the home goalkeeper jersey for a specific Football match."], ["LiveMatches", "Get a list of currently ongoing live Football matches."], ["LeagueTeamOfTheWeek", "Get the team of the week for a specific round of a football league by providing the tournament ID, season ID, and round ID."], ["Categories", "Get a list of Football categories available."], ["LeagueDetails", "Get detailed information for a specific football league using its ID."], ["MatchPlayerHeatmap", "Get the heatmap of a specific player in a given football match."], ["LeagueTotalStandings", "Get the total standings of a specific Football league."], ["TeamLeaguePerformance", "Get the league performance graph for a specific football team within a particular tournament and season."], ["LeagueTeamOfTheWeekRounds", "This operation returns the team of the week rounds for the specified tournament and season ID for a football league."], ["LeagueOverallTopPlayers", "Get the overall top players for the given tournament and season ID."], ["LeagueNextMatches", "This operation returns the next matches of a football league for the specified tournament and season ID, including match timings, teams, and other relevant information."], ["CategoryTournaments", "Get all leagues associated with a specific Football category by providing the category ID."], ["LeagueLastMatches", "This operation returns the last matches of a football league for the specified tournament and season ID, including match timings, teams, and other relevant information."], ["CategorySchedules", "Get Football match schedules for a specific date and category, including match timings, teams, and other relevant information."], ["TeamOverallStatistics", "Get the overall statistics for a specific Football team in a particular tournament and season."], ["LeagueCupTrees", "Get cup trees for a specific football league in a given season."], ["HeadToHeadMatches", "Get the head-to-head matches for a specific Football match using a custom ID."], ["LeagueAwayTeamEvents", "Get last 5 away matches of a specific Football league."], ["LeagueGroups", "Get the groups for a specific season of a football league by providing the tournament ID and season ID."], ["LeagueGroupMatches", "Get the groups matches for a specific season of a football league by providing the group tournament ID and season ID."], ["LeagueEventsByRoundAndSlug", "This operation allows you to retrieve events for a specified football league, season, round and slug."], ["MatchStatistics", "Get the statistics for a specific Football match."], ["LeagueRounds", "This operation returns the rounds for the specified tournament and season ID for a football league."], ["PreMatchForm", "This operation returns the pre-match form for a specific football match, including team statistics and player data."], ["LeaguePerGameTopPlayers", "Get the overall top players per game for the given tournament and season ID."], ["MatchSchedules", "Get football schedules for a specific day, month, and year."], ["LeagueAwayStandings", "Get the league's away standings for the given tournament and season ID."], ["MatchStreakOdds", "Get odds data about the streaks in a specific football match using its ID."], ["LeagueSeasonInfo", "Get the season information of a specific Football league."], ["LeaguePlayersStatistics", "Get the player statistics of a specific Football league."], ["LeagueMedia", "Get media for a football league, including images and videos."], ["LeaguePowerRankingRounds", "This operation returns the power ranking rounds for the specified tournament and season ID for a football league."]]}, "HandballAPI": {"tool_desc": "HandballAPI offers a schedule for live matches and results for top national and international leagues and tournaments.", "apis": [["Search", "This operation allows you to search for handball players, teams, and tournaments based on the search term provided."], ["PlayerImage", "Get image of a handball player by ID"], ["MatchDetails", "Get handball match details by ID."], ["PlayerDetails", "Get details of a handball player by ID"], ["MatchBestPlayers", "Get best players for a handball match by ID."], ["MatchHeadToHeadDuel", "Get headtohead resume for a handball match by ID."], ["PreMatchForm", "Get pregame form for a handball match by ID."], ["MatchIncidents", "Get incidents for a handball match by ID."], ["MatchSchedules", "Get handball matches by date."], ["PlayerOverallStatistics", "Get overall player statistics for a handball player in a unique tournament season"], ["LiveMatches", "Get live handball matches."], ["PlayerStatisticsSeasons", "Get player statistics seasons for a handball player by ID"], ["PlayerLastMatches", "Get last matches of a handball player by ID"], ["TeamNextMatches", "Get upcoming matches for a handball team by ID and page"], ["TeamStandingsSeasons", "Get seasons standings for a handball team by ID"], ["CategorySchedules", "Get handball matches by category and date."], ["MatchStatistics", "Get statistics for a handball match by ID."], ["MatchVotes", "Get votes for a handball match by ID."], ["PlayerNearMatches", "Get near matches of a handball player by ID"], ["HeadToHeadMatches", "Get headtohead events for a handball match by custom ID."], ["MatchLineups", "Get lineups and player statistics for a handball match by ID."], ["LeagueAwayStandings", "Get away standings for a handball unique tournament and season"], ["LeaguePlayerStatisticsType", "Get player statistics types for a handball unique tournament and season"], ["TeamPlayersStatisticsSeasons", "Get player statistics seasons for a handball team by ID"], ["LeagueOverallTopPlayers", "Get overall top players for a handball unique tournament and season"], ["TeamPlayers", "Get players for a handball team by ID"], ["LeagueAwayTeamEvents", "Get away team events for a handball unique tournament and season"], ["TeamNearMatches", "Get near matches for a handball team by ID"], ["TeamTournaments", "Get unique tournaments for a handball team by ID"], ["MatchStreaks", "Get team streaks for a handball match by ID."], ["MatchOdds", "Get odds for a handball match by ID."], ["TeamDetails", "Get details for a handball team by ID"], ["LeagueLastMatches", "Get structured cup trees for a handball unique tournament season"], ["TeamLastMatches", "Get previous matches for a handball team by ID and page"], ["MatchHighlights", "Get highlights of a handball match by ID."], ["LeagueTotalTeamEvents", "Get total team events for a handball unique tournament and season"], ["LeaguePerGameTopPlayers", "Get overall top players per game for a handball unique tournament and season"], ["TeamOverallTopPlayers", "Get overall top players for a handball team in a unique tournament and season"], ["LeagueGroupMatches", "Get group events for a handball tournament season"], ["LeagueEventsByRound", "Get matches by round for a handball unique tournament season"], ["LeagueOverallTopTeams", "Get overall top teams for a handball unique tournament and season"], ["LeagueLogoImage", "Get image of a handball unique tournament by ID"], ["LeagueNextMatches", "Get structured cup trees for a handball unique tournament season"], ["LeagueMedia", "Get media for a handball unique tournament"], ["LeagueRounds", "Get rounds for a handball unique tournament season"], ["LeagueEventsByRoundAndSlug", "Get matches by round and slug for a handball unique tournament season"], ["LeagueDetails", "Get details of a handball unique tournament by ID"], ["LeagueSeasons", "Get seasons of a handball unique tournament by ID"], ["LeagueGroups", "Get groups for a handball unique tournament season"], ["CategoryTournaments", "Get tournaments by category."], ["LeagueCupTrees", "Get structured cup trees for a handball unique tournament season"], ["LeagueHomeTeamEvents", "Get home team events for a handball unique tournament and season"], ["LeagueHomeStandings", "Get home standings for a handball unique tournament and season"], ["LeagueTotalStandings", "Get total standings for a handball unique tournament and season"]]}, "BasketAPI": {"tool_desc": "BasketAPI provides you with live basketball results, schedule and matches that are being played or was played in a date.", "apis": [["Search", "Search for basketball players, teams, and tournaments using a search term."], ["ManagerLastMatches", "Get the last matches for a specific basketball manager."], ["PlayerStatisticsOverall", "Get the overall statistics for a specific basketball player in a given tournament and season."], ["PlayerShotActionsPlayoffs", "Get the shot actios of a player in the basketball league during the playoffs."], ["PlayerNearMatches", "Get the near matches for a specific basketball player."], ["PlayerMedia", "Get the media for a specific basketball player."], ["PlayerLastMatches", "Get the last matches of a basketball player using their id."], ["PlayerStatisticsSeasons", "Get the statistics seasons for a specific basketball player."], ["PlayerStatisticsRegularSeason", "Get the regular season statistics for a specific basketball player in a given tournament and season."], ["PlayerDetails", "Get the details of a specific basketball player."], ["PlayerImage", "Get the image for a specific basketball player using the player ID. The image is in PNG format."], ["ManagerDetails", "Get the details of a specific basketball manager."], ["PlayerTransferHistory", "Get the transfer history for a specific basketball player."], ["PlayerShotActionsRegularSeason", "Get the overall statistics of a player in the basketball league during the regular season."], ["MatchSeries", "Get matches in the series for a specific basketball match."], ["ManagerImage", "Get the image for a specific basketball manager using the manager ID. The image is in PNG format."], ["MatchOdds", "Get odds information for a specific basketball match."], ["MatchPlayerShotmap", "Get the shotmap of a player in a basketball match."], ["PlayerStatisticsPlayoffs", "Get the playoffs statistics for a specific basketball player in a given tournament and season."], ["MatchLineups", "Get lineups for a specific basketball match."], ["MatchBestPlayers", "Get best players information for a specific basketball match."], ["TeamNearMatches", "Get the near matches for a specific basketball team."], ["MatchIncidents", "Get incidents for a specific basketball match."], ["HeadToHeadMatches", "Get head-to-head matches for a specific basketball match using the custom ID."], ["TeamMedia", "Get the media for a specific basketball team."], ["TeamLastMatches", "Get the last matches for a specific basketball team."], ["MatchStatistics", "Get statistics for a specific basketball match."], ["TeamPlayers", "Get the players of a specific basketball team."], ["MatchManagers", "Get the managers for a specific basketball match."], ["TeamTournaments", "Get the unique tournaments that a specific basketball team has participated in."], ["TeamStandingsSeasons", "Get the standings seasons for a specific basketball team."], ["TeamPlayersStatisticsSeasons", "Get the players statistics seasons for a specific basketball team."], ["MatchHighlights", "Get highlights for a specific basketball match."], ["PreMatchForm", "Get pre-match form information for a specific basketball match."], ["TeamDetails", "Get the details of a specific basketball team."], ["MatchGraph", "Get graph data for a specific basketball match."], ["TeamNextMatches", "Get the next matches for a specific basketball team."], ["CategoryFlag", "Get the flag image of a specific category in PNG format."], ["TeamTopPlayersRegularSeason", "Get the top players for a specific basketball team during the regular season."], ["TeamLogoImage", "Get the logo image for a specific basketball team using the team ID. The image is in PNG format."], ["Match", "Get detailed information of a specific basketball match using the match ID."], ["MatchTeamShotmap", "Get the shotmap of a team in a basketball match."], ["LeagueSeasons", "Get the seasons for a specific basketball league using the tournament ID."], ["MatchTvChannelDetails", "Get the details of a specific TV channel broadcasting a specific Football match."], ["LiveMatches", "Get a list of all live basketball matches."], ["TeamTopPlayersPlayoffs", "Get the top players for a specific basketball team during the playoffs."], ["MatchSchedules", "Get a list of basketball matches scheduled on a specific day."], ["LeagueHomeStandings", "Get the home standings for a specific basketball league in a given tournament and season."], ["LeagueShotActionsAreasPlayoffs", "Get the shot actions areas for the basketball league during the playoffs."], ["LeagueGroupMatches", "Get the groups in the basketball league."], ["LeagueHomeTeamEvents", "Get home last 5 matches for a specific basketball league in a given tournament and season."], ["LeagueAwayTeamEvents", "Get away last 5 matches for a specific basketball league in a given tournament and season."], ["LeagueTotalStandings", "Get the total standings for a specific basketball league in a given tournament and season."], ["LeagueTopPlayersRegularSeason", "Get the top players of a specific basketball league's regular season using the tournament and season IDs."], ["LeagueOverallTopPlayers", "Get the best players overall in the basketball league."], ["LeagueLastMatches", "Get the last matches for a specific basketball league using the tournament and season IDs, and a zero-based page number."], ["TeamPlaceholderImage", "Get the team placeholder image in SVG format."], ["LeagueCupTrees", "Get the cup trees for a specific basketball league using the tournament and season IDs."], ["LeaguePlayoffsPerGameTopPlayers", "Get the best players in the basketball league per game during the playoffs."], ["LeagueTopPlayersTypes", "Get the types of best players in the basketball league."], ["TVCountries", "Get a list of countries and their respective TV channels broadcasting a specific Football match."], ["LeagueRegularSeasonPerGameTopPlayers", "Get the best players in the basketball league per game during the regular season."], ["LeagueOverallTopTeams", "Get the best teams overall in the basketball league."], ["LeagueRegularSeasonTopTeams", "Get the best teams in the basketball league during the regular season."], ["LeagueAwayStandings", "Get the away standings for a specific basketball league in a given tournament and season."], ["LeagueTopPlayersPlayoffs", "Get the top players of a specific basketball league's playoffs using the tournament and season IDs."], ["LeagueRounds", "Get the rounds in the basketball league."], ["LeagueLogoImage", "Get the logo image for a specific basketball league using the tournament ID. The image is in PNG format."], ["TournamentPlaceholderImage", "Get the tournament placeholder image in PNG format."], ["LeagueDetails", "Get the details for a specific basketball league using the tournament ID."], ["CategorySchedules", "Get the schedules of the day for a specific basketball category using the category ID and the date."], ["TeamTransfers", "Get the transfers of a specific basketball team."], ["LeagueOverallPerGameTopPlayers", "Get the best players in the basketball league per game overall."], ["LeagueShotActionsAreasRegularSeason", "Get the shot actions areas for the basketball league during the regular season."], ["LeagueNextMatches", "Get the next matches for a specific basketball league using the tournament and season IDs, and a zero-based page number."], ["MatchH2HDuel", "Get head-to-head duel information for a specific basketball match."], ["LeagueMedia", "Get the media for a specific basketball league using the tournament ID."], ["Categories", "Get the list of available basketball categories."], ["LeagueTotalTeamEvents", "Get the both home and away last 5 matches for a specific basketball league in a given tournament and season."], ["ManagerPlaceholderImage", "Get the manager placeholder image in PNG format."], ["LeagueGroups", "Get the groups in the basketball league."], ["CategoryTournaments", "Get the list of all leagues belonging to a specific basketball category using the category ID."], ["LeaguePlayoffsTopTeams", "Get the best teams in the basketball league during the playoffs."]]}, "National Football Players": {"tool_desc": "All active national football players, positions, teams, and numbers.", "apis": [["Team Roster", "Returns roster of football team. Use team abbreviation when specifying team (i.e. BUF, NE, MIA, etc.). See /teams to get team names and abbreviations"], ["Positions", "Returns all positions (i.e. quarterback: QB)"], ["Player", "Returns player info of player specified (i.e. name, number, position, team). Use hyphenated name with capitals (i.e. Tom-Brady)"], ["All Players", "Returns all active football players."], ["All Teams", "Returns an array of all football teams and abbreviations"], ["Players at Position", "Returns all of the players at specified position. Only use abbreviated position names for position (i.e. QB, RB, WR, etc). See list of current positions @ /position"]]}, "SportifyAPI": {"tool_desc": "Real-time sports data platform providing comprehensive information on tournaments, matches, players, and live scores for various sports.", "apis": [["PlayerUniqueTournamentOverallStatistics", "Player Unique Tournament Overall Statistics"], ["PlayerPenaltyHistoryinUniqueTournament", "Player Penalty History in Unique Tournament"], ["PlayerUniqueTournamentHeatmap", "Player Unique Tournament Heatmap"], ["EventHead-to-Head(H2H)", "Event Pregame Form (H2H)"], ["SeaonsTopPlayersPerGame", "Seaons Top Players Per Game"], ["TeamOfTheWeekDetails", "Team Of The Week Details"], ["PlayerUniqueTournamentLastRatings", "Player Unique Tournament Last Ratings"], ["TeamofTheWeek", "Team of The Week"], ["PlayerNationalTeamStatistics", "Player National Team Statistics"], ["PlayerLastYearSummary", "Player Last Year Summary"], ["TournamentsByCountrycode", "Tournaments By Country code"], ["TopPlayersinUniqueTournament", "Top Playersin Unique Tournament"], ["SportsEvents", "Get the all current Sports Matches around the world"], ["TournamentDetailsByID", "Tournament Details By ID"]]}, "NBA Team Stats": {"tool_desc": "Team statistics for every NBA team dating back to 1950", "apis": [["Team Stats", "Provides team stats for the current league year. Optionally, supply a `leagueYear` or `team` parameter to get results for those options."]]}, "Ice Hockey Data": {"tool_desc": "Broadage Ice Hockey API will give you wide range of data of world's top ice hockey leagues, including fixtures, standings, match lists and many more.", "apis": [["Tournament Standings", "Team Rankings for a specific competition."], ["Daily Match List-Results", "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Daily Match List-Scheduled", "Daily match list including scheduled matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Tournament Teams", "List of teams participating in a specific tournament."], ["Tournament Info", "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament."], ["Daily Match List-All", "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Tournament Fixture", "Full match list with period and final scores."], ["Tournament List", "List of tournaments in your data coverage."], ["Daily Match List-Live", "Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**"], ["Recent Match List", "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Ice Hockey Match List or Fixture endpoints.**"]]}, "Football (soccer) team names": {"tool_desc": "Large database of team names, You'll receive 7000+ football (soccer) team names, with their short names from almost every league, nation etc\u2026 This API can be useful for you for ex.: if you want to create football (soccer) statistics based on team names and short names", "apis": [["All teams", "You'll get more than 7000 football (soccer) team names, with their short names from almost every league and country."], ["First 25 teams", "You'll get only the first 25 team names and their short names if you have basic plan."]]}, "Metrx Factory": {"tool_desc": "Predictive football analytics API.", "apis": [["Competitions", "Returns a list of competitions that match the given parameters.\nCompetitions are divided into stages which differ in playing mode (league vs. knock-out). If no parameters are provided then all competitions hold in this year are returned.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 30 seconds`\n`Max. competitions returned: 5`"], ["Teams", "Returns a list of teams that match the given parameters.\nAt least one of the request parameters is required.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 30 seconds`\n`Max. teams returned: 5`"], ["Countries", "Returns a list of countries for which teams and metrics are available.\nThere are no parameters to provide.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. countries returned: 5`"], ["Competition Performance Indices", "Returns a snapshot of global competition performance indices sorted by rank in ascending order.\nSeparate index lists are maintained for club/national team and domestic/international competitions.\n\nIf no parameters are provided then the latest club team competitions ranking is returned in absolute index format. For details about index calculation and factors refer to the documentation.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. performances returned: 5`"], ["Team Performance Indices", "Returns a snapshot of global team performance indices sorted by rank in ascending order.\nSeparate index lists are maintained for club and national teams. The indication of projections controls which data should be collected and has direct impact on the payload and billed credits.\n\nIf no parameters are provided then the latest club team ranking is returned with only the main index projection in absolute index format. For details about index calculation and factors refer to the documentation.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. performances returned: 5`"], ["Match Metrics", "Returns the metrics of a single match, a specific team or matches within a time span.\n\nThis is the main endpoint for retrieving match related figures such as performance ratios, expected and actual scores, statistically fair and market odds. The indication of projections controls which data should be collected and has direct impact on the payload and billed credits.\n\nIf no parameters are provided then the performance index of competing teams *(TI)*, expected goals *(XG)* and expected moneyline odds *(XM)* along with match details *(MD)* are returned for upcoming matches. The time span covering next matches ranges between 8 hours for *Basic* and 60 hours for paid subscriptions.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. matches returned: 3`"], ["Matches", "Returns a list of matches for given parameters.\n\nBoth historical and upcoming matches are supported. If no parameters are provided then all upcoming matches are returned. The time span covering next matches ranges between 8 hours for *Basic* and 60 hours for paid subscriptions.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 30 seconds`\n`Max. matches returned: 5`"], ["Top Match Metrics", "Returns the metrics of matches with top values regarding a certain metric.\n\nThis is the premium endpoint for goal-oriented search of match related figures and is available only for the *Mega* subscription. It allows custom logic for match selection and supports functions used to join metrics. Finding the teams with highest conversion rates or market lines with the highest discrepancies to statistical odds are simple tasks by means of this operation.\n\nFurthermore, it may save you credits in comparison to the *Match Metrics* operation as only a filtered subset will be fetched. By default, the Top-10 upcoming matches are returned. Historical top searches are supported for specific teams and competition stages as well.\n\nNote that testing this endpoint with the *Basic* subscription will result in a 403 HTTP error (Forbidden). Instead, refer to the [docs](https://docs.metrxfactory.io/#get-/match-metrics/top) to learn about the features offered by the endpoint."], ["Team Performance Index History", "Returns the history of a team's performance index. Each datapoint represents an index change based on a match performance. The indication of projections controls which data should be collected and has direct impact on the payload and billed credits.\n\nThere is one obligatory parameter which identifies the team of the trend. If no more parameters are provided then the trend for the last year's performance (*Basic* subscriptions: one month) is returned with only the main index projection in absolute index format. For details about index calculation and factors refer to the documentation.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. time span returned: 1 month`"]]}, "Hockey - DataFeeds by Rolling Insights": {"tool_desc": "Real-time Play by Play, Season Schedule, Weekly Schedules, Daily Schedules, Team Information, Team Stats, Player Information, Player Stats, Injuries and Depth Charts for the NHL.", "apis": [["Weekly Schedule", "Returns all events from the date specified plus 7 days in advance"], ["Team Season Statistics", "Returns statistics for teams"], ["Live Game Data", "This endpoint provides real-time game box scores."], ["Season Schedule", "Returns season schedule for the specified season. If omitted, returns the schedule for current season."], ["Player Information", "This endpoint returns player demographic information"], ["Team Information", "This endpoint returns team information"], ["Team Depth Charts", "Returns player depth charts for a team"], ["Player Injuries", "Returns a record of each player's injury on a team"], ["Player Season Statistics", "Returns Player Season Statistics"], ["Daily Schedule", "Returns season schedule for the specified date or \"now\" returns current day's schedule. Daily schedule is changed at 10 AM ET."]]}, "msport": {"tool_desc": "Soccer livescore , results , fixtures , match and everything you need from 7msport \n\n(if you need additional or new feature just contact me)", "apis": [["livescores", "list of soccer livescores"], ["fixtures", "*  list of future match up to next 7 days\n*  you can retrieve full list of soccer matches up to next 7 days"], ["match", "get details of match with id\nleague ,home , away , events , substitute , stats and everything you need about the soccer match"], ["results", "Msport  Soccer results at date - a comprehensive soccer match archive"]]}, "NHL API": {"tool_desc": "This API provides instant access to the latest data for all operations and players in the NHL.", "apis": [["NHL Team Players", "This API endpoint will return the team roster information for a specific NHL team."], ["NHL Team Info", "This API endpoint will return the team info for a specific NHL team."], ["NHL Team List", "This API endpoint will return the list of all NHL teams"], ["NHL Standings", "This API endpoint will return the standings for the NHL.\n\nParameters:\n->year\n-> group  //acceptable group names: 'league', 'conference', 'division'. if not described, default: 'league'"], ["NHL Score board", "This API endpoint will get the NHL scoreboard data for a specified date if available."], ["NHL Schedules", "This endpoint will get NHL schedule data for a specified date when available."], ["NHL Picks", "With this endpoint you can get the NHL PickCenter data for a specified game"], ["NHL Summary", "With this endpoint you can get the game summary data for a specified game."], ["NHL Box Score", "From the NHL, this endpoint retrieves game box score data for a specific game."], ["Get Play By Play", "This endpoint gets the NHL game play-by-play data for a specified game"]]}, "NBA Statistics API": {"tool_desc": "NBA Statistics API\n\nView Documentation: https://documenter.getpostman.com/view/24232555/2s93shzpR3", "apis": [["topScorersBySeasonTotalPoints", "## Return top players by total points in descending order.\n\n_Season is specified in the URL._"], ["topAssistsInThePlayoffsBySeasonTotalAssists", "## Return top 20 players by assists (playoffs) in descending order.\n\n_Playoffs season is specified in the URL._"], ["topAssistsBySeasonTotalAssists", "## Return top 20 players by assists in descending order.\n\n_Season is specified in the URL._"], ["topScorersInThePlayoffsBySeasonTotalPoints", "## Return top players (playoffs) by total points in descending order.\n\n_Playoffs season is specified in the URL._"], ["playerSeasonStatsByName", "_player name is specified in the url._"], ["allPlayersBySeason", "_season is specified in the url._"], ["playerShotChartDataSeasonPlayoffs", "## Return player shot chart data (season & playoffs)\n\n### Current Players Available:\n\n- LeBron James\n- James Harden\n- Stephen Curry\n    \n\n_Player name and Season are specified in the request URL._\n\nShot chart is available [here](https://cdn.ssref.net/req/1/images/bbr/nbahalfcourt.png)."]]}, "NBA Schedule_v2": {"tool_desc": "Get the stats of past NBA games and the schedule for upcoming ones!", "apis": [["Schedule", "Get the stats of past NBA games and schedule for upcoming ones"]]}, "Basketball": {"tool_desc": "For Live Feeds", "apis": [["Basketball", "i will use this only for live feeds"]]}, "Sports Live Scores": {"tool_desc": "We support different Sports.", "apis": [["Tennis Rankings", "Returns ATP or WTA Standings for a given number of players."], ["Handball Match Statistics", "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Handball Live Matches endpoint."], ["Basketball Match Lineups", "Returns LineUps about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Basketball Live Matches endpoint."], ["Futsal League Rankings", "Returns the standings for a given league ID. You can retrieve League IDs from the Futsal Live Matches endpoint."], ["Football Live Matches", "Returns Football Live Matches with betting odds."], ["Football Match Lineups", "Returns LineUps about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Football Live Matches endpoint."], ["Football Match Statistics", "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Football Live Matches endpoint."], ["Cricket League Rankings", "Returns the standings for a given league ID. You can retrieve League IDs from the Cricket Live Matches endpoint."], ["Cricket Live Matches", "Returns Cricket Live Matches with betting odds"], ["Futsal Match Statistics", "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Futsal Live Matches endpoint."], ["Futsal Live Matches", "Returns Futsal Live Matches with betting odds"], ["Esports Live Matches", "Returns Esports Live Matches with betting odds"], ["Table Tennis Live Matches", "Returns Table Tennis Live Matches with betting odds"], ["Table Tennis Match Statistics", "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Table Tennis Live Matches endpoint."], ["Baseball League Rankings", "Returns the standings for a given league ID. You can retrieve League IDs from the Baseball Live Matches endpoint."], ["Baseball Match Statistics", "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Baseball Live Matches endpoint."], ["Baseball Live Matches", "Returns Baseball Live Matches with betting odds"], ["Handball Live Matches", "Returns Handball Live Matches with betting odds"], ["Basketball Match Statistics", "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Football Live Matches endpoint."], ["Basketball Live Matches", "Returns Basketball Live Matches with betting odds"], ["Tennis Match Statistics", "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Tennis Live Matches endpoint."], ["Tennis Live Matches", "Returns Tennis Live Matches with betting odds"], ["Football League Rankings", "Returns the standings for a given league ID. You can retrieve League IDs from the Football Live Matches endpoint."]]}, "Football Score API": {"tool_desc": "Get football live scores for today be it any match \nThe scores are divided based on the league and you can fetch the data for all the leagues \n\nThis also gives you flexibility to know and find the matches and scores between teams for any other given date as well", "apis": [["get_scores_for_given_date", "If you want to know the list of football matches for a given date and what was their scores you can use this API.\nAll this api needs is the date input in the format %Y-%m-%d.\nEg:- 2022-12-01"], ["get_football_live_scores_today", "Get Live scores for today's football matches"]]}, "F1 Race Schedule": {"tool_desc": "This API provides the user with up-to-date dates and timings for all the races in the ongoing F1 season.", "apis": [["Select Race based on Race Number", "Returns the details for the race based on the race number for the track in the F1 season."], ["Select Race based on ID", "Returns the race using the ID used in the database for each individual race."], ["Race List", "Lists down all the races in the schedule"]]}, "Fitness Calculator": {"tool_desc": "Find \"body fat percentage\",  \"ideal weight\", \"BMI\", \"daily calory requirement\" and some macro nutrients with this api.", "apis": [["Daily calory requirements", "Knowing your daily calorie requirements is important to achieve your final goal. You can calculate your daily calorie req. for 7 different goals."], ["Burned Calorie From Activity", "Calculate the burned calorie for a specific activity."], ["activities", "Find the met values for activities."], ["Food Info", "Find the food info for a food id from the food database."], ["Food Names And Ids", "Find food table ids for a sub-table in the food database."], ["Sub_Table Names", "Find sub-table names of a table name in the food database."], ["tablenames", "Find the more than 70 main table names of the food database."], ["macros amounts", "Find the amount of macro nutrients in four different categories which are balanced, low-fat, low-carbs and high-protein for a specific calorie burned. There are 6 inputs which are age, gender, height, weight, activity level and goal. \n\nFor activity level :\n    \n-     \"1\" : \"BMR\",\n-     \"2\" : \"Sedentary: little or no exercise\",\n-     \"3\" : \"Exercise 1-3 times/week\",\n-     \"4\" : \"Exercise 4-5 times/week\",\n-     \"5\" : \"Daily exercise or intense exercise 3-4 times/week\",\n-     \"6\" : \"Intense exercise 6-7 times/week\",\n-     \"7\" : \"Very intense exercise daily, or physical job\" \n\nFor goals : \n\n-      \"maintain\" : \"maintain weight\",\n-     \"mildlose\" : \"Mild weight loss\",\n-     \"weightlose\" : \"Weight loss\",\n-     \"extremelose\" : \"Extreme weight loss\",\n-     \"mildgain\" : \"Mild weight gain\",\n-     \"weightgain\" : \"Weight gain\",\n-     \"extremegain\" : \"Extreme weight gain\""], ["Body Fat Percentage", "Knowing body fat percentage would be helpful to decide on a well-programmed fitness plan. You can use this endpoint with 7 parameters."], ["Ideal weight", "Find four different ideal weight scores according to four different well-known equations which are Hamwi, Devine, Miller, Robinson.  There are two parameters which are age and height(cm) values."], ["bmi", "Find body mass index value (BMI) with this endpoint. You just need to enter three parameters which are age, weight (kg), and height(cm) information."]]}, "Admiralbet": {"tool_desc": "Games and pre-game Odds for Admiralbet", "apis": [["Matches", "Latest matches by Admiralbet."], ["Odds", "Latest Odds by Admiralbet."]]}, "Tennis Live Data": {"tool_desc": "Tennis data for top competitions around the world including tournaments, matches, results, and rankings.", "apis": [["Matches By Date", "Lists matches in all tours, and tournaments,  for a given date. If no date is supplied, returns matches today."], ["Players", "Full Listing of Players by Tour"], ["Matches By Tournament By Player", "Retrieves matches and results for a given `player_id `within a given `tournament_id`"], ["Tours", "Lists the various tours and associated available to query on the other endpoints"], ["Tournaments", "Lists a schedule of all tournaments for a given `tour_code` and `season_id`"], ["Tournament Matches", "Lists matches for a given `tournament_id`. This endpoint is a brief summary of all matches within a tournament without result details or detailed player information - use for quick summary of a given tournament."], ["Tournament Matches By Date", "Lists all matches for a given `tournament_id` on a given `date`. This is a quick summary view of matches on the given date without result or detailed player info."], ["Tournament Matches and Results", "Lists matches for a given `tournament_id` in detail with match results and detailed player info. This can return a very large file. If speed is required we suggest using /matches-results/{tournament_id}/{date} or the /matches/{tournament_id} endpoint and querying match results individually on the /match/{match_id} endpoint."], ["Tournament Matches and Results by Date", "This endpoint is the same as the /matches-results/{tournament_id} endpoint but can be narrowed down by date for faster loading."], ["Match", "An individual match file for a given `match_id`"], ["Tour Rankings", "Lists the top 100 players in the relevant tour ranking with their position, movement, and ranking points."], ["Race Rankings", "Lists top 100 in relevant tour race rankings with their ranking, movement, and ranking points."], ["Player", "Basic player profiles for a given `player_id`"]]}, "Baseball": {"tool_desc": "Baseball Leagues &amp; Cups with Livescore, Odds, Statistics, Historical Data, and more ...", "apis": [["teams-history/{teamIds}", "Query baseball team history by ID"], ["free-agents/{seasonId}", "Query baseball free  agents"], ["teams-personnel/{teamIds}", "Query baseball team history by ID"], ["teams-roster/{teamIds}", "Query baseball team roster by ID"], ["game", "Query Baseball games, teams, scores etc..."], ["game-playbyplay/{gamePk}", "Query Baseball games, teams, scores etc..."], ["game-matrix/{gamePk}", "Query Baseball scores, stats, betting information etc..."], ["game-probability/{gamePk}", "Query Baseball probability data."], ["game-boxscore/{gamePk}", "Query Baseball games, teams, scores etc..."], ["teams-affiliates/{teamIds}", "Query baseball team affiliates by ID"], ["teams-coaches/{teamIds}", "Query baseball team coaches by ID"]]}, "MotorsportApi": {"tool_desc": "MotorsportApi has live coverage for most popular motorsports including MotoGP, Nascar, World Rally Championship, Moto2, Moto3, Superbike and Deutsche Tourenwagen Meisterschaft (DTM).", "apis": [["Search", "Perform a search for Motorsport players, teams, and tournaments using the provided search term."], ["TeamPlaceholderImage", "Get the team placeholder image in SVG format."], ["TournamentPlaceholderImage", "Get the tournament placeholder image in PNG format."], ["TeamStageSeasons", "Get the stage seasons for a specific Motorsport team."], ["TeamStandings", "Get team standings for a specific Motorsport stage."], ["TeamDriverHistory", "Get the driver history for a specific Motorsport team by providing the team ID."], ["StageImage", "Get image for a specific Motorsport stage."], ["TeamImage", "Get image for a specific Motorsport team."], ["UniqueStageSeasons", "Get the seasons of a specific Motorsport stage."], ["StageDetails", "Get the details of a specific Motorsport stage."], ["FeaturedStage", "Get the details of the featured stage in Motorsport."], ["Categories", "Get a list of all Motorsport categories."], ["StageSubstages", "Get all substages of a specific Motorsport stage."], ["TeamDetails", "Get detailed information for a specific Motorsport team by providing the team ID."], ["StageCompetitorStandings", "Get the competitor standings for a specific Motorsport stage."], ["TVCountries", "Get a list of countries and their respective TV channels broadcasting a specific Football match."], ["TeamRaces", "Get races for a specific Motorsport team during a stage season."], ["CategoryFlag", "Get the flag image of a specific category in PNG format."], ["UniqueStageImage", "Get image for a specific Motorsport unique stage."], ["CategoryStages", "Get all stages for a specific Motorsport category."], ["MatchTvChannelDetails", "Get the details of a specific TV channel broadcasting a specific Football match."]]}, "NHL Stats and Live Data": {"tool_desc": "Get live data and stats about any NHL game, teams, players, drafts and many more.", "apis": [["getConference", "You can use this to also retrieve inactive conferences. For example, the ID for the World Cup of Hockey is `7`."], ["getGame", "This contains all data related to a game, from the boxscore, to play data and even on-ice coordinates. Be forewarned that, depending on the game, this endpoint can return a **lot** of data."], ["getGameBoxscore", "If you want detailed play information, you should use `/game/{id}/feed/live` or `/game/{id}/feed/live/diffPatch`."], ["getConferences", "This only retrieves active conferences. For inactive conferences, use `/conferences/{id}`."], ["getGameDiff", "You can use this to return a small subset of data relating to game."], ["getDraftProspects", "Be forewarned that this endpoint returns a **lot** of data and there does not appear to be a way to paginate results."], ["getDivision", "You can use this to also retrieve inactive divisions. For example, the ID for the old Patrick division is `13`."], ["getDivisions", "This only retrieves active divisions. For inactive divisions, use `/divisions/{id}`."]]}, "Global Data": {"tool_desc": "General API to be used for together with other APIs that based on various sports", "apis": [["Country List", "Provides the list of the countries which belong to the tournaments."], ["Round List", "Provides the list of the global rounds for the sports."], ["Sports List", "Provides the list of the sports which are supported in the global coverage."], ["Status List", "Provides the list of the global statuses for the sports."]]}, "LiveScore Sports": {"tool_desc": "LiveScore Sports | The number one destination for real time scores for Football, Cricket, Tennis, Basketball, Hockey and more.", "apis": [["Media Details", "Media details (video playlist). Ex media_id in /v1/competitions/details"], ["Events Live List", "Get the list of the live events by sport"], ["Media Watch", "Media watch (video playlist)"], ["Populars Items", "Get the list of the populars items"], ["Events Media", "Get event media form event ID"], ["Events H2H", "Get event H2H (head to head) form event ID"], ["Teams Statistics", "Get team statistics by team ID."], ["Events Info", "Get event info form event ID"], ["Teams Details", "Get team details by team ID. News tag, country, badge_id (logo), result and fixtures events"], ["Teams Details (short)", "Get team short details by team IDs (list)"], ["Events Count live", "Get the count live events by sport"], ["Events Scoreboard", "Get event scoreboard by event ID"], ["Events Incidents", "Get event incidents form event ID"], ["Events Competition standings", "Get event competition standings (table) by event ID"], ["Teams Player statistics", "Get team player statistics by team ID. TYPE_OF_STATs: goals: '1', assists: '3',  red_cards: '4',  yellow_cards: '6', shots_on_target: '8',"], ["Teams Next event", "Get team next event by team ID."], ["Meta Specification", "Get meta specification data"], ["Meta Sports list", "Get the list of the sport"], ["Events List", "Get the list of the events by sport and date"], ["Events Comments", "Get event comments form event ID"], ["Events Team form", "Get event team form event ID"], ["Stages List", "Get the list of the stages"], ["Teams Media", "Get team media by team ID."], ["Teams Standings (short)", "Get team standings by team ID."], ["Competitions Player stats", "Get competition Player statistics by competition ID"], ["Competitions Details", "Get competition details by competition ID"], ["Competitions Standings (revs)", "Get competition standings (table) by competition ID.  LTT_CODE: All(1),Home(2),Away 3"], ["Events Statistics", "Get event statistics form event ID"], ["Events Lineups", "Get event lineups form event ID"], ["Stages Events", "Get the list of the events for stage"], ["Competitions Standings", "Get competition standings (table) by competition ID.  LTT_CODE: All(1),Home(2),Away 3"], ["Competitions Team stats", "Get competition Team statistics by competition ID"]]}, "1977-2022 NBA Team Rosters and Schedules": {"tool_desc": "An API with Roster and Schedule Results for each NBA Franchise from 1977", "apis": [["Get All NBA Team Data from 1977-2022", "Grabs all of the 30 NBA Franchise's Data from 1977-2022 into one object."], ["Get NBA Franchise W/L Schedule for a Specific Year", "Grabs NBA Franchise's W/L Schedule for a specific year"], ["Get NBA Franchise's Specific Year Data", "Grabs NBA Franchise's Roster and Schedule for a specific year"], ["Get NBA Franchise Roster For a Specific Year", "Grabs NBA Franchise's Roster for a specific year"], ["Get Specific NBA Franchise Data", "Grabs all NBA Data for a Franchise from 1977(if applicable)-2022"]]}, "Betway": {"tool_desc": "Games and pre-game Odds for Betway", "apis": [["Matches", "Latest Matches for Betway"], ["Odds", "Latest Odds for Betway"]]}, "Horse Racing": {"tool_desc": "Horse racing API - UK & Ireland races.", "apis": [["Race detail info", "**Get racecard detailed info** and **Odds comparator**\nHorses, Jockeys, Trainers, Form, OR, Owner, Sire, Dam, Age, Weight and more information."], ["Query races", "The best way to search races."], ["Horse Stats", "Get horse results history."], ["Query horses", "Search horses by name. \nOnce you get \"*id_horse*\" from this query, you can get horses stats from \"**Horse stats**\" endpoint."], ["Results", "Get results by date."], ["Jockeys win rate", "Get Jockeys stats in the last days.\nRuns, Wins and Win Rate in %."], ["Trainers win rate", "Get Trainers stats in the last days.\nRuns, Wins and Win Rate in %."]]}, "Serie A": {"tool_desc": "Serie a API!", "apis": [["Match details by Id", "Via this endpoint, you can retrieve the match details given a certain Match Id. Match Ids can be obtained through the Matches List endpoint. You can also query for live matches and for matches played starting from 1990."], ["Team Stats by Category", "This endpoints allows you to retrieve players statistics accross different categories. Possible categories are: goals, shots, assists, crosses, saves, avgkmtraveled, headshotgoals , offsides,  corners , playingtime, posts-crossbars ,ballpossession]"], ["Matches List by Season and Matchday", "Via this endpoint, you can retrieve all the matches that occurred on a given matchday in a given season. Note that we support season starting from **1990** till **2022**, and matchday between **1** and **38**."], ["Current Leaderboard", "Use this endpoint to retrieve the current leaderboard, updated at the last match played."], ["Players Stats by Category", "This endpoints allows you to retrieve players statistics accross different categories. Possible categories are: shots, goals, ballrecovery, foulsuffered, assists, keypasses, headgoals, posts, gksaves, avgkmtraveled"]]}, "Today Football Prediction": {"tool_desc": "Daily Football Prediction & Betting Tips with AI powered analysis and probability statistics.", "apis": [["VIP Prediction Scores", "This **VIP** endpoint returns match score predictions with average goal stats. Same query strings and pagination functionality is supported with **/predictions/list**\n\n* Use **/predictions/list** endpoint  to get  market bet predictions."], ["Daily Predictions", "Returns **Daily Football Predictions** with pagination support. \nSearch/filter can be used by **date**, **league**, **market-type**.\n\n* Use **predictions/{matchId}/details** endpoint to see more information about any particular match prediction.\n* Use **predictions/scores** endpoint to get score prediction and average goals."], ["VIP Featured Predictions", "Returns **Daily  Featured Prediction** results which have higher probability and better odds than others. More efficient selections.\n\nCompare its performance from **stats/performance** endpoint."], ["Prediction Details", "Shows all details about the match, its prediction and the prediction results."], ["Stats - Performance", "Returns statistics of AI prediction module with selected odds, prediction probabilities and profit-loss calculation. \n\n**Profit-Loss**: calculated by considering only single bet is played from 1 unit amount. If the bet is won, gets prediction odd as positive number else -1."]]}, "Unofficial Cricbuzz": {"tool_desc": "This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc", "apis": [["series/get-seasons", "Get seasons related to specific series"], ["matches/get-team", "Get players attended the match"], ["matches/get-hscorecard", "Another endpoint to get match scorecard"], ["matches/list", "List live, recent, upcoming matches"], ["matches/get-hcommentaries", "Another endpoint used to get match commentaries"], ["matches/get-hhighlights", "Another endpoint used to get match highlights"], ["get-image", "This endpoint is used to get image by id"], ["news/get-categories", "Get all available categories"], ["players/get-news", "Get news by player"], ["venues/get-matches", "Get scheduled matches by venue"], ["series/get-matches", "Get recent and upcoming matches by series"], ["series/get-news", "Get news by series"], ["teams/get-stats", "Get stats by team"], ["news/get-topics", "Get all available topics"], ["news/list", "List latest news from all categories or topics"], ["players/search", "Search player by name"], ["teams/get-players", "Get players by team"], ["teams/get-news", "Get news by team"], ["teams/get-results", "Get matched results by team"], ["teams/get-schedules", "Get scheduled matches for a team"], ["series/get-points-table", "Get points table by series"], ["series/get-venues", "Get venues by series"], ["series/get-players", "Get players by squad and series"], ["series/get-squads", "Get squads by series"]]}, "SofaScores": {"tool_desc": "SofaScores has everything, from simple live scores to deep statistics and detailed player analysis.", "apis": [["Seasons for team statistics", "Get seasons for team statistics by team ID"], ["Teams Player statistics", "Get overall player statistics by team ID, unique tournament ID, season ID"], ["Team recent form", "Get team recent form by team ID"], ["H2H events", "Get h2h events by custom_event_id"], ["Team rankings", "Get team rankings by team ID"], ["Players of team", "Get players of team by team ID"], ["Manager photo", "Get manager photo by manager ID"], ["Manager events", "Get events of the manager"], ["Manager career-history", "Get the manager's career history"], ["Manager data", "Get manager data by manager ID"], ["Country channels (stage)", "Get tv country channels (stage) by stage_id"], ["Team shirts", "Get team shirts by event_id"], ["Shotmap", "Get shotmap by event_id"], ["Form", "Get pregame team form by event_id"], ["Streaks", "Get team streaks by event_id"], ["Player heatmap", "Get player heatmap by event_id"], ["Categories", "Get actual categories by date and sport"], ["Daily unique tournaments", "Get daily unique tournaments by date and sport"], ["Odds winning", "Get winning odds by event_id. You can convert them to decimals."], ["Unique stages list (motorsport)", "Get list of the unique stages by category_id (motorsport)"], ["Stage data (motorsport)", "Get stage data by stage_id (motorsport)"], ["Statistics (esports)", "Get statistics (esports) by event_id"], ["Games (esports)", "Get games (esports) by event_id"], ["Events", "Get events of the season"], ["Team-week rounds", "Get team-week rounds of the season"], ["Graph points", "Get graph points by event_id"], ["Sub events", "Get sub events by event_id"], ["Fan rating", "Get fan rating by event_id"], ["Tweets", "Get tweets by event_id"], ["Media", "Get media by event_id"], ["Schedule live", "Get live events schedule"], ["Statistics", "Get statistics by event_id"], ["Teams statistics", "Get teams statistics of the season"], ["Event managers", "Get team managers by event_id"], ["Predict", "Get predict by event_id"], ["Season data", "Get data about the season"], ["Innings (cricket)", "Get innings (cricket) by event_id"], ["Lineups", "Get lineups by event_id"], ["Standings", "Get standings of the season"], ["Team events", "Get team event of the season"], ["Schedule by date", "Get event schedule by date"], ["Schedule by category", "Get event schedule by category and date"], ["H2H stats", "Get H2H stats by event_id"], ["Team-week players", "Get team-week players of the season"], ["Rounds", "Get rounds of the season"], ["Referee events", "Get events by referee ID"], ["Event data", "Get event data by event_id"], ["Best players", "Get best players by event_id"], ["Schedule odds", "Get events schedule odds by date"], ["Lineups (esports)", "Get games (esports) by event_id"], ["Popular events", "Get today's popular events"], ["Incidents", "Get incidents by event_id"], ["Players statistics", "Get players statistics of the season"], ["Rounds (esports)", "Get rounds (esports) by event_id"], ["Point by point", "Get point by point data by event_id. (tennis)"], ["Referee data", "Get referee data by referee ID"], ["Heatmap", "Get heatmap player by event_id and team_id"], ["Cup trees", "Get cup trees data"], ["Sports Number live events", "Get number of live events in the sports"], ["Referee statistics", "Get referee statistics by referee ID"], ["Stage seasons (motorsport)", "Get team stage seasons (motorsport)"], ["Career history (motorsport)", "Get team career history (motorsport)"], ["Seasons standings", "Get seasons of the standings by team ID"], ["Races (motorsport)", "Get races by team ID (motorsport)"], ["Team events", "Get events by team ID"], ["Sport list", "Get a list of sports"], ["Team Latest media", "Get latest media by team ID. Ex. Full Highlights"], ["Seasons for player statistics", "Get seasons for player statistics by team ID"], ["Team logo", "Get team logo by team ID"], ["Transfers of team", "Get transfers of team by team ID"], ["Recent unique tournaments", "Get recent unique tournaments by team ID"], ["Team data", "Get team data by team ID"], ["Team near events", "Get team near events by team ID"], ["Tournaments list", "Get a list of tournaments by category id"], ["Unique tournament data", "Get unique tournament data by unique tournament id"], ["Unique tournament seasons", "Get seasons of the unique tournament"], ["Tournament seasons", "Get seasons of the tournament"], ["Unique tournament logo", "Get unique tournament logo by unique tournament id"], ["Tournament events", "Get events of the tournament"], ["Tournament data", "Get tournament data by tournament id"], ["Featured events", "Get featured events of the unique tournament"], ["Tournament info", "Get tournament info by tournament id"], ["Unique tournaments list", "Get a list of unique tournaments by category id"], ["Unique tournaments top list", "Get a top list of unique tournaments by category id"], ["Latest media", "Get media of the unique tournament"], ["Current team tournaments", "Get current team tournaments by team ID"], ["News feed", "Get news feed of the team"], ["Goal distributions", "Get goal distributions by team ID, unique tournament ID, season ID"], ["Statistics overall", "Get team overall statistics by team ID, unique tournament ID, season ID"], ["Player photo", "Get player photo by player ID"], ["Player data", "Get player data by player ID"], ["Search transfers", "Search transfers by parameters"], ["Player statistics", "Get player statistics. Use `regularSeason` - for hockey"], ["Ranking by season", "Get the current by season"], ["Suggest", "Suggest search. Search Suggest automatically recommends popular searches as you type your query into the search field"], ["Player characteristics", "Get player characteristics by player ID"], ["Multi search", "Multi search. Search by teams, referees, managers, players, tournaments"], ["Last year summary", "Get last year summary of the player"], ["Number live events", "Get number of live events in the category by sport ID"], ["Transfer history", "Get player transfer history"], ["Country channels", "Get tv country channels by event_id"], ["Stage logo (motorsport)", "Get stage logo by stage_id (motorsport)"], ["Unique seasons list (motorsport)", "Get list of the unique stages by category_id (motorsport)"], ["Substages (motorsport)", "Get substages by stage_id (motorsport)"], ["Standing competitor (motorsport)", "Get standing competitor by stage_id (motorsport)"], ["Category list", "Get a list of categories"], ["Standing teams (motorsport)", "Get standing teams by stage_id (motorsport)"], ["Bans (esports)", "Get bans (esports) by event_id"], ["Events Player statistics", "Get player statistics by event_id"], ["Unique stage logo (motorsport)", "Get unique stage logo by unique_stage_id (motorsport)"], ["Odds all", "Get all odds by event_id. You can convert them to decimals. `provider_id`: 1 - Bet365, 100 - betano, 101 - bilyoner"], ["Channels data (stage)", "Get channels data (stage)"], ["Last ratings", "Get the latest player rating"], ["Player latest media", "Get player's latest media by player_id"], ["Attribute overviews", "Get player attribute overviews"], ["Player statistics seasons", "Get seasons of the player"], ["National team statistics", "Get player's stats by national teams"], ["Channels list", "Get a list of channels by country"], ["Player Heatmap", "Get a player's heatmap"], ["Ranking current", "Get the current rating"], ["Player events", "Get events by player ID"]]}, "Premier League Stats": {"tool_desc": "An API providing stats around the Premier League football league.", "apis": [["Footballers By ID", "Get a players stats by their ID. Choose from all 597 registered premier league players."], ["FootballersByClub", "Get list of footballers for a given club."], ["FootballersByName", "Get list of footballers with given name."], ["GameweekGamesById", "Get games from a particular gameweek by id."], ["GameweekGamesByClub", "Get all games from a particular gameweek and club."], ["GameweekGames", "Get all games from a particular gameweek."]]}, "FlashLive Sports": {"tool_desc": "FlashLive Sports provides the fastest live scores, standings and detailed stats.", "apis": [["Event Odds", "Get odds by event ID"], ["List of events", "Get a list of events by sport_id. <br> `STAGE_TYPE` - main event status, `STAGE` - more event status. [List of object statuses:](https://rapidapi.com/tipsters/api/flashlive-sports/tutorials/flashlive-list-of-object-statuses)"], ["List of main odds", "Get a list of main odds by sport and date"], ["Event Report", "Get an event report by event ID"], ["Event Summary results", "Get event summary results by event ID"], ["Event Details (beta)", "Get event details by event ID"], ["Tables tabs", "Get the available types (tabs) of standings"], ["Tournament Stages data", "Get tournament data by tournament_stage_id"], ["Tournament Results events", "Get team results by tournament_stage_id. Use the pagination"], ["Stages list", "Get a list of stages by sport ID"], ["Tournaments popular list", "Get a list of popular tournaments by sport ID"], ["Tournaments list", "Get a list of tournaments by sport ID"], ["Season Data", "Get season data by season_id"], ["Tournament Fixtures events", "Get upcoming events by tournament_stage_id, Use the pagination"], ["Number of sport events", "Get data about the sport and the number of sport events"], ["Sports list", "Get a list of sports"], ["Team News", "Get a list of news by team ID"], ["Player Events", "Get the player events by player ID"], ["Team Results events", "Get team results by team ID. Use the pagination"], ["Player Career", "Get player career by player ID"], ["Image data", "Get a image player, team, tournament by IMAGE_ID"], ["Team Transfers", "Get team transfers by team ID"], ["Player Data", "Get player data by player ID"], ["Team Data", "Get team data by team ID"], ["Team Fixtures events", "Get upcoming events by team ID. Use the pagination"], ["Ranking List", "Get a list of ranking by sport ID"], ["Latest player events", "Get the latest player events by player ID"], ["Team Squad", "Get squad by team ID"], ["Player Transfers", "Get the latest player transfers by player ID"], ["Ranking Data", "Get a ranking data by ranking ID"], ["Most read news", "Get the most read news"], ["List of news", "Get list of news by category_id and entity_id"], ["News Details", "Get detailed information about the news by article_id"], ["Summary news data", "Get brief information about the news by article_id"], ["Multi search", "Search teams, tournaments and players. Results are shown as you type."], ["Related news", "Get related news by article_id"], ["Categories of news", "Get categories of news"], ["List of top news", "Get list of top news"], ["Changes to live events", "Get only new data into live-events by sport_id. Call every 5 seconds."], ["Event Player statistics alt (basketball)", "Get player statistics by event ID, (basketball)"], ["Event Prematch odds", "Get event prematch odds by event ID"], ["Event Data No-duel", "Data on the No-duel event, (golf)"], ["Event Ball-ball (cricket)", "Get a ball by ball on an event (cricket) by event ID"], ["Event Preview", "Get an event preview by event ID."], ["Event Last-change", "Get new data keys. Call this point to see what data has been changed."], ["Event Fall wickets (cricket)", "Get a fall of wickets on an event (cricket) by event ID"], ["Event Scorecard (cricket)", "Get a scorecard on an event (cricket) by event ID"], ["Event Statistics", "Get event statistics by event ID"], ["Event Commentary", "Get a comment on an event by event ID"], ["H2H events", "Get events between two teams by event ID"], ["Event Missing players", "Get all missing players by event ID"], ["Event Points history", "Get the history of points by event ID. Point by Point"], ["Event News", "Get news by event ID"], ["Event Odds live", "Get live odds by event ID"], ["Event Data Brief", "Get brief data by event ID. It is better to use Event Details and Event Data Brief endpoints"], ["Event Starting lineups", "Get starting lineups by event ID"], ["Event Data", "Get all event data by event ID"], ["Event Statistics (alt)", "Get event statistics by event ID (darts)"], ["Event Throw-throw (darts)", "Get throw by throw (darts) by event ID"], ["Event Summary incidents", "Get event summary incidents by event ID"], ["Event Summary", "Get summary of the event by event ID. Incidents of the match"], ["List of live events", "Get list of live events. Use `/live-update` to get changes in live events!"], ["Event Commentary alt (cricket)", "Get a comment on an event (cricket) by event ID"], ["Event Rounds results (golf)", "Rounds results (golf) by  and event ID, (golf)"], ["Event Highlights (video)", "Get highlights video by event ID"]]}, "F1 drivers quotes": {"tool_desc": "An API that provides numerous quotes said by famous Formula 1 drivers and personalities.", "apis": [["Author with his photo", "Shows the author who have quotes saved in this API  with his photo and ID."], ["Driver's quotes with pagination of 10 quotes each page", "Gets 10 quotes of the driver depending on which page you input."], ["Driver's quotes by ID", "Gets a quote by its ID."], ["List of authors with photos", "Shows the list of F1 drivers and personalities who have quotes saved in this API  with they photos and IDs"], ["List of drivers and personalities", "Shows the list of F1 drivers and personalities who have quotes saved in this API, and their code to access them."], ["10 interesting quotes", "Gets 10 interesting quotes said by famous F1 people."], ["Driver's quotes", "Gets the quotes of a specific driver."]]}, "Greyhound Racing UK": {"tool_desc": "Greyhound Racing API - UK.", "apis": [["Racecards", "**Get races list.**\n\n- By default current day.\n- Or by date, setting it by parameter"], ["Race detail info", "**Get race detailed info by ID {id_race}.**\n\nYou can get the \"id_race\" from Results or Racecards endpoints"], ["Results", "Get results races by date"]]}}, "Storage": {"Postput": {"tool_desc": "Store & perform on-the-fly operations on your files", "apis": [["Transform your images", "Perform on-the-fly operations on your files"]]}, "Image CDN": {"tool_desc": "Upload images & access them in your application.", "apis": [["Show History", "Shows all images you uploaded in a pageable list"]]}, "Simple File Storage": {"tool_desc": "The easiest cloud file storage api", "apis": [["GET", "Get previously uploaded file using the file_id. \n(file_id is returned from the UPLOAD endpoint)"]]}, "Web Image Storage": {"tool_desc": "Store images in web and get URL back.", "apis": [["Get History", "Returns the history as pages"]]}}, "Search": {"searchhook": {"tool_desc": "Websearch (SearX) with Webhooks on new results.", "apis": [["search", "Search endpoint - Parameters compatible to SEARXNG  (see linked external documentation). \nIn addition, a parameter `url` might be given to specify a webhook URL (POST request will be sent)."], ["webhooks", "Returns list of saved queries with associated  webhooks."], ["extend", "Extend expiry of query identified with parameter `queryId` ."]]}, "Subdomains lookup": {"tool_desc": "Return all known subdomains from root domain inquiry", "apis": [["Subdomains lookup", "Query API with root domain to retrieve all known subdomains"]]}, "Front Page search engine": {"tool_desc": "Search Front Pages of internet and get title and dessription along with screenshot of Front Page of the website and domain.", "apis": [["Search", "takes any search string in any language."]]}, "Google Search_v3": {"tool_desc": "API used to retrieve data from Google search results in real time.", "apis": [["Image Search", "This endpoint is used for image searches"], ["Web Search", "This endpoint is used for web searches"]]}, "Emplois OPT-NC": {"tool_desc": "Les offres d'emplois \u00e0 l'OPT-NC", "apis": [["All", "L'int\u00e9gralit\u00e9 des [offres d'emploi](https://office.opt.nc/fr/emploi-et-carriere/postuler-lopt-nc/offres-emploi), sans pagination."]]}, "Google Search Results": {"tool_desc": "This API is for searching data and images on Google.", "apis": [["Search", "Enter data to search. GET-request."]]}, "ExplorArc's Link Finder": {"tool_desc": "ExplorArc's Link Finder API simplifies the process of finding relevant links by returning results based on a given query.", "apis": [["Links Finder", "ExplorArc's Link Finder API simplifies the process of finding relevant links by returning results based on a given query. With this powerful tool, users can easily access the information they need to streamline their workflow and achieve their goals"]]}, "Auto Suggest Queries": {"tool_desc": "This is a Free Query Suggest API which provides suggestions for search queries based on a given keyword", "apis": [["suggestqueries", "Use this endpoint to fetch Suggestions"]]}, "UfU": {"tool_desc": "Search engine for website", "apis": [["UfU", "Website rest API endpoint"]]}, "Google Jobs": {"tool_desc": "Google Jobs Scraper", "apis": [["SearchOffers", "get all offers url"]]}, "SuperHero Search": {"tool_desc": "An API to get information about superheroes.", "apis": [["Heroes", "Return a list of 20 random heroes"], ["Villains", "Return 20 random Villains"], ["Search", "This endpoint searches through our superhero database"]]}, "Trends keywords in different regions": {"tool_desc": "An API to access trend keywords from listed 50 regions, since 2023-05-18", "apis": [["Get Trend keyword", "This API provides the flexibility to filter trending keywords based on a particular date, ensuring that developers receive precise and relevant information. By specifying the date as '2023-05-16', developers can retrieve trending keywords specifically for that day, enabling them to analyze and incorporate the most recent trends into their applications."], ["get geo map for regions", "The \"Trending Keywords by Geo Regions\" API allows developers to access a list of 50 geographic regions and their corresponding trending keywords. With this API, developers can retrieve valuable insights into the most popular and trending search terms for specific locations."]]}, "Google Reviews Scraper": {"tool_desc": "Api that scrape all reviews and ratings of any company or any business you searched from google", "apis": [["GetFullReviews", "this endpoint get all the reviews in one request"], ["SearchBusiness", "with this endpoint you can search the business you want to get their reviews and ratings"], ["GetReviews", "with this endpoint you can all reviews for any business searched  with pagination"]]}, "Google Trends": {"tool_desc": "An API used to access data about search trends on Google based on specific keywords, time range, and location.", "apis": [["trendings", "The endpoint used to display some of the trending search keywords on Google in a specific region and on a specific date."], ["regions", "The endpoint to retrieve a list of supported regions"]]}, "Netlas All-in-One Host": {"tool_desc": "WHOIS, rDNS, fDNS, Privacy, GeoIP, Domain/IP Lookup.", "apis": [["host_read", "Both ip address and domain might be used as a search query."]]}, "Wiki Briefs": {"tool_desc": "Briefs about anything you search.", "apis": [["Search WikiHow", "Search any 'how-to' question on WikiHow and returns summarized methods and steps."], ["Search Wikipedia", "Search anything on Wikipedia and returns top K summarized information and similar items. Images and coordinates with map link are provided when available."]]}, "Bing Web Search": {"tool_desc": "Bing web search api return full result of bing serp.", "apis": [["Supported Countries", "You can search against these countries."], ["Supported Languages", "These languages are supported for to search."]]}, "Postleitzahl zu Adresse": {"tool_desc": "Ermittlung der Postletzahl in Deutschland f\u00fcr eine Anschrift oder einen St\u00e4dtenamen.", "apis": [["query", "Suchanfrage. Zum Beispiel Anschrift, oder Ort oder POI."]]}, "Google Search JSON": {"tool_desc": "Provides Google search results in JSON format.", "apis": [["/search/image", "This endpoint is used to perform image search using the Google Search JSON API. You can send a request with parameters like **q** (search query), **num** (desired number of images), **start** (starting index of results), and others. The request will generate a JSON response containing information about images that match the search query"], ["/search/web", "This endpoint is used to perform text search on the web using the Google Search JSON API. You can send a request with various parameters such as **q** (search query), **num** (desired number of results), **start** (starting index of results),  and more. The request will return search results in JSON format containing information such as titles, URLs, and descriptions of the search results."]]}, "Postali": {"tool_desc": "Mexico zip codes / C\u00f3digos postales de M\u00e9xico", "apis": [["Codes", "Search by code ej. 66446"]]}, "Neo Google Search": {"tool_desc": "API used to retrieve data from Google search results in real time.", "apis": [["Web Search", "This endpoint is used for web searches"], ["Image Search", "This endpoint is used for image searches"]]}, "TorrentHunt": {"tool_desc": "API to self host Torrent Hunt Bot", "apis": [["Config", "Get config and available sites"], ["Search", "Search queries on different torrent sources"]]}, "Bing Search APIs": {"tool_desc": "An AI service from Microsoft Azure that enables secure, ad-free location search for your users, displaying relevant information from web results, images, local businesses, news and images Photo.", "apis": [["Web Search API", "Search data and suggested keywords from Bing search engine."], ["Images Search", "Search images from the search engine for the most relevant keywords and images related to keywords and images."], ["Emails Search", "Search emails from search engines for related keywords."]]}, "Youtube Search_v3": {"tool_desc": "Welcome to the YouTube Search API documentation!", "apis": [["getPlaylist", "The \"getPlaylistDetails\" endpoint provides detailed information and metadata about a specific playlist on YouTube."], ["listAllSuggestions", "This endpoint allows you to access a wide range of recommendations, suggestions, or related items based on contextual information."], ["searchContent", "The search endpoint allows you to search for videos, playlists, and channels on YouTube."], ["searchChannel", "Efficiently search for specific videos or playlists within a channel"], ["getChannelVideos", "Retrieve a comprehensive list of videos associated with a specific channel"], ["getChannelDetails", "Fetch detailed information and insights about a specific YouTube channel"], ["getChannelPlaylists", "Retrieve a comprehensive list of playlists associated with a specific channel"], ["getVideoDetails", "Retrieve comprehensive video details to enhance your application's functionality and provide users with valuable insights about the videos they are interacting with."]]}, "City and State Search API": {"tool_desc": "A easy-to-use API for search cities, states, and countries from around the world.", "apis": [["Cities Search", "This endpoint allows you to search for specific cities by name. It returns a list of cities that match the specified search query."], ["City Details", "This endpoint allows you to retrieve detailed information about a specific city by ID"], ["States Details", "This endpoint allows you to retrieve detailed information about a specific state by ID"], ["States Search", "This endpoint allows you to search for specific states by name. It returns a list of states that match the specified search query. You can also set country code or country name to search states in that country only."], ["States List", "This endpoint returns a list of States .It returns basic information about each state, such as name, code, and country. You can also use this endpoint to retrieve a list of states filtered by various criteria such as country."], ["Country Details", "This endpoint allows you to retrieve detailed information about a specific country by ID or his name."], ["Countries Search", "This endpoint allows you to search for specific countries by name. It returns a list of countries that match the specified search query."], ["Countries List", "This endpoint returns a list of countries."], ["Search", "This endpoint allows you to search for locations (cities, states, or countries) by name. It returns a list of locations that match the specified search query."]]}, "Job Search": {"tool_desc": "Search for jobs posts, and post them on your web site", "apis": [["Search Jobs", "Search jobs by input value"]]}, "Webit Image Search": {"tool_desc": "Powerful web image search with rating, reverse search by image and multi-lingual capabilities.", "apis": [["Reverse (Search by Image)", "Reverse search by Image between billion of images.\n\nThis endpoint supports \"URL\" parameter only. For \"image\" file upload, use POST endpoint."], ["Similar", "Search for Visually Similar images to an image from a previous Search result."], ["Search", "Webit Image Search API provides you a powerful endpoint to search billions of images from the world wide web featuring rating, reverse search by image and multi-lingual capabilities."]]}, "Fiverr Pro services": {"tool_desc": "API to provide a list of vetted professional sellers for any category.", "apis": [["Categories", "List of category names you can search for"], ["Services", "List of pro sellers for a service category"]]}, "Web Search_v2": {"tool_desc": "Web Search API.", "apis": [["Web Search", "Get Web Search Results"]]}, "VIN decoder": {"tool_desc": "This VIN decoder covers up to 168 fields for the USA and Canada.", "apis": [["US License Plate to VIN", "Get the vin by license plate number."]]}, "Keyword Autosuggest": {"tool_desc": "autosuggest and find related keywords for a given keyword.", "apis": [["autosuggest", "autosuggest and find related keywords for a given keyword. SEO-friendly"]]}, "NFT Explorer": {"tool_desc": "Gets all NFT collections that match a given metadata search in +20 networks and including testnets.", "apis": [["NFTSearch", "Get NFTs that match a given metadata search in all widely used networks"]]}, "YouTube Search Results": {"tool_desc": "Fetch the YouTube Search Results and the information for each item for a specific search term, without any limits!", "apis": [["YouTubeSearchResults", "Get all the YouTube Search Results Items and their Information! No limits and no Google API Key needed!"]]}, "Question-Answered": {"tool_desc": "Ask a question and get an answer.", "apis": [["Get Answer to Question", "This endpoint fetches the answer to a single question."]]}, "Image Search API": {"tool_desc": "An API that returns the URL and label of images related to a keyword, and also a list of related searches.", "apis": [["/image-search", "Returns the list of images and related searches based on the **q** keyword.\nIf you want to make your search more specific based on a color use the **imgc** param, otherwise don't add it or leave it blank."]]}, "Bing Entity Search": {"tool_desc": "An AI service from Microsoft Azure that recognizes and classifies named entities, and finds search results based on them.", "apis": [["Entities Search", "Get entities and places results for a given query."]]}, "Google Keyword Scraper": {"tool_desc": "Google Keyword Research", "apis": [["KeywordSearch", "you can get all popular keywords  in any country and with any language"]]}, "OPT-NC public docker images": {"tool_desc": "R\u00e9cup\u00e9rer les images dockers publiques publi\u00e9es par OPT-NC", "apis": [["GET D\u00e9tails image", "R\u00e9cup\u00e9rer tous les d\u00e9tails d'une image sp\u00e9cifique."], ["GET ALL Images", "R\u00e9cup\u00e8re la liste de toutes les images Docker publiques"]]}, "SERP API": {"tool_desc": "Simple SERP API to perform web search and get results in JSON.", "apis": [["/search", "Perform Google search and get results"]]}, "Place Autocomplete": {"tool_desc": "Autocomplete is a feature within Google Search that makes it faster to complete searches that you start to type.", "apis": [["Autocomplete", "Auto-complete input text, returning matched places"]]}, "Bing Web Search_v2": {"tool_desc": "An AI service from Microsoft Azure that enables safe, ad-free, location-aware search for your users, surfacing relevant information from web results, images, local businesses, news, videos, and visuals.", "apis": [["Web Search", "The Bing Web Search API enables you to integrate Bing's search capabilities in your applications. By sending search queries with the API, you can get relevant webpages, images, videos, news and more."]]}, "Bing Autosuggest": {"tool_desc": "An AI service from Microsoft Azure that helps users complete queries faster by adding intelligent type-ahead capabilities.", "apis": [["Suggestions", "This operation provides suggestions for a given query or partial query."]]}, "AskTheWorld": {"tool_desc": "This API lets you get all the questions beeing asked on search plattforms like google.", "apis": [["getCountryCode", "Gets all Country Codes which you can use to search for a specific country."], ["getQuestions", "Gets Questions Asked by Keyword from Search Engines"], ["getMultipleQuestions", "Gets casual questions asked on Search Engine with your keyword."]]}, "Google Search API": {"tool_desc": "Get Google Search results in JSON format.", "apis": [["Search", "Get search results for Google search keyword query. Customize your results using various parameters"]]}, "Les PagesJaunes / Les PagesBlanche France": {"tool_desc": "Extraire les donn\u00e9es du Pages Jaunes et Pages Blanches scraping email et t\u00e9l\u00e9phone", "apis": [["PagesBlanches", "Extraire les donn\u00e9es du Pages Blanches scraping email et t\u00e9l\u00e9phone"], ["PagesJaunes", "Extraire les donn\u00e9es du pages jaunes email et t\u00e9l\u00e9phone"]]}}, "Social": {"Flirty words": {"tool_desc": "Get flirty word to attract others", "apis": [["Generate flirty line", "Generates a random flirty line"]]}, "FaceGen": {"tool_desc": "Generation of faces by AI.", "apis": [["Generate a face", "Provides a link to download a face image generated by artificial intelligence.\n\n```\n\nOccasionally, a neural network makes mistakes, \nwhich is why artifacts appear: an incorrectly bent pattern, \na strange hair color, and so on.\n```"]]}, "Jobs from remoteok": {"tool_desc": "list of all remote jobs from remoteok.com web-site - not official!", "apis": [["Get list", "Will show you all job posts. Also you can filter it by adding in the end of endpoint ?tags=digital+nomad"]]}, "Conversation Starters API": {"tool_desc": "Get a random conversation starter", "apis": [["Random", "Get a random conversation starter"]]}, "Instagram_v2": {"tool_desc": "Instagram most needed endpoints", "apis": [["Pk to Username", "Find username from PK (userid)"], ["Music Search", "Search music/sound/audio names and get artists cover and sounds url"], ["Search Locations", "Location name search from keyword"], ["Search Hashtags", "Search tags name by keyword"]]}, "Pinterest Downloader -  Download image video and pinterest ideapin": {"tool_desc": "This APi comes with pinterest image downloader, pinterest video downloader and pinterest idea pin downloader | Fast.", "apis": [["ideapin download (pinterest reels)", "Get a url to download the ideapins in original hd quality by passing pinterest ideapin address"], ["video download", "Get a url to download the video in original hd quality by passing pinterest video pin address"], ["Image download", "Get a url to download the image in original hd quality by passing pinterest image pin address"]]}, "Facebook Video and Reel Downloader": {"tool_desc": "Simple and light weight api to extract download links of Facebook video or reel.", "apis": [["Download Video or Reel", "You can extract Download links of **Facebook **Video or Reel in **HD **and **SD **formats."]]}, "TikTok_v4": {"tool_desc": "TikTok API third party service, Stable and 24/7 maintenance.", "apis": [["Hashtag/Challenge Posts", "Get Hashtag/Challenge Posts By \"challenge_name\" or \"challenge_id\",\nand the endpoint will return 35 posts by 'cursor', with post data including the author data."], ["Hashtag/Challenge Info", "Get Hashtag/Challenge Information By \"challenge_name\" or \"challenge_id\",\nand the endpoint will return Challenge Information.  //Notice: it will not return the challenge posts"], ["User Posts", "Get User Posts by 'user_id',\nand the endpoint will return 30 posts by cursor."], ["User info \"not stable\"", "Get User Information By \"unique_id\",\nand the endpoint will return user data, including => id, nickname, bio, secUid, avatar, statistics"], ["Music Posts", "Get Music  Posts By \"music_id\",\nand the endpoint will return 25 posts by 'cursor', with post data including the author data."], ["Music Info", "Get Music Information By \"music_id\",\nand the endpoint will return the Music's Information.  //Notice: it will not return the music posts"], ["User Info by ID", "Get User Information By \"user_id\",\nand the endpoint will return user data, including => id, nickname, bio, secUid, avatar, statistics"], ["Post Comments", "Get Posts CommentBy \"challenge_name\" or \"challenge_id\",\nand the endpoint will return Posts comments by 'cursor'."]]}, "LinkedIn Outreach": {"tool_desc": "Automate Outreach on Linkedin with ease!", "apis": [["Linkedin Connections", "This API does the sending connections job easy for you , just feed the URLs of the people you want to connect with and leave the job to us."], ["Linkedin Contacts", "This API fetches the Linkedin URL and Name of the search you have made."]]}, "Instagram Downloader - Download Videos, Reels, Stories 2023": {"tool_desc": "Downlaod All Instagram Media Including Stories , Reels, Videos and many more, Using Single URL.", "apis": [["URL", "Enter Instagram Media URL\nExample:-\nhttps://www.instagram.com/p/Ctu7iCJpYhF/"]]}, "gwyo-twitch": {"tool_desc": "This API gives access to informations about a User / Channel, and Streams on Twitch.", "apis": [["Get m3u8 Links", "Get All resolutions m3u8 link URLs if the status is Online (by username or id)\n( return an empty JSON object if not currently LIVE )"], ["[NEW] Get Channel Followers Count", "Get Channel Followers Count"], ["Get Channel Profile Pic HTML Element", "Get Channel Profile Pictures as a HTML Element with <img/> tag (using username or id)\n( Sizes: 150x150, 300x300, 600x600 )"], ["Get Channel Profile Pic URL", "Get Channel Profile Picture's URL (using username or id)\n( Sizes: 150x150, 300x300, 600x600 )"], ["Get Stream Preview Url", "Get the Last Picture Preview's Url from a Live Stream\n( using optional width or width/height )\n( return an empty JSON object if not currently LIVE )"], ["Get Stream Preview as HTML Element", "Get the Last Picture Preview as a HTML Element from a Live Stream\n( using optional width or width/height )\n( return an empty JSON object if not currently LIVE )"], ["Get Stream Game Name", "Get  Stream Game Name (by username or id)\n( return an empty JSON object if not currently LIVE )"], ["Get Stream Mature Content Status", "Get Stream Mature Content Status (using username or id)\n( return an empty JSON object if not currently LIVE )"], ["Get Stream Number of Viewers", "Get Stream Number of Viewers (using username or id)\n( return an empty JSON object if not currently LIVE )"], ["Get All Active Stream Infos", "Get a Stream Informations if the status is Online (by username or id)\n( return an empty JSON object if not currently LIVE )"], ["Get Stream Language", "Get Stream Language (using username or id)\n( return an empty JSON object if not currently LIVE )"], ["Get All Channel Infos", "Get Channel Infos (by username or id)"], ["Get Channel Description", "Get Channel Description (using username or id)"], ["Get Channel Total Views", "Get Channel Cumulated Views since its creation (using username or id)"], ["Get Channel Broadcaster Type", "Get Channel Broadcaster Type (using username or id)"], ["Get Stream Title", "Get Stream Title (using username or id)\n( return an empty JSON object if not currently LIVE )"]]}, "TikTok_Solutions": {"tool_desc": "Best TikTok solutions for scrap info", "apis": [["User Data by ID", "Get User Data by ID"], ["Video Data by ID", "Get **Video Data** by **ID**"], ["Music Feed by ID", "Get** Music Feed **by **ID**\nYou can get ID from TikToc music url"], ["Trending Videos by Region", "Trending videos by specific Region. \nAvailable regions:\n- RU\n- US\n- GB\n- DE\n- FR\n- ES"], ["FollowINGS of Account by ID", "Get **Following pages (subs) **of Account by **ID**"], ["Followers of account by ID", "Get **Followers** of account by **ID**"], ["Comments by Video ID", "Get **Comments** of **Video **by **ID**"], ["User by Keyword", "Get** Search of Users **by **Keyword**"], ["Hashtag by Keyword", "Get **Hashtag search** by** Keyword**"], ["Music Data by ID", "Get** Music Data **by **ID**"], ["Video Data by URL", "Get Video Data by U"], ["Hashtag Feed by ID", "Get **Hashtag Feed **by **ID**"], ["User Data by SecUID", "Get User Data by SecUID"], ["Hashtag Feed by Name", "Get **Hashtag Feed **by **Name**"], ["User Feed by Name", "Get **User Feed** by **Name**"], ["User Feed by ID", "Get **User Feed** by** ID**"], ["User Data by Name", "Get** User Data** by** Name**"], ["Hashtag Data by Name", "Get Hashtag Data by using Name of Hashtag"], ["Hashtag Data by ID", "Get Hashtag Data by using ID number"]]}, "Top Instagram Hashtag": {"tool_desc": "Find the best instagram hashtag", "apis": [["GET New Hashtags", "GET 1000 New Genereted Hashtags"], ["GET Hashtags", "Get 100 Most Popular Instagram Hashtags"]]}, "Likee Downloader -  Download Likee videos": {"tool_desc": "This API allows you to retrieve information about a specific video on Likee.", "apis": [["Get Video Info", "This endpoint will return back all information about a specific video on Likee."], ["Get all videos", "This endpoint will return back all videos about a specific user on Likee."], ["Get User Info", "This endpoint will return back all information about a specific user on Likee."]]}, "Emoji": {"tool_desc": "Get all emojis at one place.", "apis": [["Emoji", "This endpoint takes a 'GET' request with name / string as a parameter and returns emoji associated with the name."]]}, "Tronald Dump": {"tool_desc": "Api & web archive for the dumbest things Donald Trump has ever said.", "apis": [["Search quotes", "Free text search for quotes."], ["/random/quote", "Retrieve a random quote."], ["Quote", "Get quote by id"], ["/tag", "Retrieve a list of available tags"], ["/tag/{tag}", "Retrieve a quotes by a given tag."]]}, "Real Love Calculator": {"tool_desc": "Real Love Calculator is a love calculator which uses male and female names and their date of birth to determine the love compatibility.", "apis": [["GET /", "It is use to check if this API is working. Make sure that you use POST API and not the GET API."]]}, "Gigopost": {"tool_desc": "The simplest way to involve your teams to share company brand content", "apis": [["Get API Key", "This will simply send you email with instruction. Complete signup process and then access url https://gigopost.com/dev_api to get the api key."], ["Get Session Info", "Returns session information 1685369452715x643061726475037300"]]}, "Fdown - Facebook Video Downloader": {"tool_desc": "Fdown allows you to extract Facbook video download links in HD and SD format.", "apis": [["Extract Video Download Links", "Just provide the url of Video and You will get download links of Video in HD and SD format. :)"]]}, "Twitter Hashtags": {"tool_desc": "An unoffical twitter hashtag api", "apis": [["Get country's hashtags", "Get hashtags based on country"], ["Get worldwide hashtags", "Returns a list of all recent hashtags worldwide"]]}, "YouTooSound": {"tool_desc": "YouTooSound", "apis": [["YouTooSound", "YouTooSound Chiede di poter usare la tua mail e Nome"]]}, "Tweesky": {"tool_desc": "From a web page creates a customisable Social Media card which can be shared on all Social Media.", "apis": [["/status", "Endpoint to verify API is working and available<br/>"]]}, "Instagram Statistics API": {"tool_desc": "Universal Instagram, YouTube, TikTok, Facebook, Twitter, Telegram, Viber, Dzen, VK.com, OK.ru, Rutube, VC.ru, TenChat Statistics API.", "apis": [["Search", "Search in the database of brands and influencers by parameters:\n- Keywords in the title, description, account link\n- Filtering by categories, account types, interests and other tags\n- Demographics of subscribers (country, city, gender, age)\n- Social network\n- Number of subscribers\n- Average Engagement per post\n- Average number of post views\n- Sort by relevance, percentage of selected audience or number of selected audience"], ["Profile by ID", "Returns profile information from our database or searches for an account in a social network.\nReturns general account information and identifier.\n\nContains the status of data collection and the time the data was last updated.\n\nDue to direct access to the social network, it may work a little slower. It is recommended to use for the initial receipt of the identifier.\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_16b6e212-c0c3-42c6-8c3c-9dfd22ae1bf6_f.png?time=1666776494)"], ["Profile by URL", "Returns profile information from our database or searches for an account in a social network.\nReturns general account information and identifier.\n\nContains the status of data collection and the time the data was last updated.\n\nDue to direct access to the social network, it may work a little slower. It is recommended to use for the initial receipt of the identifier.\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_16b6e212-c0c3-42c6-8c3c-9dfd22ae1bf6_f.png?time=1666776494)"], ["Feed", "Returns a list of posts with all metrics for the period.\n\nThe effectiveness of hashtags, post types and text length\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_e1767a2c-31de-4501-9279-661f7c03e8c1_f.png?time=1666776603)"], ["Activity", "Returns data for plotting the activity time graph of account users. Helps to understand when it is better to publish content and make integrations with influencers\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_df890402-1ba3-4da4-855b-84c4f5e43df6_f.png?time=1666777428)"], ["Retrospective", "Returns the history of the number of subscribers, posts, interactions, likes, comments, reposts, engagement for the selected period by day and in total for the period\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_1f14d181-31f7-40ea-b957-fac40f8eee6f_f.png?time=1666779218)"], ["Tags", "Returns all tags with which accounts are marked.\nYou can filter the desired tags and nesting."]]}, "TikTok Private API": {"tool_desc": "Get and analyze TikTok users and videos data.", "apis": [["/api/userinfo/", "Get avatar and followers, likes and videos count of a user by \"id\""], ["/api/analyze/", "Analyze user data : engagement, hashtags, mentions, and recent videos."], ["/api/exist/", "Get \"sec_id\" and \"id\" by username"]]}, "Terabox Downloader": {"tool_desc": "Terabox Downloader", "apis": [["Info Link Data", "Get Data Terabox Share Link"], ["Stream (m3u8 format)", "Stream by url with m3u8 format"]]}, "instagram_v3": {"tool_desc": "Fetch any data from Instagram: photo and video links, profile info, stories, highlights.", "apis": [["hls", "hls => mp4 converter"], ["get", "Getting data bypassing CORS"]]}, "Tiktok_v2": {"tool_desc": "Highly maintain and accurate T-tok API to  fetch profiles or feeds in bulk.", "apis": [["Feeds by secUid", "Fetch feeds from secUid\n\nYou can get secUid from Profile api"], ["Generate Signature", "Generate Signature from TikToc API Url\n\nFollowing API Path will work with this signature\n\n/node/share/user/\n/api/post/itemlist/\n/api/challenge/itemlist/\n/api/music/item_list/"], ["Video by Url", "Fetch video data from TikToc video url \n\ne.g. \nhttps://www.****.com/@therock/video/6800111723257941253\n(copy exact url from browser)"], ["Profile", "Get T-tok Profile Data"], ["Feeds", "Fetch TikToc user recent feeds by username"], ["Hashtag", "Search TikToc feeds by hashtag"], ["Music by Id", "This ID you can extract from TikToc music url"]]}, "Telegram_v2": {"tool_desc": "Real-time  Telegram data API.", "apis": [["Telegram Group Info", "The endpoint returns realtime information about  public Telegram Group\n\n- Title\n- Photo\n- Description\n- Members\n- On line Memebers"], ["Messages from Telegram Channel", "The endpoint returns last 10 messages  or specific id message from Telegram Channel. \nThe channel must be public.\n\n- Author\n- Photo\n- Message\n- Views \n- DateTime\n- ID"], ["Telegram Channel info", "The endpoint returns realtime information about  public Telegram Channel\n\n- Title\n- Photo\n- Description\n- Members"]]}, "Instagram Data": {"tool_desc": "Real-time Instagram data API.", "apis": [["Location Stories", "Get location user stories by using set of location ids values.  \n\n**Location ids can be found by using /location/search endpoint**"], ["Location Search", "Get locations metadata (id and etc)"], ["Hashtag Reels Feed", "Get hashtag reels feed"], ["User Guides Feed", "Get user guides feed\n\n**NOTE:** Profile should be public(not private)\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster"], ["User Tagged Feed", "Get user tagged feed, post where user was tagged\n\n**NOTE:** Profile should be public(not private)\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster"], ["Post comments V2", "Get post comments V2 - more accurate data\n\n**NOTE:** Profile should be public(not private)"], ["User information(metadata)", "Get user information(followers, followings and etc)"], ["User Contact Details - email, phone and etc", "Get user contact details such as email, phone and etc\n\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster\n**NOTE: the output will include email, phone only IF THESE DATA IS AVAILABLE in IG**"], ["Hashtag Info", "Get hashtag metadata, top post, total posts and etc"], ["Hashtag feed V2", "Get hashtag post feed V2"], ["User Feed V2", "Get user post feed v2\n\n**NOTE:** Profile should be public(not private)"], ["User Highlight Reels Feed", "Get user highlight reels feed\n\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster\n**NOTE:** Profile should be public(not private)"], ["User Stories", "Retrieve active user stories\n\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster"], ["User Followers", "Get user followers\n\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster\n**NOTE:** Profile should be public(not private)"], ["User Feed", "Get user post feed\n\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster\n**NOTE:** Profile should be public(not private)"], ["Audio Feed", "Get audio post feed"], ["Hashtag feed", "Get hashtag post feed"], ["User Story Highlight Metadata", "Get user story highlight metadata from a direct url to a story"], ["User Reels Feed", "Get user reels feed\n\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster"], ["User information(metadata) by User ID", "Get user information(followers, followings and etc) by using user id (numbers)"], ["User Followings", "Get user followings\n\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster\n**NOTE:** Profile should be public(not private)"], ["Post Metadata", "Get post metadata\n\n**NOTE:** Profile should be public(not private)"], ["Location Feed", "Get location post feed"], ["Post Comments", "Get post comments\n\n**NOTE:** Profile should be public(not private)"], ["Post Likers", "Get users that liked specific post\n\n**NOTE:** Profile should be public(not private)"], ["User Search", "Search for a users by using keyword"], ["Hashtag Search", "Search for a hashtags by using keyword"]]}, "Whatsapp Scraper": {"tool_desc": "A scraper of the Whatsapp network.", "apis": [["Fetch business info (get free token)", "Free token needed, click [here](https://wa.me/34631428039?text=get-token) to get it. The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account."], ["Is registered on whatsapp? (get free token)", "Free token needed, click [here](https://wa.me/34631428039?text=get-token) to get it. This endpoint returns `true` if the phone is registered on whatsapp.\nLearn how to use this endpoint on this [video](https://youtu.be/txPQ4ROpfuc)."], ["About", "This endpoint will return the `About` info of the Whatsapp for business number, and when the value was set."], ["Fetch profile picture (get free token)", "Free token needed, click [here](https://wa.me/34631428039?text=get-token) to get it. Gets the whatsapp number profile picture, you can select its resolution (`high` or `low`) and the response format: `png` file, `url` or `base64` encoded file.\nLearn how to use this endpoint on this [video](https://youtu.be/65eJN7S8sBw)."], ["Fetch profile picture", "Gets the whatsapp number profile picture, you can select its resolution (`high` or `low`) and the response format: `png` file, `url` or `base64` encoded file."], ["Is whatsapp for business?", "Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not."], ["Fetch business info", "The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account."], ["Is registered on whatsapp?", "This endpoint returns `true` if the phone is registered on whatsapp."]]}, "Valid Whatsapp": {"tool_desc": "Checks if a phone number is a valid whatsapp account.", "apis": [["Check phone number.", "Enter the number you want to check. Returns `true` or `false`."]]}, "Tiktok full info without watermark": {"tool_desc": "Fast ..", "apis": [["video  without watermark/cover/ music", "original video without watermark/cover/ music / other info about the user and the video"], ["Full info with url", "tiktok videos with full info \nvideo without watermark\ncover / music\nshare / likes / comments\nauthor  info  like connected  youtube channel / IG  / avatar thumbnail / statistics about the video including comments number / likes \nsupport for  all tiktok links ( vm.tiktok.com / vt.tiktok.com / m.tiktok.com / web / t.tiktok.com)"]]}, "Instagram Fast": {"tool_desc": "Instagram API.", "apis": [["Get instagram media comments", "Get instagram media comments by code"], ["Get user stories by username", "Get instagram stories by username"], ["Get user stories by id", "Get instagram stories by user id"], ["Get profile data", "Get account data by username"], ["Get user following", "Get user following list"], ["Get user followers", "Get user followers list"], ["Get user id", "Get instagram id by username"], ["Get feed data", "Get instagram feed, last 12 posts from username"], ["Get media data", "Get media data by post short code or url"]]}, "TwttrAPI": {"tool_desc": "twttrapi is an unofficial Twitter API that offers a variety of features to easily access Twitter data and perform actions using simple HTTP requests.", "apis": [["Following Timeline", "Get the \"Following\" timeline"], ["For You Timeline", "Get the \"For You\" timeline"], ["Get DM Conversation", "Get single conversation messages"], ["Get DM Conversations", "Get direct message conversations and messages"], ["Get Tweet Conversation", "Get a tweet conversation"]]}, "Instagram DP Download": {"tool_desc": "Download Instagram profile dp and basic details", "apis": [["get basic details & dp", "get basic details and Instagram DP download link"]]}, "Youtube Videos Downloader": {"tool_desc": "This API is a YouTube video downloader that allows users to download both short and long videos from YouTube.", "apis": [["Download Youtube Video", "This API endpoint allows users to download YouTube videos by providing the video URL as input."]]}, "Yotpo": {"tool_desc": "Yotpo is taking reviews social being a fun, social way for your e-commerce customers to read and write reviews!", "apis": [["Get Product Reviews", "get all reviews for a specific product that belongs to a specific app_key"]]}, "Tiktok video no watermark_v3": {"tool_desc": "Fast \u2026 Stable \u2026 Without Watermark APi gives you full info about tiktok posts and videos without watermark\n\nFastest Tiktok API with response video without watermark, music, cover, and more!", "apis": [["Get tiktok video info", "Get tiktok video full info. HD Quality, No Watermark. Fast.\nSupport Tiktok & Douyin.\nSupport Getting Image List.\nSupport Tiktok Stories."]]}, "Instagram_v5": {"tool_desc": "Fast Live Instagram API.All information from Instagram consistently and quickly!", "apis": [["Post Likes", "Get Instagram user post likes data by Instagram shortcode."], ["Post Detail", "Get Instagram user post detail by Instagram shortcode."], ["Post Comments", "Get Instagram user post comments by Instagram shortcode."], ["User Guide Detail", "Get Instagram user guide detail by Instagram guide id."], ["User Guides", "Get Instagram user guides by Instagram user id."], ["User Stories", "Get Instagram user stories by Instagram user id."], ["User Tv Channel", "Get Instagram user tv channel by Instagram user id."], ["Highlight Detail", "Get Instagram highlight detail by Instagram highlight id."], ["User Following", "Get Instagram user following by Instagram user id."], ["User Profile Picture", "Get Instagram user profile picture by Instagram username."], ["User Followers", "Get Instagram user followers by Instagram user id."], ["User Tagged Posts", "Get Instagram user tagged posts by Instagram user id."], ["Similar Users", "Get similar Instagram users by Instagram user id."], ["User Reels", "Get Instagram user reels by Instagram user id."], ["User Posts", "Get Instagram user posts by Instagram user id."], ["User Info by User ID", "Get Instagram user information by Instagram user id."], ["User ID", "Get Instagram user id by Instagram username"], ["User Info by Username", "Get Instagram user information by Instagram username."], ["User Search", "Get Instagram users by keyword."], ["Location Search", "Get Instagram locations by keyword."], ["Search Location", "Get Instagram locations by keyword."], ["Search Hashtag", "Get Instagram hashtags by keyword."], ["Search User", "Get Instagram users by keyword."], ["Live Broadcast Info", "Get Instagram live broadcast info by Instagram broadcas id."], ["Music Information", "Get Instagram music information by Instagram audio_cluster_id."], ["Location Information", "Get Instagram location information by Instagram location id."], ["User Highlights List", "Get Instagram user highlights list by Instagram user id."], ["User Live Broadcast", "Get Instagram user live broadcast by Instagram user id."]]}, "TikTok Video No Watermark_v2": {"tool_desc": "The API helps you to download and get the video download link without the Tiktok logo quickly, completely and in detail.", "apis": [["Get music post video", "Get music post video list"], ["Search challenge", "Search challenge by keywords"], ["Get user follow list", "Get user follower or following"], ["Get favorite video by id", "get favorite video by id\n**url doesn't seem to work please use get video details to get download link**"], ["Get info user", "Get tiktok user info"], ["Get user favorite list", "get user favorite list id"], ["Search users", "**Search users by keyword**"], ["get video detail", "**Get links without watermarks quickly and easily**\nNo support url image list"]]}, "Kwai": {"tool_desc": "Kwai Private API (TikTok like mobile app), Best Kwai Scraping API, non-blocking API, contact us if you want a custom plan.", "apis": [["Search Top Music", "Search Top Music API"], ["Login with Mobile Code", "Login with Mobile Code API"], ["Send SMS Code", "Send SMS Code API"]]}, "Instagram Downloader - Reels and Videos Downloader": {"tool_desc": "Powerful Api fetch Instagram Download Links.", "apis": [["Extract Download Links", "Add url parameter to get download links."]]}, "Instagram API 2023": {"tool_desc": "Best Instagram Scraper API 2023 \n\u25cf Launched in May 2023 \n\u25cf 100% real-time data, no cache, no-CORS media, advanced profile, get access to hidden insights & more.", "apis": [["Get user posts by username", "Get posts of an Instagram user using username.\n*For fast response, we suggest you to use previous endpoint.*"], ["Search Giphy(gif)", "Search gif using string. You can use any language as string. ex. \u092c\u093f\u0932\u094d\u0932\u0940  (in English: cat)"], ["Get Facebook page, Facebook Account connected to Instagram account by Insta user_id", "Fetch Facebook page, Facebook user connected to an Instagram account by using user_id.  You can find more details [here](https://rapidapi.com/mrngstar/api/instagram-api-20231/tutorials/get-facebook-page,-facebook-account-details-of-an-instagram-account-1)"], ["User info from username", "Get brief Information about an Instagram user using **username**."], ["Get insights of post/reel by shortcode", "Get hidden insights such as `save_count`, `share_count` of any post, reel using shortcode.  You can find more details [here(tutorial).](https://rapidapi.com/mrngstar/api/instagram-api-20231/tutorials/hidden-insights-of-public-posts,-reels)"], ["Get insights of post/reel by media_id", "Get hidden insights such as `save_count`, `share_count` of any post, reel using media_id.  You can find more details [here(tutorial).](https://rapidapi.com/mrngstar/api/instagram-api-20231/tutorials/hidden-insights-of-public-posts,-reels)"], ["Search Music(Audio)", "Search music using string. You can use any language as string."], ["Get place ids from city names", "Get place ids from place(city) names. You can use these place ids to get posts by city names in next endpoint. \nYou can use any language as place/city name."], ["Search Hashtags", "Search hashtags using string. You can use any language as string for ex. \ubbfc\uc9c0."], ["Hashtag Posts", "Get posts by hashtag. You can use any language as hashtag ex. \u092d\u093e\u0930\u0924"], ["Location posts", "Get posts from `location_id`. \nYou can use previous endpoint to get location_id from city names. Use `pk` from previous endpoint response as `location_id`"], ["User ID(pk) to Username - Fast Response", "Fetch username & other basic details by using user_id(pk)."], ["Get user tags posts by user_id", "Get user tag posts of an Instagram user using user_id.\nUser tag posts can be found at www. instagram .com/{username}/tagged/"], ["Get hashtags followed by an user using user_id", "Get hashtags followed by an Instagram user using user_id."], ["User info from user_id", "Get brief Information about an Instagram user using user_id"], ["Username to User ID", "Fetch User Id & other details by using Instagram username"], ["Get media(story, post, reel & other) info by media_id", "Get brief media (story, post, reel & other) info by media_id.\n\n`story_id` can be obtained from url ex. in instagram. com/stories/thegoodquote/3102217023052923777/  here **3102217023052923777** is story_id."], ["Get all media of a highlight using highlight_id", "Get all media of a particular  highlight using `highlight_id`. \nTo get all highlight_id's of a user please use previous endpoint."], ["No CORS HD profile photo", "Fetch no CORS HD profile picture of a Instagram user. \nNo CORS image urls will expire after 30 days from date of creation.\n\nAlong with original no CORS image, you will get thumbnail & display_url for the same."], ["No CORS images from shortcode", "Fetch no CORS image urls of posts, stories & reels. Please note currently we only support images. No CORS image urls will expire after 30 days from date of creation.\n**Note: For carousel media having more than 5 images, this endpoint will take some time to generate no CORS image urls for all carousel media of posts.**"], ["No CORS images from media_id", "Fetch no CORS image urls of posts, stories & reels. Please note currently we only support images. No CORS image urls will expire after 30 days from date of creation.\n**Note: For carousel media having more than 5 images, this endpoint will take some time to generate no CORS image urls for all carousel media of posts.**"], ["Search user", "Search user using string. You can use any language as string for ex. \ubbfc\uc9c0."], ["Get active, archived stories of user by date wise using user_id", "Get active. archived stories of a user by date wise using user_id.\nMain feature of this endpoint is to get active stories & highlight stories date wise.\n**Note**: archived stories are stories which are present in highlights."], ["Get comments of media by shortcode", "Get comments of post/reel/igtv/etc using shortcode"], ["Get comments by media_id", "Get comments of post/reel/igtv/etc using media_id"], ["Get like details of any media by shortcode", "Get all users who liked a particular post/reel/IGTV/etc using shortcode.\nYou can fetch upto 9000 users(upto 5MB of response). Please make sure your systems are capable of handling too much data otherwise you can use 1000 count value."], ["Get like details of any media by media id", "Get all users who liked a particular post/reel/IGTV/etc using media_id.\nYou can fetch upto 9000 users(upto 5MB of response). Please make sure your systems are capable of handling too much data otherwise you can use 1000 count value."], ["Get all stories by username", "Get all active stories of an Instagram user using username.\n\n***Please use` Get all stories by user_id` endpoint for fast response.***"], ["Get reel by media_id", "Get reel info by media_id"], ["Get reel by shortcode", "Get reel info by shortcode."], ["Get media(story, post, reel & other) info by shortcode", "Get brief media (story, post, reel & other) info by shortcode."], ["Get user highlights tray by user_id", "Get user's all highlight `highlight_id` from this endpoint. To get all medias of a particular highlight please use next endpoint."], ["Get all stories by user_id", "Get all active stories of an Instagram user using user_id."], ["Get user reels by username", "Get reels of an Instagram user using username.\n*For fast response, we suggest you to use previous endpoint.*"], ["Get user reels by user_id", "Get reels of an Instagram user using username."], ["Get user posts by user_id", "Get posts of an Instagram user using user_id."], ["Get user followings by user_id", "Get followings of an Instagram user using user_id."], ["Get user followers by user_id", "Get followers of an Instagram user using user_id."], ["Get public contact details by user_id", "Get public contact details such as phone number, email, address, etc of an Instagram user using user_id"]]}, "Instagram Downloader_v2": {"tool_desc": "Download Video, Photo, Post, Reel, IGTV, Carousel media from Instagram Note: Story video currently not supported!", "apis": [["Get Media", "Post, Photo, Video, Igtv, Reel, Profile Picture"]]}, "Popular languages": {"tool_desc": "Most popular languages in the world", "apis": [["Language by id", "Get popular language by id"], ["Languages", "Get list of most popular  languages"]]}, "TikTok Full Video Info (without watermark)": {"tool_desc": "A fast and stable API that uses a request directly to the TikTok server.", "apis": [["Getting full details", "Tiktok videos with full info \n- video without watermark (HD)\n- cover / music\n- share / likes / comments\n- and more"]]}, "Olato Quotes": {"tool_desc": "Olato Quote APIs gives you random quotes about motivation, sucess and love quotes.", "apis": [["Love Quote", "It shows random quotes"], ["Success Quote", "It shows random quotes"], ["Motivation Quote", "It shows random quotes"]]}, "TikTok Hashtag Generator": {"tool_desc": "TikTok Hashtag Generator API", "apis": [["Generate", "to Generate the best Tiktok Hashtags"]]}, "Chuck Norris": {"tool_desc": "chucknorris.io is a free JSON API for hand curated Chuck Norris facts.", "apis": [["/jokes/random", "Retrieve a random chuck joke in JSON format."], ["/jokes/categories", "Retrieve a list of available joke categories."]]}, "Instagram Profile": {"tool_desc": "Get profile information with proxy image will show directly to your frontend", "apis": [["GET Video", "Get user video with username, use ?next={result.data.page_info.next} for next page"], ["GET Comments", "Detail post likers information"], ["GET Likers", "Detail post likers information"], ["GET Reel", "Get user reel with username, use ?next={result.data.page_info.next} for next page"], ["GET Feed", "Get user feed with username, use ?next={result.page_info.next} for next page"], ["GET Detail Post", "Detail post information from shortcode"], ["GET Username", "Basic profile information from id"], ["GET Story", "Get user story with username"], ["GET Search Keyword", "Return search by keyword will return hashtag & places"], ["GET Searchuser", "Return search by username input"], ["GET Hashtags", "Return hashtag media list medias"], ["GET Places", "Return places media list medias"], ["GET Following by id", "Get 12 following user information per request"], ["GET Followers by username", "Get 12 followers user information per request."], ["GET Followers by id", "Get 12 followers user information per request"], ["GET Following by username", "Get 12 following user information per request"]]}, "Instagram API": {"tool_desc": "Get any information from Instagram.", "apis": [["Hashtag by Name", "Gets a Hashtag by Name"], ["Location by Id", "Gets a location by Id"], ["Story by URL", "Gets a story by URL"], ["Story by Id", "Gets a story by Id"], ["Media by URL", "Get a media by URL"], ["Media by Code", "Get a media by code"], ["Media by Id", "Get a media by Id"], ["User by Username", "Get a user by username"]]}, "Instagram_v9": {"tool_desc": "\ud83d\udfe2\ud83d\udc9a 2023 API Scraping Instagram public data scraper for search, users, posts, hashtags, locations and more.", "apis": [["Instagram Post Info", "Get Instagram Post (likes, comments, hashtags, mentions, location, etc.)"], ["Instagram User Info", "Get Instagram account information"]]}, "TikTok Bulletproof": {"tool_desc": "The stable Tiktok API.", "apis": [["/user-info", "Retrieve TikTok user info by username"], ["/user-feed", "Retrieves 30 latest feed items from TikTok account, by username"]]}, "OnlyFans": {"tool_desc": "apis for onlyfans", "apis": [["List", "Used to get a full list of expired user details\n\nMust hit the auth endpoint first!\nAlso best to hit the count endpoint beforehand."], ["Performer / Model Info", "Get detail info about a performer / model"], ["Authentication", "Best to call the Sign Info first take those values and pass them on"], ["Sign Info", "Get required up to date sign info"], ["Mass Messages", "Used to get the last 100 mass messages\n\nMust hit the auth endpoint first!"], ["Count", "Used to get the total expired followers\n\nMust hit the auth endpoint first!"]]}, "TikTok_v3": {"tool_desc": "TikTok API", "apis": [["Music Id By Url", "get music id by url"], ["Video Id By Url", "get video Id by  url"], ["Challenge Videos", "get challenge videos by challenge _id"], ["Music Info", "get music information by music_id"], ["Video Comments", "get video comments by video_id"], ["Challenge", "get challenge by hashtag"], ["Profile", "get profile information by username"], ["User Videos", "get user videos by user_id and  secUid"], ["Video Comment Replies", "get video comment replies"], ["Video Info", "get video information by video_id"], ["Videos By Music", "get videos by music_id"]]}, "TokApi - mobile version": {"tool_desc": "Highly available tiktok **mobile** API.", "apis": [["/v1/search/location", "Search locations by text query"], ["/v1/location/posts/{location_id}", "Get videos by location ID"], ["/v1/location/{location_id}", "Get location info by ID"], ["/v1/user/{user_id}/qr_code", "QR code by user ID"], ["/v1/user/{user_id}", "User information by ID"], ["/v1/user/username/{username}", "Get user identifiers by username"], ["/v1/user/{user_id}/playlist/{playlist_id}/videos", "Videos by playlist ID"], ["/v1/user/{user_id}/playlist/{playlist_id}", "Playlist information by ID"], ["/v1/user/{username}", "User information by username"], ["/v1/search/live", "Search live streams by text query"], ["/v1/post/user/{user_id}/liked_posts", "User liked video feed"], ["/v1/search/music", "Search music by text query"], ["/v1/search/user", "Search users by text query"], ["/v1/search/post", "Search videos by text query"], ["/v1/post", "Video by web URL, can be vm.tiktok.com or tiktok.com"], ["/v1/search/hashtag", "Search hashtags by text query"], ["/v1/post/{post_id}/comments", "Comments by video ID"], ["/v1/music/{music_id}", "Music information by ID"], ["/v1/music/posts/{music_id}", "Search videos by music ID"], ["/v1/sticker", "Effects information by IDs (look at stickers field in video response)"], ["/v1/hashtag/posts/{hashtag_id}", "Search videos by hashtag ID"], ["/v1/hashtag/{hashtag_id}", "Search videos by hashtag ID"], ["/v1/sticker/{sticker_id}", "Effect information by ID (look at stickers field in video response)"], ["/v1/sticker/posts/{sticker_id}", "Video by effect ID (look at stickers field in video response)"]]}, "Instagram_v13": {"tool_desc": "Real time Instagram Data!", "apis": [["User Guide Detail", "Get instagram user guide detail by guide id."], ["Similar Users", "Get similar Instagram users by userid."], ["Post Comments", "Get instagram user post comments data by shortcode."], ["Post Likes", "Get instagram user post likes data by shortcode."], ["Post Detail Data", "Get instagram user post detail by shortcode."], ["User Tagged Posts", "Get instagram user tagged posts by user id."], ["User Following", "Get instagram user following by user id."], ["User Contact Info", "Get instagram user contact info by user id."], ["User Posts", "Get instagram user posts by user id."], ["UserID", "Get instagram user id by username"], ["User Highlights List", "Get instagram user highlights list by user id."], ["User Stories", "Get instagram user stories by user id."], ["User Tv Channel", "Get instagram user tv channel by user id."], ["User Guides", "Get instagram user guides by user id."], ["User Followers", "Get instagram user followers by user id."], ["User Profile Picture", "Get instagram user profile picture by username."], ["User Data", "Get instagram user info by username."], ["User Highlight Detail", "Get instagram user highlight detail by highlight id."], ["short Code Check", "Instagram shortcode check endpoint"]]}, "TikTok Videos Without Watermark": {"tool_desc": "Download tiktok videos without a watermark", "apis": [["getPostDetails", "Get video details like video, music, image"]]}, "PeerReach": {"tool_desc": "The PeerReach API allows you to give context to the content produced by any Twitter profile.", "apis": [["User lookup", "Returns a detailed overview of available PeerReach data for the user"]]}, "Instagram_v6": {"tool_desc": "instagram api", "apis": [["MediaInfo_v2", "get media info v2"], ["UserInfo", "Get instagram user info by user name, response with old format. result -> user."], ["GetUserNameByUserId", "get username by user id"], ["Medias", "Get someone's medias, batch_size range from 1 to 50"], ["MediaLikers", "Get one media's likers, batch_size range from 1 to 50."], ["GetUserStories", "get stories by user id"], ["GetSuggestedUser", "get suggested user by user id"], ["MediaComments", "Get one media's comments, batch_size range from 1 to 50."], ["GetUserNameByUserId_v2", "get username by user id"]]}, "twitter_v3": {"tool_desc": "The API allows you to get a link to download a public Twitter video in any available quality.", "apis": [["hls", "hls => mp4 converter"]]}, "Hashtag": {"tool_desc": "Generate hashtags based on image, text and get the post count detail of that hashtag.", "apis": [["Trending tags from Country", "Gets trending tags from a specific country"], ["Trending Countries List", "List countries where we can fetch trending tags from"], ["Trending Tags", "Get global trending tags"], ["Get Category", "Get a specific category"], ["Category Tags", "Get a list of all the tags from a category"], ["Categories", "Get a list of categories."], ["Similar Hashtags", "Generated related hashtags to a text input provided"], ["Post Count", "Get the total post count for a given hashtag"], ["Top Hashtags", "Gets a list of all the top hashtags"]]}, "TikTok Info": {"tool_desc": "Get TikTok Video data along with detailed information about Author, User Feed, Music .", "apis": [["getMusic", "Get all the TikTok videos that are using a specific music along with the information about original music"], ["getVideo", "Get all the video information like Play URL, Cover, Stats, Codec along with Author and Music details"], ["getUserVideos", "Get all the videos of an user. By default the **limit** has been set to 10. You can customize it."]]}, "Twitter AIO": {"tool_desc": "Access real-time data as soon as it's posted!", "apis": [["User Followings by userId", "Receive all followings of a user. You can use the cursor and count to navigate around."], ["User Followers by userId", "Receive all followers of a user. You can use the cursor and count to navigate around."], ["Tweets and Replies by userId", "Receive all tweets and replies ordered by most recent. You can use the cursor and count to navigate around."], ["Media by userId", "Receive all media items ordered by most recent. You can use the cursor and count to navigate around."], ["User Details by userId", "This is the prefered method of getting any information. Receive follower counts, images and more user related data with this endpoint."], ["User Details by username", "Receive follower counts, images and more user related data with this endpoint."], ["Tweets by userId", "Receive all tweets ordered by most recent. You can use the cursor and count to navigate around."], ["User Likes by userId", "Receive all likes of a user. You can use the cursor and count to navigate around."], ["Twitter Space Stream url", "Receive m3u8 url for Twitter Space stream by mediaId."], ["Twitter hashtag emojis", "Receive a full list of all twitter custom emojis with the hashtag, image and more."], ["Twitter Space by spaceId", "Receive all informations for a Twitter Space stream by its id."], ["Tweet Retweets", "Receive all retweets for a tweet."], ["Tweet Likes", "Receive all likes for a tweet."], ["Tweet Details", "Receive all tweet informations and comments by tweetId."], ["Convert username to userId", "You'll need the userId to receive tweets, media and replies."], ["Autocomplete", "Use autocomplete to get suggestions for your search term. This can be events, users or topics. You can specify the type in the request."], ["Search", "With the search endpoint you can search all of twitter. You just need to provide a search term."]]}, "TikTok Data": {"tool_desc": "Social Media Data API in Real-Time.", "apis": [["Video post comments", "Get video post comments."], ["User metadata (information)", "Get user metadata. Number of followers, followings , avatar url, description and more"], ["User followers list", "Get user followers:\n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs"], ["Music metadata", "Get music metadata\n\nBasic metadata: number of posts,  direct url to the song(MP3) and etc"], ["Music feed (Video posts)", "Get current music feed. \n\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more."], ["Get video without the watermark", "Get direct post url to the video without watermark"], ["Video post metadata", "Get single post metadata"], ["Hashtag feed (Video posts)", "Get hashtag feed\n\n- Before testing don't forget to fill out the **name** query\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more."], ["Real-time hashtag search", "Search for hashtags by keyword"], ["User followings list", "Get user followings:\n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs"]]}, "Twitter V2": {"tool_desc": "Twitter public data API for Tweets and users", "apis": [["Search", "This endpoint return search results"], ["User Tweets & Replies By Rest ID", "Get User Tweets & Replies By Rest ID"], ["User Tweets By Screen Name", "Get User Tweets By Screen Name"], ["User Tweets By Rest ID", "Get User Tweets By Rest ID"], ["User Tweets & Replies  By Screen Name", "Get User Tweets & Replies  By Screen Name"], ["User By Rest ID", "Get User By Rest ID"], ["User By Screen Name", "Get User By Screen Name"], ["Tweet Detail & Conversation", "Get Tweet Detail & Conversation"], ["Lists Tweets", "This endpoint return a list of tweets in a given Twitter list"], ["Lists Details", "This endpoint returns the public information a Twitter Lists"]]}, "Instagram_v7": {"tool_desc": "Get information from Instagram reliably", "apis": [["Get user id from username", "Finds user id by username"], ["Get media info", "Get information about a media by providing the media id."], ["Get media id from data", "Get the id of a media from some data like a link."], ["Get user feed", "Get the feed of a user"], ["Get user info", "Get information about a user"]]}, "Fortune Cookie": {"tool_desc": "The Fortune Cookie, a piece of advice, a future prediction, an inspiration...", "apis": [["category_list", "List of fortune categories"]]}, "Twitter Scraper": {"tool_desc": "Search and extract Twitter data at scale \ud83d\ude80 Extract up to 2,000 tweets per search query", "apis": [["search", "Search Twitter by keyword, hashtag or URL"]]}, "Pinterest APIs": {"tool_desc": "API search user, get user profile, user pins", "apis": [["Search User", "Search user by keyword"], ["Get User Profile", "Get User Profile by username"], ["Get User Pins", "Get User Pins by user name"]]}, "TikTok Downloader - Download TikTok Videos without watermark": {"tool_desc": "TikTok Downloader API - Download TikTok Videos without watermark mp4 and mp3", "apis": [["video without watermark [mp4,mp3,cover,desc,region,wt]", "video without watermark [mp4,mp3,cover,description,region,verify]\nthe response may be slower than the other \" video without watermark\" endpoint cause it's more loaded but it is still so fast enough and it's more stable \nserved by proxy"], ["Video full info by URL", "Tiktok videos with full info \nvideo without watermark\ncover / music\nshare / likes / comments\nauthor  info  like connected  Youtube channel / IG  / avatar thumbnail / statistics about the video including comments number / likes \nsupport for  all Tiktok links ( vm.tiktok.com / vt.tiktok.com / m.tiktok.com / web / t.tiktok.com)"], ["video without watermark ( mp4 & mp3 & cover )", "video without watermark mp4 mp3 and cover only\nwith light weight responses between 300-450ms or lower depending on your server geo loc"]]}, "Instagram Bulk Profile Scrapper": {"tool_desc": "Highly maintained and Stable Instagram Api.", "apis": [["Bulk Profile - Fast Response", "**Contact me for Custom package or requirements**\n\nFetch Instagram Short Profile without recent feeds, Useful for Profile verification, This endpoint use smart caching algorithm, Contact me to reduce caching time."], ["Bulk Profile by PK", "This API return time will be faster, As this fetch  profile data directly from userid (pk)\n\nScrap instagram profile by pk"], ["Reels by Music Id", "Instagram reels music by id\n\nYou can use nextMaxId to fetch next page"], ["Music Search by Keyword", "**Contact me for Custom package or requirements**\n\nSearch Music by Keyword\n\nYou can pass nextMaxId to fetch more reels"], ["Get Feed by Location Id", "Get Instagram Feeds by Location"], ["Get Feed by Username", "Get Instagram Profile Feeds by Username"], ["Get Feed by Hashtags", "Get Instagram Feeds by Hashtag"], ["Validate Username", "**Contact me for Custom package or requirements**\n\nThis API will be usefull for Instagram username validation or finding similar usernames to pick correct one."], ["Pk to Username", "Get Username from pk/id"], ["Advance - Bulk Profile", "Scrap email and phone number using this api\n\nScrap Instagram Profile using username.\n\nThis API response take around 5-6 seconds scrap one profile with post.\n\nIt is designed and capable to handle bulk request. but we recommend to add 5-10 seconds random delay between each request.\n\n\nThis API also support optional parameter corsEnabled to generate image/video link which can be directly used in Browser"], ["Get Reels by PK", "Fetch Instagram reels/clips from username"], ["Reels with Cursor", "Scrap instagram reels by pk or username"], ["Location Search", "Location search on Instagram"], ["Hashtags Search", "Search hashtags on Instagram"], ["Tagged Posts", "Instagram Users Tagged posts"], ["Suggested Profiles", "Instagram Discover Profiles endpoint"], ["Followers by Username", "**Contact me for Custom package or requirements**\n\nFetch followers list\n\nCarry forward nextMaxId to retrieve next batch"], ["Get Post by ShortCode", "**Contact me for Custom package or requirements**\n\nFetch Instagram post/feed from shortcode"], ["Search Username", "**Contact me for Custom package or requirements**\n\nThis API will be usefull for Instagram username validation or finding similar usernames to pick correct one.\n\nThis API also support CORS enabled image URL."], ["Bulk Profile", "Scrap Instagram Profile using username.\n\nThis API response take around 5-6 seconds scrap one profile with post.\n\nIt is designed and capable to handle bulk request. but we recommend to add 5-10 seconds random delay between each request.\n\n\nThis API also support optional parameter corsEnabled to generate image/video link which can be directly used in Browser"], ["Bulk Profile - CORS Enabled", "This API Images and Video url can be used directly in browser"], ["Followings by Username", "Fetch following list\n\nCarry forward nextMaxId to retrieve next batch"], ["Get Story by ShortCode", "Fetch Instagram story from shortcode"], ["Get Story by Username", "Fetch Instagram stories from username"], ["Post with Cursor", "This API return time will be faster, As this fetch  profile data directly from userid (pk)\n\nScrap instagram profile by pk or username"], ["Highlights tray by Id", "Fetch Instagram story highlights tray list by Highlight id"], ["Followers by PK", "Fetch followers list\n\nCarry forward nextMaxId to retrieve next batch"], ["Followings by PK", "Fetch following list\n\nCarry forward nextMaxId to retrieve next batch"], ["Post Likers", "Get Instagram Post Likers list by media_id"], ["Post Commenter", "Get Instagram Post Commenter's list by media_id"], ["Get Reels by ShortCode", "**Contact me for Custom package or requirements**\n\nFetch Instagram reels/clips from short code"]]}, "Tiktok User": {"tool_desc": "Get profile information from tiktok user", "apis": [["GET Search User", "Get search result for specific username"], ["GET User", "Get user profile will return all the information of the user"]]}, "Socie": {"tool_desc": "This REST API can be used to create, read, update or delete data from the Socie platform.", "apis": [["Get Member", "Return a specific member. To do this, you need the `externalId` you gave the member when you created it or the `id` provided by Socie."], ["Get Members", "Retrieve all or some members of your community."]]}, "Hajana One Free SMS For Websites": {"tool_desc": "Get Free SMS API for Your website, and Any application.", "apis": [["Send SMS", "A File for sending SMS"]]}, "Twitter RSS": {"tool_desc": "RSS Generator for Twitter", "apis": [["Generate RSS Feed", "Generate RSS for given Twitter ID. (*NOTE: PubDates will be calculated approximately)"]]}, "Reddit Fast Search": {"tool_desc": "", "apis": [["Search Subreddits", "The endpoint utilizes the Reddit API's search functionality to retrieve the Subreddits.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request."], ["Search Comments", "The endpoint utilizes the Reddit API's search functionality to retrieve the comments.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request."], ["Search Users", "The endpoint utilizes the Reddit API's search functionality to retrieve the users.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request."], ["Shadowban Checker", "This endpoint allows you to check if a Reddit user is shadowbanned. Shadowbanning is a practice where a user's actions and content are hidden from the public without their knowledge. This endpoint provides a way to detect if a user is affected by shadowbanning on Reddit.\n\nParameters:\n\nusername (string, optional): Specifies the username of the Reddit user to check for shadowbanning. The default value is set to \"John\".\nfull (boolean, optional): Determines whether additional user information should be returned in the response. If set to True, it includes details such as the user's join date, post karma, comment karma, and verified mail status. By default, it is set to False.\nproxy (string, optional): Specifies the proxy server to be used for the request. If required, you can provide the proxy server's details to route the request through a specific network or location. The default value is None, indicating no proxy is used.\ntimeout (integer, optional): Specifies the maximum time, in seconds, to wait for a response from the Reddit API. The default timeout is set to 5 seconds.\nReturns:\n\nThe endpoint returns a JSON response with the following fields:\n\nis_shadowbanned (boolean): Indicates whether the specified Reddit user is shadowbanned. If True, the user is shadowbanned. If False, the user is not shadowbanned.\nIf full is set to True, the response also includes the following additional fields:\nusername (string): The username of the Reddit user.\njoin_date (string): The date and time when the user joined Reddit.\npost_karma (string): The amount of karma the user has gained from posting.\ncomment_karma (string): The amount of karma the user has gained from commenting.\nverified_mail (string): Indicates whether the user has a verified email associated with their account.\nError Handling:\n\nThe endpoint handles potential errors during the process. If the provided username is invalid, a ValueError is raised with an HTTPException status code of 400 and an error message indicating the issue.\n\nPossible errors during the request process, such as proxy connection failures, request timeouts, or internal server errors, are handled as HTTPExceptions with status codes 500 and appropriate error details.\n\nNote:\n\nThe endpoint utilizes the Reddit API to fetch information about the user.\nProper validation and handling of the username parameter are performed to ensure the input is valid and avoid potential errors.\nThe endpoint supports the usage of proxy servers for the request if required.\nThe timeout parameter allows controlling the maximum waiting time for the response from the Reddit API.\nThe endpoint provides basic information about the user and helps identify if they are shadowbanned on Reddit."], ["Search Posts", "The endpoint utilizes the Reddit API's search functionality to retrieve the posts.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request."]]}, "Social Media Data TT": {"tool_desc": "Social Media Data API in Real-Time.", "apis": [["Video post comments V2", "Get post comments. V2 returns much more data then the old endpoint"], ["Music metadata", "Get music metadata\n\nBasic metadata: number of posts,  direct url to the song(MP3) and etc"], ["Music feed (Video posts)", "Get current music feed. \n\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more."], ["Video post comments", "Get video post comments."], ["Trending feed (Video posts) V2", "Get trending feed V2. \n\nV2 - returns more data then older version of the endpoint, video without watermark and etc\n\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more."], ["Real-time user search", "Search for influencers by the keyword. \n\n- Very useful data will be returned in the response, if user is verified or not, users country and more"], ["User followers list", "Get user followers:\n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs"], ["User followings list", "Get user followings:\n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs"], ["User metadata (information)", "Get user metadata. Number of followers, followings , avatar url, description and more"], ["User feed (Video posts)", "Get current user feed. \n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more."], ["User feed (Video posts) V2", "Get user feed V2\n\nV2 - returns more data then older version of the endpoint"], ["Real-time hashtag search", "Search for hashtags by keyword"], ["Direct post url", "Get direct post url"], ["Hashtag feed (Video posts)", "Get current hashtag feed. \n\n- Before testing don't forget to fill out the name **OR** hashtag_id inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more."], ["Hashtag metadata (information)", "Get hashtag metadata\n\nBasic informations as number of posts and etc"], ["Hashtag metadata (information) V2", "Get hashtag metadata V2\n\nV2 - returns more data then older version of the endpoint"], ["Trending feed (Video posts)", "Get current trending feed. \n\n- Due to nature of this endpoint the **max_cursor** is not required. Each request can return different data by default\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more."], ["Hashtag feed (Video posts) V2", "Get hashtag feed V2. \n\nV2 - returns more data then older version of the endpoint, video without watermark and etc\n\n- Before testing don't forget to fill out the **name** query\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more."], ["Video post metadata", "Get single post metadata"], ["Video post metadata V2", "Get single post metadata V2\n\nV2 - returns more data then older version of the endpoint"]]}, "Youtube V2": {"tool_desc": "Youtube API for search, videos, channels, trending, recommendation", "apis": [["Channel Search Continuation", "This endpoint gets search the next list of search results in a given Youtube channel using the channel ID"], ["Channel Videos", "Get the latest videos published by a Youtube channel"], ["Youtube Channel ID", "This endpoint get the channel ID of a Youtube Channel given the channel name"], ["Channel Search", "This endpoint gets search results in a given Youtube channel using the channel ID"], ["Channel Details", "This endpoint get all available details about a given channel ID"], ["Channel Shorts", "Get the latest shorts published by a Youtube channel"], ["Video Recommendation", "This endpoint returns a list of recommended videos based on a given a video ID"], ["Video Comments", "This endpoint returns a list comments under a given Youtube video"], ["Video Subtitles", "Get the available subtitles of a Youtube Video"], ["Video Details", "Get all publicly available details about a Youtube Video"], ["Video Data", "Get downloadable links of the Video"], ["Youtube Search", "This endpoint will a specific number of videos for a specific keyword, note that the maximum is 40 videos per request"], ["Trending Videos", "This endpoint returns the list of trending videos given a country"]]}, "Instagram Profile Picture Viewer": {"tool_desc": "Fetch Full HD Profile Picture and Some Basic Details of anyone on Instagram.", "apis": [["View Profile Picture", "View full HD Profile Picture of anyone on Instagram just using username."]]}, "Zodiac Sign API": {"tool_desc": "Gives data on Zodiac signs, their personality traits and dates", "apis": [["Getallsign", "Get all sign. This returns all the available signs"], ["SearchZodiacbySign", "Search Zodiac by sign. This returns the value of the selected sign"]]}, "MockTwitter": {"tool_desc": "similar app to twitter", "apis": [["login", "login to the user profile"], ["login_copy", "login to the user profile"]]}, "Instagram Cheapest": {"tool_desc": "2023\uff0cReal-time and cheapest Instagram data API\uff0craw json\u3002\u6700\u4fbf\u5b9c\u7684instagram api", "apis": [["userinfo", "get userinfo by username"], ["user_medias", "get user_medias by user_id"]]}, "Instagram #1": {"tool_desc": "Collect instagram data with no headaches - more APIs are available, please request any that are not yet available!", "apis": [["Feed by username", "Collect the current feed from the username"]]}, "Twitter_v5": {"tool_desc": "Introducing a powerful Twitter API with 14 endpoints to help you access valuable Twitter data.", "apis": [["Get Users By IDs", "Get Users By IDs (Rest IDs)"], ["Get User Likes", "Get User Likes By ID\n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint"], ["Get User Media", "Get User Media By ID\n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint"], ["Get User Replies", "Get User Replies By ID\n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint"], ["Get User Tweets", "Get User Tweets By ID\n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint"], ["Autocomplete", "Twitter Seach Query Autocomplete"], ["Search Twitter", "Search Twitter (Top, Latest, Videos, Photos and People)"], ["Get Post Retweets", "Get Post Retweets By Post ID"], ["Get Post Quotes", "Get Post Quotes By Post ID"], ["Get Post Comments", "Get Post Comments By Post ID"], ["Get Post Likes", "Get Post Likes By Post ID"], ["Get User Followings", "Get User Followings By ID. \n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint"], ["Get User Followers", "Get User Followers By ID. \n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint"], ["Get User By Username", "Gets a user by username"]]}, "Instagram Pro": {"tool_desc": "Insatgram API Pro Version", "apis": [["Following by PK", "Instagram Following List by PK, Up to 1000 records"], ["Following by username", "Instagram Following List by username, Up to 1000 records"], ["Followers by PK", "Instagram Followers list up to 1000 records only"], ["Followers by username", "Followers list by username, Up to 1000 records"], ["Advance Profile", "Profile data with email/phone if available"]]}, "Pinterest Downloader - Download Pinterest image Video and reels": {"tool_desc": "This API allows you to retrieve information about a specific pin on Pinterest.", "apis": [["Get Pin Data", "This endpoint will return back all information about a specific pin on Pinterest."]]}, "Ocoya": {"tool_desc": "End-to-end social media marketing.", "apis": [["/social-profiles", "Returns information about connected social profiles."], ["/post-groups", "Returns information about all my created posts."], ["/me", "Returns information about authenticated user."]]}, "TikTok Full Video Info": {"tool_desc": "A fast and stable API that uses a request directly to the TikTok server.", "apis": [["Getting full details by URL", "Url must be encoded"]]}, "instagram downloader": {"tool_desc": "API instagram Download \nGet Story and Highlight and Post and reels and igtv and Media from Instagram consistently and quickly!", "apis": [["Download Story - Post - Highlight", "past a copied link of story or highlight or post \nindex/url={URL}"]]}, "Instagram API_v2": {"tool_desc": "instagram scraping, all endpoints", "apis": [["Get Comments List by  Shortcode", "Get comments list via shortcode. you can get more data using minid. The response will include this part:\n\"nextminid\": \"{\"servercursor\": \"QVFEdjNRSEU5SFY4SzR5TE00MV9ISmh6STZfV1dwcnBxbGlPYlhuZTl3T3lvVW4zYVNETXc0YWVHSnJQTHNKR25ncXE1RFdCT2MzTEhTVWpGMTBBNlhIaw==\", \"isservercursorinverse\": true}\"\nand the minid will be:\n\"QVFEdjNRSEU5SFY4SzR5TE00MV9ISmh6STZfV1dwcnBxbGlPYlhuZTl3T3lvVW4zYVNETXc0YWVHSnJQTHNKR25ncXE1RFdCT2MzTEhTVWpGMTBBNlhIaw==\""], ["Get Comments List by Media Id", "Get comments list via media id. you can get more data using minid. The response will include this part:\n\"next_min_id\": \"{\"server_cursor\": \"QVFEdjNRSEU5SFY4SzR5TE00MV9ISmh6STZfV1dwcnBxbGlPYlhuZTl3T3lvVW4zYVNETXc0YWVHSnJQTHNKR25ncXE1RFdCT2MzTEhTVWpGMTBBNlhIaw==\", \"is_server_cursor_inverse\": true}\"\nand the minid will be:\n\"QVFEdjNRSEU5SFY4SzR5TE00MV9ISmh6STZfV1dwcnBxbGlPYlhuZTl3T3lvVW4zYVNETXc0YWVHSnJQTHNKR25ncXE1RFdCT2MzTEhTVWpGMTBBNlhIaw==\""], ["Get Likers app chrono by Shortcode", "Get the last 1000 likes of a post via shortcode"], ["Get Likers app chrono by Media Id", "Get the last 1000 likes of a post via media id"], ["Get Likers List app by Shortcode", "Get the list of people who has liked a post via shortcode and app method"], ["Get Likers List app by Media Id", "Get the list of people who has liked a post via media id and app method"], ["Media info by Shortcode", "Get any post information such as photos, videos, igtvs, reels , . . . when you have the shortcode. Shortcode is usually shown this way in Url: instagram.com/p/{shortcode}"], ["Get Likers List Web by Media Id", "Get the list of people who has liked a post via media id and web method"], ["Get Likers List Web by Shortcode", "Get the list of people who has liked a post via shortcode and web method"], ["Media info by Media Id", "Get any post information such as photos, videos, igtvs, reels , . . . when you have the id"], ["Search among Followings by Username", "search any query in an Instagram account followings when you have the username, it can be one part or the whole username or full name"], ["Search among Followings by pk", "search any query in an Instagram account followings when you have the pk, it can be one part or the whole username or full name"], ["Get Followings by Username", "Get lists of any public Instagram account followings via pk"], ["Get Followings by pk", "Get lists of any public Instagram account followings via pk"], ["Search among Followers by Username", "search any query in an Instagram account followers when you have the username, it can be one part or the whole username or full name"], ["Search among Followers by pk", "search any query in an Instagram account followers when you have the pk, it can be one part or the whole username or full name"], ["Get Followers by Username", "Get lists of any public Instagram account followers via username"], ["Get Followers by pk", "Get lists of any public Instagram account followers via pk"], ["User Posts By Username", "Get all posts contents including photos, videos, reels, igtvs, and etc via username"], ["User Posts By pk", "Get all posts of any Instagram account via pk. including photos, videos, Igtv, reels and etc."], ["Shortcode to Media id", "Each Media on Instagram has a unique id like 2931558439012794055, but in the Url you will see it this way: https://www.instagram.com/p/Ciu_N9Qpm5d/\nThis endpoint will converts Ciu_N9Qpm5d to 2931558439012794055"], ["User Stories By Username", "Get all stories of any Instagram account via username"], ["User Stories By pk", "Get all stories via pk"], ["Media id to Shortcode", "Each Media on Instagram has a unique id like 2931558439012794055, but in the Url you will see it this way: https://www.instagram.com/p/Ciu_N9Qpm5d/\nThis endpoint will converts 2931558439012794055 to Ciu_N9Qpm5d"], ["User info by username", "Get all information of an Instagram account by  username"], ["User info by pk", "Get all information about an Instagram account by pk (the unique id of Instagram account) such as username, profile_pic_url (hd), full_name, media_count, follower_count, following_count and etc"], ["Hashtag Feed", "It shows the content which is shared on Instagram with a specific hashtag, the first query does not need maxid, but if you want to get the rest of results you need to send it, and it can be taken from previous call as a next_max_id in Json response.\nfor example:\n\"next_max_id\": \"QVFBeHItQXBZTHZPdEdNM2RLTmFtODJEZXpkUVIwbktBWDFscFQ5SFIyZTlodWU3bFZ6RXJmaURNMGJGYk1BbFk1WjIzdzlITGJzRjBkM2lNZ2lwZ2s2TA==\""], ["Hashtag Info", "Get all information about a specific hashtag on Instagram"], ["Search Hashtag", "Search any hashtag on instagram"], ["search", "search any query on Instagram"], ["username to pk convert", "it converts any username on instagram to the unique id which is called pk"]]}, "Twitter": {"tool_desc": "Please join our telegram channel to get notified about updates.", "apis": [["Tweets by username", "this returns tweets based on twitter username.\nyou can use cursor input for pagination."], ["List of language codes for search", "this endpoint gives a list of language codes required for \"getSearch\" endpoint"], ["Tweet id by url", "Convert tweet url to id for use in \"getTweetById\" endpoint"], ["Profile", "this returns user info by username."], ["User id by username", "this returns twitter user id based on twitter username."], ["Tweets by hashtag", "this returns tweets based on twitter hashtag.\nyou can use cursor input for pagination."], ["Auto Complete", "this returns  auto complete result in twitter search."], ["Followers", "this returns followers based on twitter user id.\nyou can use cursor input for pagination."], ["Tweet by id", "access to one tweet data by its id"]]}, "MESCALC": {"tool_desc": "Calculates Misinformation Exposure Score for Twitter accounts", "apis": [["get_misinformation_score_account__twitter_account__get", "Retrieve account misinformation score by Twitter ID"]]}, "Genderify3": {"tool_desc": "Detect gender API, predict Male or Female by Name or Email Address with high accuracy.", "apis": [["Genderify v3", "Predict and detect male or female based on their name or email address. Names are supported in over 160 supported countries.\n\ninput: Emily Blunt or shigeotokuda@email.com"]]}, "IDD": {"tool_desc": "this is instagram user api to get json data about  user by username", "apis": [["username", "get data by username"]]}, "Instagram API - Media Downloader": {"tool_desc": "Cheapest Instagram API: HD profile pictures, download stories, reels, videos, photos and more!", "apis": [["Get UserInfo (including HD profile picture)", "Get the full-resolution profile picture url, profile links, biography, internal information and more"], ["Get Highlight by ID", "Provides all images and videos of the highlight. This has the same structure as the stories endpoint"], ["Get All Highlights", "Receive a list of all highlights, including the cover image."], ["Get Stories", "Receive all stories with download url for videos and photos"], ["Get Profile", "Get all general profile informations"]]}, "TikTok APIs": {"tool_desc": "TikTok API search users, get posts", "apis": [["Search Users", "Search user by keyword"]]}, "Celebrity Social Media API": {"tool_desc": "Get social media account links of popular personalities", "apis": [["api/socialmedia", "Use this endpoint to fetch  Social Media Accounts"]]}, "ScrapTik": {"tool_desc": "ScrapTik is the #1 TikTok scraping API solution and allows you to unlock TikTok data effortlessly.", "apis": [["X-Bogus Web Signature", "Generate X-Bogus signature for Web."], ["X-Ladon & X-Argus Generator", "Sign TikTok api url, generate X-Ladon / X-Argus / X-Gorgon token and X-Khronos."], ["X-Gorgon & X-Khronos Generator", "Sign TikTok api url, generate X-Gorgon token and X-Khronos."], ["Device Registeration", "Generate a new device."], ["Username to ID", "Get user id from username"], ["Video Without Watermark", "Get video without watermark by url or aweme_id."], ["Get Music Posts", "Get music posts by music id."], ["Get User Info", "Get user info by username."], ["Get User Posts", "Get user posts by sec user id."], ["User Likes", "Get user likes by user id."], ["List Comments Replies", "Get replies of a comment."], ["Top Search", "Top Search: videos, hashtags, sounds, users"], ["Music Posts", "Get posts by music_id"], ["List Comments", "Get list comments of a post."], ["List Followers", "Get list of followers by user id."], ["Get User", "Get user by id."], ["Get Post", "Get post by id."], ["For You Feed", "Trending posts for you."], ["User Posts", "Get user posts by user id."], ["Get Music", "Get music by id."], ["List Following", "Get list of following by user id."], ["Check Unique ID", "Check unique id if exist"], ["From TikTok Notifications", "Show \"From TikTok\" account notifications."], ["Followers Notifications", "Show \"Followers\" account notifications."], ["Likes Notifications", "Show \"Likes\" account notifications."], ["Comments Notifications", "Show \"Comments\" account notifications."], ["Mentions & Tags Notifications", "Show \"Mentions & Tags \" account notifications."], ["Q&A Notifications", "Show \"Q&A\" account notifications."], ["All Activity", "Show \"All Activity\" account notifications."], ["Login using SMS code", "Login using SMS code."], ["Send SMS", "Send SMS code to you mobile."], ["End a Live Stream", "End a live stream."], ["Start a Live Stream", "Start a live stream."], ["Get Live Stream Messages", "Get live stream chat messages."], ["Create a Live Stream", "Create a new live stream."], ["Can Create Live Stream", "Check if user can create live streams on TikTok."]]}, "TikTok Scraper_v2": {"tool_desc": "Get basic tiktok user info and medias.", "apis": [["Video no watermark", "Get video no watermark."], ["User info", "Get basic user information."], ["Music videos", "Get videos with specific music."], ["Hashtag videos", "Get hashtag (challenge) videos."], ["Hashtag info", "Get hashtag (challenge) info."]]}, "SendAPic API": {"tool_desc": "https://sendapic.xyz/\n\n\ud83d\udd10 Send confidential images securely and safely with an expiring link.", "apis": [["Get image", "Retrieve the image by ID."]]}, "Soundcloud": {"tool_desc": "Soundcloud api", "apis": [["/song/info", "Get basic information of a song."], ["/song/download", "Download one song, the result is a url which you can get the song."], ["/user/info", "Get basic user info"], ["/search", "Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\"."]]}, "TikTok Video Downloader": {"tool_desc": "Simple and Lightweight Api to Download TikTok Videos Easily.", "apis": [["Download TikTok Video", "Provide Link of TikTok video in url parameter to get Download Links of TikTok Video."]]}, "Check Username": {"tool_desc": "Generate/Check if a username is available on various platforms like Facebook, instagram, tiktok, snapchat and other social media platforms!", "apis": [["Dribbble", "Check username on dribble"], ["Behence", "Check username on Behence"], ["Vimeo", "Check username on vimeo"], ["Check all domains at once", "Check all domains with one call\nfalse if registered, true if not"], [".io", "Check if .io domain is registered"], [".us", "Check if .us domain is registered"], [".co", "Check if .co domain is registered"], [".org", "Check if .org domain is registered"], [".net", "Check if .net domain is registered"], [".com", "Check a .com domain"], ["Snapchat", "Check username on Snapchat"], ["shopify", "Check username on Shopify"], ["Username for", "Username for given platform\n\n**Please do not insert the . when check on devote and askfm**\n\nPlatforms:\n- instagram\n- Facebook\n- TikTok\n- pinterest\n- GitHub\n- reddit\n- steam\n- twitch\n- medium\n- Minecraft\n- Patron\n- Etsy\n- SoundCloud\n- Shopify\n- Linktree\n- 9gag\n- askfm\n- docker hub\n- Fiverr\n- Tumblr\n- wikipedia\n- devto\n- snapchat\n- vimeo\n- behence\n- dribbble"], ["Dev.to", "Check username on Dev.to"], ["Wikipedia", "Check username on Wikipedia"], ["Tumblr", "Check username on Tumblr"], ["Dockerhub", "Check username on Dockerhub"], ["Askfm", "Check username on Ask.fm"], ["9gag", "Check username on 9gag"], ["Linktree", "Check username on Linktree"], ["Soundcloud", "Check username on Soundcloud"], ["Etsy", "Check username on Etsy"], ["Patreon", "Check username on Patreon"], ["Minecraft", "Check username on Minecraft"], ["Medium", "Check username on Medium"], ["Twitch", "Check username on Twitch"], ["Steam", "Check username on Steam"], ["Reddit", "Check username on Reddit"], ["GitHub", "Check username on GitHub"], ["Pinterest", "Check username on Pinterest"], ["Facebook", "Check username on Facebook"], ["Instagram", "Check username on Instagram"], ["Check usernames on all Platforms", "Check if a username is available on all platforms at once!\ntrue if available, false if not"]]}, "Memes": {"tool_desc": "Memes api with several genre", "apis": [["List of Memes", "Get List of Memes from genre\n\n**Default Type:**  top\n**Available Type**\n- Top\n- Hot\n- New\n\n**Default Genre: ** memes\n**Available Genres**\n- \"anime\"\n- \"dnd\"\n- \"history\"\n- \"historyani\"\n- \"memes\"\n- \"politics\"\n- \"science\"\n- \"lotr\"\n- \"ww2\""], ["Random Meme", "Get Random Meme from genre\n\n**Default Type:**  top\n**Available Type**\n- Top\n- Hot\n- New\n\n**Default Genre: ** memes\n**Available Genres**\n- \"anime\"\n- \"dnd\"\n- \"history\"\n- \"historyani\"\n- \"memes\"\n- \"politics\"\n- \"science\"\n- \"lotr\"\n- \"ww2\""]]}, "Twitter_v4": {"tool_desc": "Twitter public and private data API for search, Tweets, users, followers, images, media and more.", "apis": [["v1.1 /  Translate Tweet", "v1.1 / Translate Tweet"]]}, "TikTok Private": {"tool_desc": "Fastest,  Highly Maintained TikTok API,  Build For Massive TikTok Scraping.", "apis": [["Search Musics", "Search Musics By Keyword"], ["Top Search", "Top Search: videos, hashtags, sounds, users"], ["Search Users", "Search Users By Keyword"], ["Search Videos", "Search Videos By Keyword"], ["Music Posts", "Get Posts By Music"], ["Challenge Posts", "Get Posts By Challenge Name"], ["List Comments", "List Comments By Post"], ["Trending Creators", "Get Trending By Creators"], ["User Posts", "Get Posts By User"], ["Playlist Posts", "Get posts by User and Playlist"], ["Username to User Id", "Get User By Username"]]}, "Instagram Looter": {"tool_desc": "Get information from Instagram accurately and quickly!", "apis": [["Get Media Info by url", "Get **Instagram** media info by **/p/** - **/tv/** - **/reel/**"], ["Get Media download link", "Get **Instagram** media download link by **/p/** - **/tv/** - **/reel/**"], ["Get Username by user_id", "Get **Instagram** username by **user_id**"], ["Get User ID by username", "Get **Instagram** user_id by **username**"], ["Get User Related Profiles by user_id", "Get **Instagram** user related profiles by **user_id**"], ["Global Search by Query", "Global search in **Instagram** by **query**"], ["Get User Tagged Media by user_id", "Get **Instagram** user tagged media by **user_id**"], ["Get Hashtag Media by Query", "Get **Instagram** hashtag media by **query**"], ["Get User Media by user_id", "Get **Instagram** user media by **user_id**"], ["Get User Info by user_id", "Get **Instagram** user info by **user_id**"], ["Get User Info by username", "Get **Instagram** user info by **username**"]]}, "Tiktok Video Feature Summary": {"tool_desc": "Contains TikTok HD videos without watermark and user, post, music, search, feeds, comments, followers, and trends.", "apis": [["comment list by video", "get comment list by video"], ["Register Device Information", "Random device information,\nActivated"], ["get music info", "get music info base on id"], ["get related video  with keywords", "get related video  list with list"], ["region list", "the region list use in video search params"], ["get users detail info", "get users detail info\nunique_id or user_id is not empty"], ["get user favorite videos", "get user favorite videos list"], ["get users video", "get user post videos\nget user feed\nunique_id or user_id is not empty"], ["search users data", "get users data list by keywords"], ["get tiktok video full info", "Support Tiktok & Douyin.\nReturns relevant information about querying video addresses, \nincluding high-definition watermark free video addresses, \nauthor information, \nbackground music information, \nviews, \nlikes, \ncomments, \netc- List Item"]]}}, "Health_and_Fitness": {"Ind Nutrient API": {"tool_desc": "This API provides users with nutritional information for Indian foods.", "apis": [["View Food Item by Id", "This request enables clients to retrieve detailed information about a specific food item based on its unique identifier (ID)\n\nAPI request sent to [https://indnutrientsapi.tech/food/646e44df0e77ec175b88cf32](https://indnutrientsapi.tech/food/646e44df0e77ec175b88cf32)"], ["View All Food Items", "The request allows clients to retrieve a comprehensive list of all available food items.\n\nAPI request sent to [https://indnutrientsapi.tech/food](https://indnutrientsapi.tech/food)"], ["View Food Items by Core", "This request allows clients to retrieve detailed information about a food item by filtering by query param `core`.\n\nClients can include multiple cores in a single request. For example, by sending a request to https://indnutrientsapi.tech/food?core=chicken,dal,paneer, the API will return food items associated with the specified cores: chicken, dal, and paneer.\n\nAPI request sent to [https://indnutrientsapi.tech/food?core=chicken](https://indnutrientsapi.tech/food?core=chicken)"], ["View All Types With Their Food Items", "This request allows clients to retrieve a list of all available types along with the food items associated with each type.\n\nAPI request sent to [https://indnutrientsapi.tech/food/type](https://indnutrientsapi.tech/food/type)"], ["View All Cores With Their Food Items", "This request allows clients to retrieve a list of all available cores along with the food items associated with each core.\n\nAPI request sent to [https://indnutrientsapi.tech/food/core](https://indnutrientsapi.tech/food/core)"], ["View Food Items by Type", "This request allows clients to retrieve detailed information about a food item by filtering by query param `type`.\n\nAPI request sent to [https://indnutrientsapi.tech/food?type=non-vegetarian](https://indnutrientsapi.tech/food?type=non-vegetarian)"], ["View Food Item By Name", "This request allows clients to retrieve detailed information about a food item by specifying by its `name`.\n\nWhen making the request, ensure the food item's name is written with hyphens (\"-\") separating the words. For instance, \"Paneer Butter Masala\" should be written as \"paneer-butter-masala\" in the request.\n\nAPI request sent to [https://indnutrientsapi.tech/food/name/paneer-butter-masala](https://indnutrientsapi.tech/food/name/paneer-butter-masala)"]]}, "Calories Burned by API-Ninjas": {"tool_desc": "Calories burned calculator for hundreds of different sports/activities.", "apis": [["/v1/caloriesburned", "API Ninjas Calories Burned API endpoint."]]}, "AirVisual": {"tool_desc": "Query for Air Pollution Data, Weather information, Health Recommendations, etc...", "apis": [["stations/v2/get-measurements", "Get measurements at specific station by its id"], ["cities/v2/get-measurements", "Get measurements in specific city by its id"], ["cities/v2/get-information", "Get information in specific city by its id"], ["places/v2/list-by-map", "List places in an area by providing a boundary box"], ["v2/auto-complete", "Find countries, cities, places by name"], ["stations/get-information (Deprecated)", "Get information at specific station by its id"], ["stations/get-measurements (Deprecated)", "Get measurements at specific station by its id"], ["cities/get-information (Deprecated)", "Get information in specific city by its id"], ["cities/get-measurements (Deprecated)", "Get measurements in specific city by its id"], ["stations/v2/get-information", "Get information at specific station by its id"], ["places/list-by-map (Deprecated)", "List places in an area by providing a boundary box"], ["auto-complete (Deprecated)", "Find countries, cities, places by name"]]}, "Exercises by API-Ninjas": {"tool_desc": "Get workout exercises for every muscle group.", "apis": [["/v1/exercises", "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters."]]}, "BMI_v2": {"tool_desc": "Our BMI API offers the ability to calculate BMI using both Imperial and Metric units.", "apis": [["Gives the weight catergory based on the BMI", "The API catergorizes the person based on the BMI. The catergories would be Underweight, Normal weight, Overweight, Obesity Class I, Obesity Class II and Obesity Class III. These definitions differ in Asians hence you may be able to enter the ethnicity of the person (Asian or not asian)"], ["Gives the BMI when you input height in feet and inches & input weight in kilograms", "The API generates the BMI in kg/m2. You need to enter the weight in kilograms and height in feet and inches"], ["Gives the BMI when you input values in Imperial units (Feet/Inches & Pounds)", "The API generates the BMI in kg/m2 when the height is entered in feet and inches and weight is entered in pounds."], ["Gives the BMI when you Input values in Metric units", "Gives the BMI in kg/m2 when we input height in centimeters and weight in kilograms"]]}, "Appointment System API": {"tool_desc": "Appointment System Api with user operations and admin operations.", "apis": [["Get Appointments", "EndPoints returns all appointments in the date. \n\nParameter Description :\ndate : the date the appointments is requested\nclinicName : Name of the clinic\n\nReturn Value : \nIt returns json object. Json contains all the appointments in requested date.\n\nJson Format :\n\nhLabel:\"07:00\"\nid:5\naDay:\"2022-09-09T00:00:00\"\naHour:58\naName:\"Efe Kemal TASAR\"\naTel:\"+905376853054\"\naType:\"Appoint\""], ["Appointment Time List", "EndPoint gets Appointment Time List by Day. EndPoint gets date parameter and returns List of Appointment Times of that date. In the list there is available field, This field indicates whether there is an appointment at the specified time.\nParameter Descriptions : \ndate --> The day that hours will be return\nclinicName --> Name of the clinic\n\nReturn Value: \nThe EndPoint returns json object in format below.\n[\n{\"id\":1\n\"hLabel\":\"07:00\"\n\"available\":\"true\"\n\"hour\":7\n\"minute\":0\n\"interval\":15\n},\n......\n]\n\nId --> is the key value of the record.\nhLabel --> is the string format of the time\navailable --> if is true that means the time is suitable for new record. If it is false that means there is another appointment in this time interval. \nhour --> Hour of the appointment time.\nminute --> Minute of the appointment time.\ninterval  --> this field points out to the interval whether 15 minutes or 30 minutes"], ["Login", "This Endpoint is use for login to the system and getting the Api Key for the clinic. It needs username and password as query parameters. \nParameter Descriptions:\nusername --> parameter for username in the system. It is the same with username while creating the account.\npassword --> password for the username. It is same with the password while creating the acoount.\n\nReturn Value\nThis Endpoint returns string value.\nIf you get a sting with 6+ long this means that you have successfully passed username and password check and you are getting the Accesskey fort he system.\nIf you get \u201cW1\u201d it means a warning that your username doesn\u2019t exists\nIf you get \u201cW2\u201d it means a warning that your password is not correct.\nIt you get \u201cE1\u201d it means a programmatic internal error. If you get E1 in the next calls you can get help from us."]]}, "Horostory": {"tool_desc": "", "apis": [["planetaryoverview", "get the Planetary Overview of the day"], ["hoscoscope", "retrieve the horoscope for a specific sign and date"]]}, "BMI Calculator_v2": {"tool_desc": "Calculate and classify BMIs using imperial and metric units.", "apis": [["BMI", "Calculate BMI using weight and height."]]}, "Body Mass Index (BMI) Calculator": {"tool_desc": "Use this API to calculate the Body Mass Index of an individual based on their height and weight.", "apis": [["Metric [Kilograms]", "This endpoint will calculate the BMI of an individual using the imperial measurement system."], ["Imperial [Pounds]", "This endpoint will calculate the BMI of an individual using the imperial measurement system."], ["Weight Category", "Retrieve the weight category of an individual based on their BMI"]]}, "Health Calculator API": {"tool_desc": "Welcome to the Health Calculator API.", "apis": [["Macronutrient Distribution", "This endpoint calculates the optimal distribution of macronutrients (carbohydrates, proteins, and fats) based on factors such as activity level, body composition goals, and dietary preferences."], ["Target Heart Rate", "This endpoint calculates the target heart rate range for cardiovascular exercise based on the user's age and fitness level. It uses the Karvonen method to determine the target heart rate zone."], ["Daily Water Intake", "The Daily Water Intake Recommendation endpoint calculates the daily recommended water intake based on factors such as weight, activity level, and climate. It provides flexibility by allowing you to specify the unit of measurement for the water intake, either in liters or ounces."], ["Daily Caloric Needs", "This endpoint provides a simple and efficient way to calculate daily caloric needs based on various factors such as age, weight, height, activity level, and goal. It offers different formulas or approaches for caloric needs estimation, including the popular Harris-Benedict equation and Mifflin-St. Jeor equation."], ["Ideal Body Weight", "This endpoint allows you to calculate the ideal weight range based on factors like height, body frame size, and gender. The endpoint provides different formulas and approaches for ideal weight estimation, such as the Hamwi method and the Devine formula."], ["Basal Metabolic Rate (BMR)", "This endpoint allows you to calculate the Basal Metabolic Rate (BMR) based on age, weight, height, and gender parameters. The BMR represents the number of calories needed to maintain basic bodily functions at rest."], ["Body Mass Index", "This endpoint calculates the BMI based on the provided height and weight parameters."], ["BMI - Imperial", "This endpoint calculates the BMI based on the provided height and weight parameters in imperial units."], ["BodyFat", "This endpoint calculates the body fat percentage based on the provided gender, age, height, and weight parameters."], ["BodyFat - Imperial", "This endpoint calculates the body fat percentage based on the provided gender, age, height, and weight parameters in imperial units."]]}, "selector-tipo-consultas": {"tool_desc": "decide el tipo de consulta", "apis": [["Generar Fhir ID QR", "Recibe el id de fhir como string y lo convierte en codigo qr"], ["triage virtual", "define si un paciente debe ser atendido via consulta virtual o presencial"]]}, "BMR and TMR": {"tool_desc": "API calculates BMR (Basal Metabolic Rate) and TMR (Total Metabolic Rate)", "apis": [["BMR index", "Endpoint allows you to calculate the Basal Metabolic Rate"], ["TMR index", "Endpoint allows you to calculate the Total Metabolic Rate"], ["Activity Values", "Returns a list of possible activity values that are needed to compute TMR"], ["Sexes Values", "Returns a list of possible sexes values that are needed to compute BMR and TMR"]]}, "(CO2)REMEDiAPI": {"tool_desc": "The API for the Let's PIRDDIIQ and Move it Project", "apis": [["CO2RE Discord", "This webhook is external with Discord App"]]}, "Suggestic": {"tool_desc": "Suggestic Food & Meal Plan API", "apis": [["Create User", "Each Suggestic partner/client has the ability to create their own set of users."], ["Remove a Meal Plan", "Use the **removeMealPlan** mutation to remove the current and following days in the profile's meal plan. Therefore, it is not possible to delete meal plans which dates have already passed."]]}, "Pregnancy Calculator API": {"tool_desc": "Welcome to the Pregnancy Calculator API.", "apis": [["Pregnancy Weight Recommendation - GET", "This endpoint that accepts a GET request to calculate the recommended weight during pregnancy based on the user's pre-pregnancy weight, height, and current gestational age."], ["Fertility Window - GET", "This endpoint accepts a GET request to calculate the fertility window."], ["Conception Date.", "This endpoint calculates the current week of pregnancy based on the conception date."], ["Last Menstrual Period (LMP).", "This endpoint calculates the current week of pregnancy based on the Last Menstrual Period (LMP)."], ["Conception Date", "This endpoint calculates the estimated due date based on the user's conception date."], ["Last Menstrual Period (LMP)", "This endpoint calculates the estimated due date based on the user's last menstrual period (LMP)"]]}, "ExerciseDB": {"tool_desc": "The ExerciseDB gives you access to over 1300 exercises with individual exercise data and animated demonstrations.", "apis": [["List of bodyparts", "Fetch a list of available body parts"], ["List of target muscles", "Fetch a list of available target muscles"], ["List of equipment", "Fetch a list of available equipment"], ["List by target muscle", "Fetch exercises by target primary muscle"], ["Exercise by ID", "Fetch an exercise by its ID"], ["List by name", "Fetch exercise by name"], ["List by body part", "Fetch exercises by body part"], ["List of all exercises", "Fetch all exercises (non-paginated)"], ["List by equipment", "Fetch exercises by type of equipment"]]}, "MuscleWiki": {"tool_desc": "The API provides information about exercises from MuscleWiki, including the name, category, target muscles,instructions for performing the exercise and a short video demonstration.", "apis": [["GET Exercise by ID", "Get an exercise by it's ID. Valid IDs [0,953]"], ["GET Attributes", "Get Attributes you can use to filter exercises"]]}, "Workout Planner": {"tool_desc": "Get workout plans based on time duration, target muscle, fitness level, fitness goals, and equipment available.", "apis": [["Get Customized Plan", "The /customized endpoint provides a way for users to generate personalized workout plans based on their preferences. It takes various parameters into account to create a workout plan tailored to the user's needs. \nHere's an explanation of the parameters and how to use them:\n1. time: This parameter represents the duration of the workout plan in minutes. By default, if not provided, it is set to 30 minutes. You can customize this parameter to specify the desired duration of your workout.\n2. equipment : This parameter allows you to specify the equipment available for your workout. If you don't have any equipment, you can set it to \"none\". However, if you have specific equipment available, you can provide the details in this parameter.\n3. muscle: This parameter represents the target muscle group for your workout plan. You can specify the muscle group you want to focus on, such as \"legs\", \"chest\", \"back\", etc. If you don't have a specific target muscle group, you can set it to \"none\".\n4. fitness_level: This parameter enables you to define your fitness level. You can choose from options like \"beginner\", \"intermediate\", or \"advanced\" to indicate your current fitness level. The workout plan generated will be adjusted based on this level. \n5. fitness_goals: This parameter allows you to specify your fitness goals, such as \"weight_loss\", \"muscle_gain\", \"strength_training\", \"cardiovascular_endurance\", \"flexibility\", or \"general_fitness\". By indicating your goals, the generated workout plan will align with your specific objectives."], ["Get Workout Plan", "Get Workout Plans\n\nThis api request can be used to get Workout plan based on:\n\n- Time duration\n- Target Muscle\n- Location\n- Equipment\n\nHence api call takes 4 query parameters:\n\n- time\n- muscle\n- location\n- equipment"]]}, "US Hospitals": {"tool_desc": "A list of major US hospitals including hospital names, addresses, type and ownership.", "apis": [["getHospitalsById", "###Find US Hospitals by CMS Certification Number\nSimply add your search string as a parameter to the \"ccn\" query.\n\n**Note**: The API only returns the first 30 results."], ["getHospitalsByName", "###Find US Hospitals by name.\nSimply add your search string to the \"name\" parameter in the url.\nTip:  The API also works if your search for *name='pr'* instead of *name='presbyterian'.* \n\n**Note**: The API only returns the first 30 results."]]}, "Scoring Tables API": {"tool_desc": "This API uses the World Athletics scoring tables and pulls the marks required for certain point values.", "apis": [["/marks/women/{points}", "This retrieves the women's marks for the point value given as a parameter (0-1400)."], ["/marks/women/", "This retrieves all women's marks from the World Athletics Scoring Tables."], ["/marks/men/", "This retrieves all men's marks from the World Athletics Scoring Tables."], ["/marks/men/{points}", "This retrieves the men's marks for the point value given as a parameter (0-1400)."]]}}, "Text_Analysis": {"Driving License OCR": {"tool_desc": "IDfy\u2019s Driving License OCR API enables your customers to pre-fill their onboarding forms instantly, by letting them upload or scan a Driving License \u2013 IDfy will digitize the document for you!", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Google Translate": {"tool_desc": "Dynamically translate between languages.", "apis": [["languages", "Returns a list of supported languages for translation."]]}, "GCP Translate": {"tool_desc": "Dynamically translate between languages.", "apis": [["Languages", "This endpoint returns a list of supported languages for translation."]]}, "Voter Card OCR": {"tool_desc": "Extract data from Voter ID Card instantly and accurately!", "apis": [["GET API", "Used to fetch api result using the request id received in responses."]]}, "Profanity Filter by API-Ninjas": {"tool_desc": "Detect and censor bad words in text.", "apis": [["/v1/profanityfilter", "API Ninjas Profanity Filter API endpoint. Returns the censored version (bad words replaced with asterisks) of any given text and whether the text contains profanity."]]}, "Quick Language Detector": {"tool_desc": "Feed this API a few sentences and have it determine what language it is with a confidence score.", "apis": [["Detect Language", "Feed this API a few sentences and have it determine what language it is with a confidence score"]]}, "Philippines Social Security OCR": {"tool_desc": "Philippines Social Security OCR API allows you to onboard your customers with speed and precision.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Multi-lingual Sentiment Analysis": {"tool_desc": "Multi-lingual Sentimel Analysis uses computational linguistics and text mining to automatically determine the sentiment or affective nature of the text being analyzed in multiple language support.", "apis": [["Sentiment Analysis", "Multi-lingual Sentiment Analysis parameter {lang} is optional, we can detect the language but you can define it for better result and accurate"]]}, "SpeakEasy": {"tool_desc": "The SpeakEasy API allows you to synthesize speech from text using Google's Text-to-Speech API.", "apis": [["Get Synthesize", "Synthesizes the provided text and returns the corresponding audio URL."]]}, "Profanity Filter_v2": {"tool_desc": "This API provides a simple way to filter profanity from text.", "apis": [["/profanity-filter/health", "Return the health status of the API. Returns current UTC time."]]}, "Philippines Voter Card OCR": {"tool_desc": "IDfy\u2019s Philippines Voter Card OCR API allows you to onboard your customers with speed and precision.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Stacks Patent Similarity": {"tool_desc": "This is a useful API for finding claims similar to the user's input text.", "apis": [["get_infringement_v1_infringement_research_predict_get", "Create a request item with the following information:\n\n- **text**: could be the description of a company asset or a product explanation. It should be minimum length of `20` words for better performance. Note that GET queries are limited to `2048` characters (_required_).\n- **patent_number**: should start with a country code and end with the _Kind_ _Code_. You can enter as many as `5` patent numbers, each separated with a comma (_required_).\n- **model_name**: is the name of the model empowering Stacks Patent Similarity engine. Defaults to `stk_nova`."]]}, "Walnut Entity": {"tool_desc": "Extract structure from text data (who, what, where..) automatically using AI.", "apis": [["wrt_transformer", "Get the text input and returns the entities identified."]]}, "IAB Taxonomy Text Classification": {"tool_desc": "Most accurate IAB v2 Taxonomy Text Classification, Economical Pricing, Best in class Infrastructure", "apis": [["Classify", "takes one input text and returns the confidence score and IAB classification/categorization"]]}, "Sentino": {"tool_desc": "Sentino API is used to understand personality traits (Big5, NEO etc.) using NLP.", "apis": [["Questionnaire Sentino", "They are sampled from original items so the first 30 are best for Big5, first 60 are best for BFAS and 90 for NEO.  The more items scored the better."]]}, "Personality Quest": {"tool_desc": "The \"Personality Quest\" API allows developers to integrate personality assessment and analysis functionalities into their applications.", "apis": [["Enneagram Personality Test Questionnaire", "This route will give you all questions for Enneagram Personality Test."], ["Big Five Personality Test", "This route is for getting Big Five Personality Test Questionnaire"], ["IQ Personality Test Questionnaire", "This route will give you all questions for IQ Personality Test."], ["Emotional Intelligence Personality Test Questionnaire", "This route will give you all questions for Emotional Intelligence  Personality Test."], ["Career Aptitude Personality Test Questionnaire", "This route will give you all questions for Career Aptitude Personality Test."], ["PQ Personality Test Questionnaire", "This route will give you all questions for Positive Quotient    Personality Test."], ["DISC Personality Test Questionnaire", "This route will give you all questions for DISC Personality Test."], ["sixteen type personality questionnaire", "This route is for getting Sixteen Type Personality Test Questionnaire."]]}, "PAN Card OCR": {"tool_desc": "Extracts data from PAN Cards instantly and accurately.", "apis": [["Get Task", "To get the response of the API request when used in asynchronous mode, you can use either of the following methods:\n\nPre-configuring a web-hook URL with IDfy Whenever the submitted task is completed, the response for the task would be sent back to your application through a POST HTTP request.\n\nMaking a GET call to IDfy GET call can be made to IDfy to fetch the API response for the completed tasks. You can create a GET call using the request_id."]]}, "Word Scramble": {"tool_desc": "Scramble a given input word\n/scramble/{word}", "apis": [["scramble/{word}", "Call scramble with {word} parameter"]]}, "Synonyms Words": {"tool_desc": "In this api you can display synonyms for hundreds of miles of words in English, Spanish, French and Portuguese languages.", "apis": [["Get", "We use the Get method in our api, which returns a string with the synonyms separated by commas, which can later be treated in the programming language you use.\n\nWord - here you put the word you want to know the synonym of.\nLanguage - EN, ES, FR and PT representing English, Spanish, French and Portuguese, just put one of the representations .\n\nIf the word has no synonym, the return is the word itself."]]}, "Cyber Guardian": {"tool_desc": "A highly configurable and precise solution for augmenting your moderation needs, scalable and adaptable for various platforms.", "apis": [["setup", "Generates a link that grants access to the configuration dashboard for the Cyber Guardian and redirects you to it, already logged in through Rapid."]]}, "Spellout": {"tool_desc": "This API allows converting numbers to spelled-out format in any language, e.g.: 1234 -> \u201cone thousand two hundred thirty-four\u201d.", "apis": [["Languages", "List ISO 639 languages"], ["RuleSets", "List of availible rule sets for given language"], ["SpellOut", "Spell out number in given language using provided rule set"]]}, "Auto Profanity Filter": {"tool_desc": "Feed this API a few sentences and have it filter out any profanity and bad words.", "apis": [["Remove Profanity", "Removes Profanity from Text"]]}, "What's Language": {"tool_desc": "Detect the language of a given text", "apis": [["LanguageDetection", "Detect the language of a given text and return the detected language code"]]}, "Mobile phone validation": {"tool_desc": "Extract and validate mobile/cell/phone numbers from text, get extra info and various number formats.", "apis": [["extract_fast", "Find and format/validate Phone/Cell numbers in given text.\n    \nCountry used to identify number format and highly recommended to set value in case you know it (as example your shop works only in US and clients have US cellnumbers).\n    \nUse 'country_auto' param in /extract endpoint case you can't provide Country and service will try to guess the country :)"], ["extract", "Find and format/validate Phone/Cell numbers in given text.\n    \nCountry used to identify number format and highly recommended to set value in case you know it (as example your shop works only in US and clients have US cellnumbers).\n    \nUse 'country_auto' param in case you can't provide Country and service will try to guess the country :). Country recognition not very fast. Read docs to explain possible values."]]}, "Profanity Filter": {"tool_desc": "Filter inputted text content for profanity, offensive and obscenity word base on an internal profanity list.", "apis": [["Read Text", "Allows you to detect and filter out profanity / offensive form a given text. It is only available for English words. You can also censor out words in text content."]]}, "National ID Vietnam OCR": {"tool_desc": "Vietnam NID OCR API allows you to onboard your customers with speed and precision.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Philippines Driving License OCR": {"tool_desc": "IDfy\u2019s Philippines Driving License OCR API allows you to onboard your customers with speed and precision.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Walnut Word Completion": {"tool_desc": "Complete any masked word in a sentence using AI.", "apis": [["wrt_transformer", "Returns the hidden word in the sentence."]]}, "Text Language by API-Ninjas": {"tool_desc": "Detect the language from any input text.", "apis": [["/v1/textlanguage", "API Ninjas Text Language API endpoint"]]}, "Philippines Passport OCR": {"tool_desc": "IDfy\u2019s Passport OCR API allows you to onboard your customers with speed and precision.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "Philippines TIN OCR": {"tool_desc": "Philippines TIN OCR API allows you to onboard your customers with speed and precision.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "AI Tool - GPT Token Splitter": {"tool_desc": "This REST API service provides a way to programmatically split GPT-3 text-prompts into user-defined token-sized slices.", "apis": [["Using Path Parameters", "limited input text size, limited delimiter quantity."]]}, "Gender From Name": {"tool_desc": "Find the gender by just using a name.", "apis": [["getGender", "Finds the gender from over 100,000 (first) names.  Supports name variants as well."]]}, "gruite": {"tool_desc": "Get meanings and synonyms for words in vernacular language", "apis": [["Synonym", "Synonyms of the word"], ["Meanings", "Meaning of the word"]]}, "Google's BERT Sentiment Analysis": {"tool_desc": "The BERT-Based Sentiment Analysis API is a cutting-edge tool that leverages Google's BERT (Bidirectional Encoder Representations from Transformers) model to perform accurate sentiment analysis on text data.", "apis": [["Sentiment Analysis", "Multi-lingual Sentiment Analysis parameter {lang} is optional, we can detect the language but you can define it for better result and accurate"]]}, "Sentiment Analysis_v12": {"tool_desc": "Luminous Engineering Sentiment Analysis", "apis": [["Text Analysis", "Analyzes text using  VADER (Valence Aware Dictionary and sEntiment Reasoner)\n\nProvide  a string and the API will output combined, positive, neutral, and negative scores based on the output specified."]]}, "Offensive User Comment Detection": {"tool_desc": "This API uses natural language processing and machine learning to detect and flag inappropriate or offensive comments in multiple languages, helping to create a safer online environment and assist moderators in taking appropriate action.", "apis": [["Detect Offensive Message", "This endpoint will detect hate speech, offensive language in a message"]]}, "Mad-Libs-Diceware": {"tool_desc": "Diceware generated passwords that you can easily remember", "apis": [["/madlibs-wordlist", "**Get the wordlist used by madlibs diceware in JSON format**"], ["/eff-wordlist", "**Get the wordlist used by plain diceware in JSON format**"], ["/madlibs-diceware", "**Generate password using madlibs diceware**\n\nUse query string parameter *nphrase* to change number of phrases in the password\n\nThe generated phrase/s have the following structure: \n\n```<adverb> <adjective> <noun>```\n\nAccepted values for *nphrases* parameter: 1 and 2"], ["/eff-diceware", "**Generate password using plain diceware**\n\nUse query string parameter *nwords* to change number of words in the password\n\nAccepted values for *nwords* parameter: 4 to 7"]]}, "Google Translator": {"tool_desc": "Google Translate is a multilingual neural machine translation service developed by Google to translate text", "apis": [["Languages", "Returns a list of supported languages for translation."]]}, "Random Word by API-Ninjas": {"tool_desc": "Random word generator full of unique, interesting words.", "apis": [["/v1/randomword", "API Ninjas Random Word API endpoint. Returns a random word."]]}, "Sentiment Analysis Service": {"tool_desc": "Enter a block of text to detect the sentiment and details around it (positive or negative).", "apis": [["Analyze Text", "Determine the sentiment of a given body of text"]]}, " Paraphrasing API": {"tool_desc": "The Paraphrasing API is a tool that enables users to generate unique content by rephrasing existing text while preserving its original meaning.", "apis": [["Retrieve Response", "With the JOB ID generated on the \"Paraphrase\" endpoint, you will be able to get the response from that rewrite."]]}, "Walnut Topic": {"tool_desc": "AI powered topic extraction from texts.", "apis": [["wrt_transformer", "Gets the text and set of possible topics separated by a comma.\n\nReturns the ranking of topics from most relevant to least relevant."]]}, "Neuronet NLP": {"tool_desc": "Tools for Azerbaijan language for tokenization, sentence splitting, part-of-speech tagging and named entity recognition.", "apis": [["main", "Enter a single sentence."]]}, "TextAPI": {"tool_desc": "A text extraction, manipulation, and analysis api.", "apis": [["Display Entities", "Renders the extracted entity types on submitted text or spans defined manually."], ["Extract Entities", "Extracts named entities from text."], ["Sentiment", "Get the sentiment of submitted text using VADER (Valence Aware Dictionary and sEntiment Reasoner) is a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiments expressed in social media."], ["Extract Text [From Webpage]", "Extract text from the webpage linked with the url query parameter."]]}, "Sentiment by API-Ninjas": {"tool_desc": "State-of-the-art text sentiment analysis.", "apis": [["/v1/sentiment", "Returns sentiment analysis score and overall sentiment for a given block of text."]]}, "Best Paraphrasing API": {"tool_desc": "Best Paraphrasing API allows developers to rephrase text with ease.", "apis": [["Retrieve Response", "With the JOB ID generated on the \"Rewriter\" endpoint, you will be able to get the response from that rewrite."]]}, "Linguin AI": {"tool_desc": "Language And Profanity Detection as a Service", "apis": [["Languages", "Get the list of supported languages"]]}, "Simple Poet": {"tool_desc": "Find random rhymes for a single word.", "apis": [["get rhyme", "Finds a rhyme for a given word in the database. If multiple words are a rhyme, one is picked at random."]]}}, "Visual_Recognition": {"General Classification": {"tool_desc": "This Image Labelling API is a ready-to-use solution for image classification.", "apis": [["Get list of algorithms", "Service provides alternative algorithms that may be used for image classification.\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case."], ["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."]]}, "OCR - Separate Text From Images": {"tool_desc": "Our OCR - Separate Text From Images API allows you to quickly and accurately extract text from images.", "apis": [["OCR", "This is the main endpoint for using ocr API.\n\nThe \"url\" parameter requires an image or PDF file url. The PDF file must not be long.\n\nThe \"language\" parameter requires some specific language codes:\n\n- Arabic - ara\n- Bulgarian- bul\n- ChineseSimplified- chs\n- ChineseTraditional- cht\n- Croatian- hrv\n- Czech- cze\n- Danish- dan\n- Dutch- dut\n- English- eng\n- Finnish- fin\n- French- fre\n- German- ger\n- Greek- gre\n- Hungarian- hun\n- Italian- ita\n- Japanese- jpn\n- Korean- kor\n- Polish- pol\n- Portuguese- por\n- Russian- rus\n- Slovenian- slv\n- Spanish- spa\n- Swedish- swe\n- Turkish- tur"]]}, "Face Recognition": {"tool_desc": "All-in-one Face recognition & analysis with dedicated database.", "apis": [["View DB", "Read / view all face uids in your DB as \"faces_list\""]]}, "OCR": {"tool_desc": "This API processes images and performs Optical Character Recognition.", "apis": [["Get list of algorithms", "Service provides alternative algorithms that may be used for OCR.\n\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case."], ["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."]]}, "VIN Recognition/Decoder": {"tool_desc": "This API extract vin from a ID cards, labels, receipts, invoices, documents, barcodes, etc and returns the information such as the manufacturer, model, year, country of origin and much more..", "apis": [["Get Info From VIN", "This endpoint returns the information of a vin such as country of origin, model, year, model, car seats, etc."]]}, "Fast Recaptcha V2 Solver": {"tool_desc": "Solves Recaptcha V2 using service", "apis": [["Get Response", "Get response based on the input received from create request\nOnly numeric values are accepted."]]}, "NSFW Image Classification_v2": {"tool_desc": "Use our Content Moderation API to flag possible inappropriate/ nude / adult content in your images.", "apis": [["NSFW Image Classification", "Use our Content Moderation API to flag possible inappropriate content in your images."]]}, "Parking places": {"tool_desc": "Analize image to get info about parking places using machine learning!", "apis": [["Get availiable models list", "Method returns availiable models, which can be used for image processing.\nEvery model name can be passed to 'model' parameter."]]}, "Mantis Object Detection": {"tool_desc": "Reliable and Accurate Face and Object Detection via ResNet-50", "apis": [["Detection Objects as modified Image by Image URL", "Image URL and it will return a updated image of detected objects in image via bounding boxes"], ["Detection Objects as Json by Image URL", "Any valid image URL and return JSON"]]}, "Brand Recognition": {"tool_desc": "This ready-to-use API provides high-accuracy brand detection and logo recognition.", "apis": [["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."]]}, "Web Detection": {"tool_desc": "Extract list of entities, full matches urls, partial matches urls, visual matches urls, pages, locale and dimensions from image using (google vision web detection)", "apis": [["GET Web Detection", "the **important** thing is that you should use **image** as a query name\nExample (url?**image**=\u201cimage_url\u201d)"]]}, "Wine Recognition": {"tool_desc": "This ready-to-use API provides recognition of labels on wine bottles covering more than 400 000 different labels.", "apis": [["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."]]}, "Auther Check": {"tool_desc": "Plug and play the facial authentication into: point of sale, mobile app, self-checkouts, kiosk, ATM.", "apis": [["Get person by id", "To check if the person_id already exists in the system, just specify the path with person_id. If the person_id exists in response you will get the same person_id and information when a person was created and updated."]]}, "Label Detection": {"tool_desc": "Extract labels from image using (google vision label detection)", "apis": [["GET Label Detection", "the **important** thing is that you should use **image** as a query name\nExample (url?**image**=\u201cimage_url\u201d)"]]}, "Face Detection_v3": {"tool_desc": "This ready-to-use API provides a pack of options in human face detection: face and landmarks detection, face re-identification of an already detected face.", "apis": [["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."]]}, "Microsoft Computer Vision": {"tool_desc": "An AI service from Microsoft Azure that analyzes content in images", "apis": [["List Models", "This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer."]]}, "Liquor Recognition": {"tool_desc": "Recognize labels on liquor bottles quickly, with over 25,000 different labels to choose from.", "apis": [["Get Current Version", "Returns the current version of the service in format vX.Y.Z"]]}, "Masks detection": {"tool_desc": "High-accuracy solution for medical masks detection.", "apis": [["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."]]}, "General Detection": {"tool_desc": "This ready-to-use API offers high-accuracy detection of different types of objects, framing them with bounding boxes and predicting their class.", "apis": [["Get list of algorithms", "Service provides alternative algorithms that may be used for image detection.\n\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case."], ["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."]]}, "Fashion": {"tool_desc": "This Fashion API offers an image class-prediction algorithm for clothes and accessories.", "apis": [["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."]]}, "Background Remover": {"tool_desc": "PixCleaner offers a REST API that allows you to easily use and interact with our service programmatically.", "apis": [["getAccount", "Returns a description of your user account information.\nUseful to get the remaining credits on your account"], ["getImage", "Retuns the result of an image that was previously handled by autoremove route for the given image Id.\naccepts two parameters:\n  - imageId: The Id of the image to get.\n  - recompute: bollean, if set to true, asks the server to remove the backgorund again for the specified ID (costs credits)."]]}, "Fast Hcaptcha Solver": {"tool_desc": "Solves hcaptcha using service", "apis": [["Get Response", "Get response using the Id received from the create Hcaptcha Request"]]}, "Document Image Validation": {"tool_desc": "Ensure you have a high percentage of right-first-time document collection and a straight pass-through by validating in real-time that the documents your customers submit are the same you expect them to be.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "NSFW": {"tool_desc": "This API processes images and detects sexual content in them, marking the images as Safe For Work (SFW) or Not Safe For Work (NSFW).", "apis": [["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."]]}, "Image Text Recognition": {"tool_desc": "Recognizing text content from images", "apis": [["Supported Languages", "3 letters language codes"]]}, "Everypixel Image Recognition": {"tool_desc": "Use all the power of AI and machine learning to reduce your costs on image recognition and moderation in your apps\tand products.", "apis": [["/keywords", "By sending an image to this method you can get a list of suggested keywords. You may specify a number of returned words or a threshold of its minimum score. Just provide num_keywords or threshold parameter to this method."], ["/quality_ugc", "The main difference between Stock photo scoring and this model is in the training dataset. User-Generated Photo Scoring is a model trained on a 347 000 of user photos from Instagram. Estimation parameters for this model were prepared by a group of 10 professional photographers. Scoring methods are based on five classes: very bad (0-20), bad (20-40), normal (40-60), good (60-80) and excellent (80-100).  This model is designed to evaluate user photos taken both by a professional camera and by a camera of a smartphone. It doesn't estimate the plot and do not measure how cool or beautiful a person or an object on a photo may look. It cares only about technical parts like brightness, contrast, noise and so on. The service is not dedicated for scoring historical photos, illustrations or 3D visualizations."], ["/quality", "This method allows you to get the quality score for your photo. This service doesn't measure how cool or beautiful a person or an object on a photo may look. It cares only about technical parts like brightness, contrast, noise and so on. The service is not dedicated for scoring historical photos, illustrations or 3D visualizations."]]}}, "Medical": {"Drug Info and Price History": {"tool_desc": "An API to rapidly retrieve information about drug prices and history across a variety of sources", "apis": [["Drug Info", "Returns information about the given drug"], ["genericname", "Given a brand name, returns a generic name"], ["Price History", "Returns an array of price histories when given a valid drug ID."]]}, "The Cancer Imaging Archive": {"tool_desc": "NOTE: You need an API-Key to use this API.", "apis": [["getCollectionValues", "Set of all TCIA collection names"], ["getBodyPartValues", "Set of all body part names filtered by query keys"], ["getPatientStudy", "Returns a set of patient/study objects filtered by query keys"], ["getSeries", "Returns a set of series objects filtered by query keys"], ["getImage", "Set of images in a zip file. NOTE: The resulting zip files can become very large. We strongly advise not testing  this endpoint via Mashape. Instead, consider using curl with the -o option set to output.zip"], ["getPatient", "Returns a set of patient objects filtered by query keys"], ["getManufacturerValues", "Returns a set of all manufacturer names filtered by query keys"]]}, "Covid-19 by API-Ninjas": {"tool_desc": "Covid-19 case count and death data for every country in the world.", "apis": [["/v1/covid19", "API Ninjas Covid19 API endpoint. Either **date** or **country** must be set."]]}, "Konviere DrugsAPI": {"tool_desc": "Konviere Drugs API serves public FDA data about National Drug Code (NDC) and Adverse Event Reporting System (FAERS)", "apis": [["Get Drug Info by Drug Name & Route", "This web method will return all the dataset related to the drug information using the \u201cdrgNm\u201d the drug name or brand name or drug product and \u201cdrgRte\u201d drug route, these input parameters are required.  All web method requires the \"api_key\" as query parameter."], ["Get Adverse Event Info by Reaction, Sex, Age Group & Drug Name", "This web method will return a summary dataset related to the adverse events information using the \u201creaction\u201d the reaction, \u201csex\u201d the patient sex (0: unknown, 1: male, 2: female), \u201cageGrp\u201d age group (1: Neonate, 2: Infant,3: Child,4: Adolescent,5: Adult,6: Elderly) and \u201cdrgNm\u201d the drug name or brand \nname, these input parameters are required.  All web method requires the \"api_key\" as query parameter."], ["Get Adverse Event Info by Reaction, Sex & Age Group", "This web method will return a summary dataset related to the adverse events information using the \u201creaction\u201d the reaction, \u201csex\u201d the patient sex (0: unknown, 1: male, 2: female) and \u201cageGrp\u201d age group (1: Neonate, 2: Infant,3: Child,4: Adolescent,5: Adult,6: Elderly), these input parameters are required.  All web method requires the \"api_key\" as query parameter."], ["Get Adverse Event Info by Reaction", "This web method will return a summary dataset related to the adverse events information using the \u201creaction\u201d the reaction that was reported, this input parameter is required.  All web method requires the \"api_key\" as query parameter."], ["Get Adverse Event Info by Reaction & Sex", "This web method will return a summary dataset related to the adverse events information using the \u201creaction\u201d the reaction and \u201csex\u201d the patient sex (0: unknown, 1: male, 2: female), these input parameters are required.\nAll web method requires the \"api_key\" as query parameter."], ["Get Adverse Event Summary Info by Pharmacologic Class", "This web method will return a summary dataset related to the adverse events information using the \u201cpharmacologicClass\u201d the pharmacologic class, this input parameter is required.  All web method requires the \"api_key\" as query parameter."]]}, "Hapihub": {"tool_desc": "Healthcare infrastructure for compliance, interoperability, & building applications", "apis": [["Get Fixtures", "Fetch a list of fixtures"], ["Version metadata", "Retrieve the server's version metadata"]]}, "23andMe": {"tool_desc": "23andMe's OAuth 2.0 API lets developers build apps and tools on the human genome.", "apis": [["user", "Gets the user id, and a list of profiles (an account can have multiple genotyped people) with ids and whether or not they're genotyped. This endpoint is great for using an app anonymously because there is no personally identifying information."], ["traits", "Our analysis for each profile for these traits (starred reports). trait is a value in possible_traits, or null if the profile's not analyzed at those markers."], ["neanderthal", "Estimated genome-wide proportion of Neanderthal ancestry for the user's profile. Most users have between 0.01 and 0.04 Neanderthal ancestry -- read a full explanation of the science. proportion is -1 for un-genotyped (or as-of-yet uncomputed) profiles."], ["drug_responses", "Our analysis of how each profile responds to these drugs (starred reports). status is reduced, typical, or increased for a person, not_applicable if the drug is not applicable to them (e.g., the oral contraceptives report is for women only), or null if they're not analyzed at any of the markers."], ["ancestry", "Ancestral breakdown for the user's profile. Each population has an absolute proportion of the genome. A population with sub_populations has an unassigned proportion \u2014 the ancestry we couldn't classify in it.   threshold is optional, default 0.75 and range (0.5, 1.0) exclusive. 0.51 means a speculative estimate, 0.75 standard, and 0.90 conservative. A higher threshold would increase the unassigned proportions, a lower would speculate."], ["genotypes", "Returns the entire profile's genome as a packed string of base pairs \"AACTGA...\". This ~2MB request returns over a million SNP locations, so you must specify profile_id. If the profile has not yet unlocked certain SNPs, they'll be replaced with __. To know which SNP corresponds to which index in the string, see this key.  When our genotyping chip is upgraded, the packed string and corresponding key will grow, but the changes will be backwards-compatible additions."], ["genomes", "Returns the entire profile's genome as a packed string of base pairs \"AACTGA...\". This ~2MB request returns over a million SNP locations, so you must specify profile_id. If the profile has not yet unlocked certain SNPs, they'll be replaced with __. To know which SNP corresponds to which index in the string, see this key.  When our genotyping chip is upgraded, the packed string and corresponding key will grow, but the changes will be backwards-compatible additions."], ["risks", "Our analysis for each profile's lifetime risk of these diseases (starred reports). population_risk is the average risk for the population for which the analysis applies, and risk is the profile's risk."], ["relatives", "Relatives on 23andMe, for the user's profile. shared_segments is the total number of shared IBD segments; similarity is the actual proportion (1.00 being you, or an identical twin). maternal/paternal_side are True if this match is a relative from your mom or dad's side. range is defined if we couldn't pinpoint the relatedness of the match. match_id is a unique identifier.  Since you could have thousands of matches, limit defaults to 10, and offset to 0. count gives the total number of matches. Results are sorted by updated, descending. You can also get results that have been updated or added since a timestamp."], ["haplogroups", "For the user's profile, gets maternal and paternal haplogroups, as well as terminal SNPs. Maternal terminal SNPs include the rsid and rCRS reference position, while the paternal ones include the rsid and ISOGG SNP.  Note: if the profile belongs to a female, the paternal (y) haplogroup and terminal SNP information will be null."], ["carriers", "Our analysis of whether or not each profile is a carrier for these diseases (starred reports). The person has 0, 1, or 2 mutations, or null if they're not analyzed at any of the markers. Normally, with one mutation, the person is considered a \"carrier\" and can pass the mutation to children; with two, the person is likely to be affected by the disease."], ["names", "For the user and user's profile, gets first and last names. If your user wants to remain anonymous, you shouldn't request this scope. You can optionally filter by profile_id to get the names for just that profile."]]}, "EndlessMedicalAPI": {"tool_desc": "From patient's symptoms and results to diagnosis (COVID-19  included) - free to use in 2020.", "apis": [["Analyze", "Analyzes provided data set"]]}, "eGFR Calculator (Glomerular filtration rate calculator) ": {"tool_desc": "This API helps calculate eGFR (Estimated Glomerular Filtration Rate) for assessing renal function, utilizing the 2021 CKD-EPI formula.", "apis": [["eGFR Calculation for Creatinine value in \u03bcmol/L", "API documentation for eGFR2 (for Creatinine value in \u03bcmol/L)\n\n\n\n\nIntroduction\n\n\nThis API provides a way to calculate the Estimated Glomerular Filtration Rate (eGFR) for assessing renal function using the 2021 CKD-EPI formula. The eGFR is a measure of the kidney's ability to filter waste from the blood, and is an important indicator of renal health.\nEndpoint\n\nThe API endpoint for the eGFR calculation is:\n\n\nhttps://api.algomed.in/egfr2\n\n\nInput\n\nThe API requires the following input parameters to be passed in the request body as a JSON object:\n* creatinine (float): The patient's creatinine level, in \u03bcmol/L. \n* age (integer): The patient's age, in years.\n* Female (boolean): Is the patient a female, True or false.\n\n\nInput example:\n\nHere is an example for an input request \n\nhttps://api.algomed.in/egfr1?creat=100.0&female=true&age=50\n\nHere the creatinine  is 100.0 \u03bcmol/L, The gender is female (Female = true) and age of the patient is 50 years. \n\ncurl -X 'GET' \n  'https://api.algomed.in/egfr1?creat=1.2&female=true&age=50' \n  -H 'accept: application/json'\n\n\nOutput\nThe API returns a JSON object with the following structure:\n\n{\n  \"egfr\": 59, ==>  The calculated eGFR value\n  \"units\": \"mL/min/1.73m2\",  ==> The units for the same\n  \"CKD category\": \"G3a\", ==> CKD category based on current guidelines \n  \"details\": \"This falls in category of mildly to moderately decreased eGFR\" ==> Information about the CKD category\n}\n\n\n\nExample\nHere is an example of a request to the API endpoint:\n\nGET https://api.algomed.in/egfr1?creat=100.0&female=true&age=50\n\nAnd the corresponding response from the API:\n\n{\n  \"egfr\": 59,\n  \"units\": \"mL/min/1.73m2\",\n  \"CKD category\": \"G3a\",\n  \"details\": \"This falls in category of mildly to moderately decreased eGFR\"\n}\n\n\nError Codes\nIn case of any errors, the API returns a JSON object with the following structure:\n* error: A string indicating the error that occurred.\n* message: A detailed error message.\nNotes\n* The creatinine value must be entered in \u03bcmol/L.\n* The API only accepts requests with the 'application/json' content type.\n* The API returns a 500 Internal Server Error response in case of any internal errors.\nDisclaimer\nThis API is provided for informational purposes only and is not intended to be used for medical advice, diagnosis, or treatment. The results of the eGFR calculation should always be interpreted in the context of a comprehensive medical evaluation by a qualified healthcare professional."], ["eGFR Calculation for Creatinine value in mg/dl", "API documentation for eGFR1 (for Creatinine value in mg/dl)\n\n\nAPI Documentation: eGFR Calculator API\n\nIntroduction\n\n\nThis API provides a way to calculate the Estimated Glomerular Filtration Rate (eGFR) for assessing renal function using the 2021 CKD-EPI formula. The eGFR is a measure of the kidney's ability to filter waste from the blood, and is an important indicator of renal health.\nEndpoint\n\nThe API endpoint for the eGFR calculation is:\n\n\nhttps://api.algomed.in/egfr1\n\n\nInput\n\nThe API requires the following input parameters to be passed in the request body as a JSON object:\n* creatinine (float): The patient's creatinine level, in mg/dL. \n* age (integer): The patient's age, in years.\n* Female (boolean): Is the patient a female, True or false.\n\n\nInput example:\n\nHere is an example for an input request \n\nhttps://api.algomed.in/egfr1?creat=1.2&female=true&age=50\n\nHere the creatinine  is 1.2 mg/dl, The gender is female (Female = true) and age of the patient is 50 years. \n\ncurl -X 'GET' \n  'https://api.algomed.in/egfr1?creat=1.2&female=true&age=50' \n  -H 'accept: application/json'\n\n\nOutput\nThe API returns a JSON object with the following structure:\n\n{\n  \"egfr\": 55, ==>  The calculated eGFR value\n  \"units\": \"mL/min/1.73m2\",  ==> The units for the same\n  \"CKD category\": \"G3a\", ==> CKD category based on current guidelines \n  \"details\": \"This falls in category of mildly to moderately decreased eGFR\" ==> Information about the CKD category\n}\n\n\n\nExample\nHere is an example of a request to the API endpoint:\n\nGET https://api.algomed.in/egfr1?creat=1.2&female=true&age=50\n\nAnd the corresponding response from the API:\n\n{\n  \"egfr\": 55,\n  \"units\": \"mL/min/1.73m2\",\n  \"CKD category\": \"G3a\",\n  \"details\": \"This falls in category of mildly to moderately decreased eGFR\"\n}\n\n\nError Codes\nIn case of any errors, the API returns a JSON object with the following structure:\n* error: A string indicating the error that occurred.\n* message: A detailed error message.\nNotes\n* The creatinine value must be entered in mg/dL.\n* The API only accepts requests with the 'application/json' content type.\n* The API returns a 500 Internal Server Error response in case of any internal errors.\nDisclaimer\nThis API is provided for informational purposes only and is not intended to be used for medical advice, diagnosis, or treatment. The results of the eGFR calculation should always be interpreted in the context of a comprehensive medical evaluation by a qualified healthcare professional."]]}, "Eczanem": {"tool_desc": "il ve il\u00e7e bilgisine g\u00f6re n\u00f6bet\u00e7i eczaneleri g\u00f6r\u00fcnt\u00fcleyin!", "apis": [["nobetci", "il ve il\u00e7e bilgisine g\u00f6re n\u00f6bet\u00e7i eczaneleri g\u00f6r\u00fcnt\u00fcleyin!"]]}}, "Food": {"Keto Diet": {"tool_desc": "Dataset of over 450 Ketogenic diet recipes in over 10 categories from Breakfast to Dinner.", "apis": [["Filter - Protein", "Gives keto recipes within given range of protein value.\nprotein_in_grams__lt = Less than\nprotein_in_grams__gt = Greater than"], ["Filter - Carbohydrates", "Gives keto recipes within given range of carbohydrates value.\ncarbohydrates_in_grams__lt = Less than\ncarbohydrates_in_grams__gt = Greater than"], ["Filter - Fats", "Gives keto recipes within given range of fat content.\nfat_in_grams__lt = Less than\nfat_in_grams__gt = Greater than"], ["Filter - Calories", "Gives keto recipes within given range of calories.\ncalories__lt = Less than\ncalories__gt = Greater than"], ["Filter - Cook Time in Minutes", "Gives keto recipes within given range of cooking time.\ncook_time_in_minutes__lt = Less than\ncook_time_in_minutes__gt = Greater than"], ["Filter - Prep Time in Minutes", "Gives keto recipes within given range of preparation time.\nprep_time_in_minutes__lt = Less than\nprep_time_in_minutes__gt = Greater than"], ["Keto Recipes by Difficulty", "Gives all keto recipes by its difficulty (Easy, Medium or Difficult)."], ["All Keto Recipes by Category", "Gives all keto recipes by category ID."], ["Categories", "Lists all available categories of keto recipe."], ["Search Keto Recipe", "Gives all recipes by the search term."], ["Single Keto Recipe", "Gives a single recipe by ID"], ["All Keto Recipes", "Get a list of all available keto recipes."]]}, "Beers List": {"tool_desc": "A list of beers from many European countries", "apis": [["Get beers by single country", "Available Countries are:\n- denmark\n- sweden\n- belgium\n- spain\n- portugal\n- ireland\n- luxembourg\n- norway\n- finland\n- switzerland\n- czech\n- italy\n- poland\n- malta"], ["getAllBeersList", "List of all beers"]]}, "Recipe by API-Ninjas": {"tool_desc": "Search over 200,000 creative recipes.", "apis": [["/v1/recipe", "Get a list of recipes for a given search query. Returns at most 10 results. To access more than the first 10 results, use the offset parameter to offset results in multiple API calls."]]}, "MyNewTestApi": {"tool_desc": "My new test API", "apis": [["MyTestEndpoint", "My test end point"]]}, "Testing_v3": {"tool_desc": "test api", "apis": [["WechatUserInfo", "Get Wechat user profile information using code or token provided from the Wechat backend/system upon scanning QR Code from Wechat app.  \r\n\r\n&nbsp;  \r\n\r\n> <a href=\"red\">**NOTE**:</a> \r\n>    - Authentication code/token will expire in 5minutes.\r\n>    - After generating a QR code it will automatically redirects you to the menu app and the code will be invalid once used. Here in the example it responded an invalid code because this is the second time we use the code.\r\n\r\n&nbsp;  \r\n\r\nHere is the sample of a successful response.\r\n<pre>\r\n{\r\n    \"subscribe\": 1, \r\n    \"openid\": \"o6_bmjrPTlm6_2sgVt7hMZOPfL2M\", \r\n    \"nickname\": \"Band\", \r\n    \"sex\": 1, \r\n    \"language\": \"zh_CN\", \r\n    \"city\": \"Guangzhou\", \r\n    \"province\": \"Guangdong\", \r\n    \"country\": \"China\", \r\n    \"headimgurl\":\"http://thirdwx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/0\",\r\n    \"subscribe_time\": 1382694957,\r\n    \"unionid\": \" o6_bmasdasdsad6_2sgVt7hMZOPfL\"\r\n    \"remark\": \"\",\r\n    \"groupid\": 0,\r\n    \"tagid_list\":[128,2],\r\n    \"subscribe_scene\": \"ADD_SCENE_QR_CODE\",\r\n    \"qr_scene\": 98765,\r\n    \"qr_scene_str\": \"\"\r\n}\r\n</pre>"], ["AppController_health", "Monitoring the api connectivity."], ["ValidateEmail", "When inviting a user this will first validate if the email input is valid and is not yet taken. Email must be unique."], ["VenueDetail", "A **multi-language** api\r\n\r\nGet venue details using KV (need resync to get latest data) and filter dynamic multi language data based on query params (eg. ?lang=zh-hans)"], ["MenuDetail", "A **multi-language** api\r\n\r\nGet menu details using KV (need resync to get latest data) and filter dynamic multi language data based on query params (eg. ?lang=zh-hans)"], ["MenuOrder", "This api is still on progress\r\n\r\nGet information about the order from the menu."], ["B2BOrganisationdetails", "This endpoint will retrieve a specific organisation details with city list assigned."], ["VenueRecommendation", "This will return all the recommended dishes for the venue with their food names & details , meals by category, drinks and promotions."]]}, "Ghana Food Recipe Api": {"tool_desc": "Ghana has a rich culture of food,with 1000s of food recipes.", "apis": [["Get Recipe by ID", "This endpoint gets specific recipe by id"], ["Get all Recipe", "This endpoint gets all food recipes."], ["Drink by Id", "Get Specific drink recipe by ID"], ["Drinks", "This endpoint gets all local drinks,image,ingredient and preparation."], ["Get food by ID", "This endpoint gets food by ID."], ["Get all food", "This endpoint gets all Ghanaian food along with ingredients and a short description. Each page supplies 5 payload, use the parameter ?page=(page number) to access other pages. Example. url?page=2"]]}, "Ordering": {"tool_desc": "Ordering Stack - Ordering API.", "apis": [["listLast", "Get last orders for user (all states included)."], ["getList", "Get paginated list of orders. This endpoint is compatible with React AdminOnRest framework to provide DataSource."], ["listOpenedVenue", "Get opened orders in venue. Used by KDS, queue displays etc."], ["listOpened", "Get opened orders for user."], ["get", "Get single order by ID."]]}, "Worldwide Recipes": {"tool_desc": "Over 2 MILLION recipes, nutrition, ingredients, users and reviews worldwide.", "apis": [["Detail", "Get detail of recipe"], ["Recipes by author", "Get recipes by author"], ["More from author", "Get more recipe from author"]]}, "Cocktail by API-Ninjas": {"tool_desc": "Search thousands of cocktail recipes.", "apis": [["/v1/cocktail", "API Ninjas Cocktail API endpoint. Either **name** or **ingredients** parameter must be set."]]}, "CamRest676": {"tool_desc": "CamRest service por restaurant reservation", "apis": [["bookRestaurant", "Returns the restaurants the user is looking for"]]}, "The Cocktail DB": {"tool_desc": "Cocktail recipes with high-quality images stored on AWS S3 for fast accessibility.", "apis": [["List of Cocktails", "This endpoint responds with a list of cocktails that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cocktail Recipe by ID\" endpoint to receive the detailed cocktail recipe."], ["Detailed Cocktail Recipe by ID", "Get Cocktail by ID"]]}, "favoriteFoodApi": {"tool_desc": "This Api Holds some of the Favorite Dishes I fancy from Cameroon", "apis": [["Get All Favorite Food", "This endpoint will return all my favorite Cameroonian dishes"]]}, "Viva City Documentation": {"tool_desc": "Viva City APIs for Venue &amp; Menu", "apis": [["MenuDetails", "Get menu details using KV (need resync to get latest data) and filter dynamic multi language data based on query params."], ["VenueDetails", "Get venue details using KV (need resync to get latest data) and filter dynamic multi language data based on query params."]]}, "Burgers Hub": {"tool_desc": "This api returns kinds of burgers with there name, image, price, ingeridients etc", "apis": [["Search Burger By There Name", "Get **Bugers** by searching there **Name**"], ["Get Specific Burger", "Get specific **Burger**  by there **ID**"], ["Burgers", "This endpoint returns all the burgers"]]}, "ComfyFood": {"tool_desc": "This is an API from ComfyFood's website", "apis": [["Get all Recipes 1", "returns all the recipes from comfyfood's website"]]}, "Recipe Generator": {"tool_desc": "Uses AI to generate a unique recipe based on a provided name and a list of ingredients", "apis": [["Generate Recipe", "Uses AI to generate a unique recipe based on a provided name and a list of ingredients"]]}, "BBC Good Food API": {"tool_desc": "Fetch recipies from search keyword, Author profile + recipes, collections recipes..", "apis": [["Categories collections ids", "Get all categories collection with there names and namd id"], ["Recipe by name id", "Get recipe information by recipe name id"], ["Search for recipes", "Search for recipes by keyword or full phrase"], ["Collection recipes", "Get collection of recipes by collection name ID"], ["Author profile + recipes", "Get author recipes and profile info"]]}, "Edamam Nutrition Analysis": {"tool_desc": "The Nutrition Analysis API and Database uses Natural Language Processing and semantically structured data.", "apis": [["/api/nutrition-data", "This returns the nutritional analysis for the specified food text by extracting information from a short unstructured food text (usually an ingredient line and returns the following structured data for the text: quantity, measure and food,) and if available: diet, health and allergen labels for the text.  With the built in food logging feature, this allows for change of context. For example, \u201crice\u201d will normally be matched to raw rice while, with the food logging feature on, it will match to ready to eat \u2018cooked rice.\u2019 \n \n <b>Access Point:</b> https://api.edamam.com/api/nutrition-data"]]}, "Cheeses": {"tool_desc": "Information about cheeses.", "apis": [["Get by id", "Get all info about the cheese"]]}, "Recipe_v4": {"tool_desc": "REST-based recipe and search", "apis": [["search recipes", "Search and Recommends recipes"]]}, "The Fork The Spoon": {"tool_desc": "This API helps to query the best restaurant and meal around the world to create a traveling site/application such as thefork.com", "apis": [["restaurants/get-info (Deprecated)", "Get all available information of specific restaurant"], ["restaurants/auto-complete (Deprecated)", "Get suggestion by term or phrase"], ["locations/auto-complete (Deprecated)", "Get suggestion by term or phrase"], ["sale-type-menu/list (Deprecated)", "Get menu of specific restaurant"], ["reviews/get-stat", "Get review stat of specific restaurant"], ["reviews/list", "List reviews of specific restaurant by diners"], ["reviews/list-best", "List all best reviews of specific restaurant by diners"], ["reviews/v2/list", "List reviews of specific restaurant by diners"], ["food-report/list (Deprecated)", "List all available food reported by other diners"], ["sale-type/list (Deprecated)", "List all available sale type of specific restaurant"], ["restaurants/v2/list", "List restaurants with options and filters"], ["locations/list (Deprecated)", "List relating locations by Google place id"], ["locations/v2/list", "List relating locations by Google place id"], ["locations/v2/auto-complete", "Get suggestion for locations by term or phrase"], ["restaurants/v2/get-info", "Get all available information of specific restaurant"], ["restaurants/list (Deprecated)", "List restaurants with options and filters"], ["restaurants/v2/auto-complete", "Get suggestion for restaurants by term or phrase"]]}, "Cookr Recipe Parser": {"tool_desc": "Powerful AI recipe parser.", "apis": [["/getRecipe", "Gets recipe data from a URL"]]}, "vegan-recipes-api": {"tool_desc": "An API that returns links to vegan recipes", "apis": [["Get Vegan Recipes from  Specific Food Blog", "This endpoint returns vegan recipes from a specific food blog, given the food blog's name."], ["Get All Vegan Recipes", "This endpoint returns all vegan recipes from a variety of food blogs."]]}, "KFC Chickens": {"tool_desc": "Provides you KFC dishes", "apis": [["Search By Id", "Search Chicken Dishes by their **ID**"], ["Get Chickens", "This Endpoint returns all the chicken dishes"]]}, "The Vegan Recipes DB": {"tool_desc": "Vegan Food Recipes with high-quality images stored on AWS S3 for fast accessibility.", "apis": [["Detailed Food Recipe by ID", "Food Recipe by ID"], ["List of Foods", "This endpoint responds with a list of vegan foods that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Food Recipe by ID\" endpoint to receive the detailed recipe."]]}, "Cocktails": {"tool_desc": "The cocktail API with over 300 Cocktails!", "apis": [["Random", "Get a random cocktail with all ingredients"], ["Random Nonalcoholic", "Get a random nonalcoholic cocktail with all ingredients"], ["Search by ingredient", "Get cocktails by its ingredients"], ["Search by name", "Search Cocktail by name"]]}, "Recipe Prediction": {"tool_desc": "Input base64 image and get recipe predictions", "apis": [["Send Image", "Gets a base64 image"]]}, "Halal Korean Restaurants API": {"tool_desc": "", "apis": [["Restaurants", "Lists of halal restaurants in korea"]]}, "Fast Food Restaurants USA - TOP 50 Chains": {"tool_desc": "Our Fast Food Restaurants API provides you with a comprehensive database of the most popular fast food chains, allowing you to access vital information about their locations, hours and web presence.", "apis": [["GET all {City} names", "GET all City names"], ["GET all Restaurants by {Chain} & {City} & {State}", "**10 results per request. Use page number for Pagination.**"], ["GET all Restaurants by {Chain}", "**10 results per request. Use page number for Pagination.**"], ["GET all Restaurants by {Chain} & {State}", "**10 results per request. Use page number for Pagination.**"]]}, "Food Ingredient Measurement Conversion": {"tool_desc": "Effortlessly convert between volume and weight units for recipe ingredients.", "apis": [["Convert Ingredient", "1. Convert between Weight and Volume, \n     e.g., 1 cup of flour is 120 gram, or  1 ounce of butter is 2 tablespoon\n\n2. Convert in the same category, e.g., 1 cup = 16 tablespoon = 48 teaspoon;  1 ounce = 28.35 gram; or 0\u00b0C = 32\u00b0F, 100\u00b0C = 212\u00b0F; or"], ["List all the Unit (Weight, Volume, Temperature)", "1. Convert between Weight and Volume, \n     e.g., 1 cup of flour is 120 gram, or  1 ounce of butter is 2 tablespoon\n\n2. Convert in the same catagory, e.g., 1 cup = 16 tablespoon = 48 teaspoon;  1 ounce = 28.35 gram; or 0\u00b0C = 32\u00b0F, 100\u00b0C = 212\u00b0F; or"], ["List of All Ingredients", "GET a list of all the Ingredients available"]]}, "DietaGram": {"tool_desc": "Find nutrition facts by food name or by UPC (barcode).", "apis": [["Food Api", "Find food info by name"], ["UPC Api", "Find food info by UPC (barcode)"]]}, "Food Nutrional Data": {"tool_desc": "Access thousands of food ingredients and their nutritional information", "apis": [["Search a food/recipe item (100g serving)", "Search a food item and get all its nutritional information"]]}, "betaRecipes": {"tool_desc": "Predict recipes based on input pictures", "apis": [["Send Image", "Send Image to get prediction and other data"]]}, "Generate a recipe based on an ingredient": {"tool_desc": "Generate a health recipe based on the ingredients you specify in the request", "apis": [["Generate recipe", "Generate your recipe for your use case or application!"]]}, "Recipe Finder": {"tool_desc": "This recipe API allows users to search for recipes by ingredient.", "apis": [["icecream/ingredient", "This API endpoint allows users to retrieve a random icecream recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions."], ["cake/ingredient", "This API endpoint allows users to retrieve a random cake recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions."], ["pastry/ingredient", "This API endpoint allows users to retrieve a random pastry recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions."], ["side-dish/ingredient", "This API endpoint allows users to retrieve a random side dish recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions."], ["salad/ingredient", "This API endpoint allows users to retrieve a random salad recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions."], ["breakfast/ingredient", "This API endpoint allows users to retrieve a random breakfast  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions."], ["dinner/ingredient", "This API endpoint allows users to retrieve a random dinner  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions."], ["mediterranean/ingredient", "This API endpoint allows users to retrieve a random mediterranean  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions."], ["appetizer/ingredient", "This API endpoint allows users to retrieve a random appetizer  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions."], ["lunch/ingredient", "This API endpoint allows users to retrieve a random lunch  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions."], ["diet/ingredient", "This API endpoint allows users to retrieve a random diet recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions."]]}, "Tasty": {"tool_desc": "API to query data about recipe, plan, ingredients, etc...", "apis": [["recipes/list", "List recipes by option filters or name"], ["tips/list", "This endpoint is used to load tips (reviews)"], ["recipes/detail (Deprecated)", "Get  more information of recipe if available, such as : ingredients, nutrition info, preparation, etc..."], ["feeds/list", "List latest feeds about new food, recipes,etc..."], ["tags/list", "List supported tags name for filtering in recipes/list API"], ["recipes/list-similarities", "List similar recipes by specific recipe id"], ["recipes/auto-complete", "Get auto complete suggestions by name or ingredients"], ["recipes/get-more-info", "Get  more information of recipe if available, such as : ingredients, nutrition info, preparation, etc... This endpoint returns 404 status code, it means there is no more information to obtain.\n* .../recipes/list already returns ingredients, nutrition info, preparation, etc..."]]}, "The Mexican Food DB": {"tool_desc": "Mexican Food Recipes with high-quality images stored on AWS S3 for fast accessibility.", "apis": [["Detailed Food Recipe by ID", "Mexican Food Recipe by ID"], ["List of Foods", "This endpoint responds with a list of mexican foods that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Food Recipe by ID\" endpoint to receive the detailed recipe."]]}, "Low Carb Recipes": {"tool_desc": "Highly flexible search over thousands of low-carb/keto recipes with rich nutrients information.", "apis": [["Search for Recipes", "Search for recipes that match provided criterions"], ["Get recipe by ID", "Get details of the specified recipe"]]}, "Payment": {"tool_desc": "Ordering Stack Payment API - provides payments operations for orders.", "apis": [["GetPaymentTypes", "Find Payment Services allowed by tenant"]]}, "Bespoke Diet Generator": {"tool_desc": "Our API generates a complete meal plan that is specific to the nutrition counseling world.", "apis": [["Get food replacement options in diet", "Retrieve the list of ingredients that can replace another ingredient in an existing diet."], ["Get user's information", "Retrieve the information of the user with the matching user ID."], ["Retrieve user's food preferences.", "Retrieve the list of all ingredients that will be excluded from user's diets."], ["Get user's diet", "Return the diet configuration and the diet plan for each day."], ["Get user's diet for a specific day", "Get the current diet plan for the specified user for a specific day."], ["get-ingredients", "Retrieve all the ingredients."]]}, "Yummly": {"tool_desc": "API to query data about recipe, plan, ingredients, etc...", "apis": [["feeds/list", "List feeds by category"], ["reviews/list", "List reviews, feedback from other users"], ["categories/list", "List all categories of recipes"], ["feeds/list-similarities", "List similar recipes by name and author"], ["feeds/search", "Search for recipes by name and option filters"], ["feeds/auto-complete", "Get auto complete suggestions by name or ingredients, etc..."], ["tags/list", "List all tags in which recipes are group together"]]}, "Auth": {"tool_desc": "OAuth2 Authorization for Ordering Stack API.", "apis": [["getUserList", "Get paginated list of users. This endpoint is compatible with React AdminOnRest framework to provide DataSource."], ["getPublicTenantConfig", "Get tenant public config for front apps"], ["getCatalogTenant", "Get tenant information. Internal endpoint only available to other services."], ["getCatalogUser", "Get user information. Internal endpoint only available to other services."], ["confirm", "Confirm registration. Confirm registraton by providing token sent in e-mail."], ["getUser", "Get single user data"]]}, "Recipe Search and Diet": {"tool_desc": "Since we understand the recipe \u2013 ingredients, diets, allergies, nutrition, taste, techniques & more.", "apis": [["Recipe Search and Recommendations", "Search 2 million recipes using keywords, 28 nutrients and 40 diet and health filters"]]}, "FoodieFetch": {"tool_desc": "FoodieFetch is a new API that allows users to fetch menu locations and ratings from popular food delivery platforms like Swiggy and soon Zomato.", "apis": [["Fetch Restaurant Information", "This endpoint allows users to retrieve menu location and ratings data for a specific restaurant. The user can send the name of the restaurant, preferably the full name with the city, to fetch data from the API."]]}, "Store Groceries": {"tool_desc": "Access the biggest groceries store in the UK with over 50000 items as well as promotions", "apis": [["Search a Grocery", "Search a specific grocery"]]}, "The Birthday Cake DB": {"tool_desc": "Birthday cake recipes with high-quality images stored on AWS S3 for fast accessibility.", "apis": [["Detailed Cake Recipe by ID", "Get Cake Recipe by ID"], ["List of Cakes", "This endpoint responds with a list of cakes that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cake Recipe by ID\t\n\" endpoint to receive the detailed recipe."]]}, "Food Nutrition Information": {"tool_desc": "search and find foods with their nutritional information", "apis": [["Find food by id", "Retrieves a single food item by an FDC ID."], ["Search foods using keywords.", "Search for foods using keywords."]]}, "postcap": {"tool_desc": "class", "apis": [["capend", "It display for on Home"]]}, "Veggie Me": {"tool_desc": "An API for aggregating vegetarian restaurants from Yelp from London, Amsterdam, Berlin, Stockholm, Barcelona and Paris.", "apis": [["restaurants", "Aggregates all vegetarian restaurants from Yelp from London,  Amsterdam, Berlin, Stockholm, Barcelona and Paris"]]}, "Nutrition by API-Ninjas": {"tool_desc": "Natural language API to extract nutrition data from any text.", "apis": [["/v1/nutrition", "API Ninjas Nutrition API endpoint."]]}, "Recetas en espa\u00f1ol": {"tool_desc": "Algunas recetas para tu sitio y en espa\u00f1ol", "apis": [["Get recipes details", "Get details of any recipe"]]}, "Beverages and Desserts": {"tool_desc": "This api returns various kinds of Beverages and Desserts", "apis": [["Get Beverage by there Id", "Get beverages by there id"], ["Get all the Desserts", "This endpoint will returns all the** Desserts**"], ["Get all the Beverages", "This endpoint will returns all the **Beverages**"]]}, "Pizza and Desserts": {"tool_desc": "decent collection of pizzas and desserts for your next food app project..", "apis": [["Get specific pizza", "Get pizza by their  **ID**"], ["Get specific dessert", "Get the Dessert by their id"], ["All Desserts Data", "This will return s all the desserts data"], ["All pizza data", "This will returns all the pizzas data"]]}, "Caterer Groceries Intel": {"tool_desc": "Access more than 24000 groceries data, suitable for caterers", "apis": [["Search a Grocery", "Search for products or a specific product"], ["Get all groceries", "Fetch all groceries data"]]}}, "Business_Software": {"Yardillo": {"tool_desc": "No code API orchestration workflow", "apis": [["Read Vault", "Returns all Vault keys. This api return keys encrypted."], ["Read Case Type", "Searches all or specific case type"], ["Read  Case Type By Name", "Search a case type by its name. e.g. SensorX09"], ["Read  Case Type By Id", "Gets case type by _id"], ["Get Case By Id", "Get the case payload by its Id"], ["Get Tenant", "This API allows you to push data into your own MongoDB Database"], ["Read Vault By Name", "Gets vault details by Name. Response will send your key un encrypted"], ["Search Case", "Search your cases by fields id and its values"], ["Get All Tenants", "This returns all your Tenants"]]}, "cloudlayer.io": {"tool_desc": "Generate PDFs, Images, and more from HTML and URLs", "apis": [["Convert URL to Image", "Make a GET request to convert url to image, accepts simple options as query strings in URL (use POST endpoint for advanced options)."]]}, "demo": {"tool_desc": "demo testing api", "apis": [["api", "to get the location"]]}, "Address to Image": {"tool_desc": "Shows an image of an address, using Google Street View.", "apis": [["getimage", "Generates an image for a given address. Images are output in JPEG as a base64 encoded string."]]}, "Vizor Ads": {"tool_desc": "Welcome to VizorAds.", "apis": [["Show", "Get details of your existing embed records using it's unique slug"], ["API Status", "Check API server is running or not"]]}, "Find any IP address or Domain Location world wide": {"tool_desc": "Free IP Geo Location API with 100% accurate geo information of IP address or Domain name like city latitude, longitude, zipcode, state/province, country, country codes, country flag, currency, dialing code.", "apis": [["IP Location by IPv4, IPv6 IP Address", "Free IP Geo Location API which provide 100% accurate geo location information of any IPv4, IPv6 IP address or Domain name like its city latitude, longitude, zipcode, state/province, country, country codes, country flag, currency, dialing code. timezone, total number of cities & states/province in country, continent code, continent name and many more details in JSON format. You can also test our API online by this IP lookup tool: https://ipworld.info/iplocator"], ["IP location by domain name", "Free IP Geo Location API which provide 100% accurate complete information of any IP address or Domain name with its city latitude, longitude, zipcode, state/province, country, country codes, country flag, currency, dialing code. timezone, total number of cities & states/province in country, continent code, continent name and many more details in JSON format. You can also test our API online by this IP lookup tool: https://ipworld.info/iplocator"]]}, "E2open, LLC.": {"tool_desc": "E2open is a cloud-based, real-time operating platform that orchestrates the global supply chains of the world's best-known brands.", "apis": [["Demand Sensing", "Creates accurate near-term forecasts that reflect current market realities using real-time data, automation and machine learning algorithms."]]}, "Real Estate USA": {"tool_desc": "The API to search properties for sale or rent in USA", "apis": [["search properties by zip", "search properties by zip code"]]}, "Business Card Maker": {"tool_desc": "Easily create your own business cards in seconds, using high-quality professional designs, then save them as PNG, JPG, HTML, or JSON.", "apis": [["/api/templates", "Get business cards templates list."]]}, "Makini_v2": {"tool_desc": "The universal CMMS API", "apis": [["The universal CMMS API", "The universal\nCMMS API"]]}, "SaaS Softwares and Features API": {"tool_desc": "This API allows you to query SaaS software, products and tools and their meta data such as description, logo, video url, and the features they offer.", "apis": [["Software Assets", "This endpoint allows you to fetch SaaS/Software tools that offer a given list of features (feature tags) or just details of any particular software. The details will include it's website, it's description, etc."]]}, "Git Pager": {"tool_desc": "Easility perform CRUD (Create, Read, Update and Delete) operations on any Github repo!", "apis": [["List folder contents", "Lists  all of the contents of a specific Github repo."]]}, "LimouCloud": {"tool_desc": "LimouCloud APIs", "apis": [["Get all checklists", "Get the Checklists created by driver"], ["Get assigned Vehicle", "Get the Assigned vehicle to add its id in Checklist creation"], ["Get Reservations", "get all driver related reservations"]]}, "QuizApp": {"tool_desc": "Mock API for the Quiz Application", "apis": [["Ping", "Ping for Health Check"]]}, "Invoices Generator": {"tool_desc": "Generate invoices in pdf format quickly through a simple API", "apis": [["Generate Invoice", "Quickly generate invoices through a REST API endpoint"]]}, "ZohoCreator": {"tool_desc": "All Zoho Creator Rest Methods", "apis": [["ViewRecords", "Replace https://zohocreator.p.rapidapi.com/ with https://creator.zoho.com/api/ if you're using native system\n\nGet Records from a Zoho View/Report"]]}, "NPS-Net Promoter Score": {"tool_desc": "This API allows rapidly implement one of the most  well known and accepted KPI to measure customer satisfaction and loyalty: Net Promoter Score\u00ae, or NPS\u00ae.", "apis": [["Read a survey NLP", "Get a detail of customer survey answer by its survey id (sid), and applies to the third answer (a3) the sentiment analysis feature."], ["NPS Organization", "Get a summary of NPS calculation for a given organization. It considers the overall answers related to all templates belonging to a given organization and consolidates in a global NPS indicator. A time period is mandatory (start_date and  end_date) to narrow the results, otherwise, it will consider the last 24hs."], ["Details all templates answers", "Get a full list of all customer survey responses for a given template, by identifying its template id (tid)"], ["Details all organization surveys", "Get a full list of all customer survey responses for a given organization, by identifying its organization id (oid)"], ["NPS Template", "Get a summary of NPS calculation for a given template. It considers the overall answers related to that template and consolidates in a global NPS indicator. A time period is mandatory (start_date and  end_date) to narrow the results, otherwise, it will consider the last 24hs."], ["Read all templates surveys", "Get a list of all customer surveys answers related to a given template of questions (tid). In this method, you can see how each customer answered a given template of questions"], ["List all NPS Organization  templates", "Get a list of all NPS templates of a given Organization by its organization id (oid)"], ["Read a survey", "Get the details of a given customer survey by its survey id (sid)"], ["Read Organization", "Get a organization record by its organization id (oid)"], ["NPS Client", "Get a summary of NPS calculation for a given client_id. It considers the overall answers related to all survey answers belonging to a given client and consolidates in a global NPS indicator. A time period is mandatory (start_date and  end_date) to narrow the results, otherwise, it will consider the last 24hs."], ["Read NPS template", "Get details of a given template by its template id (tid)"]]}, "Top brand names & valuation api": {"tool_desc": "With data from over 100 companies, you can find company data and valuation in seconds.", "apis": [["get brands", "Get the brand data"]]}, "Slot and Betting Games": {"tool_desc": "API games for your online casino.", "apis": [["Slot and betting games", "Games for your online casino."]]}, "Business  Days / Work Days Calculator ": {"tool_desc": "Having trouble counting workdays or converting from business days into calendar days?", "apis": [["Business Days / Work Days Calculator API", "# Workdays Calculation API Documentation\n\nThe Workdays Calculation API allows you to calculate the date after a given number of workdays, taking into account weekends and holidays. By specifying the country code, number of workdays, start date, and options, you can retrieve the ISO date of the day after the workdays have passed.\n\n\n## Request Parameters\n\nThe API expects the following GET parameters:\n\n1. `state` (required): The country code for which the workdays are calculated. Please refer to the [list of country codes](https://www.nationsonline.org/oneworld/international-calling-codes.htm) to find the appropriate code for your country.\n\n2. `work_days` (required): The number of workdays to calculate. This indicates how many workdays should be skipped before determining the result.\n\n3. `start_date` (required): The starting date from which to begin counting the workdays. The format of the start date should be `DD/MM/YYYY`.\n\n4. `options` (optional): The options for skipping specific days. This parameter accepts the following values:\n   - `0`: Skip holidays and weekends.\n   - `1`: Skip only weekends.\n   - `2`: Skip only holidays.\n\n## Response\n\nThe API response will be a string representing the ISO date of the day after the specified workdays have passed.\n\n## Example\n\nGiven `start_date` of 19/05/2023, which is Friday, and `work_days` of 2, \nthe returned result will be 23/05/2023. Here's the breakdown of the calculation:\n\n- 19/5-20/5: Weekend (Saturday and Sunday)\n- 21/5: First workday\n- 22/5: Second workday\n\nTherefore, 23/5 is the day after the specified workdays have passed"]]}, "MBOX Migrator": {"tool_desc": "MBOX Migrator is an state-of-the-art application used to convert MBOX emails to 20+ file formats & email clients.", "apis": [["Terminate", "Termination of MBOX Migrator after successful conversion"]]}, "B2BHint": {"tool_desc": "B2BHint is a business tool that provides access to official registry data on companies and the people associated with them.", "apis": [["Search person by name", "Search for a person by parameters will return a list of persons that match your query"], ["Get company [Full data]", "The Get company details endpoint will return all full company data, including company contacts, financial reports and other data"], ["Search company by Name", "Search for a company by parameters will return a list of companies that match your query"], ["Get company [Basic data]", "The Get company details endpoint will return all basic company data on B2BHint."], ["Search company by Email", "Search for a company by email will return a list of companies that match the selected email"]]}, "fomoAPI": {"tool_desc": "The #1 Social Proof API, Boost Your Conversions", "apis": [["Get Campaign From URL", "Get lead from Specific website  Campaign"], ["Get Campaign  Lead From ID", "Get ALL Lead From Your Campaign Social Proof"]]}, "Logo": {"tool_desc": "Find the Logo of each company in real-time.", "apis": [["Logo API", "Using our logo finder service is entirely free with attribution. \n<img src=\"https://api.companyurlfinder.com/logo/amazon.com\" />"]]}, "Freeplanhardlimitexternal": {"tool_desc": "Freeplanhardlimitexternal", "apis": [["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"], ["getInventory", "Returns a map of status codes to quantities"], ["getPetById", "Returns a single pet"]]}, "Codester API": {"tool_desc": "With this API, you can get information about items such as prices, get a specific seller's items and so on", "apis": [["Items", "You can get item details such as description, price, author, images and so on."]]}, "LambdaTest Screenshot": {"tool_desc": "LambdaTest Automated Screenshot API", "apis": [["Get OS-Browsers", "Fetch all os browsers combinations available on lambdatest platform."], ["Get Resolutions", "Fetch all available resolution on different OS"], ["Get Screenshots", "Fetch specified screenshot details"]]}, "Stamping": {"tool_desc": "Blockchain for active or evidence digital register", "apis": [["GET evidence", "GET by hash sha256 or TrxId from Blockchain of Bitcoin and Ethereum"]]}, "Pulsar": {"tool_desc": "Teste Pulsar", "apis": [["Get All Users", "Get all users in system."], ["Get All Images Of An Collection", "Get all images of an collection."], ["Download Zip", "Download zip of images."], ["Get All Active Users", "Get all active users in system."]]}, "Flowcode": {"tool_desc": "Check out our new Developer Portal and docs: https://www.flowcode.com/developer-portal", "apis": [["Create QR Code", "This API takes an endpoint and return and image for a QR Code in either svg, png, jpg, or pdf format"]]}, "test2": {"tool_desc": "test2", "apis": [["/{orgCode}/cards", "Returns a list of cards for the given session. User authentication is required."], ["/{orgCode}/cardart/{bins}", "Returns card art URLs by BINs. Different URLs can be defined for each BIN/range of BINs. User authentication is not required."], ["/{orgCode}/cards/{cardId}", "Returns card information for a given card ID. User authentication is required."], ["/{orgCode}/accounts/{accountId}/cards", "Returns a list of cards belonging to a specific account. User authentication is required."]]}, "My API 12345": {"tool_desc": "YUI", "apis": [["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"], ["getInventory", "Returns a map of status codes to quantities"], ["getPetById", "Returns a single pet"]]}, "Proxy List": {"tool_desc": "Returns list of HTTP, HTTPS, SOCKS4, SOCKS5 proxies.", "apis": [["/proxy/get", "Returns the list of proxies based on the given parameters. The list is updated every 1 minute. API returns only working at the time of check proxies."], ["/proxy/health", "ReturnS the health status of the API. Also return last time the proxies check was completed. Time is in UTC."]]}, "HRIS": {"tool_desc": "HRIS APIs for Personio, BambooHR and BobHR.", "apis": [["Get Employees", "Get Employees for a specific customer"], ["Get Access Settings", "Get stored Access Setting for a specific customer"], ["Health Check", "Check API Health Status"]]}, "Scanily": {"tool_desc": "Scanily is a service that offers sophisticated shipping label recognition through our API interface.", "apis": [["Health Check", "This endpoint allows you to check the availability of the systems to ensure everything is operational."]]}, "OPA-test": {"tool_desc": "Test API for OPA", "apis": [["User summary", "Returns the user's document status summary"]]}, "XLSX Template": {"tool_desc": "https://xlsx-template.kurukona.net/\nTemplate + JSON \u279e XLSX or PDF.", "apis": [["Mail config List", "Get mail config list from cloud database"], ["Mail config get", "Get a mail confing from cloud database"], ["Template list", "Cloud storage templates file list"], ["Template download", "Download template file from Cloud storage"]]}, "Print your own labels and stickers": {"tool_desc": "Help your customers print their own labels and stickers, from your own website and under your own branding.", "apis": [["Label templates", "List of label templates filtered by one or more of the following parameters:\npaper format\ntemplate brand\nexact label size\napproximate label size\nlabel shape"], ["Print on dynamically generated label templates", "Generates the PDF file which contains the printout of labels.\n\nThe label template will be generated on the fly, based on the label layout dimensions that you will supply on every request.\nThe content printed on each label, is the image whose URL is supplied by **labelContent** query parameter."], ["Print on label templates or plain paper", "Generates the PDF file which contains the printout of labels.\n\nLabel layout conforms the label template and three print setup query parameters.\nThe content printed on each label, is the image whose URL is supplied by **labelContent** query parameter."], ["Label shapes", "List of available label shapes."], ["Label sizes", "Returns a list of label sizes in the format [width]x[height].\n\nThese sizes are rounded, meaning that they can represent a few other sizes that are close to them. For example size 4\"x3\", will represent 3.75\"x3\",  4\"x3.25\" and so on."], ["Label template brands", "Returns the list of blank label sheet brands that Ecardify supports to date. If your preferred brand is missing, please let us know."]]}, "Intelligent Automation (OCR, AI,...)": {"tool_desc": "Looking for an intelligent data capture solution?", "apis": [["Get /inboxes", "Get a list of inboxes with their ids"], ["Get /formats", "Get a list of formats"]]}, "SuperSaaS - Online Bookings and Appointment Scheduling": {"tool_desc": "The SuperSaaS API provides calendar services that can be used to add online booking and scheduling functionality to an existing website or CRM software.", "apis": [["List appointments", "it fetches list of appointments between given time range"]]}, "CLLAX": {"tool_desc": "Cllax - Advice, resources and tools for starting a small business.", "apis": [["cllax", "Cllax - Advice, resources and tools for starting a small business. Information on getting finance, business planning, hiring, IT, marketing and much more."]]}}, "Movies": {"Playphrase.me": {"tool_desc": "Playphrase.me API is a powerful tool that allows developers to integrate an extensive database of movie and TV show quotes into their applications.", "apis": [["Get  Video", "To get 5 videos by searching quotes"]]}, "Abir82 Bollywood Recommendations": {"tool_desc": "This API recommends a list of Bollywood movies from 2000 to 2019 based on the genre and year selected by the user", "apis": [["Fetch Movies", "This Endpoint allows to get a list of movies from 2000 to 2019 based on the genre selected by the user."]]}, "Similar Movies": {"tool_desc": "Find similar movies and series", "apis": [["find similar", "find similar movies for your movie"], ["get Id", "get the id of your movie"]]}, "Movie and TV shows Quotes": {"tool_desc": "This API helps query for Famous Movies and TV shows quotes.", "apis": [["GET quotes by actor", "This endpoint will return back quotes by the given actor or actress."], ["GET a random quote", "This endpoint will return a random quote"], ["GET quote by movie or TV show name", "This endpoint will return quotes by given movie or TV show name"], ["GET quote by Year", "This endpoint will return back quotes by the given year"], ["Get quote by character", "This end point will return back quotes delivered by the given character"], ["Get individual quotes by quote ID", "This endpoint will return back individual quotes based on the given ID"], ["Get all quotes", "This endpoint will return back all the quotes in the API"]]}, "Movie, TV, music search and download": {"tool_desc": "Get multiple downloadable torrent links by keyword search of movie, TV, and music titles with a rate value of 10 being the best.Download via uTorrent, BitTorrent and other clients", "apis": [["Search Torrents", "Get downloadable  torrent link by movie name."], ["Get Monthly Top 100 Music Torrents", "Monthly Top 100 Music Torrents"], ["Get Monthly Top 100 Games Torrents", "Monthly Top 100 Games Torrents"], ["Get Monthly Top 100 TV-shows Torrents", "Monthly Top 100 TV-shows Torrents"], ["Get Monthly Top 100 Movies Torrents", "Monthly Top 100 Movies Torrents"]]}, "MoviesDatabase": {"tool_desc": "MoviesDatabase provides complete and updated data for over 9 million titles ( movies, series and episodes) and 11 million actors / crew and cast members", "apis": [["/titles/x/titles-by-ids", "Titles by ids list"]]}, "IMDb top 100 movies": {"tool_desc": "This is a simple API for IMDb top 100 movies", "apis": [["Get a specific  Movie  by id", "get top x movie by id 'top46' :\nThe Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Genre, Director, Writer and IMDb ID ."]]}, "Streaming Availability": {"tool_desc": "Netflix, Prime, Disney, HBO, Hulu and many others.", "apis": [["Search Ultra", "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country."], ["Search Basic (FREE)", "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country."], ["Services (FREE)", "Get the list of supported services and details about them"], ["Get Basic (FREE)", "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country."], ["Search Pro", "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country."], ["Get Ultra", "Get the details of a show via IMDb or TMDb id, including the global streaming availability info"], ["Search By Title (FREE)", "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported."], ["Genres (FREE)", "Get the id to name mapping of supported genres."]]}, "IMDB_API": {"tool_desc": "This API is a powerful tool that provides access to the top 250 movies as rated by IMDB users.", "apis": [["/get_movies_by_cast_name", "<br /><br />\n<b>Authentication:</b> not required"], ["/get_movies_by_director", "<br /><br />\n<b>Authentication:</b> not required"], ["/get_movies_by_name", "<br /><br />\n<b>Authentication:</b> not required"], ["/get_movies_by_year", "<br /><br />\n<b>Authentication:</b> not required"]]}, "Films": {"tool_desc": "Films", "apis": [["searchInventory", "By passing in the appropriate options, you can search for\navailable inventory in the system"]]}, "Anime DB": {"tool_desc": "Complete anime data.", "apis": [["Get All", "Get List of anime. You can search, sort an specify genre"], ["Get by id", "Get anime by its corresponding ID.\n\nID is got from 'Get All' endpoint"], ["Get one anime by ranking", "Get anime by ranking"]]}, "OTT details": {"tool_desc": "Get Streaming details of Movie and TV Shows.", "apis": [["Advanced Search", "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc."], ["Basic Info", "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc."], ["Params", "Get array of values that can be used as params in Advanced Search ."], ["Search", "This endpoint allows you to search for a movie or tvshow based on the given 'title '."], ["Title Details", "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc."], ["Additional Title Details", "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc."], ["OTT Providers", "Get  information on OTT platforms we suuport ."], ["New Arrivals", "Get the latest arrivals from different platforms ."]]}, "Star Wars Characters": {"tool_desc": "list of star wars characters + details", "apis": [["Get all characters", "Get all characters with all details"]]}, "Movies NEWS": {"tool_desc": "Curated movies news from top sources", "apis": [["movies_news_recent_get", "Get the most recent movies news from top sources\n10 news items will be returned per request"]]}, "Latest Anime API": {"tool_desc": "Now you can get data of all latest anime and episodes.", "apis": [["Get Anime By Page", "Get Latest Anime by Page"], ["Get Latest  Anime", "Get latest anime data"]]}, "Movies Tv Shows Database": {"tool_desc": "Get Movies and TV Series and shows data.", "apis": [["Get TV Series By Year", "return tv series results with title, year, id"], ["Get TV Schedule By Country", "return TV Series Name, Season Number, Episode number, Episode name, Air date, air time, runtime, Network, series  id"], ["GET TV Series Episodes by Series ID, Season Number", "A valid TV Series ID (e.g. tt2741602)\nreturn Episode number, episode name, episode air date, vote average, vote count"], ["Get Airing today TV Shows", "return tv series results with title, id, year"], ["Get Trending TV Shows", "return tv series results with title, id, year"], ["Get TV ON the Air", "return tv series results with title, id, year"], ["Get Popular TV Shows By Year", "return tv series results with title, id, year"], ["Get Recently Added TV Series By Release Date", "return tv series results with title, id, year"], ["Get TV Series Aliases by ID", "A valid TV Series ID (e.g. tt2741602)\nreturn tv series aliases"], ["Get TV Series Images by ID", "A valid TV Series ID (e.g. tt2741602)\nreturn poster, fanart"], ["Get TV Series by Title", "Search by TV Series Title\nreturn title, id, release_date"], ["Get by TV Series by ID", "A valid TV Series ID (e.g. tt2741602)\n\nreturn title, description, release_date, id, irating, vote_count, meta, popularity, youtube_trailer_key"], ["Get Movies by Year", "return movie results with title, year , id"], ["Get Similar Movies", "return movie results with title , release date , id"], ["Get Box-Office Movies", "return movie results with title , year , id"], ["Get Trending Movies", "return movie results with title , year , id"], ["Get Now Playing Movies", "return movie results with title, year, id"], ["Get Popular Movies by Year", "return movie results with title , year , id"], ["Get Movie Aliases by ID", "A valid Movie ID (e.g. tt1375666)\nreturn movie aliases"], ["Get Movie Images by ID", "A valid Movie ID (e.g. tt1375666)\nreturn title, id, poster, fanart"], ["Get Movies By Title", "Result set includes all search results\nEach item includes fields:\nTitle\nYear\nMovie  ID"], ["Get Movie by ID", "A valid Movie ID (e.g. tt1375666)\nreturn Title, Description, Year, Release Date, Rated, Runtime, Genre, Directors, Actors, Languages, Country\n Rating, votes, Popularity, id"], ["Get Upcoming Movies", "return movie results with title, year, id"], ["Get TV Series Seasons By ID", "A valid TV Series ID (e.g. tt2741602)\nreturn Season number, season air date, Episode count, Season trailer"], ["Get Similar TV Shows", "return tv series results with title, id, release date"], ["Get Recently Added Movies by Release Date", "get recently added movies \nreturn title, year,  id"]]}, "Advanced Movie Search": {"tool_desc": "Search for movies via advanced queries like genre, name, etc.", "apis": [["Genre List", "Get list of all available genres"], ["Search by Genre", "Discover movies by Genre"], ["Search by Name", "Search a movie by query string"], ["Get Detailed Response", "Get detailed response for a movie ID"]]}}, "Advertising": {"20211230 testing upload swagger": {"tool_desc": "20211230 testing upload swagger", "apis": [["/open-api/v1.0/indoor-air-quality/iot/", "Apply for this API to access the steps for indoor air quality information about IoT device - v2"]]}, "FreePlanwithHardLimit": {"tool_desc": "FreePlanwithHardLimit", "apis": [["getPetById", "Returns a single pet"], ["getInventory", "Returns a map of status codes to quantities"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"]]}, "PublicAPITestingInbox": {"tool_desc": "PublicAPITestingInbox", "apis": [["getPetById", "Returns a single pet"], ["getInventory", "Returns a map of status codes to quantities"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"]]}, "16e0e5f7a076c2f62a2e41f6b5b99d37e5b9b25e": {"tool_desc": "all links", "apis": [["venture", "Link to any suggestions on a nail"]]}, "recash": {"tool_desc": "This is an api created for collect data from amazon promo codes available it update fast so no worry about anything", "apis": [["Search", "This will filter what you want from the products on the data base"], ["All products", "This will gives you all the products with codes on the data base"]]}, "httpbin": {"tool_desc": "httpbin", "apis": [["GET /anything", "Forward to httpbin GET /anything endpoint"]]}, "ThisshouldbeFREE": {"tool_desc": "ThisshouldbeFREE", "apis": [["getPetById", "Returns a single pet"], ["getInventory", "Returns a map of status codes to quantities"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"]]}, "Revdl": {"tool_desc": "Revdl", "apis": [["App  downloader", "Ity ny api  *mi-downloader*an'le `apps`"]]}, "Facebook Ad": {"tool_desc": "Generate Facebook Ad using AI", "apis": [["Facebook Ad Copy", "Generate Facebook Ad using AI"]]}, "PetstoreRateLimit": {"tool_desc": "PetstoreRateLimit", "apis": [["getPetById", "Returns a single pet"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"], ["getInventory", "Returns a map of status codes to quantities"]]}, "YouTuber Success Estimator": {"tool_desc": "Estimates how successful a hypothetical video from a given YouTube channel will be in the first 30 days of its lifecycle.", "apis": [["estimate", "Submit a YouTube `channelId` value along with the `channelType` as query param values appended to the endpoint for getting back the estimated video view performance of the submitted channel.\n\n## Example\nThis submits a request for the estimated 30 day video view performance of the YouTube channel with that unique `channelId` value provided in the query param\n\n`GET /api/v0/dmt_estimator?channelId=UChQl2YkLt3dj-KDyGUBzcHw&channelType=youtube`\n\n## FAQ\n\nQ. Does the DMT Channel Estimator support other platforms like TikTok?\nA. This is currently planned and in development - if you have ideas for other platforms you'd like to be supported feel free to reach out!\n\nQ.  What is the accuracy of the estimations?\nA. This estimator has been tested in dozens of real-life campaigns with clients spending 6-7 figures on each influencer native ad campaign, totaling out in a median margin of error of 10%. Not bad!\n\nWe will say that while most channels have a certain degree of predictability in terms of performance, more popular *and* less frequently posting channels are outliers that the estimator will only be so accurate in estimating.\n\nQ. So no guarantees? How should I use this?\nA. Use it like the creators of the API have: as a way to understand baseline performance of a given influencer's channel and how you can back out of that with your own campaign's goals to a pricing number that makes sense.\n\nQ. Is there an offering for this API to integrate *directly* into my application?\nA. Yes, feel free to reach out and we can discuss more custom integrations including callback url support\n\nQ. Can I reach out if I am interested in doing a YouTube or broader influencer campaign activation?\nA. Yes, feel free to reach out and we can make a recommendation to you: [Best of Bold Agency](https://www.bestofbold.com/?utm_source=dmt-estimator)\n\nQ. What is the SLA for fixing bugs?\nA. ASAP! We dont have one much more official than that, we are focused availability and making sure the predictions are as accurate as possible\n\nQ. Will you expose the prediction model?\nA. No plans to do this for now, if you have ideas for prediction models or if and how you would like to incorporate your own, feel free to reach out!"]]}, "PrivatePublicAPI": {"tool_desc": "This is a sample server Petstore server.", "apis": [["getPetById", "Returns a single pet"], ["getUserByName", "Get user by user name"], ["logoutUser", "Logs out current logged in user session"], ["getInventory", "Returns a map of status codes to quantities"], ["loginUser", "Logs user into the system"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"]]}, "Abstract IP geolocation": {"tool_desc": "Get the location of any IP along with city, region, country, lat/long data, and more here https://www.abstractapi.com/ip-geolocation-api.", "apis": [["Geolocation from an IP Address", "Get Geolocation from an IP Address"]]}, "pe-demo": {"tool_desc": "pe-demo", "apis": [["View status code and message", "View status code and message for the specified value."], ["View a personalized greeting", "View a personalized greeting for the specified or guest user."], ["View API affirmation", "View API affirmation in HTML format."], ["View personalized greeting", "View a personalized greeting for the specified or guest user."], ["View request headers and body", "View the request headers and body in JSON format."], ["Validate access using basic authentication", "Validate access using basic authentication."], ["View JSON response", "View a sample response in JSON format."], ["View XML response", "View a sample response in XML format."], ["View IP address", "View the IP address of the client in JSON format."], ["Get help", "View help information about available resources in HTML format."]]}, "Social media caption": {"tool_desc": "Generate catchy captions for social media", "apis": [["Social Media Caption", "Generate catchy captions for social media"]]}, "People Lookup": {"tool_desc": "People Lookup API helps you search for and find phone, email, linkedin and more information for people in the USA", "apis": [["lookup", "Lookup people by name and US state (optional)"]]}, "MultipleTeamsCallingTest": {"tool_desc": "MultipleTeamsCallingTest", "apis": [["loginUser", "Logs user into the system"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"], ["getPetById", "Returns a single pet"], ["getInventory", "Returns a map of status codes to quantities"], ["getUserByName", "Get user by user name"], ["logoutUser", "Logs out current logged in user session"]]}, "petstore blitz": {"tool_desc": "asdgasdg", "apis": [["getPetById", "Returns a single pet"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10.  Other values will generated exceptions"], ["getInventory", "Returns a map of status codes to quantities"]]}, "AdCopy AI - Google Ads AI Text Generation": {"tool_desc": "AdCopy AI: The perfect solution for SEM and PPC marketers.", "apis": [["Fetch Async Content", "Provide async prompt and threadid to fetch content.\nThis endpoint is Free and you are allowed to pull it once every 2 seconds to fetch your content."], ["API Key Validation", "This endpoint is used only to validate API Keys, it simply returns a status of 200 and a message of 'OK'. \nThe use of this endpoint is Free, and is useful for server-to-server FREE API validation."], ["10+ Ad Descriptions Generator (~ 25 Seconds)", "Get relevant & Complint Google Ad descriptions for SEM and PPC marketers, created by SEM Experts. Results include 10+ ad descriptions, and are based on user inputs as well as A.I. Intelligence based on OpenAI's engine. \n\n**Detailed description:**\nThe Descriptions generator endpoint uses advanced prompt engineering to analyze user inputs in the form of URL, subject, and important keywords to create high-quality ad descriptions that are tailored to the product or service being advertised. By leveraging the advanced capabilities of OpenAI's ChatGPT engine, the endpoint is able to deliver top-of-the-line ad descriptions that are optimized for relevance, clarity, and engagement.\n\n**Detailed Technical Documentation:**\nThe Descriptions generator endpoint of AdCopy AI can be accessed through a GET request, with the following query parameters:\n\n**subject:** Required. A string of between 10 and 60 characters, which represents the \"value proposition\" of the product or service being advertised. The user is advised to provide keywords in a comma-delimited format.\n\n**url:** Required. A string that represents the URL of a page that describes the product or service being advertised. The API will fetch the content from the page and extract relevant keywords to help generate quality ads.\n\n**mostImportantKeywords:** Optional. A string of up to 100 characters, representing the most important keywords about the ad group being advertised. The presence of these keywords in the resulting content is not guaranteed.\n\n**language:** Optional. A string that represents the target audience's language in ISO-2 format (e.g. EN, IT, ES, etc.). The field is currently in alpha testing and may not provide results in the requested language.\n\n**country:** Optional. A string that represents the target audience's country in ISO-2 format (e.g. US, CA, IT, etc.). The field is currently in alpha testing and may not provide country-specific content.\n\n**exampleDescriptions:** Optional. A string of at most 200 characters, representing example descriptions that the user may provide to fine-tune the results.\n\nThe endpoint will return up to 10 ad descriptions that are tailored to the product or service being advertised. The descriptions will be optimized for relevance, clarity, and engagement, leveraging the advanced capabilities of OpenAI's ChatGPT engine and Significat Prompt Optimization  for your specific ad and product  or service requirement.\n\nTry it now, for free."], ["20+ Ad Headlines Generator (~ 25 Seconds)", "Get relevant & Complint Google Ad headlines for SEM and PPC marketers, created by SEM Experts. Results include 10+ ad headlines, and are based on user inputs as well as A.I. Intelligence based on OpenAI's engine. \n\n**Detailed description:**\nThe Headlines generator endpoint uses advanced prompt engineering to analyze user inputs in the form of URL, subject, and important keywords to create high-quality ad headlines that are tailored to the product or service being advertised. By leveraging the advanced capabilities of OpenAI's ChatGPT engine, the endpoint is able to deliver top-of-the-line ad headlines that are optimized for relevance, clarity, and engagement.\n\n**Detailed Technical Documentation:**\nThe Headlines generator endpoint of AdCopy AI can be accessed through a GET request, with the following query parameters:\n\n**subject:** Required. A string of between 10 and 60 characters, which represents the \"value proposition\" of the product or service being advertised. The user is advised to provide keywords in a comma-delimited format.\n\n**url:** Required. A string that represents the URL of a page that describes the product or service being advertised. The API will fetch the content from the page and extract relevant keywords to help generate quality ads.\n\n**mostImportantKeywords:** Optional. A string of up to 100 characters, representing the most important keywords about the ad group being advertised. The presence of these keywords in the resulting content is not guaranteed.\n\n**language:** Optional. A string that represents the target audience's language in ISO-2 format (e.g. EN, IT, ES, etc.). The field is currently in alpha testing and may not provide results in the requested language.\n\n**country:** Optional. A string that represents the target audience's country in ISO-2 format (e.g. US, CA, IT, etc.). The field is currently in alpha testing and may not provide country-specific content.\n\n**exampleHeadlines:** Optional. A string of at most 200 characters, representing example headlines that the user may provide to fine-tune the results.\n\nThe endpoint will return up to 10 ad headlines that are tailored to the product or service being advertised. The headlines will be optimized for relevance, clarity, and engagement, leveraging the advanced capabilities of OpenAI's ChatGPT engine and Significat Prompt Optimization."], ["Ad Generator (20+ Head. and 10+ Desc.) (~ 1 Min)", "Get a relevant & Compliant Google Ad, for SEM and PPC marketers, created by SEM Experts. Result includes 10+ ad descriptions &  20+ headlines, and  is based on user inputs as well as A.I. Intelligence based on OpenAI's engine. \n\n**Detailed description:**\nThe Full Ad generator endpoint combines the power of the headlines AI generator with the descriptions AI generator to generator a full set of Google Ad Dynamic Search Ad consisting of 4 descriptions and 15 headlines ( though we provide more so you could pick and choose the best ones ). \n\nThis API endpoint uses advanced prompt engineering to analyze user inputs in the form of URL, subject, and important keywords to create high-quality ad descriptions that are tailored to the product or service being advertised. By leveraging the advanced capabilities of OpenAI's ChatGPT engine, the endpoint is able to deliver top-of-the-line ad descriptions that are optimized for relevance, clarity, and engagement.\n\n**Detailed Technical Documentation:**\nCombined the Descriptions & Headlines generator endpoint of AdCopy AI into a single GET request, with the following query parameters:\n\n**subject:** Required. A string of between 10 and 60 characters, which represents the \"value proposition\" of the product or service being advertised. The user is advised to provide keywords in a comma-delimited format.\n\n**url:** Required. A string that represents the URL of a page that describes the product or service being advertised. The API will fetch the content from the page and extract relevant keywords to help generate quality ads.\n\n**mostImportantKeywords:** Optional. A string of up to 100 characters, representing the most important keywords about the ad group being advertised. The presence of these keywords in the resulting content is not guaranteed.\n\n**language:** Optional. A string that represents the target audience's language in ISO-2 format (e.g. EN, IT, ES, etc.). The field is currently in alpha testing and may not provide results in the requested language.\n\n**country:** Optional. A string that represents the target audience's country in ISO-2 format (e.g. US, CA, IT, etc.). The field is currently in alpha testing and may not provide country-specific content.\n\n**exampleDescriptions:** Optional. A string of at most 200 characters, representing example descriptions that the user may provide to fine-tune the results.\n\n**exampleHeadlines:** Optional. A string of at most 200 characters, representing example headlines that the user may provide to fine-tune the results.\n\nThe endpoint will return at least 10 ad descriptions and at least 20 headlines that are tailored to the product or service being advertised. \n\nThe Headlines & Descriptions will be optimized for relevance, clarity, and engagement, leveraging the advanced capabilities of OpenAI's ChatGPT engine and Significat Prompt Optimization for your specific ad and product  or service requirement.\n\nTry it now, for free."]]}, "Free IP Geolocation": {"tool_desc": "A Free IP Geolocation service", "apis": [["Multi-language support", "Get an IP's country name in a different language. 5 languages are currently supported i.e. English - en, German - de, French - fr, Japanese - ja and Simplified Chinese -zh-CN. The response will contain an ASCII encoded version of the country name in the language you specify."], ["Any IP", "Get the location, city, country, lat/long etc of any IP address"]]}, "SEO Automations": {"tool_desc": "Optimize your website effortlessly with SEOOptimizeAPI - the powerful tool that provides valuable insights and automates repetitive tasks.", "apis": [["Extract top Keywords, Phrases by density + all headers", "Analyze any webpage's keyword density for SEO or research. Get the specified number of keywords or phrases you wish, sorted by density and occurrences in a JSON format. The algorithm has been optimized for pages with large amounts of text, as well as advanced cloud infrastracure ensuring accurate and speedy results for your SEO needs. This API uses Puppeteer to scrape even the most advanced SPA ( Single Page Applications )."], ["Extract Sitemap XML as JSON", "Are you looking for an API that can quickly and easily download and parse sitemap.xml files into JSON format? Look no further! Our API allows you to make a simple GET request, passing in the URL of a sitemap.xml file as a parameter. The API will handle the rest, downloading the file, parsing it into a JSON object, and returning the result in the response. And if you need a little extra information to help organize and navigate the URLs in the sitemap, we've got you covered there too. By adding a query parameter to the GET request, you can also include category and breadcrumb information for each URL in the parsed sitemap. Give it a try and see how much easier working with sitemaps can be!"]]}, "ThisisaPublicAPI_v2": {"tool_desc": "ThisisaPublicAPI", "apis": [["getPetById", "Returns a single pet"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"], ["getInventory", "Returns a map of status codes to quantities"]]}}, "Reward": {"Kitten Placeholder": {"tool_desc": "Generate random pictures of cute kittens or adorable cats for your applications, website, or just for your personal amusement.", "apis": [["Kitten", "Fetches random kitten image!"], ["Cat", "Fetches a random cat picture."]]}, "Rewards as a Service": {"tool_desc": "Create an account, fund an account, manage a catalog, send rewards and get reporting \u2014 all available on demand, in real time and as a service.", "apis": [["4. Get list of rewards", "Gets the list of rewards available for the platform"], ["2. Get Account Information", "Get the information for an account created under a Customer"], ["6. Get order information", "Get more information about an order"], ["7. Get order history", "Get more information about all the orders placed on this customer and account"]]}}, "Finance": {"Webchain": {"tool_desc": "Webchain codebase is fully compatible with Ethereum Classic interface.", "apis": [["Webchain", "WEBCHAIN: A Blockchain for DApps, Secured via Websites"]]}, "Transaction": {"tool_desc": "Get transaction details", "apis": [["getPaymentInitiationInstructionSummary", "Get all payment initiation instructions allows to retrieve all customer credit transfer initiations. If the number of results exceeds the default limit, the response will be paginated. The operation allows filtering the results based on the creation from date and creation to date. The result is filtered based on \"creation_date_time\". The endpoint will return an empty array when no resource is found."], ["getDirectDebitInitiationInstructionSummary", "Get all direct debit initiation instructions allows to retrieve all direct debit initiation instruction. If the number of results exceeds the default limit, the response will be paginated. The operation allows filtering the results based on the creation from date and creation to date. The result is filtered based on \"creation_date_time\". The endpoint will return an empty array when no resource is found."], ["getDirectDebitInitiationInstruction", "Use this operation to retrieve a direct debit initiation instruction by ID (UETR)."], ["getPaymentInitiationInstruction", "Use this operation to retrieve a payment initiation instruction by ID (UETR)."]]}, "Crypto Arbitrage": {"tool_desc": "Find cryptocurrency arbitrage opportunities in real-time across over 120 exchanges and  1400 pairs.", "apis": [["crypto-arb", "Detects the exchanges with the highest bid and lowest ask for the currency pair provided by the user. Users can allow trading fees (market taker fees from each exchange) to be considered. It returns:\n\n**1- Arbitrage Profit:** The return of a trade where the currency is bought from the exchange with the lowest ask and sold in the exchange with the highest bid. If positive, an arbitrage opportunity has been detected.\n**2- Data for Highest Bid and Lowest Ask Exchanges:**  Exchange name, price, time, volume, and considered fees for both exchanges.\n**3- List of Exchanges Considered**\n\nAllowed pairs:\n['BTC/AUD', 'BTC/CAD', 'BTC/EUR', 'BTC/GBP', 'BTC/HKD', 'BTC/JPY', 'BTC/NZD', 'BTC/SGD', 'BTC/USD', 'BTC/PLN', 'LTC/BTC', 'DASH/BTC', 'DOGE/BTC', 'ETH/BTC', 'XRP/BTC', 'BCH/BTC', 'BCH/USD', 'BTG/BTC', 'BTG/USD', 'DASH/USD', 'ETH/USD', 'LTC/USD', 'BCH/PLN', 'BTG/PLN', 'LTC/PLN', 'ETH/EUR', 'LTC/EUR', 'XRP/USD', 'BTC/CNY', 'BTC/TRY', 'ETC/BTC', 'ETH/TRY', 'BCH/CNY', 'ETH/CNY', 'LTC/CNY', 'BTC/CZK', 'BTC/INR', 'LTC/AUD', 'BTC/BRL', 'BTC/CLP', 'BTC/PKR', 'BTC/VEF', 'BTC/VND', 'BTC/SEK', 'BTC/RUB', 'BCH/UAH', 'BTC/UAH', 'ETH/UAH', 'LSK/BTC', 'ETC/CNY', 'BCH/BRL', 'LTC/BRL', 'XMR/BTC', 'ZEC/BTC', 'BCH/EUR', 'BCH/ETH', 'BTS/BTC', 'GAME/BTC', 'GNT/BTC', 'GNT/ETH', 'NXT/BTC', 'OMG/BTC', 'OMG/ETH', 'PPC/BTC', 'REP/BTC', 'REP/ETH', 'XEM/BTC', 'XLM/BTC', 'ZRX/BTC', 'ZRX/ETH', 'BAT/BTC', 'BAT/ETH', 'CVC/BTC', 'CVC/ETH', 'EOS/BTC', 'EOS/ETH', 'SAN/BTC', 'SAN/ETH', 'SNT/BTC', 'SNT/ETH', 'TRX/BTC', 'TRX/ETH', 'EUR/USD', 'XRP/EUR', 'AMP/BTC', 'ARDR/BTC', 'BCH/USDT', 'BCY/BTC', 'BLK/BTC', 'BTC/USDT', 'BURST/BTC', 'CLAM/BTC', 'CRW/BTC', 'DASH/USDT', 'DCR/BTC', 'DGB/BTC', 'EMC2/BTC', 'ETC/ETH', 'ETC/USDT', 'ETH/USDT', 'EXP/BTC', 'FCT/BTC', 'FLDC/BTC', 'FLO/BTC', 'FUN/BTC', 'FUN/ETH', 'GNO/BTC', 'GNO/ETH', 'GRC/BTC', 'LBC/BTC', 'LTC/USDT', 'MAID/BTC', 'MANA/BTC', 'MANA/ETH', 'NAV/BTC', 'NEO/BTC', 'NEO/ETH', 'NEOS/BTC', 'NXC/BTC', 'NXT/USDT', 'OMNI/BTC', 'PAY/BTC', 'PAY/ETH', 'PINK/BTC', 'POT/BTC', 'QTUM/BTC', 'QTUM/ETH', 'RADS/BTC', 'RCN/BTC', 'RCN/ETH', 'RLC/BTC', 'RLC/ETH', 'SBD/BTC', 'SC/BTC', 'STEEM/BTC', 'STORJ/BTC', 'STRAT/BTC', 'SYS/BTC', 'VIA/BTC', 'VRC/BTC', 'VTC/BTC', 'XCP/BTC', 'XMR/USDT', 'XRP/USDT', 'XVC/BTC', 'ZEC/ETH', 'ZEC/USDT', 'BSD/BTC', 'NMC/BTC', 'PTC/BTC', 'SPK/BTC', 'SPK/USD', 'XMR/USD', 'XVG/BTC', 'BCH/GBP', 'BTG/EUR', 'DASH/EUR', 'ZEC/USD', 'BITB/BTC', 'BTA/BTC', 'BTCD/BTC', 'BTG/ETH', 'DASH/ETH', 'EFL/BTC', 'LTC/ETH', 'MONA/BTC', 'NLG/BTC', 'NVC/BTC', 'OK/BTC', 'RDD/BTC', 'SLR/BTC', 'START/BTC', 'XPM/BTC', 'BTC/MXN', '1ST/BTC', '1ST/ETH', 'ARK/BTC', 'AVT/BTC', 'AVT/ETH', 'AVT/USD', 'BNT/BTC', 'BNT/ETH', 'BT1/BTC', 'BT2/BTC', 'BTG/USDT', 'CMT/BTC', 'CMT/ETH', 'DASH/BCH', 'DAT/BTC', 'DAT/ETH', 'DAT/USD', 'DGB/ETH', 'DGD/BTC', 'DGD/ETH', 'DNT/BTC', 'DNT/ETH', 'EDO/BTC', 'EDO/ETH', 'EDO/USD', 'ELF/BTC', 'ELF/ETH', 'ELF/USD', 'ENG/BTC', 'ENG/ETH', 'EOS/USD', 'ETC/USD', 'FUN/USD', 'GAS/BTC', 'GAS/ETH', 'GNT/USD', 'ICN/BTC', 'ICN/ETH', 'INS/BTC', 'INS/ETH', 'IOTA/BTC', 'IOTA/ETH', 'IOTA/USD', 'LTC/BCH', 'MCO/BTC', 'MCO/ETH', 'NEO/USD', 'NEO/USDT', 'NGC/BTC', 'NGC/ETH', 'OMG/USD', 'OMG/USDT', 'QTUM/USD', 'RCN/USD', 'SALT/BTC', 'SALT/ETH', 'SAN/USD', 'SMT/BTC', 'SMT/USD', 'SNGLS/BTC', 'SNT/USD', 'STORJ/ETH', 'TNB/BTC', 'TNB/ETH', 'TNB/USD', 'TRX/USD', 'UKG/BTC', 'UKG/ETH', 'VIB/BTC', 'VIB/ETH', 'XEM/ETH', 'XLM/ETH', 'XLM/USD', 'XLM/USDT', 'XMR/ETH', 'XRP/ETH', 'ZEN/BTC', 'ZRX/USD', 'AID/BTC', 'AID/ETH', 'AID/USD', 'BAT/USD', 'ETP/BTC', 'ETP/ETH', 'ETP/USD', 'MNA/BTC', 'MNA/ETH', 'MNA/USD', 'REP/USD', 'RLC/USD', 'RRT/BTC', 'RRT/USD', 'SNG/BTC', 'SNG/ETH', 'SNG/USD', 'SPK/ETH', 'YYW/BTC', 'YYW/ETH', 'YYW/USD', 'ADX/BTC', 'ADX/ETH', 'AEON/BTC', 'AMM/BTC', 'AMM/ETH', 'AMM/USDT', 'ANT/BTC', 'ARN/BTC', 'ATL/BTC', 'BCN/BTC', 'BNT/USDT', 'BTM/BTC', 'BTM/ETH', 'BTM/USDT', 'CFI/BTC', 'CFI/ETH', 'CTR/BTC', 'CTR/ETH', 'CTR/USDT', 'CVC/USDT', 'DATA/BTC', 'DATA/ETH', 'DCT/BTC', 'DENT/ETH', 'DGB/USDT', 'DOGE/ETH', 'EDG/BTC', 'EDO/USDT', 'EMC/BTC', 'EOS/USDT', 'EVX/BTC', 'EVX/ETH', 'EVX/USDT', 'FUN/USDT', 'GUP/BTC', 'HSR/BTC', 'ICX/BTC', 'ICX/ETH', 'ICX/USDT', 'KMD/BTC', 'LA/ETH', 'LEND/BTC', 'LEND/ETH', 'LRC/BTC', 'LRC/ETH', 'LSK/ETH', 'LUN/BTC', 'MANA/USDT', 'MCO/USDT', 'MTH/BTC', 'MTH/ETH', 'NGC/USDT', 'OAX/BTC', 'OAX/ETH', 'OAX/USDT', 'POE/BTC', 'POE/ETH', 'PPT/BTC', 'PPT/ETH', 'PTOY/BTC', 'PTOY/ETH', 'QTUM/USDT', 'QVT/ETH', 'REP/USDT', 'SBTC/BTC', 'SMS/BTC', 'SMT/ETH', 'SMT/USDT', 'SNC/BTC', 'SNC/ETH', 'SNC/USDT', 'SNM/ETH', 'SNT/USDT', 'SPF/ETH', 'STRAT/ETH', 'SUB/BTC', 'SUB/ETH', 'SUB/USDT', 'SWFTC/BTC', 'SWFTC/ETH', 'SWFTC/USDT', 'SWT/BTC', 'TIO/BTC', 'TIO/ETH', 'TIO/USDT', 'TIX/ETH', 'TRST/BTC', 'TRX/USDT', 'VIB/USDT', 'VOISE/BTC', 'WAVES/BTC', 'WINGS/BTC', 'WRC/BTC', 'WRC/ETH', 'WRC/USDT', 'WTC/BTC', 'XDN/BTC', 'XEM/USDT', 'XUC/BTC', 'XUC/ETH', 'XUC/USDT', 'XVG/USDT', 'ZRX/USDT', 'ETH/GBP', 'BTC/CHF', 'GBP/USD', 'HMQ/BTC', 'SNM/BTC', 'TIME/BTC', 'TIME/ETH', 'USD/RUB', 'BAY/BTC', 'BBP/BTC', 'BBP/USD', 'DASH/DOGE', 'DOGE/USD', 'ELM/BTC', 'ETH/DOGE', 'EVR/BTC', 'GLD/BTC', 'GRS/BTC', 'HSR/USD', 'IOP/BTC', 'MCAP/BTC', 'MLM/BTC', 'MLM/LTC', 'MLM/USD', 'NVC/DOGE', 'ODN/BTC', 'ORME/BTC', 'OTX/BTC', 'R/BTC', 'RGC/BTC', 'SIB/BTC', 'UNO/BTC', 'UNO/DOGE', 'XAUR/BTC', 'ZSC/BTC', 'BTC/IDR', 'BTC/ZAR', 'DASH/LTC', 'ETH/LTC', 'NVC/USD', 'ZEC/LTC', 'PPC/USD', '1ST/USDT', 'ADX/USDT', 'AE/BTC', 'ANT/ETH', 'AST/BTC', 'AST/ETH', 'AST/USDT', 'BMC/BTC', 'BMC/ETH', 'BMC/USDT', 'DGD/USDT', 'DNT/USDT', 'ENG/USDT', 'GBG/BTC', 'GNT/USDT', 'GOLOS/BTC', 'GUP/ETH', 'HMQ/ETH', 'ICN/USDT', 'INCNT/BTC', 'IND/ETH', 'INS/USDT', 'KNC/BTC', 'KNC/ETH', 'KNC/USDT', 'LUN/ETH', 'MGO/BTC', 'MGO/USDT', 'MLN/BTC', 'NET/ETH', 'PAY/USDT', 'PLU/BTC', 'PLU/ETH', 'PRO/ETH', 'QRL/BTC', 'QRL/ETH', 'REQ/BTC', 'REQ/ETH', 'REQ/USDT', 'SALT/USDT', 'SAN/USDT', 'SNGLS/ETH', 'SNGLS/USDT', 'SNM/USDT', 'STORJ/USDT', 'STX/BTC', 'STX/ETH', 'STX/USDT', 'TAAS/BTC', 'TAAS/ETH', 'TKN/BTC', 'TNT/BTC', 'TNT/ETH', 'TNT/USDT', 'TRST/ETH', 'VEN/BTC', 'VEN/ETH', 'VEN/USDT', 'WAVES/ETH', 'WINGS/ETH', 'XZC/BTC', 'ETH/PLN', 'KICK/BTC', 'USDT/USD', 'ZEC/EUR', 'DASH/RUB', 'ETH/RUB', 'LTC/RUB', 'XMR/EUR', 'ZEC/RUB', 'BTC/PHP', 'ETH/AUD', 'ETH/IDR', 'QASH/BTC', 'QASH/ETH', 'QASH/USD', 'UBTC/BTC', 'UBTC/ETH', 'UBTC/USD', 'XRP/IDR', 'ADA/BTC', 'ADA/USDT', 'AE/ETH', 'AE/USDT', 'ARN/ETH', 'BAT/USDT', 'BCD/BTC', 'BCD/USDT', 'BCX/BTC', 'CDT/ETH', 'CDT/USDT', 'DATA/USDT', 'DOGE/USDT', 'DPY/ETH', 'DPY/USDT', 'DRGN/ETH', 'ELF/USDT', 'FUEL/ETH', 'FUEL/USDT', 'GAS/USDT', 'GNX/ETH', 'GNX/USDT', 'GTC/BTC', 'GTC/ETH', 'HSR/ETH', 'HSR/USDT', 'IOTA/USDT', 'KICK/ETH', 'LEND/USDT', 'LINK/ETH', 'LINK/USDT', 'LRC/USDT', 'LSK/USDT', 'LUN/USDT', 'MDA/ETH', 'MDA/USDT', 'MDT/BTC', 'MDT/ETH', 'MDT/USDT', 'MKR/ETH', 'MKR/USDT', 'NAS/BTC', 'NAS/ETH', 'NAS/USDT', 'OCN/BTC', 'OCN/ETH', 'OST/ETH', 'OST/USDT', 'POWR/BTC', 'POWR/ETH', 'PST/ETH', 'PST/USDT', 'RCN/USDT', 'RDN/ETH', 'RDN/USDT', 'SBTC/USDT', 'THETA/ETH', 'THETA/USDT', 'WAVES/USDT', 'XTZ/USDT', 'ZSC/ETH', 'ZSC/USDT', 'AUD/USD', 'BTC/NGN', 'USD/CAD', 'USD/CHF', 'USD/HKD', 'USD/JPY', 'USD/SGD', 'PPC/EUR', 'AIR/BTC', 'AIR/ETH', 'AIR/USDT', 'ART/BTC', 'ATB/BTC', 'ATB/ETH', 'ATB/USDT', 'ATM/BTC', 'ATM/ETH', 'ATM/USDT', 'ATS/BTC', 'ATS/ETH', 'AVH/BTC', 'B2X/BTC', 'B2X/ETH', 'B2X/USDT', 'BAS/ETH', 'BCN/ETH', 'BCN/USDT', 'BET/ETH', 'BKB/BTC', 'BMT/BTC', 'BMT/ETH', 'BOS/BTC', 'BQX/BTC', 'BQX/ETH', 'BQX/USDT', 'BTCA/BTC', 'BTCA/ETH', 'BTCA/USDT', 'BTX/BTC', 'BTX/USDT', 'BUS/BTC', 'BitClave/BTC', 'BitClave/ETH', 'BitClave/USDT', 'C20/BTC', 'C20/ETH', 'CAS/BTC', 'CAS/ETH', 'CAS/USDT', 'CCT/ETH', 'CDT/BTC', 'CDX/ETH', 'CHAT/BTC', 'CHAT/ETH', 'CHAT/USDT', 'CL/BTC', 'CL/ETH', 'CL/USDT', 'CLD/BTC', 'CLD/ETH', 'CLD/USDT', 'CND/BTC', 'CND/ETH', 'CND/USDT', 'CNX/BTC', 'COSS/BTC', 'COSS/ETH', 'COV/BTC', 'COV/ETH', 'CPAY/ETH', 'CSNO/BTC', 'CTX/BTC', 'CTX/ETH', 'DBIX/BTC', 'DCN/ETH', 'DCN/USDT', 'DDF/ETH', 'DICE/BTC', 'DICE/ETH', 'DIM/BTC', 'DIM/ETH', 'DIM/USDT', 'DLT/BTC', 'DOV/BTC', 'DOV/ETH', 'DRPU/BTC', 'DRPU/ETH', 'DRT/ETH', 'DRT/USDT', 'DSH/BTC', 'EBET/ETH', 'EBTC/BTC', 'EBTC/ETH', 'EBTC/USDT', 'EBTCOLD/BTC', 'EBTCOLD/ETH', 'EBTCOLD/USDT', 'ECH/BTC', 'EET/BTC', 'EET/ETH', 'EET/USDT', 'EKO/BTC', 'EKO/ETH', 'ELE/BTC', 'EMC/ETH', 'EMC/USDT', 'ENJ/BTC', 'ENJ/ETH', 'ENJ/USDT', 'ERO/BTC', 'ETBS/BTC', 'ETP/USDT', 'EXN/BTC', 'FCN/BTC', 'FRD/BTC', 'FUEL/BTC', 'FYN/ETH', 'FYP/BTC', 'GRMD/BTC', 'GVT/ETH', 'HAC/BTC', 'HDG/ETH', 'HGT/ETH', 'HPC/BTC', 'HVN/BTC', 'HVN/ETH', 'ICO/BTC', 'ICOS/BTC', 'ICOS/ETH', 'ICOS/USDT', 'IDH/BTC', 'IDH/ETH', 'IGNIS/ETH', 'INDI/BTC', 'IPL/BTC', 'ITS/BTC', 'IXT/BTC', 'IXT/ETH', 'KBR/BTC', 'KMD/ETH', 'KMD/USDT', 'LAT/BTC', 'LIFE/BTC', 'LOC/BTC', 'LOC/ETH', 'LOC/USDT', 'MAID/ETH', 'MAID/USDT', 'MIPS/BTC', 'MNE/BTC', 'MSP/ETH', 'MYB/ETH', 'NDC/ETH', 'NEBL/BTC', 'NEBL/ETH', 'NTO/BTC', 'NXT/ETH', 'OPT/BTC', 'OTN/BTC', 'PING/BTC', 'PIX/BTC', 'PIX/ETH', 'PLBT/BTC', 'PLR/BTC', 'PLR/ETH', 'PLR/USDT', 'POLL/BTC', 'PPC/USDT', 'PRE/BTC', 'PRG/BTC', 'PRG/ETH', 'PRG/USDT', 'QAU/BTC', 'QAU/ETH', 'QCN/BTC', 'RKC/ETH', 'RVT/BTC', 'SBTC/ETH', 'SCL/BTC', 'SISA/BTC', 'SISA/ETH', 'SKIN/BTC', 'SMART/BTC', 'SMART/ETH', 'SMART/USDT', 'SMS/ETH', 'SMS/USDT', 'STAR/ETH', 'STORM/BTC', 'STRAT/USDT', 'STU/BTC', 'STU/ETH', 'STU/USDT', 'SUR/BTC', 'SUR/ETH', 'SUR/USDT', 'SWT/ETH', 'TBT/BTC', 'TGT/BTC', 'TKR/ETH', 'TRAC/ETH', 'UET/ETH', 'UGT/BTC', 'UGT/ETH', 'UGT/USDT', 'ULTC/BTC', 'UTT/BTC', 'UTT/ETH', 'UTT/USDT', 'VERI/BTC', 'VERI/ETH', 'VERI/USDT', 'VIBE/BTC', 'W3C/BTC', 'W3C/ETH', 'WAX/BTC', 'WAX/ETH', 'WAX/USDT', 'WMGO/BTC', 'WMGO/USDT', 'XAUR/ETH', 'XDN/ETH', 'XDN/USDT', 'XDNCO/BTC', 'XTZ/BTC', 'XTZ/ETH', 'XVG/ETH', 'YOYOW/BTC', 'ZAP/BTC', 'ZRC/BTC', 'ADA/ETH', 'AION/BTC', 'AION/ETH', 'APPC/BTC', 'APPC/ETH', 'ARK/ETH', 'BRD/BTC', 'BRD/ETH', 'GXS/BTC', 'IOST/BTC', 'IOST/ETH', 'LINK/BTC', 'MDA/BTC', 'MTL/BTC', 'MTL/ETH', 'NANO/BTC', 'NANO/ETH', 'NULS/BTC', 'NULS/ETH', 'OST/BTC', 'PIVX/BTC', 'QSP/ETH', 'RDN/BTC', 'STEEM/ETH', 'WTC/ETH', 'YOYO/BTC', 'YOYO/ETH', 'BCX/USDT', 'BTS/USDT', 'INK/BTC', 'INK/USDT', 'QUN/BTC', 'QUN/USDT', 'TOPC/BTC', 'TOPC/USDT', 'TRUE/BTC', 'TRUE/USDT', 'UBTC/USDT', '611/BTC', 'ACP/BTC', 'ADCN/BTC', 'B2B/BTC', 'BDL/BTC', 'BELA/BTC', 'BITB/DOGE', 'BITB/ETH', 'BIZ/BTC', 'BQ/BTC', 'BRIT/BTC', 'CALC/BTC', 'CANN/BTC', 'CJ/BTC', 'DGC/BTC', 'DNR/BTC', 'DOGE/LTC', 'DP/BTC', 'DRGN/BTC', 'ECN/BTC', 'ECN/LTC', 'EGC/BTC', 'ERT/BTC', 'ETHOS/BTC', 'ETHOS/ETH', 'EXCL/BTC', 'FAIR/BTC', 'FCH/BTC', 'FTC/BTC', 'GAM/BTC', 'GB/BTC', 'GLTC/BTC', 'GMX/BTC', 'HMC/BTC', 'ICE/BTC', 'ILC/BTC', 'INXT/BTC', 'KLC/BTC', 'LA/BTC', 'LINDA/BTC', 'LMC/BTC', 'LTC/DOGE', 'MAG/BTC', 'MEME/BTC', 'MER/BTC', 'MINT/BTC', 'MOIN/BTC', 'MOON/BTC', 'MOON/DOGE', 'MUE/BTC', 'MXT/BTC', 'NLC2/BTC', 'PCS/BTC', 'PIVX/ETH', 'PRO/BTC', 'PTS/BTC', 'PURA/BTC', 'REV/BTC', 'RIYA/BTC', 'RMC/BTC', 'SYNX/BTC', 'TCOIN/BTC', 'TRC/BTC', 'TUN/BTC', 'UNO/ETH', 'VOISE/ETH', 'VOX/BTC', 'VSX/BTC', 'XBC/BTC', 'XCXT/BTC', 'XGOX/BTC', 'XSH/BTC', 'YOC/BTC', 'ZCL/BTC', 'ZEIT/BTC', 'ZENI/BTC', 'ZZC/BTC', 'ACT/BTC', 'ACT/ETH', 'AIDOC/BTC', 'AIDOC/ETH', 'BIFI/BTC', 'DBC/BTC', 'DBC/ETH', 'GNX/BTC', 'IOST/USDT', 'ITC/BTC', 'ITC/ETH', 'MDS/ETH', 'MTN/ETH', 'PROPY/BTC', 'QSP/BTC', 'QUN/ETH', 'RUFF/BTC', 'RUFF/ETH', 'SOC/BTC', 'SOC/ETH', 'SRN/BTC', 'SRN/ETH', 'STK/BTC', 'STK/ETH', 'THETA/BTC', 'TOPC/ETH', 'UTK/BTC', 'UTK/ETH', 'YEE/BTC', 'YEE/ETH', 'ZIL/ETH', 'CAN/BTC', 'CAN/ETH', 'DENT/BTC', 'FCT/ETH', 'IND/BTC', 'MTN/BTC', 'SPHTX/BTC', 'SPHTX/ETH', 'UBTC/QASH', 'BTC/THB', 'HYP/BTC', 'LEO/BTC', 'ZET/BTC', 'BCH/JPY', 'ETH/JPY', 'ACC/BTC', 'BASH/BTC', 'BOT/QTUM', 'INK/QTUM', 'INT/BTC', 'IQT/BTC', 'OC/BTC', 'QBT/QTUM', 'TSL/QTUM', 'UGC/ETH', 'ETH/HKD', 'GAT/BTC', 'GAT/ETH', 'GTO/BTC', 'GTO/ETH', 'IFT/BTC', 'KEY/BTC', 'KEY/ETH', 'LEV/BTC', 'LEV/ETH', 'MGO/ETH', 'BNTY/ETH', 'GXS/ETH', 'INK/ETH', 'OXY/BTC', 'PART/BTC', 'PUT/BTC', 'PUT/ETH', 'UNIT/BTC', 'VIU/BTC', 'YBCT/BTC', 'AGI/BTC', 'AGI/ETH', 'CPC/BTC', 'DRGN/USDT', 'EDG/ETH', 'MSP/BTC', 'TKS/BTC', 'VEE/BTC', 'VEE/ETH', 'VSL/BTC', 'WBTC/BTC', 'BCH/AUD', 'ACT/BCH', 'AMB/BTC', 'AMB/ETH', 'BCD/ETH', 'BCPT/BTC', 'BCPT/ETH', 'BNTY/BTC', 'CAG/BTC', 'CAG/ETH', 'CAT/BTC', 'CAT/ETH', 'COFI/ETH', 'DBC/USDT', 'DNA/BTC', 'DNA/ETH', 'ELIX/BTC', 'ELIX/ETH', 'GVT/BTC', 'HPB/BTC', 'MOD/BTC', 'MOD/ETH', 'OCN/USDT', 'PRL/BTC', 'PRL/ETH', 'PURA/ETH', 'QLC/BTC', 'QLC/ETH', 'RPX/BTC', 'SNOV/BTC', 'SNOV/ETH', 'TNC/BTC', 'TNC/ETH', 'TNC/USDT', 'XAS/BTC', 'XLR/BTC', 'XRB/BTC', 'ZPT/BTC', 'ZPT/ETH', '1337/BTC', '1337/DOGE', '611/DOGE', '611/LTC', 'ABC/BTC', 'ABC/DOGE', 'ABC/LTC', 'ABY/BTC', 'ADC/BTC', 'ADC/DOGE', 'ADST/BTC', 'ALIS/BTC', 'ALL/BTC', 'ALT/BTC', 'ALT/DOGE', 'ALT/LTC', 'ANI/BTC', 'ARC/BTC', 'ARC/DOGE', 'ARC/LTC', 'ARG/BTC', 'ARGUS/BTC', 'ARK/USDT', 'ATOM/BTC', 'AU/BTC', 'AUR/BTC', 'BAY/DOGE', 'BAY/LTC', 'BCH/DOGE', 'BCH/LTC', 'BDL/DOGE', 'BDL/LTC', 'BENJI/BTC', 'BLK/DOGE', 'BLZ/BTC', 'BSTY/BTC', 'BSTY/DOGE', 'BTA/DOGE', 'BTCD/DOGE', 'BTCS/BTC', 'BTCS/DOGE', 'BTCS/LTC', 'BTDX/BTC', 'CACH/BTC', 'CDN/BTC', 'CDN/DOGE', 'CHESS/BTC', 'CJ/DOGE', 'CJ/LTC', 'CLAM/DOGE', 'CLOAK/BTC', 'CMPCO/BTC', 'CNNC/BTC', 'CQST/BTC', 'CRAVE/BTC', 'CRAVE/DOGE', 'CRAVE/LTC', 'CRC/BTC', 'CRC/DOGE', 'CRC/LTC', 'CREA/BTC', 'CTIC3/BTC', 'CTIC3/DOGE', 'CTIC3/LTC', 'CXT/BTC', 'DALC/BTC', 'DAS/BTC', 'DAS/DOGE', 'DAS/LTC', 'DCN/BTC', 'DCR/DOGE', 'DEM/BTC', 'DEUS/BTC', 'DEUS/DOGE', 'DEUS/LTC', 'DFS/BTC', 'DFS/LTC', 'DGC/DOGE', 'DIME/BTC', 'DIME/DOGE', 'DNR/LTC', 'DOPE/BTC', 'DP/DOGE', 'EC/BTC', 'EC/DOGE', 'EC/LTC', 'EDRC/BTC', 'EFL/DOGE', 'ELM/DOGE', 'ELM/LTC', 'EPC/BTC', 'EQT/BTC', 'ERY/BTC', 'ETC/DOGE', 'ETC/LTC', 'ETHD/BTC', 'ETHD/LTC', 'ETT/BTC', 'ETT/DOGE', 'ETT/LTC', 'EVR/DOGE', 'EVR/LTC', 'EXP/DOGE', 'FAZZ/BTC', 'FJC/BTC', 'FJC/DOGE', 'FLASH/BTC', 'GBX/BTC', 'GBYTE/BTC', 'GCN/BTC', 'GCN/LTC', 'GDC/BTC', 'GEERT/BTC', 'GEO/BTC', 'GLD/DOGE', 'GLD/LTC', 'GP/BTC', 'GRS/DOGE', 'GRS/LTC', 'GRWI/BTC', 'GRWI/DOGE', 'GRWI/LTC', 'HAL/BTC', 'HBC/BTC', 'HC/BTC', 'HEAT/BTC', 'HEAT/DOGE', 'HEAT/LTC', 'HSR/DOGE', 'HSR/LTC', 'HST/BTC', 'INFX/BTC', 'INSN/BTC', 'IXC/BTC', 'KAYI/BTC', 'KAYI/DOGE', 'KGB/BTC', 'KOBO/BTC', 'KRONE/BTC', 'KRONE/DOGE', 'KRONE/LTC', 'KURT/BTC', 'LBTC/BTC', 'LDC/BTC', 'LINDA/DOGE', 'LINDA/LTC', 'LINX/BTC', 'LUX/BTC', 'LUX/DOGE', 'LUX/LTC', 'MAC/BTC', 'MEC/BTC', 'MINEX/BTC', 'MNM/BTC', 'MOIN/DOGE', 'MOIN/LTC', 'MOJO/BTC', 'MST/BTC', 'MUSIC/BTC', 'MYB/BTC', 'MZC/BTC', 'NAMO/BTC', 'NAMO/DOGE', 'NAMO/LTC', 'NLC2/DOGE', 'NLC2/LTC', 'NMC/DOGE', 'NOTE/BTC', 'NOTE/DOGE', 'NOTE/LTC', 'NVC/LTC', 'NXS/BTC', 'ODN/DOGE', 'ODN/LTC', 'OK/DOGE', 'ONION/BTC', 'ORB/BTC', 'ORME/DOGE', 'ORME/LTC', 'OX/BTC', 'OX/DOGE', 'OX/LTC', 'PBL/BTC', 'PIGGY/BTC', 'PLX/BTC', 'PND/BTC', 'POST/BTC', 'POSW/BTC', 'POT/DOGE', 'PPC/DOGE', 'PROC/BTC', 'PROC/DOGE', 'PROC/LTC', 'PURA/DOGE', 'PURA/LTC', 'PUT/LTC', 'QRK/BTC', 'QWARK/BTC', 'R/DOGE', 'R/LTC', 'RAIN/BTC', 'RBY/BTC', 'RDD/DOGE', 'RIYA/DOGE', 'RIYA/LTC', 'RKC/BTC', 'RKC/DOGE', 'RKC/LTC', 'RNS/BTC', 'RUP/BTC', 'SBC/BTC', 'SBC/DOGE', 'SBC/LTC', 'SCT/BTC', 'SFC/BTC', 'SIB/DOGE', 'SIB/LTC', 'SLG/BTC', 'SLG/DOGE', 'SMART/DOGE', 'SPR/BTC', 'SRC/BTC', 'START/DOGE', 'STC/BTC', 'STN/BTC', 'TER/BTC', 'TER/LTC', 'TIX/BTC', 'TOA/BTC', 'TOA/DOGE', 'TOA/LTC', 'TRC/DOGE', 'TRC/LTC', 'TRUMP/BTC', 'TRUMP/DOGE', 'TRUMP/LTC', 'TSE/BTC', 'TSE/DOGE', 'TX/BTC', 'UBQ/BTC', 'UNIFY/BTC', 'UNO/LTC', 'VIDZ/BTC', 'VRC/DOGE', 'VRM/BTC', 'VUC/BTC', 'VUC/DOGE', 'VUC/LTC', 'WDC/BTC', 'WDC/DOGE', 'XBL/BTC', 'XBTS/BTC', 'XBY/BTC', 'XBY/DOGE', 'XBY/LTC', 'XCO/BTC', 'XCT/BTC', 'XCXT/DOGE', 'XCXT/LTC', 'XGOX/LTC', 'XID/BTC', 'XMCC/BTC', 'XMG/BTC', 'XMY/BTC', 'XPM/DOGE', 'XST/BTC', 'YOVI/BTC', 'ZEC/DOGE', 'ZEIT/DOGE', 'ZEIT/LTC', 'ZET/DOGE', 'ZOI/BTC', 'ZSE/BTC', 'ETH/CAD', 'MLN/ETH', 'XLM/EUR', 'ADZ/BTC', 'AMM/USD', 'ARC/USD', 'ATX/BTC', 'B2B/ETH', 'BCC/BTC', 'BCH/RUR', 'BLU/BTC', 'BNT/USD', 'BTB/BTC', 'BTC/RUR', 'CCRB/BTC', 'CDX/BTC', 'CPC/ETH', 'CTR/USD', 'CURE/BTC', 'CVC/USD', 'DASH/RUR', 'DGD/USD', 'DMC/BTC', 'DMD/BTC', 'DOLLAR/BTC', 'EL/BTC', 'EL/USD', 'ENT/BTC', 'ESP/BTC', 'ETH/RUR', 'FLIXX/BTC', 'FLIXX/ETH', 'GRS/ETH', 'GRS/USD', 'GRX/BTC', 'GRX/ETH', 'HST/ETH', 'ITI/BTC', 'KNC/USD', 'KPL/BTC', 'KPL/USD', 'KRB/BTC', 'LEO/USD', 'LSK/USD', 'LTC/RUR', 'LUNA/BTC', 'MCO/USD', 'MCR/BTC', 'MNX/BTC', 'MSCN/BTC', 'MTL/USD', 'OD/BTC', 'PAY/USD', 'POSW/LTC', 'PRES/BTC', 'RBIES/BTC', 'SHIFT/BTC', 'SNGLS/USD', 'SPF/BTC', 'STORJ/USD', 'STRAT/USD', 'SUMO/BTC', 'SXC/BTC', 'TER/ETH', 'TFL/BTC', 'TFL/ETH', 'TKN/ETH', 'UNY/BTC', 'UNY/LTC', 'UNY/USD', 'UQC/BTC', 'UQC/ETH', 'USD/RUR', 'VIB/USD', 'VLTC/BTC', 'VRS/BTC', 'VRS/USD', 'XEM/USD', 'XSPEC/BTC', 'YOC/USD', 'B3/BTC', 'BTX/DOGE', 'BTX/ETH', 'BTX/LTC', 'ECN/DOGE', 'NAV/DOGE', 'NAV/ETH', 'NAV/LTC', 'NKA/BTC', 'NKA/DOGE', 'NKA/LTC', 'NSR/BTC', 'TZC/BTC', 'TZC/DOGE', 'TZC/LTC', 'XCN/BTC', 'XMCC/DOGE', 'XMCC/LTC', 'XVG/DOGE', 'XVG/LTC']"]]}, "NFTs by address": {"tool_desc": "Get all NFTs owned by an address at scale", "apis": [["getNFTs_byaddress", "Gets all NFTs currently owned by a given address. Unlimited, results display in 100s."], ["getNFTs_metadata", "Get NFTs metadata, attributes and enclosed media."]]}, "Live Metal Prices": {"tool_desc": "Live prices for Gold, Silver, Palladium and Platinum in 160+ currencies including USD, GBP and EUR.", "apis": [["Latest In chosen currency", "Select what you need for a smaller payload! Real-time Gold, Silver, Palladium, Platinum and 160+ currency rates based on selected Currency"], ["Latest Selected Metals in Selected Currency In Grams", "Select what you need for a smaller payload! Real-time Gold, Silver, Palladium, Platinum and 160+ currency rates based on selected Currency"], ["Latest (retrieve XAU, XAG, PA, PL, EUR, GBP, USD)", "Real-time Gold, Silver, Palladium and Platinum prices delivered in USD, GBP and EUR."], ["Latest (retrieve selected 160+ Symbols)", "Select what you need for a smaller payload! Real-time Gold, Silver, Palladium, and Platinum provided in 160+ currencies including USD, GBP and EUR."]]}, "NumbersToLetters": {"tool_desc": "Convierte cantidad a letras peso Mexicano, Espa\u00f1ol e Ingles", "apis": [["Convertir cantidad a letra Moneda MXN Espa\u00f1ol", "Convierte de cantidad a letras pesos Mexicano EndPoind Espa\u00f1ol\nSe agrego el parametro **moneda**, los tipos aceptados para este parametro son los siguientes (PESOS, DOLARES, EUROS), TODO EN MAYUSCULAS."], ["Convertir cantidad a letra Moneda MXN Ingles", "Convertir cantidad a letra Moneda MXN en Ingles"]]}, "Alpaca Trading": {"tool_desc": "API for commission-free US stock trading", "apis": [["Get the account", "Returns the account associated with the API key"], ["Get a list of orders", "Retrieves a list of orders for the account, filtered by the supplied query parameters."], ["Get an order", "etrieves a single of order for the given order_id."], ["Get open positions", "Retrieves a list of the account's open positions."], ["Get the clock", "Returns the market clock"], ["Get the calendar", "Returns the market calendar"]]}, "IP2Currency": {"tool_desc": "IP2Currency Exchange Rate Web Service provides the user with an easy way to get a localized & latest Currency Exchange Rate based on the visitor's IP address.", "apis": [["IP2Currency API", "Currency by IP Geolocation API"]]}, "Morning Star": {"tool_desc": "", "apis": [["stock/v2/key-stats/get-cash-flow", "Get key stats cash flow in the Valuation tab"], ["stock/v2/get-short-interest", "Mapped to Short Interest section in Quote tab"], ["stock/v2/get-competitors", "Mapped to Competitors section in Quote tab"], ["stock/v2/get-splits", "Mapped to Dividends tab"], ["stock/v2/get-financial-details", "Mapped to Expand Details View section found in Financials  tab"], ["stock/v2/get-dividends", "Mapped to Dividends tab"], ["stock/v2/get-ownership", "Mapped to Ownership tab"], ["stock/v2/get-mini-chart-quote", "Used to draw chart in Quote tab"], ["stock/v2/get-executive", "Mapped to Executive tab"], ["stock/v2/get-financials", "Mapped to Financials  tab"], ["stock/v2/get-trailing-total-returns", "Mapped to Trailing Returns  tab"], ["stock/v2/get-analysis-report", "Get detail information of stock, market"], ["stock/v2/get-key-stats", "Mapped to Key Ratios section in Quote tab"], ["stock/v2/get-realtime-data", "Get detail information of stock, market"], ["stock/v2/key-stats/get-operating-efficiency", "Get key stats operating efficiency in the Valuation tab"], ["stock/v2/key-stats/get-financial-health", "Get key stats financial health in the Valuation tab"], ["stock/v2/get-risk-rating-breakdown", "Get risk rating breakdown in the Sustainability tab"], ["stock/v2/get-news", "Get news in the News tab"], ["stock/v2/get-trading-information", "Get Trading Information in the Quote tab"], ["market/v2/get-movers", "Get movers, such as : actives, gainers, losers,  etc..."], ["market/v2/auto-complete", "Get auto suggestion by word or phase"], ["market/v2/get-realtime-data", "Query one or more entities data at once"], ["{type}/parent/get-top-medalist-rated-investments", "Get top medalist rated investments as displayed in the Parent tab"], ["{type}/people/get-proxy-voting-shareholder", "Get proxy voting shareholder as displayed in the People tab"], ["{type}/portfolio/get-holdings", "Get holdings as displayed in the Portfolio tab"], ["{type}/people/get-proxy-voting-management", "Get proxy voting management as displayed in the People tab"], ["{type}/people/get-summary", "Get summary information as displayed in the People tab"], ["{type}/portfolio/get-coupon-range", "Get coupon range as displayed in the Portfolio tab"], ["{type}/price/get-taxes", "Get taxes as displayed in the Price tab"], ["{type}/get-disclosure-flag", "Get disclosure flag related to an ETF or FUND"], ["{type}/get-mini-chart-realtime-data", "Get data to draw mini chat"], ["{type}/price/get-fee-level", "Get fee level as displayed in the Price tab"], ["{type}/get-morningstar-analysis", "Get Morningstar's analysis related to an ETF or FUND"], ["{type}/sustainability/get-esg-risk", "Get ESG risk in the Sustainability tab"], ["{type}/parent/get-investment-flows", "Get investment flows as displayed in the Parent tab"], ["{type}/performance/get-annual-distributions", "Get annual distributions in the Performance tab"], ["{type}/risk/get-market-volatility-measures", "Get market volatility measures in the Risk tab"], ["{type}/parent/get-summary", "Get summary information as displayed in the Parent tab"], ["{type}/portfolio/get-fixed-income-exposure-analysis", "Get fixed income exposure analysis as displayed in the Portfolio tab"], ["{type}/portfolio/get-maturity-schedule", "Get maturity schedule as displayed in the Portfolio tab"], ["{type}/portfolio/get-historical-fixed-income-style", "Get historical fixed income style as displayed in the Portfolio tab"], ["{type}/portfolio/get-current-fixed-income-style", "Get current fixed income style as displayed in the Portfolio tab"], ["{type}/portfolio/get-exposure", "Get exposure as displayed in the Portfolio tab"], ["{type}/portfolio/get-asset-allocation", "Get asset allocation as displayed in the Portfolio tab"], ["{type}/price/get-cost-illustration", "Get cost illustration as displayed in the Price tab"], ["{type}/risk/get-risk-return-analysis", "Get risk return analysis in the Risk tab"], ["{type}/risk/get-risk-return-summary", "Get summary of risk return in the Risk tab"], ["{type}/risk/get-risk-volatility-measures", "Get risk volatility measures in the Risk tab"], ["{type}/sustainability/get-carbon-metrics", "Get carbon metrics in the Sustainability tab"], ["{type}/performance/get-latest-distributions", "Get latest distributions in the Performance tab"], ["{type}/performance/get-trailing-returns", "Get trailing returns in the Performance  tab related to an ETF or FUND"], ["{type}/get-realtime-data", "Get realtime data related to an ETF or FUND"], ["{type}/get-quote", "Get quote related to an ETF or FUND"], ["stock/v2/get-analysis-data", "Mapped to Analysis section in Quote tab"], ["stock/v2/get-security-info", "Mapped to Quote section in Quote tab"], ["stock/v2/get-price-fair-value", "Mapped to Price vs Fair Value  tab"], ["stock/get-quote (Deprecated)", "Get stock quote information"], ["stock/get-detail", "Get detail information of stock, market"], ["stock/v2/get-risk-rating-assessment", "Get risk rating assessment in the Sustainability tab"], ["stock/v2/get-instruments", "Mapped to Competitors section in Quote tab"], ["stock/v2/get-operating-performance", "Mapped to Operating Performance tab"], ["stock/v2/get-profile", "Mapped to Company Profile section in Quote  tab"], ["stock/v2/get-mini-chart-realtime-data", "Used to draw chart in Quote tab"], ["stock/v3/get-profile", "Mapped to Company Profile section in Quote  tab"], ["stock/v2/key-stats/get-growth-table", "Get key stats growth in the Valuation tab"], ["stock/v2/key-stats/get-overview", "Get key stats overview in the Valuation tab"], ["stock/get-histories", "Get stock, market histories"], ["stock/v2/get-valuation", "Mapped to Valuation  tab"], ["market/get-global-indices", "Get information of global indices"], ["market/v2/get-quotes (Deprecated)", "Query one or multiple quotes at once.\n* This endpoint is deprecated, use .../stock/v2/get-realtime-data endpoint instead"], ["market/get-movers(Deprecated)", "Get top 10 gainers, losers, actives of specific market\n* This endpoint is deprecated, use .../market/v2/get-movers endpoint instead"], ["market/auto-complete", "Get auto complete suggestion for stocks"], ["market/get-videos", "Get latest videos in the market"], ["market/get-articles", "Get latest articles in the market"], ["market/get-commentaries", "Get latest commentaries in the market"], ["market/v2/get-time-series", "Query one or more entities data at once in time series manner"], ["market/get-summary", "Get live summary information at the request time"], ["market/v2/get-returns", "Get market return by years"], ["{type}/performance/get-returns", "Get returns in the Performance  tab related to an ETF or FUND"], ["{type}/parent/get-lowest-rated-investments", "Get lowest rated investments as displayed in the Parent tab"], ["{type}/analysis/get-archived", "Get Morningstar's analysis archived related to an ETF or FUND"], ["{type}/parent/get-medalist-rating", "Get medalist rating as displayed in the Parent tab"], ["{type}/parent/get-morningstar-rating", "Get Morningstar's rating as displayed in the Parent tab"], ["{type}/parent/get-recent-investment-rating-change", "Get recent investment rating change as displayed in the Parent tab"], ["{type}/portfolio/get-credit-quality", "Get credit quality as displayed in the Portfolio tab"], ["{type}/price/get-other-fees", "Get other fees as displayed in the Price tab"], ["{type}/parent/get-highest-rated-investments", "Get highest rated investments as displayed in the Parent tab"], ["{type}/sustainability/get-product-involvement", "Get product involvement in the Sustainability tab"], ["{type}/analysis/get-comparables", "Get Morningstar's analysis comparables related to an ETF or FUND"]]}, "Sales Tax by API-Ninjas": {"tool_desc": "Calculate US sales tax by city or zip code.", "apis": [["/v1/salestax", "API Ninjas Sales Tax API endpoint. Returns one or more sales tax breakdowns by ZIP code according to the specified parameters. Each breakdown includes the state sales tax (if any), county sales tax (if any), city sales tax (if any), and any additional special sales taxes. All tax values are presented in decimals (e.g. 0.1 means 10% tax).\n\nExactly one of the following must be set: zip_code or (city + state)"]]}, "Chaingateway.io": {"tool_desc": "Blockchain API to connect Web 2.0 with Web 3.0 in an easy way.", "apis": [["clearAddress", "Sends all available ethereum funds of an address to a specified receiver address."], ["listSubscribedAddresses", "Returns all subscriptions/IPNs created with an account."], ["getLastBlockNumber", "Returns the block number of the last mined ethereum block."], ["getTransactions", "Returns information like confirmations, token contract address, amount, gas price and more of a given transaction."], ["subscribeAddress", "Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore."], ["unsubscribeAddress", "Deletes an existing subscription/IPN for the given address (and contractaddress)."], ["getToken", "Returns information about a specific ERC20 token like name, symbol, decimal places and total supply."], ["sendToken", "Sends ERC20 tokens from an address controlled by the account to a specified receiver address. The token contract address is needed to specify the token. The use of the identifier parameter is recommend and awaits an unique string. Whenever a transaction is beeing sent, the identifier is checked and the transaction gets dropped if there is one with that identifier already."], ["getEthereumBalance", "Returns the ethereum balance of a given address."], ["listAddresses", "Returns all ethereum addresses created with an account."], ["getExchangeRate", "Returns the current Ethereum price in Euro or US Dollar."], ["sendEthereum", "Sends ethereum from an address controlled by the account to a specified receiver address."], ["getTokenBalance", "Returns the token balance of a given address."], ["getGasPrice", "Returns the current gas price in GWEI."], ["newAddress", "Generates a new ethereum addresses you can use to send or receive funds. Do not lose the password! We can't restore access to an address if you lose it."], ["deleteAddress", "Deletes an existing ethereum address. Be careful when using this function."], ["getBlock", "Returns information of an ethereum block with or without transactions"], ["exportAddress", "Returns all ethereum addresses created with an account."], ["importAddress", "Returns all ethereum addresses created with an account."]]}, "Kiann_Options_Project": {"tool_desc": "Testing project to allow users on options pricing and risk analytics.", "apis": [["vol_strike", "This function generates the implied-volatility (lognormal) for a given, specified delta. The convention works with delta of 0.10 is specified via 0.90 in the argument, as we generate the delta from a 'call option' function.\n\nThis is the standard function to generate the 25-delta and 10-delta risk-reversals and butterfly which provides the market-conventions for the volatility-skew and volatility-smile.\n\nstrike_: List  of absolute strikes,\n vols_:  List of lognormal annualized volatilities,\nr_: float of risk-free-rate,\nS_: float of the spot:\nT_ : the time-to-expiry of the option\ndelta_target: float, the desired delta where you want the implied volatility"], ["opt_rho", "option lognormal greeks : delta calculates the delta, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), type_  =call (c) /put (p) (string), ret_= 0 (default) for use in rapidAPI.com"], ["opt_theta", "option lognormal greeks : theta calculates the theta, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), type_  =call (c) /put (p) (string), ret_= 0 (default) for use in rapidAPI.com"], ["opt_vega", "option lognormal greeks : vega calculates the vega, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), type_  =call (c) /put (p) (string), ret_ = 0 (default) for use in rapidAPI.com"], ["opt_gamma", "option lognormal greeks : gamma calculates the gamma, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), cp  =call (c) /put (p) (string), type_ = 0 (default) for use in rapidAPI.com"], ["opt_delta", "option lognormal greeks : delta calculates the delta, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), cp  =call (c) /put (p) (string), type_ = 0 (default) for use in rapidAPI.com\n\n\nr: float, S: float, K: float, T: float, sigma: float, type_: str =\"c\", ret_: int = 1"], ["normal_call", "params = {\"k\": 1.0, \"f\": 1.0, \"t\": 1.0, \"v\":0.3, \"r\":0.0, \"cp\":\"call\"}"], ["lognormal_call", "Black-Scholes Pricer/premium, Lognormal vols. Params are as per :\nk = strike (float)\nf = forward (float)\nt = time-to-expiry (float)\nv = implied volatility, lognormal, annualized (float)\nr = risk-free-rate (float). Note can be combined with dividend, funding, risk-free rate into one value"]]}, "Investing": {"tool_desc": "This API provides complete data from Investing.com.", "apis": [["Futures Expiration Calendar", "This endpoint provides information about the futures expiration calendar."], ["Stock Split Calendar", "This endpoint provides information about the stock split calendar."], ["Dividends Calendar", "This endpoint provides information about the dividends calendar."], ["IPO calendar", "This endpoint provides information about the IPO calendar."], ["Earnings Calendar", "This endpoint provides information about the earnings calendar."], ["Holiday Calendar", "This endpoint provides information about the holiday calendar."], ["Economic Calendar", "This endpoint provides information about the economic calendar."], ["Get List Countries", "This endpoint provides the Country List information available for the 'Stock Info' tag"], ["World News", "This endpoint provides the world news"], ["Politics News", "This endpoint provides the politic news"], ["Economic Indicators News", "This endpoint provides the economic indicators news"], ["Economy News", "This endpoint provides the economy news"], ["Currency News", "This endpoint provides the currency news"], ["Commodities News", "This endpoint provides the commodities news"], ["Stock Market News", "This endpoint provides the stock market news"], ["Cryptocurrency News", "This endpoint provides the news on cryptocurrency"], ["Latest News", "This endpoint provides the latest news on stocks, commodities, money, politics, etc"], ["Popular News", "This endpoint provides the popular news on stocks, commodities, money, politics, etc"], ["Metals Futures Prices", "page source : https://www.investing.com/commodities/metals"], ["Softs Futures Prices", "page source : https://www.investing.com/commodities/softs"], ["Commodity Groups", "Get data for commodity groups"], ["Grains Futures Prices", "page source : https://www.investing.com/commodities/grains"], ["Commodity Indices", "page source : https://www.investing.com/indices/commodities-indices"], ["Real Time Commodity Futures Prices", "page source : https://www.investing.com/commodities/real-time-futures"], ["List of Countries for Stocks", "This is a list of available countries, it is used as a request on another endpoint."], ["List Markets", "This endpoint returns a list of markets available on this API."]]}, "SCipherCrypto": {"tool_desc": "SCipherCrypto a cryptocurrency market data API.", "apis": [["TopTier /summary", "This response returns an ascending crypto coins the rank varies the way you choose limit if you choose 10 as limit you will get the top 10 cryptos\n->limit= Options are: 1-->100\n->page= Options are: 1-->100 based on limit rate \n->assetClass= Options are: ALL,DEFI,NFT\n->tsym\" typically stands for \"to symbol\", which represents the cryptocurrency that the conversion rate is being calculated for."], ["Conversion", "example from \"BTC\" (Bitcoin) to \"USDT\" (Tether)\nThis JSON response contains data for the cryptocurrency example:Ethereum (ETH), including its name, algorithm, block number, launch date, and market performance ratings. It also includes conversion information for ETH to USDT, such as the current market cap, total volume, and conversion rate. use the correct symbol in order to get an accurate data."]]}, "Stock and Options Trading Data Provider": {"tool_desc": "No.", "apis": [["Options", "Stock and Options Data"]]}, "Webit Blockchain": {"tool_desc": "Get blockchain data from Ethereum, Polygon, Binance, Solana mainnets, including Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets.", "apis": [["Get Balance", "Get balance from any wallet on different blockchains, including Ethereum, Polygon, Binance, Solana mainnets, including Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets."], ["Converter", "Convert ETH, BSC, MATIC, SOL currencies to bigger or smaller units with ease.\n\nSupported currencies:\nETH (Ethereum);\nBSC (Binance);\nMATIC (Polygon);\nSOL (Solana).\n\nETH, BSC and MATIC all share the same units, since Binance and Polygon are L2 fork networks built on top of Ethereum."], ["Estimate gas", "Estimate gas required by send transaction and smart contract method call on multiple blockchains.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`."], ["Chain ID", "Retrieve Chain ID for the selected blockchain.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `solana`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`."], ["Gas price", "Get current gas price with a single API call on multiple chains.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`."], ["Get latest (current) block", "Get latest (current) block being currently mined.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `solana`;\n- `polygon-mumbai`."], ["Generate Wallet", "Generate a new crypto wallet.\n\nSupported blockchains are Ethereum, Polygon, Binance mainnets and Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets."]]}, "Stock And Options": {"tool_desc": "No.", "apis": [["Options", "Return Stock and Options Data for given ticker"], ["Straddle", "Return options data in straddle format"]]}, "Fidelity Investments": {"tool_desc": "Query for quote data, market movers, international markets,  sector performance, orders, chart, and news", "apis": [["auto-complete (Deprecated)", "Auto suggestion by input name or quote.\n* This endpoint is deprecated"], ["v2/auto-complete (Deprecated)", "Auto suggestion by input name or quote"], ["v3/auto-complete", "Auto suggestion by input name or quote"], ["quotes/get-chart", "Get information to draw chart"], ["market/get-international", "Get international markets information"], ["market/get-orders", "Get orders by Fidelity customers"], ["news/list-top", "List top news from all supported area"], ["market/get-movers", "Get market movers which are most actives, top gainers, top losers"], ["quotes/get-mashup", "Get additional information for specific quote, market"]]}, "Kiann_Options_SABR": {"tool_desc": "Options Volatility Model SABR (z-shift).", "apis": [["local_hist", "This function pulls out the latest 5 time-stamp snapshot of the 3-degree polynomial calibrated parameters, for local-Volatility model across the strike and expiry axis.\nThere are choices of either 'btc' or 'eth'.\n\nThe  parameters can be seen in the header of x^3, x^2*y, x^1 * y^2, etc, ......... and intercept."], ["sabr_hist", "This function pulls out the latest 5 time-stamp snapshot of the SABR calibrated parameters.\nThere are choices of either 'btc' or 'eth'.\n\nThe data returns, amongst, the time-to-expiry, the error-in-calibration (where error = sum[abs(target_vol - sabr_vol)]"], ["sabr_calib", "A simplistic least-error fit to retrieve sabr parameters given arrays of (lognormal)vols and strikes. Note that, it does not explicitly calibrate to ATMF vols.\n\nParams as per below.\nparams = {\"fwd_\" : 1655, \"shift_\": 0.0, \"time_\": 0.159, \"beta\" : 0.9, \"k_\": [strikes_], \"vols_\": [vols_], \"ret_\": 0}\n\nNote that in the (python) request.get, k_ should be of format [x1, x2, x3,........ ] where there is no \"\", similarly for [vols_]"], ["sabr_Norm", "This is the implementation of the SABR model (z-shift) under the normal volatility mode, with the parameters as follows:\nK_ : strike, fwd_ : forward, shift_ : z-shift, time_ : time-to-expiry, alpha : sabr alpha, beta : sabr beta, rho : sabr rho, volvol : sabr volvol\nmethod_ : internal mode for two modes of calibration. Default of 1\nret_ : set of 0, to return proper json format"], ["sabr_log", "This is the implementation of the SABR model (z-shift) under the Lognormal volatility mode, with the parameters as follows:\nK_ : strike, fwd_ : forward, shift_ : z-shift, time_ : time-to-expiry, alpha : sabr alpha, beta : sabr beta, rho : sabr rho, volvol : sabr volvol\nmethod_ : internal mode for two modes of calibration. Default of 1\nret_ : set of 0, to return proper json format"], ["funcOne", "Testing function for the SABR module"]]}, "ExchangeRate-API": {"tool_desc": "Free currency conversion API for all 160 world currencies.", "apis": [["Latest Rates", "This endpoint returns the latest exchange rates for the base currency code you have supplied.\n\nYou can view the list of supported currency codes here: [https://www.exchangerate-api.com/docs/supported-currencies](https://www.exchangerate-api.com/docs/supported-currencies)"]]}, "RetrieveUSTaxRate": {"tool_desc": "Retrieve the US sales tax rate by zip code", "apis": [["GetTaxRateByZip", "Retrieve the US tax rate by zip code"]]}, "Merchant credit card reward": {"tool_desc": "Merchant enrichment API with the detailed consumer credit card reward info for any global credit card merchant and credit card.", "apis": [["Merchant credit card reward lookup", "This is an API designed to retrieve comprehensive information about merchants, in addition to providing associated data on qualifying credit card rewards."]]}, "Bybit": {"tool_desc": "Public Data Bybit.", "apis": [["Latest Symbol Info By BaseCoin", "Return all ticker info by passed base coin"], ["Query historical volatility", "The data is in hourly.\nIf time field is not passed, it returns the recent 1 hour data by default.\nIt could be any timeframe by inputting startTime & endTime, but it must satisfy [endTime - startTime] <= 30 days.\nIt returns all data in 2 years when startTime & endTime are not passed.\nBoth startTime & endTime entered together or both are left blank"], ["Query Last 500 Trades", "Returned records are Taker Buy in default."], ["Contract Info", "Query for all if blank."], ["OrderBook", "Query order book info. Each side has a depth of 25 orders."], ["Get Open Interest", "Gets the total amount of unsettled contracts. In other words, the total number of contracts held in open positions."], ["Get Latest Information For Symbol", "Get all latest information for symbol"], ["Get Instrument Info", "Query launched instruments info list"], ["Get the Last Funding  Rate", "The funding rate is generated every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC. For example, if a request is sent at 12:00 UTC, the funding rate generated earlier that day at 08:00 UTC will be sent."], ["Query Index Price Kline", "Index price kline. Tracks BTC spot prices, with a frequency of every second."], ["Query Premium Index Kline USDT", "Premium index kline. Tracks the premium / discount of BTC perpetual contracts relative to the mark price per minute."], ["Query Index Price Kline USDT", "Index price kline. Tracks BTC spot prices, with a frequency of every second."], ["Query Mark Price Kline USDT", "Query mark price kline"], ["Latest Big Deal", "Obtain filled orders worth more than 500,000 USD within the last 24h.\n\nThis endpoint may return orders which are over the maximum order qty for the symbol you call. For instance, the maximum order qty for BTCUSD is 1 million contracts, but in the event of the liquidation of a position larger than 1 million this endpoint returns this \"impossible\" order size."], ["Query Premium Index Kline", "Premium index kline. Tracks the premium / discount of BTC perpetual contracts relative to the mark price per minute."], ["Long-Short Ratio", "Gets the Bybit user accounts' long-short ratio."], ["Best Bid/Ask Price", "If symbol is not specified, the best order price from all symbols will be returned"], ["Last Traded Price", "If symbol is not specified, the price from all symbols will be returned"], ["Latest Information  for Symbol", "If symbol is not specified, the data from all symbols will be returned"], ["Get Funding Rate History", "The funding rate is generated every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC. For example, if a request is sent at 12:00 UTC, the funding rate generated earlier that day at 08:00 UTC will be sent."], ["Get Index Price Kline", "Query Index Price Kline"], ["Get Mark Price Kline", "Query mark price kline."], ["Get Order Book", "Get the orderbook. Each side has a depth of 25.\nEnable 500 orders for orderbook API."], ["Announcement", "Get Bybit OpenAPI announcements in the last 30 days in reverse order."], ["Server Time", "Get Bybit server time."], ["Open Interest", "Gets the total amount of unsettled contracts. In other words, the total number of contracts held in open positions."], ["Query Mark Price Kline", "Query mark price kline."], ["Latest Information for Symbol", "Get the latest information for symbol."], ["Order Book", "Get the orderbook. Each side has a depth of 25."]]}, "Get Live Stock Price By Symbol": {"tool_desc": "Get Live Stock Price By Symbol", "apis": [["Price by Symbol", "Get live price of stock by symbol"]]}, "Crypto Asset Cold Wallet Create": {"tool_desc": "A free service that allows you to create cold wallets for various crypto assets such as BTC, ADA, ALGO, ATOM, AVAX, CHZ, DOT, EOS, LINK, MANA, MATIC, SHIB, SOL, TRX, ETH, LTC, XTZ, DOGE, XLM, and XRP.", "apis": [["GetActiveCurrencyList", "The Current Active Currency List REST API allows clients to retrieve a list of currently active currencies by sending a GET request to the endpoint. The endpoint should be in the following format:"]]}, "Crypto Swap": {"tool_desc": "Exchange the crypto of your choice into anyother crypto with an easy to use API", "apis": [["Get Order Status", "Get the data and status of a previously created order"], ["Get All Currencies", "Fetch every currency that is supported by our exchange. The `canSend` and `canReceive` fields determine if we only send/receive or do both to a particular crypto."]]}, "Mortgage Monthly Payment Calculator": {"tool_desc": "Calculate monthly payment (principal + interest) based on the loan amount, interest rate and terms", "apis": [["Monthly Payment", "calculate monthly payment. Add all input to the query parameter string.\nloanAmount, interestRate, and terms."]]}, "Stock Sentiment API": {"tool_desc": "Real-time social sentiment API to track news activity related to a certain stock", "apis": [["News Sentiment Data", "Returns a list of articles related to the input stock and their associated sentiment score.\nThe sentiment score is called compound."], ["Most Negative News", "Returns a list of the most negative articles related to the given stock. The sentiment scores can be viewed in the compound field and you can change the number of articles returned with the count parameter.\n\nNote: The api parses for 100 articles so any count given over 100, the api will just return all 100 articles"], ["Most Positive News", "Returns a list of the most positive articles related to the given stock. The sentiment scores can be viewed in the compound field and you can change the number of articles returned with the count parameter.\n\nNote: The api parses for 100 articles so any count given over 100, the api will just return all 100 articles"], ["Market Data", "Returns a list of daily stock metrics such as opening, closing, highest and lowest prices."]]}, "Crypto Fear & Greed Index": {"tool_desc": "Index calculated by https://alternative.me/crypto/", "apis": [["index", "Extract Fear & Greed index value(s)\n\nQuery params:\nlimit (NUMBER) - Get latest N records (Optional)\ntimestamp (STRING) - Get index value by UTC timestamp (Optional)\n\nIf no query params specified, all available history will be fetched."]]}, "Cryptocurrency Financial Data": {"tool_desc": "Cryptocurrency financial data API for major exchanges.", "apis": [["/trades", "Trades endpoint available upon request"], ["/metrics/ohlcv/trial", "Limited coverage and availability for tests"], ["/metrics/ohlcv/futures/trial", "Limited coverage and availability for tests"], ["/metrics/ohlcv/pro", "Price and volume metrics for spot markets"], ["/metrics/ohlcv/futures/pro", "Price and volume metrics for futures markets"]]}, "YH Finance Complete": {"tool_desc": "This API helps you to query stocks, quotes, movers and other financial summary.", "apis": [["Recommendation Trends", "This endpoint returns Recommendation Trends."], ["Summary Details", "This endpoint returns a summary detailed of any public stock"], ["Simple Summary of the Stocks", "This endpoint returns a Simple Summary of the Stocks"], ["Full Stock Price", "This endpoint returns a stock price."], ["Upgrade Downgrade History", "This endpoint returns a Upgrade Downgrade History."], ["calendar Events", "Calendar Events of a particular stock"], ["Earnings", "This endpoint returns the company earnings."], ["Balansheet/Financials", "This endpoint returns a company/ stock financials"], ["Conversion Rates", "This endpoint returns conversion rates for any currency."], ["YH Historical", "This endpoint returns the history of a public stock."], ["Summary Detail", "This endpoint returns full detail of any public stock"], ["Stock Price", "This endpoint retrieves a price with details for any public stock."], ["Currency Converter", "Looking for a fast and reliable currency converter? Our API endpoint has got you covered! With just a few lines of code, you can easily integrate our endpoint into your application and start converting currencies in no time. Say goodbye to the hassle of manual calculations and let our endpoint handle it all for you. \n\nTry it out today and experience the convenience and efficiency of our currency converter API endpoint."]]}, "Crypto Market Data from Token Metrics": {"tool_desc": "Build cryptocurrency trading strategies based on tested data that actually matters with the Token Metrics Data API.", "apis": [["Indices", "Get indices data powered by Token Metrics"], ["Quantmetrics Tier 1", "Get quant metrics for tokens powered by Token Metrics"], ["Sentiments", "Get market sentiment for tokens powered by Token Metrics"], ["Price Prediction", "Get price prediction for tokens powered by Token Metrics"], ["Resistance & Support", "Get automated Resistance and Support for tokens powered  by Token Metrics"], ["Market Indicator", "Access Market Indicator powered by Token Metrics"], ["Investor Grades", "Access Investor Grades for tokens"], ["Trader Grades", "Access Trader Grades for tokens"]]}, "Webull": {"tool_desc": "Query public data for investment products including stocks, fractional shares, options, ETFs, and ADRs as on webull.com", "apis": [["news/list-by-portfolio", "List news by multiple ticker id"], ["market/get-ipo-center", "Get IPO center information of specific region"], ["market/get-top-gainers", "Get market top gainers in specific region"], ["market/get-top-active", "Get market top active in specific region"], ["market/get-common-ranking", "Get market common ranking in specific region"], ["market/get-earnings", "Get market earnings in specific region"], ["regions/list", "List all supported regions"], ["market/get-summary", "Get market summary at request time for specific region"], ["market/get-dividends", "Get market dividends in specific region"], ["market/get-splits", "Get market splits in specific region"], ["market/get-realtime-quotes", "Get multiple stock quotes in real time."], ["industries/get-performing-detail", "List industry performing detail"], ["market/get-charts", "Get multiple history pricing  charts"], ["market/get-sparks", "Used to draw small charts which often display next to symbols"], ["industries/list-best-performing", "List best performing industries"], ["stock/search", "Search for stock, index, fund, etc... by terms or phrase"], ["stock/get-realtime-quote", "Get stock quote in real time."], ["stock/get-trending-chart", "Get brief pricing history chart in a period of time"], ["stock/get-rating-pricing-target", "Get stock rating and pricing target"], ["stock/get-short-interest", "Get stock short interest"], ["stock/get-cost-distribution-analysis", "Get stock cost distribution and analysis"], ["stock/get-peers", "Get stock peers or ETF"], ["stock/get-industry-sector", "Get relating industry sector"], ["stock/get-financials", "Get relating company financials"], ["stock/get-company-profile", "Get relating company profile"], ["stock/get-performance", "Get stock fund performance"], ["stock/get-fund-profile", "Get stock fund profile"], ["stock/get-asset-allocation", "Get stock fund asset allocation"], ["stock/get-dividends-splits", "Get stock dividends and splits"], ["news/search", "Search for news by terms or phrase"], ["news/list-by-ticker", "List news by ticker id"], ["news/list-flash", "List flash 27/4 news"], ["currencies/list", "List all global currencies and rates"]]}, "JoJ Finance": {"tool_desc": "JoJ Finance API provides real-time market quotes, international exchanges, up-to-date financial news, analytics and more.", "apis": [["Ticker", "Get stats, price, charts, news and information about indexes, stocks, ETFs, cryptocurrencies, currencies and more"], ["Search", "Search for indexes, stocks, ETFs, cryptocurrencies, currencies and more"]]}, "U.S. Economic Indicators": {"tool_desc": "Get key economic indicators for the United States.", "apis": [["M2 Money Stock Adjusted", "Get monthly seasonally adjusted M2 monetary aggregate from the Federal Reserve.  M2 is the money supply that includes all elements of M1 as well as \"near money.\"   Near money refers to savings deposits, money market securities, mutual funds, and other time deposits."], ["M1 Money Stock Adjusted", "Get monthly seasonally adjusted M1 monetary aggregate from the Federal Reserve.  M1 is the money supply that is composed of physical currency and coin, demand deposits, travelers' checks, other checkable deposits, and negotiable order of withdrawal (NOW) accounts."], ["M1 Money Stock Not Adjusted", "Get weekly not seasonally adjusted M1 monetary aggregate from the Federal Reserve.  M1 is the money supply that is composed of physical currency and coin, demand deposits, travelers' checks, other checkable deposits, and negotiable order of withdrawal (NOW) accounts."], ["M2 Money Stock Not Adjusted", "Get weekly not seasonally adjusted M2 monetary aggregate from the Federal Reserve.  M2 is the money supply that includes all elements of M1 as well as \"near money.\"   Near money refers to savings deposits, money market securities, mutual funds, and other time deposits."], ["Mortgage Rate 30-Year Fixed", "Get monthly 30-Year fixed mortgage rates."], ["Nonfarm Payrolls Adjusted", "Get monthly seasonally adjusted nonfarm payrolls."], ["Nonfarm Payrolls Not Adjusted", "Get monthly not seasonally adjusted nonfarm payrolls."], ["Unemployment Rate Adjusted", "Get monthly seasonally adjusted unemployment rate."], ["Unemployment Rate Not Adjusted", "Get monthly not seasonally adjusted unemployment rate."], ["Consumer Price Index", "Get monthly consumer price index referenced to year 2010."], ["10-Year Bond Yield", "Get monthly 10-Year government bond yields."], ["Non-Manufacturing PMI", "Get monthly non-manufacturing Purchasing Managers' Index."], ["Manufacturing PMI", "Get monthly manufacturing Purchasing Managers' Index."], ["Consumer Sentiment Index", "Get monthly Consumer Sentiment Index."], ["Inflation", "Get monthly inflation rates."], ["Prime Loan Rates", "Get daily bank prime loan interest rates."], ["GDP Growth", "Get quarterly percent change of Gross Domestic Product annualized."], ["Fed Funds Overnight Rate", "Get daily federal funds overnight rate at which commercial banks borrow and lend their excess reserves to each other overnight."], ["Fed Policy Rates", "Get daily interest rates paid by the Federal Reserve System on reserves."]]}, "SEC Filings": {"tool_desc": "A collection of methods that returns various financial data for a requested company including SEC Filings, balance sheets, financial ratios , company look-up utilities and more.", "apis": [["Manager Ownership", "Returns institutional managers positions in a stock including the number of managers that sold, increased, decreased and added a stock to their portfolio by comparing current and previous 13F SEC Filings"], ["Items", "Returns the content of each item in an entire 10-K Annual Report"], ["Trending Stocks", "Returns the top  trending stocks on Last10K.com right now with the most viewed <strong>10-K / 20-F / 40-F Annual Reports</strong> and <strong>10-Q Quarterly SEC Filings</strong>.\n\nView live data at: https://last10k.com/stock-screeners/trending"], ["Insider Trades", "Returns an aggregated and summarized collection of the most recent BUY, SELL and OPTION EXERCISE insider trades filed with Form 4 SEC Filings.\n\nVisit [https://last10k.com/stock-screeners/insider-trading](https://last10k.com/stock-screeners/insider-trading) to view this data as a web page."], ["Income", "Returns a company's most recent income statement detailing what they earn for providing their goods and services OR a statement of loss explaining where lost income occurred"], ["Operations", "Returns a company's most recent statement of operations showing how they balance costs with revenue"], ["Cash Flows", "Returns a company's most recent cash flow statement showing the amount of cash used and generated"], ["Balance Sheet", "Returns a company's most recent balance sheet summarizing their liabilities, assets and shareholders' equity"], ["Financial Statements & Disclosures", "Returns a list of financial statements and disclosures from a company's Annual or Quarterly report.\n<p><i>Use the CIK and Accession Number values returned from the <b>SEC Filings</b> endpoint for this endpoint's Request Parameters.</i></p>"], ["SEC Filings", "Returns a list of SEC Filings for the requested company."], ["Manager Holdings", "Returns an institutional manager's quarterly portfolio holdings including new, sold and changed positions by comparing current and previous 13F SEC Filings"]]}, "Forecast crypto and fiat currency exchange rates": {"tool_desc": "Exchange rates forecast for fiat and crypto.", "apis": [["Currency Converter With Forecast and Historical Data", "Free subscribe plan available! Check it in pricing and subscribe for tests!\nAllows to convert currency and shows prediction of exchange rate for currency pairs.\n\n`country_code` - is now optional. API will try first to get cross rate from European Central Bank. If API will found both currencies in another central bank, you will see from which central bank it was taken.\n\nExample: To get CNY to GBP provided by European Central Bank\n`/api/get_cross?currency=cny&currency_cross=gbp`\nor \n`/api/get_cross?country_code=eu&currency=cny&currency_cross=gbp`\nor from Kazakhstan's CB:\n`/api/get_cross?country_code=kz&currency=cny&currency_cross=gbp`\nOf course cross rates from KZ and EU will be slightly different.\n\nExample 2: If you want to get historical data, add `&history_yyyy_mm_dd=2022-06-21`\n`/api/get_cross?country_code=eu&currency=cny&currency_cross=gbp&history_yyyy_mm_dd=2022-06-21`\n\nExotic example: To get CNY to MDL (Yuan to Moldavian Lei) provided by Kazakhstan CB\n`/api/get_cross?currency=cny&currency_cross=mdl`\n\nParameters:\n1) country_code; 2) currency; 3) currency_cross; 4) optional parameter is `history_yyyy_mm_dd` (example:2022-06-27)' .\nTo get available `country_code` - access `/api/info/countries`\nTo get all currency abbreviations - access `/api/info/currencies` - there you need `code` value which is having  3 capital letters, like USD or CHF\n\nExample 3: If you want get price of Bitcoin in USD use:\n`/api/get_cross?currency=btc&currency_cross=usd`\n...same in GBP with specified `country_code`:\n`/api/get_cross?country_code=bitcoin&currency=btc&currency_cross=gbp`\n\nExample 4: If you want get price of Bitcoin in USD for a day in the past use:\n`/api/get_cross?country_code=bitcoin&history_yyyy_mm_dd=2022-06-27&currency=btc&currency_cross=usd`"], ["Get banks in a country", "Free subscribe plan available! Check it in pricing and subscribe for tests!\nThis endpoint gives list of banks in selected country.\n\nExample 1\n` /api/get_all_banks_in_country?country_code=eu`\n\nExample 2\n `/api/get_all_banks_in_country?country_code=md`\n\nExample 3\n `/api/get_all_banks_in_country?country_code=bitcoin`\nwell... I hope you've got the idea:) The currency must have it's country and bank and for cryptocurrencies it is just imaginable bank \"Bitcoin\" and imaginable country \"Bitcoin\". This request will show you JSON\n{... \"is_central\": 1, \"name\": \"Bitcoin\", \"name_short\": \"Bitcoin\",...}\n\nTo get all available `country_code` use free endpoint `/api/info/countries`"], ["Currency rates for 1 bank. Historical data.", "Free subscribe plan available! Check it in pricing and subscribe for tests!\n**S**o it does - get exchange rates for selected bank on chosen date. Timezone is important!!!\n\nExample 1 - get currency rates provided by ECB(European Central Bank) in Berlin:\n`/api/get_all_currencies_values_for_1bank/?country_code=eu&date_yyyy_mm_dd_from=2021-11-15&date_yyyy_mm_dd_till=2021-11-15&bank_id=15&tz=Europe/Berlin`\n\nExample 2, MAIB (private Moldavian bank): `/api/get_all_currencies_values_for_1bank/?country_code=md&date_yyyy_mm_dd_from=2021-11-12&date_yyyy_mm_dd_till=2021-11-12&bank_id=1&tz=Europe/Chisinau`\n\nPrameters and where to get info:\n`country_code=`   -->> `/api/info/countries`  -here you can get all available country_code's and their's timezones.\n`bank_id=`  -->>  `/api/get_all_banks_in_country?country_code=bitcoin` or `/api/get_all_banks_in_country?country_code=eu`\n`date_yyyy_mm_dd_till=` and `date_yyyy_mm_dd_from=`  -->>  must be equal"], ["API Info", "Free subscribe plan available! Check it in pricing and subscribe for tests!\nAll info about API's of this project are available at `/api/info`     Free of charge.\nFor example, if you access  `/api/info/get_forecast`  -  you will get information about  `/api/get_forecast`\n\nThe `ENDPOINT_NAME` can be one of these:\n`timezones` , `countries` , `languages` , `currencies` , `author`\n..and it provides response with data, for example all available countries.\n\nAlso  `ENDPOINT_NAME` can be one of these:\n`get_forecast` , `get_all_banks_in_country` , `get_best_rates` , `get_all_currencies_values_for_1bank` ,  `faq`\n..but  these requests provides only information about selected endoint.\n\nTo get all available `ENDPOINT_NAME` , go to `/api/info/all`"], ["Get Exchange Rates Forecast", "Free subscribe plan available! Check it in pricing and subscribe for tests!\nThis API provides convinient way to get forecast for almost all fiat currencies and for bitcoin. Forecast based on Moving Average method with at least 30 historical observations.\n\nExample with fiat- \n`/api/get_forecast?country_code=eu&currency=usd&predict_days=5`\nList of all available country_code's in `/api/info/countries`\nInfo about all currencies: `/api/info/currencies`\n\nExample 1 - \n`/api/get_forecast?country_code=bitcoin&currency=btc`\nList of all available country_code's in `/api/info/countries`\nInfo about all currencies: `/api/info/currencies`\n\nSince 11 April 2022 you can request `/api/get_forecast?country_code=bitcoin&currency=btc&predict_days=10`\nThis will provide prediction for 10 days. `&predict_days` accepting integer from 2 to 10\n\nExample 2 - If you want to get forecast for Canadian Dollar in USD:\n`/api/get_forecast?country_code=eu&currency=usd&cross_currency=cad`\nyou will get response:\n\"`message`\":\".......... price for 1 CAD in US DOLLAR.... \"\n\"`forecast_rate`\": 0.7896,  -->> means that  forecast for 1 CAD is equal to 0.7896 USD\n\"`forecast_date`\": \"2021-11-21\", \n...\n\nExample 3 - If you want to get forecast of exchange rate for US Dollar in EU (European Union)  provided by European Central Bank:\n`/api/get_forecast?country_code=eu&currency=usd`\nyou get:\n\"`forecast_rate`\": 1.1254,  -->>which means 1 Euro = 1.1254 US Dollar\n\"`forecast_date`\": \"2021-11-21\",\n\nExample 4 - get  forecast and exhange rates for 1 USD provided by Moldavian Central Bank in Russian language:\n`/api/get_forecast?country_code=md&lang=ru&currency=eur&cross_currency=usd`\nInfo about lang= : `/api/info/languages`\nInfo about `cross_currency`= : `/api/info/currencies`"]]}, "Litecoin Wallet": {"tool_desc": "litecoin blockchain wallet that support creating wallets & addresses, sending and receiving Litecoins and many more!", "apis": [["Generate Litecoin wallet", "Litecoin wallet API supports BIP44 HD wallets. It is very convenient and secure, since it can generate 2^31 addresses from 1 mnemonic phrase. Mnemonic phrase consists of 24 special words in defined order and can restore access to all generated addresses and private keys.\nEach address is identified by 3 main values:\n\nPrivate Key - your secret value, which should never be revealed\nPublic Key - public address to be published\nDerivation index - index of generated address\nIt follows BIP44 specification and generates for Litecoin wallet with derivation path m'/44'/2'/0'/0. More about BIP44 HD wallets can be found here - https://github.com/litecoin/bips/blob/master/bip-0044.mediawiki. Generate BIP44 compatible Litecoin wallet."], ["Get information about a transaction output (UTXO) in a Litecoin transaction", "Get information about a transaction output in a transaction and check whether this output is a UTXO or has been spent.\n\n\"UTXO\" stands for \"Unspent Transaction Output\". A UTXO is the amount of LTC that remains at a Litecoin address after a cryptocurrency transaction involving this address has been performed. The UTXO can then be used as input for a new cryptocurrency transaction. For more information the UTXO, see the [Bitcoin user documentation.](https://developer.bitcoin.org/devguide/transactions.html)\n\nIf the transaction output is an UTXO, the API returns data about it.\nIf the transaction output has been spent and there is no UTXO to return, the API returns an error with the 404 response code."], ["Generate Litecoin deposit address from Extended public key", "Generate Litecoin deposit address from Extended public key. Deposit address is generated for the specific index - each extended public key can generate up to 2^31 addresses starting from index 0 until 2^31 - 1."], ["Get the balance of a Litecoin address", "The API returns the balance only if the address has up to 50,000 UTXOs (Unspent Transaction Outputs). For an address with more than 50,000 UTXOs, the API returns an error with the 403 response code."], ["Get Litecoin Transactions by address", "Get Litecoin Transaction by address."], ["Get Mempool Transactions", "Get Litecoin Transaction ids in the mempool."], ["Get Litecoin Transaction by hash", "Get Litecoin Transaction detail by transaction hash."], ["Get Litecoin Block by hash or height", "Get Litecoin Block detail by block hash or height."], ["Get Litecoin Block hash", "Get Litecoin Block hash. Returns hash of the block to get the block detail."], ["Get Litecoin Blockchain Information", "Get Litecoin Blockchain Information. Obtain basic info like testnet / mainnet version of the chain, current block number and it's hash."]]}, "MacroTrends Finance": {"tool_desc": "Stocks API helps to query for the Financials Statement/Sheet that has over 10 years of finacial data.", "apis": [["History Prices", "This gives you the Date, Open, High, Low, Close, Adj Close, Volume prices of the stock\n\nQUERY PARAMETER: symbol the ticker symbol of the company you want to see.\n\nQUERY PARAMETER: range = ['1y', '5y', 'max']"], ["Financial Cash Statement", "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials."], ["Financial Income Statement", "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials."], ["Financial Balance Sheet", "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials."]]}, "Nordigen": {"tool_desc": "Nordigen API allows you to POST bank statement files and GET back categorized transactions.", "apis": [["See results", "Get results for the requested analysis on the bank statement. Use the request_id from the operations request."]]}, "sundayfinance": {"tool_desc": "Feed it a ticker and return next payout date or yield  in response.", "apis": [["Get the yield", "Feed in the ticker and get the yield"], ["Get the next dividend payout date", "Feed in the ticke and get the next dividend payout date."]]}, "Indian Stock Exchange API": {"tool_desc": "API for Indian Stock Exchange BSE/NSE.", "apis": [["StockPrice", "Enter the SYMBOL such as TATAMOTORS, M&M etc as a parameter at the endpoint and it will give your the Live Price updates from exchange."]]}, "Gold Price - Live_v2": {"tool_desc": "Get the current latest price of gold and silver in US dollars per ounce.", "apis": [["Get Metal Prices", "Get the current latest metals price.\nIncluding gold and silver."]]}, "JP Funda": {"tool_desc": "JP Funda API is an API that provides fundamental information based on the securities report data of Japanese companies in Json format.", "apis": [["getListByEdinetCode", "### Return all securities report data of the company specified with edinet code.\nNote: If the company doesn't have a consolidated subsidiary, all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators"], ["getListBySecuritiesCode", "### Return all of securities report data of the company specified with securities code.\nNote: If  the company doesn't  have a consolidated subsidiary,  all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators"], ["getLatestBySecuritiesCode", "### Return latest securities report data of the company specified with securities code.\nNote: If  the company doesn't  have a consolidated subsidiary,  all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators"], ["getLatestByEdinetCode", "### Return latest securities report data of the company specified with edinet code.\nNote: If  the company doesn't  have a consolidated subsidiary,  all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators"], ["getDisclosedToday", "### Return securities report data disclosed today\nNote: If the company doesn't have a consolidated subsidiary, all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators"], ["getDisclosedYesterday", "### Return securities report data disclosed yesterday\nNote: If the company doesn't have a consolidated subsidiary, all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators"], ["getDisclosedWeek", "### Return securities report data disclosed within this week include today.\nNote: If the company doesn't have a consolidated subsidiary, all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators"], ["getDisclosedDateRange", "### Return securities report data Specified by the date range.\nNote: This endpoint requires the 2 query parameters, start_date and end_date\nNote: max date range is 31 days. if you want longer date range data, need to requesting API twice or more."]]}, "ESG Risk Ratings for Stocks": {"tool_desc": "ESG Risk Ratings assess the degree to which a company's enterprise business value is at risk driven by environmental, social and governance issues.", "apis": [["ESG Risk Rating", "The final ESG Risk Rating is a measure of unmanaged risk on a grading scale of A through F, with A signaling less ESG Risk. Controversy Risk is rated on a grading scale A through F, with F denoting the most serious controversy with the largest potential impact."]]}, "Loan Amortization Schedule Calculator": {"tool_desc": "Amortized loan repayment schedule calculator", "apis": [["Calculate repayment schedule", "Returns detailed loan repayment schedule"]]}, "Crypto Arbitrage Trading": {"tool_desc": "Introducing our new API, designed to provide you with real-time price differences between Binance and KuCoin for a specific coin.", "apis": [["Get coin price difference", "returns the object with all the required data"]]}, "FancyOptions": {"tool_desc": "Find your edge with the stock options strategy scanner.", "apis": [["Options Chain", "This endpoint returns the an options chain for a given ticker and expiration date.\n\nDate format.  YYYY-MM-DD"], ["Options Expirations", "This endpoint returns the expirations for a given ticker."], ["Options Vertical", "This endpoint returns verticals for an individual ticker. The verticals that are returned have a 70% chance of being out of the money at time of expirations."], ["S&P 500 Verticals", "This endpoint returns the call and put spreads from the S&P 500 with the highest credits. The verticals that are returned have a 70% chance of being out of the money at time of expirations. This endpoint is updated hourly."]]}, "Credit Card BIN Checker/Validator": {"tool_desc": "Credit Card BIN Checker/Validator consists of 900,000 BINs worldwide that allows you to quickly and easily check the Bank Identification Number (BIN) of a credit or debit card.", "apis": [["Bin", "User's query (BIN) entry."]]}, "Mboum Finance": {"tool_desc": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more!", "apis": [["market/quotes/{stocks}", "Quote data for stocks, ETFs, mutuals funds, etc..."], ["market/most_actives", "Stocks are ordered in descending order by intraday trade volume."], ["market/small_cap_gainers", "Small Caps with a 1-day price change of 5.0% or more."], ["market/day_gainers", "Stocks ordered in descending order by price percent change with respect to the previous close."], ["insider-trades", "Latest insider trading activities from CEO, Directors, Chief Executive Officer, 10% Owner, etc..."], ["market/news", "Recently published stock news in all sectors."], ["market/news/{stock}", "Recently published stock news."], ["stock/history/{stock}/{interval}", "Historic data for stocks, ETFs, mutuals funds, etc..."], ["stock/data/{stock}/{modules}", "Get combine stock data such as profile, financial data, statistics, balance sheet, sec-filing, quote, earnings, trends and more!"], ["stock/calendar-events/{stock}", "Get stock calendar events."], ["stock/earnings-trend/{stock}", "Get earnings trend earnings history information for a particular stock"], ["stock/cashflow-statement/{stock}_", "Get stock cash flow statements."], ["stock/earnings-history/{stock}", "Get earnings history information for a particular stock"], ["stock/income-statement/{stock}", "Get stock income statement data."], ["stock/earnings/{stock}", "Get earnings information for a particular stock"], ["stock/index-trend/{stock}", "Get index trend earnings history information for a particular stock"], ["stock/insider-transactions/{stock}", "Get stock insider transactions history."], ["stock/institution-ownership/{stock}", "Get stock institution ownership."], ["stock/net-share-purchase-activity/{stock}", "Get net share purchase activity information for a particular stock"], ["stock/upgrade-downgrade-history/{stock}", "Get stock upgrade and downgrade history."], ["stock/recommendation-trend/{stock}", "Get stock recommendations and trends."], ["stock/sec-filings/{stock}", "Get stock SEC filings."], ["market/undervalued_growth_stocks", "Stocks with earnings growth rates better than 25% and relatively low PE and PEG ratios."], ["market/growth_technology_stocks", "Technology stocks with revenue and earnings growth in excess of 25%."], ["market/undervalued_large_caps", "Large cap stocks that are potentially undervalued."], ["market/aggressive_small_caps", "Small cap stocks with earnings growth rates better than 25%."], ["market/day_losers", "Stocks ordered in ascending order by price percent change with respect to the previous close."], ["stock/insider-holders/{stock}", "Get stock insider holders' information."], ["stock/profile/{stock}", "Get stock profile information such as company name, descriptions, website, etc..."], ["stock/balance-sheet/{stock}", "Get stock balance sheet data."], ["stock/key-statistics/{stock}", "Get stock key statistics data."], ["stock/financial-data/{stock}", "Get stock financial data."], ["market/most-watched", "Trending stocks in today's market"], ["options/{stock}", "Get option data for stocks, ETFs, and indexes."]]}, "Corporate Supply Chain": {"tool_desc": "Finding a company's actual suppliers and customers is often very difficult.", "apis": [["Supply Chain", "Get supply chain information."]]}, "Date Calculator": {"tool_desc": "This API helps to perform some computations on dates: accrual factors, maturity dates, contract dates,  and other due dates, datetime delta, time zones conversion, recurring dates, and much more.", "apis": [["year_fractions", "Computes and returns the year fraction for a period time in the specified day count convention."], ["time_zone_converter", "Converts time from time zone to another taking into account Daylight Saving Time (DST) and accepts present, past, or future dates."], ["datedif", "Computes the number of  years, months, days, hours, minutes, seconds or microseconds between two dates (end_date - start_date)."], ["eomonth", "Computes and returns a date on the last day of the month in the future or past. This resource behave exactly as Excel EOMONTH function."], ["now", "Computes and returns local time zone taking into account Daylight Saving Time (DST)."], ["rdates", "Computes and returns recurring dates based on very flexible recurrence rules as defined and specified in the [iCalendar RFC 5545](https://tools.ietf.org/html/rfc5545 \"ICalendar\"). It's possible to specify more than one recurrence rule."], ["sdate", "Shifts  a date or a datetime in the future or past."], ["edate", "Computes and returns a date on the same day of the month in the future or past. This resource behave exactly as Excel EDATE function."]]}, "Crypto Currency Scraper API": {"tool_desc": "A crypto currency API scraper to get the necessary data to build you application.", "apis": [["See about Gainers/Losers", "The endpoint fetch the data of the top Gainers and Losers including names and percentage even rank and more!"], ["See about nft prices", "The endpoint fetch the data of the top nft currencies including names and prices even rank and more!"], ["See about the exchanges", "The endpoint fetch the data of the top exchanges including names and prices even rank and more!"], ["See about the prices of the cryptos.", "The endpoint fetch the data of the top crypto currencies including names and prices even rank and more!"]]}, "Real-Time Quotes": {"tool_desc": "Real-time and historical data of stocks, cryptocurrencies and forex based on multiple data sources such as Yahoo Finance", "apis": [["Historical crypto price", "Returns historical data of a specific time interval and crypto currency"], ["Historical forex price", "Returns historical data of a specific time interval and foreign exchange currency pair"], ["Historical stock price", "Returns historical data of a specific time interval and stock symbol"], ["Crypto symbols", "Returns a list of all available crypto  currencies"], ["Forex symbols", "Returns a list of all available foreign exchange currencies"], ["Stock symbols", "Returns a list of all available stock symbols"], ["Crypto quotes", "Returns the real time price of a crypto currency pair"], ["Forex quotes", "Returns the real time price of a forex currency pair"], ["Stock quotes", "Returns the real time price of one or multiple companies"]]}, "Global Stock Market API Data": {"tool_desc": "This API is your gateway for information on world financial markets with respect to country wise.", "apis": [["Get Most Popular News", "Featured here: links to the most widely read news articles from all sections as determined by readers."], ["Get List of Country of Names", "This API will return the list of **ALL Country** names, please use the value key pair and get the trending stocks, week 52 high, low, top gainer and top loser respective to Country"], ["Get Economy Indicators News", "Keep track of breaking economic statistics and developments. Stay up-to-date on key metrics and economic indicators such as unemployment, housing, GDP and more."], ["Get Economy News", "Breaking economic news, with reports on global stock markets, personal finance, businesses and technology."], ["Get Forex News", "Keep track of the latest currency market moves as they develop. Stay up-to-date on breaking forex news as well as relevant financial developments. Use our Forex tips."], ["Get Commodities News", "The latest commodity market moves as well as developments in the futures markets. Stay up-to-date with breaking commodities news and specifics on major commodities such as crude oil and gold."], ["Get Stock Market News", "Stock market news from the US and around the world. Our news team reports on market moving events around the world, that traders need to know in order to stay on top of developments in the companies whose stocks they trade."], ["Get Cryptocurrency News", "Investing.com's crypto news section is providing the latest cryptocurrency news - stay up-to-date with breaking news on major cryptocurrencies, including Bitcoin, Ethereum, Litecoin, Ripple and ICOs."], ["Get Latest News", "View the latest financial news articles published on Investing.com. Read the most recent stories and breaking news, covering all aspects of financial markets worldwide, including commodities, stocks, currencies, indices and more."], ["Get Major Commodities by Technical", "World financial market to get major commodities with respect to technical"], ["Get Major Commodities by Performance", "World financial market to get major commodities with respect to performance"], ["Get Major Commodities by Price", "World financial market to get major commodities with respect to price"], ["Get Global Indices by Technical", "World financial market to get global Indices with respect to technical"], ["Get Global Indices by Performance", "World financial market to get global Indices with respect to performance"], ["Get Global Indices by price", "World financial market to get global Indices with respect to price"], ["Get Major Global Indices by Technical", "World financial market to get major global Indices with respect to technical"], ["Get Major Global Indices by Performance", "World financial market to get major global Indices with respect to performance"], ["Get Major Global Indices by Price", "World financial market to get major global Indices with respect to price"]]}, "Armatic": {"tool_desc": "Armatic gives automation insights, increases efficiencies & more revenue.", "apis": [["casey griswold", "Runs armatic and deals with other vendors."]]}, "360MiQ": {"tool_desc": "Stock Market Breadth API for the US and Global Stock Markets", "apis": [["Market Breadth", "Stock Market Breadth API for the US and Global Stock Markets"]]}, "BitcoinAverage crypto ticker and historical price": {"tool_desc": "BitcoinAverage is one of the leading providers of bitcoin price data, both ticker and historical.", "apis": [["Crypto Exchange Ticker price", "Get the latest price data for specific cryptocurrency exchange."], ["Historical price data for period", "Returns history price for specific symbol for certain period.\nWorks in parallel to the Ticker endpoint where both symbol set and market symbol need to be specified.\nThis endpoint additionally accepts the period query parameter that specifies the resolution of the data.\nPeriod can be: minute, hour or day."], ["History data since timestamp", "Provides historical data since specific timestamp.\nAccepts the regular symbol set and symbol parameter to specify the crypto market.\nAlso accepts query parameters to specify the timestamp for querying and the resolution of the data.\nThe resolution can be minute, hour or day.\nMinute resolution goes back 24 hours.\nHour resolution can go back to 30 days.\nDay resolution can go back years, for BTC it goes back to 2010."], ["Cryptocurrency Index Ticker price", "Get the latest Ticker price for thousands of cryptocurrencies.\nOur Ticker data includes the latest price, bid, ask, 24h volume, moving average and price changes."], ["List of all supported crypto markets", "Lists all supported cryptocurrency markets by the BitcoinAverage API.\nNew cryptos or tokens are added on a monthly basis."], ["History price at a point in time", "Fetch the exact price of a cryptocurrency at a specific timestamp in the past."]]}, "Finance Data": {"tool_desc": "Get stocks up-to-date financial data", "apis": [["Get Company Quarterly Income Statement", "Get Company Income Statement"], ["Get Company Quarterly  Ratios", "Get Company Ratios Latest Data"], ["Get Company Ratios", "Get Company ratios latest data"], ["Get Company Cash Flow", "Get company cash flow latest data."], ["Get Company Balance Sheet", "Get Company latest data for balance sheet"], ["Get All Symbols", "Get all available symbols in API"]]}, "ChangeNOW crypto exchange": {"tool_desc": "Empower your business by letting your customers buy, sell, and exchange crypto.", "apis": [["Exchange range fixed-rate", "<b>New!</b>\n\nThe API endpoint returns minimal payment amount and maximum payment amount required to make an exchange. If you try to exchange less than minimum or more than maximum, the transaction will most likely fail. Any pair of assets has minimum amount and some of pairs have maximum amount.\n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>minAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Minimal payment amount</td>\n    </tr>\n    <tr>\n        <td><b><i>maxAmount</i></b></td>\n        <td><i>Number|null</i></td>\n        <td>Maximum payment amount. Could be null.</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>"], ["API V2 | Exchange range", "The API endpoint returns minimal payment amount and maximum payment amount required to make an exchange. If you try to exchange less than minimum or more than maximum, the transaction will most likely fail. Any pair of assets has minimum amount and some of pairs have maximum amount.\n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>fromCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>fromNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>toCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>toNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>flow</i></b></td>\n        <td><i>String</i></td>\n        <td>Type of exchange flow. Enum: [\"standard\", \"fixed-rate\"]</td>\n    </tr>\n    <tr>\n        <td><b><i>minAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Minimal payment amount</td>\n    </tr>\n    <tr>\n        <td><b><i>maxAmount</i></b></td>\n        <td><i>Number|null</i></td>\n        <td>Maximum payment amount. Could be null.</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>"], ["API V2 | List of available currencies", "This API endpoint returns the list of available currencies.\n\n<h3>Successful response:</h3>\n\t<p>The response contains an array of objects with currency information.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>ticker</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker</td>\n    </tr>\n    <tr>\n        <td><b><i>name</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency name</td>\n    </tr>\n    <tr>\n        <td><b><i>image</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency logo url</td>\n    </tr>\n    <tr>\n        <td><b><i>hasExternalId</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has an Extra ID</td>\n    </tr>\n    <tr>\n        <td><b><i>isFiat</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is a fiat currency (EUR, USD)</td>\n    </tr>\n    <tr>\n        <td><b><i>featured</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is popular</td>\n    </tr>\n    <tr>\n        <td><b><i>isStable</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is stable</td>\n    </tr>\n    <tr>\n        <td><b><i>supportsFixedRate</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is available on a fixed-rate flow</td>\n    </tr>\n    <tr>\n        <td><b><i>network</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency network</td>\n    </tr>\n    <tr>\n        <td><b><i>tokenContract</i></b></td>\n        <td><i>String</i></td>\n        <td>Contract for token or null for non-token</td>\n    </tr>\n    <tr>\n        <td><b><i>buy</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is available to buy</td>\n    </tr>\n    <tr>\n        <td><b><i>sell</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is available to sell</td>\n    </tr>\n</table>\n\n<h3>Request Parameters:</h3>"], ["API V2 | Address validation", "This API endpoint validates the address with a checksum depending on a transferred network.\nThe \u2018result\u2019 field in the response shows if the address is valid: True if valid, and False if the address is invalid. The \u2018message\u2019 field describes why the address is invalid. In case the address is valid, this field is null.\nAn error may occur in case the request is incorrect: a cryptocurrency or an address are not indicated, or we do not support this network yet.\n\n<h3>Successful response:</h3>\nThe response contains the \u2018result\u2019 and \u2018message\u2019 fields.\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>result</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>The validity of an address</td>\n    </tr>\n    <tr>\n        <td><b><i>message</i></b></td>\n        <td><i>String|null</i></td>\n        <td>Explains why the address is invalid</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>"], ["API V2 | Market estimate fiat/crypto-to-crypto", "This API endpoint provides the direct and reverse market crypto-to-crypto or fiat-to-crypto estimated amounts.  \n<b>Attention! Do not use this endpoint for financial aims, only for informational! These rates don't include any fees.</b>  \nTo work with this endpoint, provide your API key in the X-CHANGENOW-API-KEY title.  \nTo calculate the direct estimated amount, set: fromCurrency, toCurrency, fromAmount, type: direct  \nTo calculate the reverse estimated amount, set: fromCurrency, toCurrency, toAmount, type: reverse  \n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>fromCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>\u201cFrom\u201d currency</td>\n    </tr>\n    <tr>\n        <td><b><i>toCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>\u201cTo\u201d currency</td>\n    </tr>\n    <tr>\n        <td><b><i>fromAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>The amount of \u201cfrom\u201d currency</td>\n    </tr>\n    <tr>\n        <td><b><i>toAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>The amount of \u201cto\u201d currency</td>\n    </tr>\n    <tr>\n        <td><b><i>type</i></b></td>\n        <td><i>String</i></td>\n        <td>The type of the estimated amount \u2014 direct or reverse</td>\n    </tr>\n</table>\n\n<h3>Request Parameters:</h3>"], ["API V2 | Estimated exchange network fee", "This endpoint provides an estimated value that will be spent on paying network fees during an exchange.\n\nThis number is ALREADY included in the estimate.\n\n## SUCCESSFUL RESPONSE:\nThe response contains the \u2018estimatedFee\u2019 object and 'deposit', 'withdrawal', 'totals', and 'converted' fields inside it.\n\n\n\n### SUCCESSFUL RESPONSE FIELDS\n\n<table>\n    <tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>estimatedFee</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains detailed info on the network fee estimation.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>deposit</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains detailed info on the deposit network fees.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>currency</i></b></td>\n        <td><i>String</i></td>\n        <td>Deposit currency's ticker.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>network</i></b></td>\n        <td><i>String</i></td>\n        <td>Deposit currency's network.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>amount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Network fee in the deposit currency.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>withdrawal</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains detailed info on the withdrawal network fees.\n        </td>\n    </tr>\n<tr>\n        <td><b><i>currency</i></b></td>\n        <td><i>String</i></td>\n        <td>Withdrawal currency's ticker.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>network</i></b></td>\n        <td><i>String</i></td>\n        <td>Withdrawal currency's network.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>amount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Network fee in the withdrawal currency.\n        </td>\n    </tr>\n<tr>\n        <td><b><i>totals</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains combined network fee in deposit or withdeawal currency. \n        </td>\n    </tr>\n    <tr>\n        <td><b><i>from</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains combined network fee estimated to the deposit currency.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>to</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains combined network fee estimated to the withdrawal currency.        </td>\n    </tr>\n    <tr>\n        <td><b><i>converted</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains detailed info on the network fee estimation in select currency.        </td>\n    </tr>\n    <tr>\n        <td><b><i>currency</i></b></td>\n        <td><i>String</i></td>\n        <td>Network fee currency's ticker.        </td>\n    </tr>\n    <tr>\n        <td><b><i>network</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of currency's ticker.        </td>\n    </tr>\n    <tr>\n        <td><b><i>deposit</i></b></td>\n        <td><i>Number</i></td>\n        <td>Deposit fee in the selected currency.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>withdrawal</i></b></td>\n        <td><i>Number</i></td>\n        <td>Withdrawal fee in the selected currency.\n        </td>\n    </tr>\n<tr>\n        <td><b><i>total</i></b></td>\n        <td><i>Number</i></td>\n        <td>Combined network fee in selected currency.\n        </td>\n    </tr>\n<tr>"], ["API V2 | User addresses", "This API endpoint returns a list of addresses bound to address name.\n \n<h3>Successful response:</h3>\n\t<p>The response contains an array of addresses bound to address name.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>success</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a request was processed successfully</td>\n    </tr>\n    <tr>\n        <td><b><i>addresses</i></b></td>\n        <td><i>Array</i></td>\n        <td>Array of addresses for requested fio-address or unstoppable-domain</td>\n    </tr>\n    <tr>\n        <td><b><i>currency</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker in naming space of his protocol</td>\n    </tr>\n    <tr>\n        <td><b><i>chain</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency chain in naming space of his protocol</td>\n    </tr>\n    <tr>\n        <td><b><i>address</i></b></td>\n        <td><i>String</i></td>\n        <td>Real address for requested fio-address or unstoppable-domain</td>\n    </tr>\n    <tr>\n        <td><b><i>protocol</i></b></td>\n        <td><i>String</i></td>\n        <td>Protocol of current address</td>\n    </tr>\n</table>\n\n<h3>Request Parameters:</h3>"], ["API V2 | Minimal exchange amount", "The API endpoint returns minimal payment amount required to make an exchange. If you try to exchange less, the transaction will most likely fail.\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>"], ["API V2 | Estimated exchange amount", "This API endpoint returns estimated exchange amount for the exchange and some additional fields. Accepts to and from currencies, currencies' networks, exchange flow, and RateID.\n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>fromCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>fromNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>toCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>toNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>flow</i></b></td>\n        <td><i>String</i></td>\n        <td>Type of exchange flow. Enum: [\"standard\", \"fixed-rate\"]</td>\n    </tr>\n    <tr>\n        <td><b><i>type</i></b></td>\n        <td><i>String</i></td>\n        <td>Direction of exchange flow. Use \"direct\" value to set amount for currencyFrom and get amount of currencyTo. Use \"reverse\" value to set amount for currencyTo and get amount of currencyFrom. Enum: [\"direct\", \"reverse\"]</td>\n    </tr>\n    <tr>\n        <td><b><i>rateId</i></b></td>\n        <td><i>String || null</i></td>\n        <td>RateId is needed for fixed-rate flow. If you set param \"useRateId\" to true, you could use returned field \"rateId\" in next method for creating transaction to freeze estimated amount that you got in this method. Current estimated amount would be valid until time in field \"validUntil\"</td>\n    </tr>\n    <tr>\n        <td><b><i>validUntil</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Date and time before estimated amount would be freezed in case of using rateId. If you set param \"useRateId\" to true, you could use returned field \"rateId\" in next method for creating transaction to freeze estimated amount that you got in this method. Estimated amount would be valid until this date and time</td>\n    </tr>\n    <tr>\n        <td><b><i>transactionSpeedForecast</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Dash-separated min and max estimated time in minutes</td>\n    </tr>\n    <tr>\n        <td><b><i>warningMessage</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Some warnings like warnings that transactions on this network take longer or that the currency has moved to another network</td>\n    </tr>\n    <tr>\n        <td><b><i>fromAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Exchange amount of fromCurrency (in case when type=reverse it is an estimated value)</td>\n    </tr>\n    <tr>\n        <td><b><i>toAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Exchange amount of toCurrency (in case when type=direct it is an estimated value)</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>"], ["API V2 | Transaction status", "This API endpoint returns the status and additional information of a single transaction. Transaction ID is taken from the <a href=\"#3c8edfd0-ae3f-4738-a01c-de3e196bd761\">'Create transaction'</a> endpoint.\n\n**Note:** we also give the opportunity to transfer additional fields in the ['Create transaction'](#3c8edfd0-ae3f-4738-a01c-de3e196bd761) endpoint, which we return in this method. \u0410dditional fields that can be transferred include:\n\n*   userId \u2014 user ID;\n*   payload \u2014 object that can contain up to 5 arbitrary fields up to 64 characters long;\n    \n\nIf you would like to enable these fields, please contact us at [api@changenow.io](mailto:api@changenow.io) with the subject line \"Special partner fields\".\n\n<h3>Successful response:</h3><p>The response contains an object with transaction information.</p><p>Fields in the response vary depending on the status and a type of the transaction.</p><h5>Successful response fields</h5><table><tbody><tr><td><b>Name</b></td><td><b>Type</b></td><td><b>Description</b></td></tr><tr><td><i><b>id</b></i></td><td><i>String</i></td><td>Transaction ID</td></tr><tr><td><i><b>status</b></i></td><td><i>String</i></td><td>Transaction status:<br>new,<br>waiting,<br>confirming,<br>exchanging,<br>sending,<br>finished,<br>failed,<br>refunded,<br>verifying<br></td></tr><tr><td><i><b>actionsAvailable</b></i></td><td><i>Boolean</i></td><td>Indicates if an exchange can be pushed or refunded using Public push &amp; refund endpoints. <a href=\"https://documenter.getpostman.com/view/8180765/TzJoFLtG#acf2515b-99c7-44bd-935c-dc42693b8026\">Read more</a></td></tr><tr><td><i><b>fromCurrency</b></i></td><td><i>String</i></td><td>Ticker of the currency you want to exchange</td></tr><tr><td><i><b>fromNetwork</b></i></td><td><i>String</i></td><td>Network of the currency you want to exchange</td></tr><tr><td><i><b>toCurrency</b></i></td><td><i>String</i></td><td>Ticker of the currency you want to receive</td></tr><tr><td><i><b>toNetwork</b></i></td><td><i>String</i></td><td>Network of the currency you want to receive</td></tr><tr><td><i><b>expectedAmountFrom</b></i></td><td><i>Number|null</i></td><td>The amount you want to send</td></tr><tr><td><i><b>expectedAmountTo</b></i></td><td><i>Number|null</i></td><td>Estimated value that you will get based on the field <i>expectedAmountFrom</i>.</td></tr><tr><td><i><b>amountFrom</b></i></td><td><i>Number|null</i></td><td>Exchange amount of fromCurrency</td></tr><tr><td><i><b>amountTo</b></i></td><td><i>Number|null</i></td><td>Exchange amount of toCurrency</td></tr><tr><td><i><b>payinAddress</b></i></td><td><i>String</i></td><td>We generate it when creating a transaction</td></tr><tr><td><i><b>payoutAddress</b></i></td><td><i>String</i></td><td>The wallet address that will recieve the exchanged funds</td></tr><tr><td><i><b>payinExtraId</b></i></td><td><i>String|null</i></td><td>We generate it when creating a transaction</td></tr><tr><td><i><b>payoutExtraId</b></i></td><td><i>String|null</i></td><td>Extra ID that you send when creating a transaction</td></tr><tr><td><i><b>refundAddress</b></i></td><td><i>String|null</i></td><td>Refund address (if you specified it)</td></tr><tr><td><i><b>refundExtraId</b></i></td><td><i>String|null</i></td><td>ExtraId for refund (if you specified it)</td></tr><tr><td><i><b>createdAt</b></i></td><td><i>String</i></td><td>Transaction creation date and time</td></tr><tr><td><i><b>updatedAt</b></i></td><td><i>String</i></td><td>Date and time of the last transaction update (e.g. status update)</td></tr><tr><td><i><b>depositReceivedAt</b></i></td><td><i>String|null</i></td><td>Deposit receiving date and time</td></tr><tr><td><i><b>payinHash</b></i></td><td><i>String|null</i></td><td>Transaction hash in the blockchain of the currency which you specified in the fromCurrency field that you send when creating the transaction</td></tr><tr><td><i><b>payoutHash</b></i></td><td><i>String|null</i></td><td>Transaction hash in the blockchain of the currency which you specified in the toCurrency field. We generate it when creating a transaction</td></tr><tr><td><i><b>fromLegacyTicker</b></i></td><td><i>String</i></td><td>Ticker of the currency you want to exchange in an old format as it is specified in a response from <a href=\"#a44b3f19-3e57-4f39-9822-e2ca3cf1d566\">Currency info API-v1 endpoint</a></td></tr><tr><td><i><b>toLegacyTicker</b></i></td><td><i>String</i></td><td>Ticker of the currency you want to receive in an old format as it is specified in a response from <a href=\"#a44b3f19-3e57-4f39-9822-e2ca3cf1d566\">Currency info API-v1 endpoint</a></td></tr></tbody></table><p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p><h3>Request Parameters:</h3>"], ["API V2 | List of all available pairs", "<p>This API endpoint returns the list of all available pairs. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.</p>\n<p>Notice that the resulting array will contain about 13000 pairs.</p>\n\n<h3>Successful response:</h3>\n<p>The response contains an array of underscore separated pair of tickers.</p>\n\n<h3>Request Parameters:</h3>"], ["Currency info", "This method returns the name of the coin, the coin's main features (such as anonymity, the need for Extra ID, and logo), and the coin's supported wallets.\n\n<h3>Successful response:</h3>\n\t<p>The response contains an object with currency information.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>ticker</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker</td>\n    </tr>\n    <tr>\n        <td><b><i>name</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency name</td>\n    </tr>\n    <tr>\n        <td><b><i>image</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency logo url</td>\n    </tr>\n    <tr>\n        <td><b><i>warnings</i></b></td>\n        <td><i>String</i></td>\n        <td>Some warnings like warnings that transactions on this network take longer or that the currency has moved to another network. Field \u201cfrom\u201d for warnings in case of exchange of this currency and field \u201cto\u201d for warnings in case of exchange for this currency, respectively</td>\n    </tr>\n    <tr>\n        <td><b><i>hasExternalId</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has an Extra ID</td>\n    </tr>\n    <tr>\n        <td><b><i>isFiat</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is a fiat currency (EUR, USD)</td>\n    </tr>\n    <tr>\n        <td><b><i>isAnonymous</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has the ability to hide their transactions. This means that even if you know someone\u2019s address, you won\u2019t be able to recognize the balance and receive information about transactions without additional information (e.g. XMR)</td>\n    </tr>\n    <tr>\n        <td><b><i>wallets</i></b></td>\n        <td><i>Object</i></td>\n        <td>This field contains a list of primary and secondary wallets. For each wallet, this endpoint returns the name, url, logo url, supported platforms, degree of anonymity, degree of security, application weight and indicates if the wallet supports different currencies</td>\n    </tr>\n    <tr>\n        <td><b><i>addressExplorerMask</i></b></td>\n        <td><i>String</i></td>\n        <td>This field helps to create a link for the wallet address. Wallet address url = this field.replace('$$', payinAddress or payoutAddress from the <a href=\"#fa12244b-f879-4675-a6f7-553cc59435dc\">Transaction status API endpoint</a>)</td>\n    </tr>\n    <tr>\n        <td><b><i>transactionExplorerMask</i></b></td>\n        <td><i>String</i></td>\n        <td>This field helps to create a link for the transaction hash. Transaction hash url = this field.replace('$$', payinHash or payoutHash from the <a href=\"#fa12244b-f879-4675-a6f7-553cc59435dc\">Transaction status API endpoint</a>) </td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>"], ["List of available currencies", "This API endpoint returns the list of available currencies. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.\n\n<h3>Successful response:</h3>\n\t<p>The response contains an array of objects with currency information.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>ticker</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker</td>\n    </tr>\n    <tr>\n        <td><b><i>name</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency name</td>\n    </tr>\n    <tr>\n        <td><b><i>image</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency logo url</td>\n    </tr>\n    <tr>\n        <td><b><i>hasExternalId</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has an Extra ID</td>\n    </tr>\n    <tr>\n        <td><b><i>isFiat</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is a fiat currency (EUR, USD)</td>\n    </tr>\n    <tr>\n        <td><b><i>featured</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is popular</td>\n    </tr>\n    <tr>\n        <td><b><i>isStable</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is stable</td>\n    </tr>\n    <tr>\n        <td><b><i>supportsFixedRate</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is available on a fixed-rate flow</td>\n    </tr>\n</table>\n\n<h3>Request Parameters:</h3>"], ["List of available currencies for a specific currency", "This API endpoint returns the array of markets available for the specified currency be default. The availability of a particular pair is determined by the 'isAvailable' field. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.\n\n<h3>Successful response:</h3>\n\t<p>The response contains an array of objects with currencies information.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>ticker</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker</td>\n    </tr>\n    <tr>\n        <td><b><i>name</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency name</td>\n    </tr>\n    <tr>\n        <td><b><i>image</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency logo url</td>\n    </tr>\n    <tr>\n        <td><b><i>hasExternalId</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has an Extra ID</td>\n    </tr>\n    <tr>\n        <td><b><i>isFiat</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is a fiat currency (EUR, USD)</td>\n    </tr>\n    <tr>\n        <td><b><i>featured</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is popular</td>\n    </tr>\n    <tr>\n        <td><b><i>isStable</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is stable</td>\n    </tr>\n    <tr>\n        <td><b><i>supportsFixedRate</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is available on a fixed-rate flow</td>\n    </tr>\n    <tr>\n        <td><b><i>isAvailable</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates whether the pair is currently supported by our service</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>"], ["Minimal exchange amount", "The API endpoint returns minimal payment amount required to make an exchange. If you try to exchange less, the transaction will most likely fail.\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>"], ["Exchange range", "<b>New!</b>\n\nThe API endpoint returns minimal payment amount and maximum payment amount required to make an exchange. If you try to exchange less than minimum or more than maximum, the transaction will most likely fail. Any pair of assets has minimum amount and some of pairs have maximum amount.\n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>minAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Minimal payment amount</td>\n    </tr>\n    <tr>\n        <td><b><i>maxAmount</i></b></td>\n        <td><i>Number|null</i></td>\n        <td>Maximum payment amount. Could be null.</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>"], ["List of all available pairs", "<p>This API endpoint returns the list of all available pairs. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.</p>\n<p>Notice that the resulting array will contain about 13000 pairs.</p>\n\n<h3>Successful response:</h3>\n<p>The response contains an array of underscore separated pair of tickers.</p>\n\n<h3>Request Parameters:</h3>"]]}, "US Stock Prices | Live!!": {"tool_desc": "API for US Stock Exchange.", "apis": [["StockPrice", "Enter the SYMBOL/TICKER such as TSLA, AAPL etc as a parameter at the endpoint and it will give your the Live Price updates from exchange."]]}, "Global Market Indices Data": {"tool_desc": "Get statistical data for the major global indices (SP500, DJI,FTSE100, DAX, IBEX35, ASX200)", "apis": [["price", "Get price of index over a period"], ["Forecast", "Predics stock price for the next ^ months"], ["Change", "Get the symbol change over the period of time(1DAY, 7DAYS, 1MONTH, 3MONTHS, 6MONTHS, 1YEAR )"], ["Top5", "Get best/worst performers for a symbol over a period"], ["Index", "Get an Index constituents"]]}, "Exchanger Currency Rates Provider": {"tool_desc": "Get hourly updated rates for more than 150 currencies since 1999", "apis": [["Latest Rates", "This endpoint will return the exchange rate data updated every 60 minutes."], ["Supported Currencies", "Return the list of all supported currencies including \n\n- Country Name \n- Country Code\n- Currency Code"], ["Convert", "This API with a separate currency conversion endpoint, which can be used to convert any amount from one currency to another. In order to convert currencies, please use the API's convert endpoint, append the from and to parameters and set them to your preferred base and target currency codes."], ["Historical Rates", "Request the prices of any date between the year 2000 till today."]]}, "Crypto Whale Transactions": {"tool_desc": "Get latest huge crypto transactions for most popular blockchains", "apis": [["Blockchains", "Get list of all supported blockchains"], ["Transactions feed", "Get latest huge whale transactions for most popular blockchains.\n\n**Filter by txn value. Add parameters as below:**\n<_amount_usd=10000 \nOR\n>amount_usd=10000\n\n**Filter by blockchain:**\n t_blockchain=bitcoin\n\nAvailable blockchains: bitcoin, bitcoin-cash, ethereum, bitcoin-sv, litecoin, tron, ripple, zcash, dogecoin, neo, eos, dash, ethereum-classic, tezos, binancechain, stellar, groestlcoin, icon, steem, cosmos, decred, verge, hypercash, siacoin\n\n\n**Pagination:**\nAdd parameter: size=100"], ["Specific transactions", "get info about single transaction"]]}, "stocks_archive": {"tool_desc": "Archive data of some blue chip's tickers", "apis": [["ping", "Check that server is still alive"], ["tickerData", "Returns a list of ticker records"], ["tickersList", "Returns a list of available tickers"]]}, "Binance Smart Chain": {"tool_desc": "All-In-One access to the BSC blockchain data!", "apis": [["Current Block Number", "Get the current block number of the Binance Smart Chain!"], ["Account Balance", "Get the BNB balance for an address on the Binance Smart Chain."], ["Block", "Get full data from a specific block on the Binance Smart Chain!"], ["Transaction", "Get full data from a specific transaction on the Binance Smart Chain!"], ["Account Transaction History", "Get an array of all transactions of an address on the Binance Smart Chain."], ["Account Transaction Count", "Get the number of transactions done by an address on the Binance Smart Chain."]]}, "StockTwits": {"tool_desc": "StockTwits provides a social communications platform and social graph for anyone interested in the markets and investing.", "apis": [["messages/like", "Like a message on StockTwits as the authenticating user."], ["account/verify", "This verifies the credentials of a user. Useful for checking if authentication method is correct."], ["messages/show", "This shows the specified message details. This is used in a stand alone display. View the display guidelines"], ["streams/mentions", "Returns the most recent 30 messages containing mentions of the authenticating user's handle. These are considered public replies"], ["messages/unlike", "Unlike a message on StockTwits as the authenticating user."], ["streams/user", "Returns the most recent 30 messages for the specified user. Includes user object in response."], ["watchlists/index", "Returns a list of private watch lists for the authenticating user."], ["account/update", "This updates the properties of the authenticating user's account."], ["streams/direct", "Returns the most recent 30 direct messages sent to the authenticating user. These area all private messages sent and recieved."], ["streams/home", "Returns the most recent 30 messages posted to the authenticating user's home stream, which is made up of the users and stocks they follow."], ["streams/symbol", "Returns the most recent 30 messages for the specified symbol."], ["streams/investor_relations", "Returns the most recent 30 messages posted by verified Investor Relations customers."], ["streams/friends", "Returns the most recent 30 messages posted to the authenticating user's people stream of the users they follow."], ["streams/watchlist", "Returns the most recent 30 messages for the specified watch list for the authenticating user. The watch list is a private list of all the symbols a user is watching."], ["watchlists/show", "Returns the the list of ticker symbols in a specified watch list for the authenticating user. Required parameter is the ID of the watch list, not the name of the watch list."]]}, "Bitcoin News": {"tool_desc": "An API showing all the latest news of Bitcoin around the world from all the major websites", "apis": [["Get All Bitcoin News", "This endpoint will return back all the news across all the major bitcoin news site from all over the world"], ["Get Individual Bitcoin News Sources", "In this endpoint you can get informations for a specific News resource."]]}, "Trading View": {"tool_desc": "This API helps you to query for data which is obtained by professional providers who have direct and extensive access to stock quotes, futures, popular indices, Forex, Bitcoin and CFDs to create a financial community site/application, such as : tradingview.com", "apis": [["auto-complete (Deprecated)", "Get suggestion by term or phrase"], ["news/list", "List latest news with options and filters"], ["market/get-movers", "Get movers in different exchanges and different categories"], ["stocks/get-financials", "Get financials information related to a ticker or symbol"], ["exchanges/list", "List all available and supported exchanges"], ["countries/list", "List all available supported countries"], ["v2/auto-complete", "Get suggestion by term or phrase"], ["calendars/get-economic-calendar", "Get economic calendar by specific date range and countries"], ["ideas/list", "List ideas post with options and filters"], ["ideas/get-view-count", "Get view count related to an ideal post"], ["ideas/get-replies", "Get replies relating to an ideal post and comment"], ["ideas/get-comments", "Get comments relating to an ideal post"], ["ideas/detail", "Get detailed ideal post"], ["calendars/get-earning-calendar", "Get earning calendar by specific date range and exchange"]]}, "European Central Bank - Reference Rates": {"tool_desc": "Get the 30 Euro foreign exchange reference rates in JSON-format.", "apis": [["GetReferenceRates", "Get the current Reference Rates"]]}, "Cryptocurrency Data": {"tool_desc": "Catalog", "apis": [["metadata", "The list of all available assets"]]}, "Wallet": {"tool_desc": "This is your digital wallet, you can create, share, update values...", "apis": [["Get User Wallets", "returns all user wallets"], ["Total User Balance", "returns all user balance getting all walets balances"], ["Get User By Id", "Get user information by Id"]]}, "Finispia USA with company details": {"tool_desc": "[ aaoifi ]Finispia based on one methodology", "apis": [["Get Compliance with company details", "Display compliance of company"]]}, "Currency Quake": {"tool_desc": "Provides Access to the statistical strength of all 8 major currencies, across 28 Forex pairs and on 4 different time frames.", "apis": [["Market Status", "Is the market open?"], ["Pair Strength", "Exposes the underlying calculations that are performed on each pair to get a currency\u2019s combined strength."], ["Symbol Strength", "Exposes the combined strength of 8 individual currencies using calculations applied to 28 Forex pairs."]]}, "BraveNewCoin": {"tool_desc": "Latest and historic cryptocurrency market data", "apis": [["DailyOHLCV", "This endpoint returns end-of-day open, high, low, close prices and volumes (OHLCV) for market weighted averages (MWA) or global weighted averages (GWA). The 24hr period for end of day is based on an open/close at 00:00:00 UTC. Parameters may be used to select the data required. \n\nBNC uses universal identifiers (UUIDs) for assets and markets. Each index type will have a UUID which identifies the constituent type used to build the index:\n\n| Index Type | Index Id  | Output |\n| -----------|:---------:|:---------:|\n| MWA        | Market Id | OHLCV for that market |\n| GWA        | Asset Id  | OHLCV for that coin / asset |\n\nThe UUIDs for assets or markets may be found from the Lookups with those names.\n\nIf no timestamp is provided, then only the latest values are returned. With a timestamp, records are returned in reverse date order, the number determining how far back  controlled by the size parameter. \n\nAn authentication token is required. Obtain a token valid for 24 hours from the GetToken endpoint."], ["AssetById", "Retrieves the details of an individual asset. Supply the unique identifier (UUID) of the asset.\n\nThe full list of all asset details can be obtained from the Asset endpoint."], ["MarketById", "Retrieves the details of an individual market. Supply the unique identifier (UUID) of the market.\n\nThe full list of all market UUIDs can be obtained from the Market endpoint."], ["Asset", "List the UUID and details for all assets or provide an optional query parameter to search.\nAssets may have a status . Active assets will be available at both AssetTicker and DailyOHLCV endpoints. Inactive assets are not available for AssetTickers but may provide some historical OHLCV data if available."], ["Market", "List the UUIDs for all markets or provide a query parameter to search.\n\nThe parameters are asset UUIDs. The full list of all asset details is available from the Asset endpoint."], ["AssetTicker", "This free endpoint will return the latest details for an asset refreshed every 5 minutes with global USD spot price, 24 hour volume and supply.  The optional percentChange parameter provides the 1, 7 and 30 day percentage movements as additional payload.   \n\nSupply the unique identifier (UUID) for an asset.  The UUID for any asset may be found from the Assets endpoint in Lookups.\n\nA security token is required for the Authorization Header. Obtain a token valid for 24 hours from the GetToken endpoint."]]}, "COVID-19 Economic Impact": {"tool_desc": "Get a real-time picture of economic indicators such as employment rates, consumer spending, mobility data, small business data, and COVID-19 health information.", "apis": [["United States COVID-19 Case Count", "Get cumulative United States COVID-19 case count daily."], ["United States COVID-19 Death Count", "Get cumulative United States COVID-19 death count daily."], ["United States COVID-19 New Case Count", "Get United States COVID-19 new case count daily."], ["United States COVID-19 New Death Count", "Get United States COVID-19 new death count daily."], ["United States COVID-19 New Test Count", "Get United States COVID-19 new test count daily."], ["United States Continued Claims Count", "Get weekly count of continued claims, combining Regular, PUA and PEUC claims."], ["United States Employment", "Get daily average percent change of employment relative to January 4 - 31, 2020."], ["United States Job Postings", "Get weekly average percent change of job postings relative to January 4 - 31, 2020."], ["United States Retail and Recreation Mobility", "Get daily United States percentage change in time spent at retail and recreation."], ["United States Small Businesses Open", "Get daily United States 7 day moving average percentage change of small businesses open seasonally adjusted relative to January 4 - 31, 2020."], ["United States Small Businesses Revenue", "Get daily United States 7 day moving average percentage change of small businesses revenue seasonally adjusted relative to January 4 - 31, 2020."], ["United States Away from Home Mobility", "Get daily United States percentage change in time spent away from home."], ["United States Card Spending", "Get daily United States 7 day moving average percentage change in credit and debit card spending seasonally adjusted relative to January 4 - 31, 2020."], ["United States Grocery and Pharmacy Mobility", "Get daily United States percentage change in time spent at grocery and pharmacy."], ["United States Parks Mobility", "Get daily United States percentage change in time spent at parks."], ["United States Residential Mobility", "Get daily United States percentage change in time spent at residential."], ["United States Transit Stations Mobility", "Get daily United States percentage change in time spent inside transit stations."], ["United States Work Places Mobility", "Get daily United States percentage change in time spent at work places."]]}, "Qvantana": {"tool_desc": "Our free API provides real-time and historical crypto trading data from 4 major exchanges, enriched with over 30 customizable trading indicators.", "apis": [["3 Line Strike", "3 Line Strike indicator"], ["Three Inside Up/Down", "Three Inside Up/Down indicator"], ["3 Black Crows", "3 Black Crows indicator"], ["Kline", "This endpoint retrieves historical k-line (candlestick) data for a specific cryptocurrency pair on a chosen exchange and market. The endpoint accepts the following parameters:\n\nsymbol (required): The trading pair (e.g., 'ethusdt'). The availability of symbols depends on the chosen exchange.\nmarket (required): The market type. Options include 'usdt-perpetual', 'spot', and 'inverse-perpetual'.\ninterval (required): The timeframe for each k-line data point. The available timeframes depend on the chosen exchange.\nlimit (optional): The number of data points to return. The maximum limit is 5000.\nfrom & to (optional): The start and end time for the data, respectively. They can be in UNIX timestamp format (seconds) or 'yyyy-MM-dd HH:mm:ss' format.\nexchange (required): The exchange to fetch data from. Available options are 'bybit', 'binance', 'bitstamp', 'gateio', and 'kraken'.\nThis endpoint offers comprehensive historical trading data tailored to your specific needs, providing a valuable tool for market analysis."], ["Backtrack Kline", "This endpoint retrieves historical k-line (candlestick) data for a specific cryptocurrency pair on a chosen exchange and market. This endpoint is equal to the Kline endpoint except it returns the result up until the \"from\" parameter. The endpoint accepts the following parameters:\n\nsymbol (required): The trading pair (e.g., 'ethusdt'). The availability of symbols depends on the chosen exchange.\nmarket (required): The market type. Options include 'usdt-perpetual', 'spot', and 'inverse-perpetual'.\ninterval (required): The timeframe for each k-line data point. The available timeframes depend on the chosen exchange.\nlimit (optional): The number of data points to return. The maximum limit is 5000.\nfrom & to (optional): The start and end time for the data, respectively. They can be in UNIX timestamp format (seconds) or 'yyyy-MM-dd HH:mm:ss' format.\nexchange (required): The exchange to fetch data from. Available options are 'bybit', 'binance', 'bitstamp', 'gateio', and 'kraken'.\nThis endpoint offers comprehensive historical trading data tailored to your specific needs, providing a valuable tool for market analysis."], ["Exchanges", "Endpoint for all the available exchanges"], ["Moving average (MA/SMA)", "Moving average (MA/SMA) indicator"], ["Exponential Moving Average (EMA)", "Exponential Moving Average (EMA) indicator"], ["Relative Strength Index (RSI)", "Stochastic Relative Strength Index (RSI) indicator"], ["Moving Average Convergence Divergence (MACD)", "Moving Average Convergence Divergence (MACD) indicator"], ["Chaikin Money Flow (CMF)", "Chaikin Money Flow (CMF) indicator"], ["Average True Range (ATR)", "Average True Range (ATR) indicator"], ["Commodity Channel Index (CCI)", "Commodity Channel Index (CCI) indicator"], ["Three Advancing White Soldiers", "Three Advancing White Soldiers indicator"], ["Three Stars In The South", "Three Stars In The South indicator"], ["Three Outside Up/Down", "Three Outside Up/Down indicator"], ["Volume Weighted Average Price (VWAP)", "Volume Weighted Average Price (VWAP) indicator"], ["Hull Moving Average", "Hull Moving Average indicator"]]}, "Stoxx": {"tool_desc": "Retrieve live and historical information for publicly traded companies", "apis": [["Get Historical Company Article Data", "Provides historical data for a given company including news, polarity, sentiment, and more.\n\n`{10 items\n\"FeedUrl\":\"https://finance.yahoo.com/news/electronic-arts-shoots-higher-amazon-073805755.html?.tsrc=rss\"\n\"Polarity\":0\n\"PublishDate\":\"2022-08-26T07:38:05+00:00\"\n\"Subjectivity\":1.5\n\"Title\":\"Electronic Arts Shoots Higher on Amazon Bid Report\"\n\"VaderAggregate\":0.5\n\"VaderNegative\":0.2\n\"VaderNeutral\":0.5\n\"VaderPositive\":0.8\n\"id\":\"67988e33-4ded-3b46-b2c6-9f2d96580132\"\n}`"], ["Get List of Publicly Traded Companies", "Provides a list of all publicly traded companies"], ["Get Company Historical Data", "Provides access to daily historical company pricing data over a given period of months\n\nA sample output for each day:\n`{\n\"changePercent\":0\n\"close\":115.1465\n\"date\":\"2022-05-27\"\n\"high\":115.187\n\"low\":112.628\n\"open\":113.55\n\"symbol\":\"AMZN\"\n\"updated\":1654726813000\n\"volume\":93660160\n}`"], ["Get Company Quote / Price Data", "Retrieve updated quote and pricing data for a given company. This endpoint provides you with:\n\n- Symbol\n- Company Name\n- Exchange\n- High\n- Low\n- Close\n- PE\n- Volume\n- Market Cap\n- Datetime"], ["Get Company Market Performance", "Retrieve the overall current market performance\n\n```\n{\n\"datetimeUpdated\":1661544000005\n\"performance\":-0.01535\n\"sector\":\"Utilities\"\n\"symbol\":\"XLU\"\n}\n```"], ["Get Company Competition", "Retrieve a company's known competitors"], ["Get Company Information", "Provides detailed information for a given company:\n- Symbol\n- Company Name\n- Industry\n- Website\n- Relevant Tags\n- General Sector\n- Country\n- Zip Code"]]}, "Wealth Reader API": {"tool_desc": "API providing standardised, real-time access to any entity's financial assets.", "apis": [["/entities", "Obtiene el listado de entidades soportadas y la informaci\u00f3n necesaria para dibujar el formulario de login de la entidad."], ["/error-codes", "Listado de c\u00f3digos de error. Presta especial atenci\u00f3n a que no todos los c\u00f3digos de error deben recibir el mismo tratamiento por parte de tu aplicaci\u00f3n. Ante un error de password incorrecto no debes reintentar la llamada con los mismos par\u00e1metros, pero ante un error que te indique que la entidad est\u00e1 en mantenimiento s\u00ed puedes reintentarlo. Pide una sesi\u00f3n t\u00e9cnica con nuestro equipo para resolver cualquier duda sobre la gesti\u00f3n de errores."]]}, "GaiaLens ESG Scores": {"tool_desc": "Real-time, data-driven and transparent ESG scores for over 17,500 companies", "apis": [["getESGScores", "This API provides real-time Environmental, Social, Governance and Overall scores for companies on a scale of 0 to 100. In addition to this, the API also provides other relevant metrics like Global Rank, Industry Rank and more."]]}, "Inflation by API-Ninjas": {"tool_desc": "Get current inflation data for the dozens of countries.", "apis": [["/v1/inflation", "API Ninjas Inflation API endpoint. Returns current monthly and annual inflation percentages."]]}, "MathAAS": {"tool_desc": "Basic mathematic operations served through a Restful API", "apis": [["getDivision", "Divides two numbers (dividend and divisor) provided as parameters"]]}, "vatlayer": {"tool_desc": "Vatlayer is a simple REST-based JSON API offering instant EU VAT number validation, VAT compliant price calculations and VAT rates for all 28 current member states of the European Union.", "apis": [["Single EU VAT Rate", "Using the \"rate\" endpoint, you may request the API to return standard and reduced VAT rates for a EU member state you specify. Important: Only one of the following three parameters for defining the country is allowed."], ["Request all EU VAT Rates", "Use the API's \"rate_list\" endpoint to obtain standard & reduced VAT rates for all 28 current member states"], ["Calculate EU VAT Compliant Price", "Use the \"price\" endpoint, you may request the API to calculate a country-specific VAT compliant price on your behalf. Important: There are 3 options to define a country - choose only one!"], ["Request list of types of goods", "Request an entire list of all available \"types of goods\", which fall into reduced VAT categories in specific EU member states"], ["Validate VAT Number", "Using the \"validate\" endpoint, you may request the API to validate any EU VAT number and obtain information about the company it is assigned to"]]}, "EarningsData": {"tool_desc": "Get upcoming and historic earnings data for stocks!", "apis": [["GetCurrentByValueGrowthMomentum", "Get list of stocks according to current value, growth and momentum information."], ["GetCurrentBySymbol", "Get the current value, growth and momentum information for a single stock."], ["GetByMonth", "Get Earning Data By Month"], ["GetByDate", "Get earnings data by date."], ["GetByStock", "Get earnings data by symbol."]]}, "Metals Prices Rates API": {"tool_desc": "The Metals Prices Rates API provides real-time and historical metal prices and exchange rates for gold, silver, platinum, and other metals.", "apis": [["Carat", "Using the API karat endpoint, you will be able to retrieve latest information about gold rates per karat."], ["Open/High/Low/Close (OHLC) Price", "Allows you to query the API to get the open, high, low, and close price.\nThis endpoint has a limitation of one symbol per request."], ["Time-Series", "Timeseries endpoint lets you query the API for daily historical rates between two dates of your choice.\nThis endpoint has a limitation of 365 days and only one symbol per request."], ["Supported Symbols", "The API comes with a constantly updated endpoint returning all available symbols."], ["Historical Rates", "Historical rates are available for most symbols all the way back to the year of 2019. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL."], ["Latest Rates", "The latest API endpoint will return real-time exchange rate data updated every 60 seconds.\n\nNote: All the responses retrieved in USD needs to be converted. \n\nEx: 1/value = USD PRICE."]]}, "Crypto Markets": {"tool_desc": "Get all crypto markets data live", "apis": [["Exchange Information", "Current exchange trading rules and symbol information"], ["Old Trade Lookup", "Get older market trades."]]}, "Supportnresistance": {"tool_desc": "API for obtaining support and resistance stock prices.", "apis": [["Monthly", "Get the upper and lower Monthly support & resistance limit price (stock price 1 Hour interval delayed 30min)"], ["Weekly", "Get the upper and lower weekly support & resistance limit price (stock price 1 Hour interval delayed 30min)"]]}, "Circulating Supply": {"tool_desc": "This API returns the value of given coin.", "apis": [["Coin", "This endpoint returns the value of given coin as parameter."]]}, "Top NFT Sales": {"tool_desc": "Top NFTs and collections sold today, this week, or this month.", "apis": [["Top NFTs this Month", "Top selling NFTs this month"], ["Top NFTs this Week", "Top selling NFTs this week"], ["Top Collections this Month", "Top trending collections this month"], ["Top Collections this Week", "Top trending collections this week"], ["Top Collections Today", "Top trending collections today"], ["Top NFTs today", "Top selling NFTs today"]]}, "Business Credit Scores": {"tool_desc": "Long term credit scores for 8 million companies", "apis": [["Credit score by name, city and/or state", "Look up credit scores for private companies that do not have a ticker symbol. Almost 8 million companies available. Try searching by city and state first, then look for a name match."], ["Credit score by ticker", "Provide a ticker and receive a score: 1- 10. \n1 is the best and 10 is the worst."], ["Distinct Tickers", "Get list of tickers for which credit scores exist."]]}, "Exchange Rates API ": {"tool_desc": "This API retrieves all exchange rates between all currencies based on BCE.", "apis": [["currencies", "This endpoint gets a list of available currency symbols along with their full names.\n\nGET /currencies HTTP/1.1"], ["historical", "This endpoint returns historical rates for any working day since 4 January 1999.\n\nGET /1999-01-04 HTTP/1.1\nYou can again tweak the response using the from and to parameters."], ["latest", "This endpoint returns the latest rates.\n\nGET /latest HTTP/1.1\nRates quote against the Euro by default. You can quote against other currencies using the from parameter.\n\nGET /latest?from=USD HTTP/1.1\nto limits returned rates to specified values.\n\nGET /latest?to=USD,GBP HTTP/1.1"]]}, "Financial Modeling Prep": {"tool_desc": "Financial Modeling Prep API is a Financial statements API, a Free stock API and a historical quotes API.", "apis": [["Companies balance sheet statements", "Returns companies balance sheet statements."], ["Companies Profile", "This API returns companies profile (Price,Beta,Volume Average, Market Capitalisation, Last Dividend, 52 week range, stock price change, stock price change in percentage, Company Name, Exchange, Description, Industry,Sector,CEO,Website and image)."], ["Stock Quote Price", "This API returns stock price in real time"], ["Earning Call Transcript API PREMIUM", "Analyzing Earnings Conference Call With NLP"], ["Companies cash flow statements", "Returns companies cash flow statements"]]}, "Form 5500 Data": {"tool_desc": "Get information from all US Corporate Retirement plans from the Form 5500.", "apis": [["Form5500_PlanName", "This will return information about the plan."]]}, "StockExchangeAPI": {"tool_desc": "Financial data from stock exchanges", "apis": [["/price/{assetID}", "Get price quotes and details from an specific stock exchange asset"]]}, "Sales Tax Calculator": {"tool_desc": "Enter your city and zip code below to find the combined sales tax rate for a location.", "apis": [["Supported Countries", "Returns a list of supported countries."], ["Calculate", "Retrieves tax rates applicable to a specific address. This endpoint accepts address inputs to deliver up-to-date, relevant local tax rates instantly."]]}, "Trader Wagon": {"tool_desc": "Trader Wagon API is specially designed to obtain traders' positions (portfolio).", "apis": [["getPortfolioInfo", "Get portfolio info of a given portfolio id"], ["getTraderPositions", "Get trader positions of a given portfolio id"]]}, "Palmy Investing API": {"tool_desc": "The best fit for quantitative stock research.", "apis": [["economical_events_list", "Retrieve a list of all Economical Events which have an high prioritization and therefore could effect markets."], ["earning_events_retrieve", "Search for a specific earning. F.ex. research for AAPL's earnings or the event ID."], ["dividends_retrieve", "Retrieve a specific dividend event"], ["dividends", "A list of all dividends that are upcoming/occurred recently"], ["earning_events_list", "A list of all current earnings. We use data in an interval of the last month to the next year."], ["economical_events_retrieve", "Retrieve a an Economical Event by its name or Event ID to inspect it in more detail."], ["datatables_retrieve", "Premium: Interact with your table by querying it with its unique ID. You can list, retrieve, delete, update, create and replace tables on the go."], ["datatable_query_id={id}", "This endpoint can be important to retrieve **as many data as you want within 1 request** . It queries our database for your specified metrics/key figures and respons with the data for all the selected stocks."], ["cashflow_statement_retrieve", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["financial_growth_list", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["financial_ratios_retrieve", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["income_statement_list", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["income_statement_retrieve", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["longterm_analysis_retrieve", "Long Term Scores are calculated based on the date of the next 10-Q Report. Check the docs for explanation"], ["cashflow_statement_list", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["keymetrics_retrieve", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["financial_growth_retrieve", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["financial_ratios_list", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["balance_sheet_retrieve", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["keymetrics_list", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["balance_sheet_list", "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s)."], ["datatables_list", "Premium: Interact with your table by querying it with its unique ID. You can list, retrieve, delete, update, create and replace tables on the go."], ["sectors_movers_list", "A list of all sectors& their winners and losers (stocks)"], ["shortterm_analysis_list", "The Following Week Score is calculated once every week. Check the docs for explanation"], ["technicals_analysis_retrieve", "Technical Scores are calculated multiple times a day. Check the docs for explanation"], ["sectors_retrieve", "A detailed view on a specific sector. Find it by referring the Sector ID."], ["technicals_analysis_list", "Technical Scores are calculated multiple times a day. Check the docs for explanation"], ["technicals_retrieve", "Receive a stock with its Technical Indicators"], ["technicals_list", "Receive an up to list of stocks with their Technical Indicators"], ["10Q_list", "Useful to fetch the latest quarterly dataset for a stock or multiple stocks."], ["sectors_list", "A list of all sectors. Contains basic and time critical data."], ["sectors_movers_retrieve", "A detailed view on a specific sector. Find it by referring the Sector ID."], ["10Q_retrieve", "Useful to fetch the latest quarterly dataset for a stock or multiple stocks."], ["quote_expand_stock=_retrieve", "For premium: Receive an expanded quote with the underlying static, realtime and expanded information (Sector, Exchange)"], ["quote_list", "This endpoint provides stock quotes with time critical information, such as price and trading volume"], ["tickers_list", "A list response of all stock tickers with their ID, that are possible to trade"], ["quote_retrieve", "You receive a detail stock quote with time critical data, f.ex. the price or market cap. of AAPL"], ["sentiments_retrieve", "Get a single sentiment by its ID or the title."], ["shortterm_analysis_retrieve", "Technical Scores are calculated multiple times a day. Check the docs for explanation"], ["exchange_listed_tickers_retrieve", "Get a list of all stocks listed to your specific Exchange. Refer the exchange by its short name, f.ex. NYSE."], ["forex_list", "Receive an up to date list Forex pairs. They are updated nearly realtime"], ["sectors_history_list", "A list of all sectors& their historical performances (daily)"], ["reports_list", "Premium: A list of all reports created by Palmy Investing"], ["forex_retrieve", "Query a specific Forex pair by ID."], ["sectors_history_retrieve", "A detailed view on a specific sector. Find it by referring the Sector ID."], ["exchange_retrieve", "A detailed view on a specific exchange. Find it by referring the Exchange ID or its short name (f.ex. NYSE)."], ["exchange_list", "A list of all exchanges. Contains basic and time critical data."], ["tickers_retrieve", "A list response of all stock tickers with their ID, that are possible to trade"], ["exchange_listed_tickers_list", "Get a list of all stocks listed on all exchanges."], ["articles_retrieve", "Get a news article by its id or title."], ["sentiments_list", "Here we provide a list of all sentiments. A sentiment is computed via NLP"], ["reports_retrieve", "Premium: Retrieve one of the reports by their ID"], ["articles_list", "Here we provide a list of news articles."], ["etf_assets_retrieve", "Retrieve all assets of your ETF. Search by symbol/ID."], ["keyfigures_retrieve", "A list of all metrics you can assign for i.e data tables"], ["etf_retrieve", "Retrieve all important price information of an ETF"], ["etf_assets_list", "A list of ETFs with all their assets (i.e. stocks, commodities)."], ["etf_expand_list", "Premium: A list of ETFs with expanded functionality. Here you can view Sectors& Countries."], ["etf_list", "A list of n ETFs where each hold time critical information such as price"], ["etf_expand_retrieve", "Premium: Retrieve price and compotion information for an ETF. Search by ID/Symbol"], ["timeseries_stats_retrieve", "Retrieve all important price statistics of an asset"], ["timeseries_stats_list", "Use lists full of price statistics to compare and analyse stocks"], ["timeseries_id=_retrieve", "Retrieve all important daily price information about a stock"], ["longterm_analysis_list", "Long Term Scores are calculated based on the date of the next 10-Q Report. Check the docs for explanation"]]}, "Hryvna Today": {"tool_desc": "Exchange rates from Hryvna Today", "apis": [["/v1/rates/landing", "Notice: this method is temporary return rates for USD and EUR currencies only."], ["/v1/rates/today", "Average rates for today"], ["/v1/rates/averages", "History of average rates"], ["/v1/rates/banks", "History of average rates from banks"], ["/v1/convert", "Use this method to convert money"]]}, "Global Ethereum Price Index - GEX": {"tool_desc": "Ethereum Price Index supplied by BitcoinAverage\r\n\r\nThe GEX data accessed via the BitcoinAverage API features:\r\n\r\nUp to 1 second refresh rate\r\nRates for 165+ currencies\r\nDaily rates at preferred lock in time or live rates\r\nHistoric daily rates dating back to 2010\r\nJSON or CSV formats\r\n\r\n-------\r\n\r\nAbout BitcoinAverage\r\n\r\nBitcoinAverage.com is proud of the fact that we were the first global price index in the cryptocurrency and blockchain industry, and have proven over the years to also be one of the most reliable.", "apis": [["Custom Ticker", "This endpoint can be used to generate a custom index in a certain currency. The \u201cinex\u201d path parameter represents \u201cinclude\u201d or \u201cexclude\u201d, you can choose to generate an index removing specified exchanges, or only including the few that you require."], ["Ticker Per Symbol", "Returns ticker data for specified symbol"], ["Short Ticker", "Returns basic ticker denoting last and daily average price for all symbols"], ["Ticker Changes", "Returns ticker values and price changes for specified market and symbol."], ["All Ticker Data", "If no query parameters are sent, then returns ticker data for every supported symbol. If fiat(s) are sent as parameters, then only the ticker for those values is sent."]]}, "Coinbase": {"tool_desc": "Bitcoin, made simple.", "apis": [["Get bitcoin receive address", "Get the user's current bitcoin receive address."], ["Show supported currencies", "Show currencies supported by Coinbase."], ["Get total sell price", "Get the total sell price for some bitcoin amount."], ["Get spot price", "Get the spot price of bitcoin."], ["Get account balance", "Get the user's account balance in BTC."], ["Show user account settings", "Show current user with account settings"], ["List orders received", "List merchant orders received."], ["List recurring payments", "List your recurring payments"], ["Show transaction details", "Show details for an individual transaction."], ["Show individual recurring payment", "Show an individual recurring payment"], ["List previously used emails", "List emails the user has previously used for autocompletion."], ["List bitcoin addresses", "List bitcoin addresses associated with this account."], ["Show individual subscription", "Show an individual customer subscription"], ["Show exchange rates", "Show exchange rates between BTC and other currencies."], ["Show individual order", "Show an individual merchant order."], ["Get total buy price", "Get the total buy price for some bitcoin amount."], ["List recent transactions", "List a user's recent transactions."], ["List recent buys and sells", "List a user's recent buys and sells"]]}, "GaiaLens ESG News": {"tool_desc": "Real-time ESG news API", "apis": [["getESGNews", "ESG news API with a state of the art algorithm tracking thousands of news sources, social media and NGOs in real-time. The results include ESG specific topics including SASB and UN SDGs and a few other important ESG themes such as Modern Slavery and Gender Equality."]]}, "tokenlist": {"tool_desc": "Collection of tokens and their contract addresses.", "apis": [["tokens", "tokens list and contract based on network parameter."]]}, "Global Flight Data": {"tool_desc": "Get scheduled departing flights data by country and by week.", "apis": [["United States Scheduled Flights Growth", "Get weekly United States scheduled departing flights growth."], ["United States Scheduled Flights Level", "Get weekly United States scheduled departing flights level."], ["Australia Scheduled Flights Growth", "Get weekly Australia scheduled departing flights growth."], ["Australia Scheduled Flights Level", "Get weekly Australia scheduled departing flights level."], ["China Scheduled Flights Growth", "Get weekly China scheduled departing flights growth."], ["China Scheduled Flights Level", "Get weekly China scheduled departing flights level."], ["France Scheduled Flights Level", "Get weekly France scheduled departing flights level."], ["Germany Scheduled Flights Growth", "Get weekly Germany scheduled departing flights growth."], ["Germany Scheduled Flights Level", "Get weekly Germany scheduled departing flights level."], ["Hong Kong Scheduled Flights Growth", "Get weekly Hong Kong scheduled departing flights growth."], ["Hong Kong Scheduled Flights Level", "Get weekly Hong Kong scheduled departing flights level."], ["India Scheduled Flights Growth", "Get weekly India scheduled departing flights growth."], ["India Scheduled Flights Level", "Get weekly India scheduled departing flights level."], ["France Scheduled Flights Growth", "Get weekly France scheduled departing flights growth."], ["Italy Scheduled Flights Growth", "Get weekly Italy scheduled departing flights growth."], ["Italy Scheduled Flights Level", "Get weekly Italy scheduled departing flights level."], ["Japan Scheduled Flights Growth", "Get weekly Japan scheduled departing flights growth."], ["Japan Scheduled Flights Level", "Get weekly Japan scheduled departing flights level."], ["Singapore Scheduled Flights Growth", "Get weekly Singapore scheduled departing flights growth."], ["Singapore Scheduled Flights Level", "Get weekly Singapore scheduled departing flights level."], ["South Korea Scheduled Flights Growth", "Get weekly South Korea scheduled departing flights growth."], ["South Korea Scheduled Flights Level", "Get weekly South Korea scheduled departing flights level."], ["Spain Scheduled Flights Growth", "Get weekly Spain scheduled departing flights growth."], ["Spain Scheduled Flights Level", "Get weekly Spain scheduled departing flights level."], ["Sweden Scheduled Flights Growth", "Get weekly Sweden scheduled departing flights growth."], ["Sweden Scheduled Flights Level", "Get weekly Sweden scheduled departing flights level."], ["UAE Scheduled Flights Growth", "Get weekly United Arab Emirates scheduled departing flights growth."], ["UAE Scheduled Flights Level", "Get weekly United Arab Emirates scheduled departing flights level."], ["United Kingdom Scheduled Flights Growth", "Get weekly United Kingdom scheduled departing flights growth."], ["United Kingdom Scheduled Flights Level", "Get weekly United Kingdom scheduled departing flights level."]]}, "CoinLore Cryptocurrency": {"tool_desc": "Provides cryptocurrency prices,exchanges,markets api", "apis": [["Get exchange pairs", "Returns top 100 pars"], ["All coins ticker", "Get tickers for coins"], ["Get markets of coin", "Returns top 50 markets for coin"]]}, "investing financial stocks": {"tool_desc": "get all investing.com stocks realtime data in multi language and filters", "apis": [["filters", "get all possible screener filters"], ["chart data (deprecated)", "get latest chart data by equity pair id  (provided in screener result)"], ["stock candlestick", "get stock  candlestick table by slug"], ["currency options", "get the currency options  iframe"], ["economic Calendar", "economic Calendar table as the source"], ["consensus estimates", "consensus estimates for equities"], ["countries list", "get all countries list"], ["general tables", "get stocks general tables"], ["tree map", "get all stocks tree map by coutnry id"], ["stock technicals", "get all stock technicals data by pair_id"], ["equity ratios", "get all equity ratios by slug"], ["equity related indices", "get equity related indices by slug"], ["stock news", "get stock news by slug and type"], ["company profile", "get stock company profile by type and slug"], ["stock overview", "get stock overview data by type and slug of the stock"], ["historical data", "get historical data by pair_id"], ["earnings", "get stock earnings by pair_id"], ["dividends", "get all dividends for stock"], ["cash flow", "get cash flow by pair_id"], ["balance sheet", "get balance sheet by pair_id"], ["financial summary", "get  financial summary by pair_id"], ["income statement", "get income statement  by pair id for some stocks \nnot all"], ["show future", "get future latest data by href"], ["indices countries", "get all indices countries"], ["futures prices", "get futures prices list"], ["indices future tables", "get indices futures tables"], ["politics news", "get latest politics news"], ["coronavirus news", "get latest coronavirus news"], ["world news", "get latest world news"], ["economy news", "get latest  economy news"], ["economic indicators news", "get latest  economic indicators news"], ["market stocks news", "get latest market stocks news"], ["commodities news", "get latest commodities news"], ["forex news", "get latest forex news"], ["latest popular", "get all latest popular articles news"], ["chart", "get chart data by any pair id"], ["crypto info", "get crypto all info page by slug name"], ["forex history data (deprecated)", "get forex history data by pair id and dates"], ["majors - performance", "get all majors performance"], ["majors - price", "get all majors  currencies price"], ["get equity latest data", "get equity  latest data by slug"], ["list", "get listed  items by screener"], ["all crypto", "get all datatable of crypto"], ["index historical data (deprecated)", "get index historical data by dates"], ["index overview", "get all overview about index by symbol"], ["major indices", "get country  major indices"]]}, "Interest Rate by API-Ninjas": {"tool_desc": "Get current interest rates from all central banks and benchmarks.", "apis": [["/v1/interestrate", "API Ninjas Interest Rate API endpoint."]]}, "Currency Converter_v2": {"tool_desc": "Accurate and reliable currency exchange rates for over 150 currencies", "apis": [["List", "List of Supported Currencies"]]}, "StockyAPIExchange": {"tool_desc": "Based on the request parameters, StockyAPIExchange can provide relevant information to the user, such as stock details, summary, charts, history, daily, or latest data.", "apis": [["7-Latest", "This feature provides the most recent information about a stock, including its current price, percentage change, and trading volume. It's updated in real-time as new data becomes available."], ["6-Daily", "This feature provides up-to-date information about a stock's performance during a trading day. It includes the stock's opening and closing prices, as well as its high, low, and trading volume for the day."], ["5-History", "This feature provides historical data for a stock, including its open, high, low, close, and trading volume for each day. Users can access data for different time periods, such as daily, weekly, monthly, or yearly."], ["4-Charts", "This feature provides interactive charts that allow users to visualize the performance of a stock over time. Users can customize the time period and type of chart (line, bar, candlestick, etc.) to get a better understanding of the stock's price movements."], ["3-Summary", "Summary: This feature gives a quick overview of the performance of a stock, including its current price, percentage change, and trading volume. It also provides a summary of the key financial metrics and news related to the stock"], ["2-Stockdetails", "Stockdetails: This feature provides detailed information about a specific stock, including its name, ticker symbol, market capitalization, sector, industry, and other key financial metrics such as price-to-earnings ratio (P/E ratio), dividend yield, and earnings per share (EPS)"], ["1-AUTOComplete:", "AUTOComplete: This feature allows users to easily search for stocks by providing suggested completions for a ticker symbol or company name as they type. It helps users find the right stock without having to know the exact spelling or symbol."]]}, "Stock Info": {"tool_desc": "Get NSE, BSE stock prices", "apis": [["Get Stock Price", "To get the Stock Price (Delayed 30 mins)"]]}, "Fake Credit Card Number Generator API": {"tool_desc": "This is an API that generates fake credit card numbers that will pass Luhn's algorithm.", "apis": [["Fake Credit Card Number Generator", "Pass in one of the following card networks as a parameter:\n\n- amex\n- diners\n- discover\n- jcb\n- mastercard\n- visa"]]}, "RealStonks": {"tool_desc": "An API that gets you the real-time stock price of any NASDAQ-listed stock, along with some other parameters.", "apis": [["Stock Information", "This endpoint gets you the real-time stock information."]]}, "Pancakeswap API": {"tool_desc": "A pancakeswap API to get token price and other information with token address.", "apis": [["Get Balance", "Get token balance of specific address."]]}, "Fake Credit Card Generator ": {"tool_desc": "Select the kind of card you want to generate and let the API generate a new Test Card for you.", "apis": [["Generate CC Number", "Generate a  fake Credit Card Number"]]}, "Exchange Rate": {"tool_desc": "An API for current and historical foreign exchange rates published by the European Central Bank.", "apis": [["Symbols", "Get the all available currencies."], ["Historical", "Get historical rates for any day since 1999."], ["Latest", "Get the latest foreign exchange rates."], ["Convert", "Currency conversion endpoint, can be used to convert any amount from one currency to another."]]}, "Holistic Finance - Stock Data": {"tool_desc": "Provides stock data based on multiple sources such as Yahoo Finance.", "apis": [["Historical crypto price", "Provides historical crypto currency data."], ["Historical forex price", "Provides historical forex data."], ["Historical stock price", "Provides historical stock data."], ["Crypto quotes", "Provides real-time crypto data."], ["Forex quotes", "Provides real-time forex data."], ["Stock quotes", "Provides real-time stock data of a single or multiple stock companies."], ["Earnings", "Provides earnings of a single stock company."], ["Estimates", "Provides estimates of a single stock company."], ["Grades", "Provides grades of a single stock company."], ["Scores", "Provides scores of a single stock company."], ["Key metrics", "Provides either annual or quarterly key metrics of a single stock company."], ["Ratios", "Provides either annual or quarterly ratios of a single stock company."], ["Stock ownership", "Provides current stock ownership information."], ["Holder", "Provides information about the current holder structure."], ["Executives", "Provides information about the current composition of executives"], ["Shares float", "Provides the amount of current shares float."], ["Profile", "Provides company data e.g. sector, industry, location, executives..."], ["Income", "Provides either annual or quarterly income statements of an single stock company."], ["Cashflow", "Provides either annual or quarterly cash flow statements of an single stock company."], ["Balance", "Provides either annual or quarterly balance sheet statements of an single stock company."], ["Crypto symbol", "Returns a list of all available crypto symbols"], ["Forex symbol", "Returns a list of all available forex symbols"], ["Stock symbols", "Returns a list of all available stock symbols"]]}, "ByBit Leaderboard": {"tool_desc": "\ud83c\udfc6 Experience the power of ByBit Exchange with our ByBit API.", "apis": [["trader/details", "Returns full trader info."], ["trader/positions", "Returns all trader positions."], ["traders/with-positions", "Returns traders with shared positions only."], ["search/master_traders", "Returns MASTER traders that match your search filters."], ["search/leaderboard", "Returns traders that match your search filters."]]}, "Synthetic Financial Data": {"tool_desc": "Provides synthetic financial datasets that can be used in the development of algorithmic trading models.", "apis": [["Get Financial Time Series - Daily", "Returns synthetic financial time series (Date, Price Return) for the specified symbol. \n\nParameters:\nasset_class = [equity, bond, commodity, mixed]\nsymbol = [0000...0999] \nsize = [compact, full]  (size = compact returns the most recent 252 data points)"]]}, "Credit Card Number Validator": {"tool_desc": "Enter the first few all numbers of a Credit Card to determine if it is valid and its details.", "apis": [["Validate Card Number", "Validate Credit Card Number and get the card type"]]}, "Financial Statements": {"tool_desc": "Get standardized balance sheet, income statement, and cash flow statement for global companies going back 5 years.", "apis": [["Balance Sheet Statement", "Get company balance sheet statement by year.\n\nAll numbers in thousands."], ["Cash Flow Statement", "Get company cash flow statement by year (ttm = Trailing Twelve Months).\n\nAll numbers in thousands."], ["Income Statement", "Get company income statement by year (ttm = Trailing Twelve Months).\n\nAll numbers in thousands."]]}, "The Sandbox - SAND": {"tool_desc": "An API dedicated to The Sandbox metaverse.", "apis": [["Past 1 Week", "Get price data for past 1 week.\n\n~hourly data points."], ["Past 1 Month", "Get price data for the past month. (~30 days)\n\n~hourly data points."], ["Past 3 Years", "Get price data for the past 3 years.\n\n~ daily (00:00 UTC) data points."], ["Medium", "Get official news from Medium."], ["Past 1 Year", "Get price data for the past 1 year.\n\n~ daily (00:00 UTC) data points."], ["Year to Date", "Get price data for year to date.\n\n1 day = 5 minute interval data\n1 - 90 days = hourly data\nabove 90 days = daily data (00:00 UTC)"], ["Past 6 Months", "Get price data for the past 6 months.\n\n~ daily data points."], ["Past 3 Months", "Get price data for the past 3 months.\n\n~hourly data points."], ["Past 1 Day", "Get price data for the past 24 hours.\n\n~5 minutes data points."], ["Quote", "Get the latest price."]]}, "SentiTrade": {"tool_desc": "JSON web API that performs NLP sentiment analysis on news headlines for stocks and cryptocurrencies, grading daily collective news sentiment.", "apis": [["Daily Sentiment", "Returns asset ticker queried, sentiment score, date queried, and number of articles used to calculate the sentiment score."]]}, "Latest Stock Price": {"tool_desc": "Latest Stock Price from NSE", "apis": [["price", "Fetch latest stock price based on indices"], ["prices", "Fetch latest stock price based on indices"], ["price_all", "Fetch latest stock price"]]}, "Loan Amortization Calculator": {"tool_desc": "This API calculates Amortized loan repayment with details.", "apis": [["Calculate Repayment Schedule", "This endpoint calculates repayment schedule."]]}, "Stock News": {"tool_desc": "Get the latest financial stock news from the best news sources.", "apis": [["Get Stock News", "Get individual stock news"]]}, "Exchange rates live": {"tool_desc": "An API showing all the latest currencies from official banks.", "apis": [["Get individual bank", "Get rates from Central banks using prefixed. \nDenmark National Bank (dkk), \nNational Bank Of Poland (pln),\nEuropean Central Bank  (eur),\nEuropean Central Bank  - calculated for USD base(usd), \nSwedish Central Bank  (sek)\nFeel free to contact me If you wish to add new currency rates/ banks."], ["Get All Currency Rates", "This endpoint will return back all rates from banks."]]}, "Currency Exchange Fx": {"tool_desc": "Get the latest Currency rates for 100+ currencies.", "apis": [["Converter", "This endpoint will return the converted amount in a specified currency."]]}, "Stock Data": {"tool_desc": "Get the actual stock details of a symbol.Take a look at the long description  for the  detailed field list.", "apis": [["Symbol", "The ticker symbol of the stock."]]}, "Stock Cryptocurrency Forex Market Data": {"tool_desc": "Real-time Stock, Cryptocurrency, and Forex market data from NASDAQ, NYSE, LSE, MYX, IDX, Binance, FTX, PancakeSwap, Uniswap, FRED etc.", "apis": [["Search Exchange", "Search exchanges by query or category"], ["Search Stock, Cryptocurrency, Forex", "Search Stock, Cryptocurrency, Forex price by name or symbol or exchange"], ["Get Price", "Get Stock, Cryptocurrency, Forex price by timeframe"], ["Get Exchange Category", "Get list available categories of exchanges"]]}, "Finance Social Sentiment For Twitter and StockTwits": {"tool_desc": "Utradea's Social Sentiment APIs to track social media activity in relation to stocks and cryptocurrencies.", "apis": [["/get-social-timestamps/15m", "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Each timeframe is grouped by time intervals specified below."], ["/get-alerts", "Search for alert notifications that identify changes in trading (price & volume), financial, & company news/announcement activities for a given stock or cryptocurrency."], ["/get-content", "Content Articles\nSearch for the latest Utradea generated articles that cover analysis, commentary, & due dilligence for a given stock or cryptocurrency."], ["/get-social-notifications", "Social Sentiment Notifications\nSearch for notifications that identify changes in social media activity for a given stock or cryptocurrency on Twitter, StockTwits, and Reddit."], ["/get-social-timestamps/4h", "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Social Activity is grouped by 4 hour intervals"], ["/get-sentiment-trending/bullish", "Search for top 50 trending bullish stocks/crypto symbols on Twitter/StockTwits."], ["/get-social-stats/influencers", "Search for a stock or cryptocurrency's sentiment statistics from posts generated on Twitter or Stocktwits by user post category (influencers,spam,bot)."], ["/get-social-stats/spam", "Search for a stock or cryptocurrency's sentiment statistics from posts generated on Twitter or Stocktwits by user post category (influencers,spam,bot)."], ["/get-social-stats/bots", "Search for a stock or cryptocurrency's sentiment statistics from posts generated on Twitter or Stocktwits by user post category (influencers,spam, bot)."], ["/get-sentiment-change/bearish", "Search for top 50 trending stocks or crypto symbols on social media with the greatest change in bullish or bearish sentiment on Twitter/StockTwits."], ["/get-sentiment-change/bullish", "Search for top 50 trending stocks or crypto symbols on social media with the greatest change in bullish or bearish sentiment on Twitter/StockTwits."], ["/get-sentiment-trending/bearish", "Search for top 50 trending bearish stocks/crypto symbols on Twitter/StockTwits."], ["/get-filtered-feed", "Search posts from Twitter or StockTwits that mention specified tickers. In the additional feeds provided, Utradea filters posts on your behalf based on our spam criteria and returns posts that reaches 10,000+ impressions."], ["/get-social-feed", "Search posts from Twitter or StockTwits that mention specified tickers. In the additional feeds provided, Utradea filters posts on your behalf based on our spam criteria and returns posts that reaches 10,000+ impressions."], ["/get-social-change/impressions", "Search the top 50 tickers trending on social media with the greatest change in impressions."], ["/get-social-change/posts", "Search the top 50 tickers trending on social media with the greatest change in posts."], ["/get-social-trending/impressions", "Search the top 50 tickers trending on social media by impressions."], ["/get-social-trending/likes", "Search the top 50 tickers trending on social media by likes."], ["/get-social-trending/comments", "Search the top 50 tickers trending on social media by comments."], ["/get-social-trending/posts", "Search the top 50 tickers trending on social media by posts."], ["/get-social-moving-averages/1m", "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by monthly intervals."], ["/get-social-moving-averages/2w", "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 2-week intervals."], ["/get-social-moving-averages/1w", "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 1 week intervals."], ["/get-social-moving-averages/72h", "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 72-hour intervals."], ["/get-social-timestamps/1d", "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Social activity is grouped by 1 day intervals"], ["/get-social-timestamps/1h", "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Social activity is grouped by 1-hour intervals"], ["/get-social-timestamps/30m", "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Social activity is grouped in 30 min intervals."], ["/get-social-list", "Get a list of tickers across social media platforms: Twitter, StockTwits, and Reddit. These are tickers that are currently mentioned across each platform. \nUse these tickers to query the remaining endpoints."]]}, "Risk Free Rate API": {"tool_desc": "Returns the risk-free rate for a given date.", "apis": [["Risk Free Rate", "This endpoint returns the risk free rate for a specific date. Default values are:\n\ndate = yesterday\ngeography = US\nduration = 3m\n\nCurrently only US is supported. Durations supported are 3m, 5y and 10y. Historical values are supported until 1960-01-04."]]}, "Binance Futures Leaderboard": {"tool_desc": "Binance Futures Leaderboard API is an API for querying the leaderboard of the Binance Futures Exchange.", "apis": [["get_other_performance", "Get the trader performance"], ["search_nickname", "Get the trader by nickname"], ["get_trader_positions", "Get trader open positions"], ["get_other_leaderboard_base_info", "Get the trader information"], ["get_other_trade_record", "Get the other trade record"], ["search_trader", "Search for traders by nickname"], ["get_leaderboard_rank", "Get the leaderboard rank"], ["get_other_position", "Get trader open positions"], ["search_leaderboard", "Get the list of traders on the leaderboard"]]}, "YH Finance_v2": {"tool_desc": "", "apis": [["stock/get_earnings_per_share", "return earnings per share"], ["stock/get_price_to_sales", "return price to sales"], ["stock/get_200day_moving_avg", "return 200 day moving average"], ["stock/get_50day_moving_avg", "return 50 day moving average"], ["stock/get_annual_avg_div_rate", "return annual average dividend rate"], ["stock/get_five_yr_avg_div_yield", "return five year average dividend yield"], ["stock/get_annual_avg_div_yield", "return annual avg div yield"], ["stock/get_daily_high", "return daily h igh"], ["stock/get_ten_day_avg_daily_volume", "return ten day avg daily volume"], ["stock/get_prev_close_price", "return previous close price"], ["stock/get_current_percent_change", "return current percent change"], ["stock/get_cost_of_revenue", "return cost of revenue"], ["stock/get_interest_expense", "return interest expense for stock"], ["/stock/get_research_and_development", "return research and development"], ["stock/get_daily_dividend_data", "return daily dividend data"], ["stock/get_key_statistics_data", "return key statistics data"], ["stock/get_financial_data", "return stock financial information"], ["stock/get_stock_profile_data", "return stock profile data"], ["stock/get_num_shares_outstanding", "return number of share outstanding"], ["stock/get_stock_historical_price_data", "This method will pull historical pricing data for stocks, currencies, ETFs, mutual funds, U.S. Treasuries, cryptocurrencies, commodities, and indexes."], ["stock/get_stock_quote_type_data", "return stock quota type data"], ["stock/get_stock_earnings_data", "return stock earning data"], ["stock/get_financial_stmts", "return financial statements for 'income', 'balance',  or 'cash'"], ["stock/get_stock_price", "return current stock price"], ["stock/get_summary", "Returns financial summary data for cryptocurrencies, stocks, currencies, ETFs, mutual funds, U.S. Treasuries, commodity futures, and indexes."]]}, "Defi Data": {"tool_desc": "Free to use API to retrieve data about TVL and coins", "apis": [["Protocols", "List of protocols along with their tvl"], ["Protocol", "Get historical TVL of a protocol and breakdowns by token and chain"], ["Charts", "Get historical TVL of DeFi on all chains"], ["Charts chain", "Get historical TVL of a chain"], ["Tvl protocol", "Get only protocol TVL"], ["Chains", "Get current TVL of all chains"], ["Block", "Get closest block to a timestamp\n\nRuns binary search over a blockchain's blocks to get the closest one to a timestamp.\n\nEvery time this is run we add new data to our database, so each query permanently speeds up future queries."]]}, "UK Mortgage Search": {"tool_desc": "Real Time Mortgage Data from over 90 UK Lenders", "apis": [["Search Mortgages", "Search All mortgages \n\nParams:"]]}, "GaiaLens Company Names": {"tool_desc": "Get all company names within the GaiaLens Dataset", "apis": [["getCompanyNames", "This API returns a list of all company names available to the user. It can be used as a pre-step before invoking other GaiaLens APIs such as GaiaLens ESG Scores, Gaialens Historical ESG Scores and GaiaLens ESG News."]]}, "ExchangeRatesPro": {"tool_desc": "Exchange rates for 185+ currencies updated every minute.", "apis": [["Historical Exchange Rates", "Access over two decades of historical exchange rate data with the /historical endpoint. Exchange rates are provided as daily end of day exchange rates dating back all the way to 1999. Choose the day with the 'date' parameter."], ["Latest Exchange Rates", "Get up-to-date exchange rate data with the /latest endpoint. Choose from daily, hourly, or minute updates, based on your plan. Stay on top of the markets with real-time data, delivered with one simple request."], ["List Available Currencies", "Returns a list of all currencies that are available through the API."]]}, "Currency Ex": {"tool_desc": "Provide full range of currency exchange rate.", "apis": [["Currency List", "List of available currency in JSON format."], ["Get Exchange Rate", "Return excahnge rate of two currency codes."]]}, "Rankiteo Climate Risk Assessment": {"tool_desc": "We provide an API to give a climate risk assessment score for any locations in the world.", "apis": [["GetPowerplantByRadiusAndAddress", "Get powerplants which have address falling into a specific radius"], ["GetPowerplantByRadiusAndGps", "Get powerplants which have coordinate points falling into a specific radius"], ["GetDisasterByRadiusAndAddress", "Get disasters which have address falling into a specific radius for a specific date range"], ["GetDisasterByRadiusAndGps", "Get disasters which have coordinate points falling into a specific radius for a specific date range"], ["GetCityExposedByDisasterId", "Get affected city along with informations by disaster id"], ["GetDisasterTypeByDateAndStatus", "Get disaster by status within a time range"], ["GetDisasterTypeByDate", "Get disaster by type within a time range"], ["GetClimateScoreByGps", "Get climate score for a specific location mapped to some industries/disasters with a given gps position."], ["GetClimateScoreByAddress", "Get climate score for a specific location mapped to some industries/disasters with a given address."]]}, "Mortgage Calculator by API-Ninjas": {"tool_desc": "Simple-yet-powerful mortgage calculator for home financing.", "apis": [["/v1/mortgagecalculator", "API Ninjas Mortgage Calculator API endpoint. Either **loan_amount** or (**home_value** + **downpayment**) parameters must be set."]]}, "Mineable coins": {"tool_desc": "Access coin rewards, mining difficulty, algorithms, and other useful data for hundreds of coins and multi pools.", "apis": [["Get coins' data", "With this endpoint you can get a collection of all coins.\n\n**API alterations**\n- **Get one coin:** https://api.minerstat.com/v2/coins?list=BTC\n- **Get list of coins:** https://api.minerstat.com/v2/coins?list=BTC,BCH,BSV\n- **Get all coins from one algorithm:** https://api.minerstat.com/v2/coins?algo=SHA-256\n- **Get all coins from multiple algorithms:** https://api.minerstat.com/v2/coins?algo=SHA-256,Scrypt,Ethash"]]}, "Crypto and Forex Rates": {"tool_desc": "Get rates for forex USD base and crypto USDT base", "apis": [["ExchangeCurrencies", "Exchange between two currency ( USD is base ) \nUser can define Buy and Sell Fees also can define withdraw fee in percentage"], ["api/assetInfo", "Information about single asset"], ["getPrices", "Get list of prices for all assets"], ["getAssets", "return list of supported assets"]]}, "Is This Coin A Scam": {"tool_desc": "Get access to real-time data on all major cryptocurrencies, including ratings, red flags, trending analytics, community metrics and more.", "apis": [["Get a list of latest profiles", "Get a list of the top 100 crypto projects added to on isthiscoinascam.com. Ordered by date added."], ["Get a list of most watched profiles", "Get a list of the most watched 100 crypto projects on isthiscoinascam.com over the past 7 days. Ordered by most most watched first."], ["Get a list of highest community rated profiles", "Get a list of the most highly community rated crypto projects on isthiscoinascam.com over the past 7 days. Ordered by highest rating first."], ["Get platform by slug", "Get a specific platform by slug"], ["Get profile by slug", "Get a specific coin profile by slug"], ["Get a list of trending profiles", "Get a list of the top 100 crypto projects currently trending on isthiscoinascam.com added to the site. Ordered by most popular first."], ["List all profiles", "Get a list of profiles. You can search slug, name and symbol"], ["Get coin by slug", "Get a specific coin by slug"], ["List all platforms", "Get a list of platforms. You can search slug, name and symbol. You can perform wildcard searches"], ["List all coins", "Get a list of coins. You can search slug, name and symbol. You can perform wildcard searches"]]}, "walletapi.cloud": {"tool_desc": "Integrate a ledger layer enabling asset accounting or closed-loop payments between your users or IoT devices.", "apis": [["List transactions", "Retrieve a pageable list of transactions for a time period."], ["List projects", "Obtain a list of your projects."], ["List project's assets", "Obtain a list of assets for a project."], ["Get transaction details", "Call this endpoint to obtain a transaction's current state."], ["Get wallet details", "Obtain wallet balance and details."], ["Get asset details", "Obtain the details of an asset with provided ID."], ["Get project details", "Obtain a project's details including all assets."], ["List customers", "Retrieve a list of your customers with pagination. Specify current page and page size as query parameters."], ["List system wallets", "Obtain a list of system wallets for this project."], ["List customer's wallets", "Obtain a list of wallets owned by a customer."], ["Get customer details", "Call this endpoint to obtain a record for a customer with provided ID."], ["List operations in wallet's ledger", "Obtain a pageable list of operations that were posted to a wallet within a specified time period."]]}, "Ethereum random address generator. ETH key pairs generator": {"tool_desc": "This API generates a random ethereum public address with its private key", "apis": [["eth", "This API generates a random ethereum public address with its private key"]]}, "Quandl": {"tool_desc": "The premier source for financial, economic, and alternative datasets, serving investment professionals.", "apis": [["Get time-series data and metadata", "This call returns data and metadata for a given time-series."], ["Get filtered time-series data", "You can slice, transform and otherwise customize your time-series dataset prior to download by appending various optional parameters to your query.  Get monthly % changes in Facebook's closing price for the year 2014:"], ["Get metadata for a time-series database", "You can retrieve metadata for a specified time-series database"], ["Get time-series data", "This call returns data from a specified time-series."], ["Get time-series metadata", "This call returns metadata for a specified time-series."]]}, "Stock Prices": {"tool_desc": "Returns the adjusted open, high, low, and close price for a given symbol.", "apis": [["Max Historical Quarterly Prices", "Max quarterly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included."], ["Max Historical Monthly Prices", "Max monthly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included."], ["1 Day Historical Daily Prices", "1 Day historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included."], ["2 Year Historical Quarterly Prices", "2 Year quarterly historically adjusted Open, High, Low, and Close prices.  Quarterly Volume, Dividend, and Split information is also included."], ["2 Year Historical Monthly Prices", "2 Year monthly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included."], ["5 Day Historical Daily Prices", "5 Day historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included."], ["5 Year Historical Quarterly Prices", "5 Year quarterly historically adjusted Open, High, Low, and Close prices.  Quarterly Volume, Dividend, and Split information is also included."], ["5 Year Historical Monthly Prices", "5 Year monthly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included."], ["1 Month Historical Daily Prices", "1 Month historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included."], ["YTD Historical Daily Prices", "Year to Date historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included."], ["10 Year Historical Monthly Prices", "10 Year monthly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included."], ["10 Year Historical Quarterly Prices", "10 Year quarterly historically adjusted Open, High, Low, and Close prices.  Quarterly Volume, Dividend, and Split information is also included."], ["3 Month Historical Daily Prices", "3 Month historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included."], ["6 Month Historical Daily Prices", "6 Month historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included."], ["1 Year Historical Daily Prices", "1 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included."], ["5 Year Historical Daily Prices", "5 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included."], ["Max Historical Daily Prices", "Max historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included."], ["2 Year Historical Daily Prices", "2 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included."], ["10 Year Historical Daily Prices", "10 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included."]]}, "Exchange Rate Provider": {"tool_desc": "Simple provider of foreign exchange rates for major currencies.", "apis": [["Get Foreign Exchange Rates for other major currencies", "Get Foreign Exchange Rates for other major currencies. At the moment only GBP and USD are available. More will be added with future updates.\n\nSo as `currencyId` please **use only** `/gbp` or `/usd`."], ["Get EUR Foreign Exchange Rates", "Get Foreign Exchange Rates for default currency EUR."]]}, "Ethereum-large-buy/sell-orders": {"tool_desc": "A Flask API that scrapes large buy and sell orders of Ethereum ERC20 tokens could be a useful tool for cryptocurrency traders and investors.", "apis": [["GetLargeOrders", "get large orders of Eth tokens"]]}, "Piotrosky F-Score": {"tool_desc": "The Piotroski score is a discrete score between zero and nine that reflects nine criteria used to determine the strength of a firm's financial position.", "apis": [["GetFScore", "Gets the F-Score for the provided ticker in the query parameters."]]}, "Crypto Exchanges": {"tool_desc": "Useful tool for real-time pricing and market activity for over 1,000 cryptocurrencies.", "apis": [["Exchange by ID", "Get Exchange by ID"], ["Asset by ID", "Get Asset by ID"], ["Asset History by ID", "Get Asset History by ID"], ["Asset Markets by ID", "Get Asset Markets by Asset ID"]]}, "Currency Converter by API-Ninjas": {"tool_desc": "Convert currencies using the latest exchange rates.", "apis": [["/v1/convertcurrency", "API Ninjas Convert Currency API endpoint."]]}, "Test_v3": {"tool_desc": "for test purpose", "apis": [["Price", "Get current price of a currency."]]}, "Binance RSI indicator": {"tool_desc": "Allows you to get the current RSI indicator of a trading pair(s) on timeframes of 15 minutes, 1 hour, 4 hours and 1 day.", "apis": [["Get RSI by Pairs", "Get RSI indicator for all trading pairs on Binance.com"]]}, "Seeking Alpha": {"tool_desc": "Query for news, market moving, price quotes, chart, indices, analysis from investors and experts, etc...", "apis": [["symbols/get-momentum (Deprecated)", "Get momentum of specific symbol\n* This endpoint is deprecated,  you need to use .../symbols/v2/get-momentum endpoint instead."], ["symbols/get-option-expirations", "Get option expirations to use with .../symbols/get-options endpoint"], ["symbols/get-sector-metrics", "Get Profitability, Growth, etc... metrics"], ["symbols/get-metric-grades", "Get Profitability, Growth, etc... grade"], ["symbols/get-ratings (Deprecated)", "Get ratings data for specific symbol\n* This endpoint is replaced by .../symbols/get-factor-grades and .../symbols/get-quant-rating-histories"], ["symbols/get-analyst-price-target", "Get Wall Street analyst price target for specific symbol"], ["symbols/get-earnings", "Get information  in Earnings tab of specific symbol"], ["symbols/get-dividend-history", "Get dividend history of specific symbol"], ["symbols/get-profile", "Get profile information of specific symbol"], ["symbols/get-fundamentals", "Get fundamentals for specific symbol"], ["symbols/get-meta-data", "Get meta data of specific symbol"], ["symbols/get-top-holdings (Deprecated)", "Get top holdings of specific symbol"], ["symbols/get-factor-grades (Deprecated)", "Get factor grades for specific symbol"], ["symbols/get-key-data (Deprecated)", "Get key data of specific symbol"], ["symbols/v2/get-chart", "This endpoint reproduces public data and features in Charting tab."], ["symbols/get-peers", "Get peers of specific symbol"], ["symbols/get-summary", "Get summary information of specific symbol"], ["symbols/get-financials", "Get financials for specific symbol"], ["symbols/v2/get-momentum", "Get momentum of specific symbol"], ["symbols/get-analyst-recommendations", "Get Wall Street analyst recommendations for specific symbol"], ["symbols/get-holdings", "Get information  in Holdings tab of specific symbol"], ["symbols/get-valuation", "Get valuation of specific symbols"], ["transcripts/v2/get-details", "Get transcript detail by id"], ["symbols/get-estimates", "Get estimated EPS/revenue of specific symbol by annual or quarterly"], ["symbols/get-chart", "Get data to draw chart for specific symbol"], ["market/get-realtime-prices (Deprecated)", "* Use .../market/get-realtime-quotes instead.\nGet real time prices"], ["market/get-equity", "Get different market equities"], ["market/get-realtime-quotes", "Get real time quotes"], ["news/list (Deprecated)", "List news of specific symbol"], ["transcripts/list (Deprecated)", "List transcripts of specific symbol"], ["articles/list (Deprecated)", "List articles by category"], ["articles/v2/list", "List articles by category"], ["analysis/v2/list", "List analysis of specific symbol"], ["news/v2/list-by-symbol", "List news by symbol"], ["news/v2/list", "List news by category"], ["market/get-day-watch", "Get market day watch"], ["symbols/get-metrics", "Get metrics of specific symbols"], ["transcripts/get-details (Deprecating)", "Get transcript detail by id\n* This endpoint is deprecating. Use .../transcripts/v2/get-details instead"], ["analysis/get-details (Deprecating)", "Get analysis detail by id\n* This endpoint is deprecating. Use .../analysis/v2/get-details instead"], ["analysis/list (Deprecated)", "List analysis of specific symbol"], ["analysis/v2/get-details", "Get analysis detail by id"], ["screener-filters/list", "List available filters to be used in .../screeners/get-results endpoint"], ["screeners/list", "List all screeners (Top Rated Stocks, Top Quant Dividend Stocks,  Top Yield Monsters, etc...)"], ["comments/get-contents", "This endpoint is used to get many comment's content at once by comment ids."], ["comments/v2/list", "List all comments relating to a post or article or news. This endpoint only returns site map structure of comments relating to a post. You need to use along with .../comments/get-contents endpoint to get the contents."], ["symbols/get-quant-rating-histories (Deprecated)", "Get quant rating histories for specific symbol"], ["comments/get-sub-comments", "This endpoint is used to get sub or nested comments of another comment"], ["screeners/detail", "Get more information of a screener"], ["press-releases/list (Deprecated)", "List press releases of specific symbol"], ["press-releases/get-details", "Get press release detail by id"], ["articles/list-wall-street-breakfast", "List articles by category"], ["transcripts/v2/list", "List transcripts of specific symbol"], ["press-releases/v2/list", "List press releases of specific symbol"], ["auto-complete (Deprecated)", "Get suggested symbols, authors, etc... by provided word or phrase"], ["v2/auto-complete", "Get suggested symbols, authors, etc... by provided word or phrase"], ["comments/list (Deprecated)", "List all comments relating to a post or article or news"], ["news/get-details", "Get analysis detail by id"], ["symbols/get-analyst-ratings (Deprecated)", "Get Wall Street analyst ratings for specific symbol"], ["articles/get-details", "Get analysis detail by id"], ["news/list-trending (Deprecated)", "List latest trending news"]]}, "Yahoo Finance_v2": {"tool_desc": "Yahoo Finance API for stocks, options, ETFs, mutual funds and news.", "apis": [["stock/history", "Historic data for stocks, ETFs, mutuals funds, etc..."], ["market/quotes/{stocks}", "Quote data for stocks, ETFs, mutuals funds, etc..."], ["options", "Get option data for stocks, ETFs and indexes."], ["stock/financial-data", "Get stock financial data."], ["market/news", "Recently published stock news in all sectors."], ["insider-trades", "Latest insider trading activities from CEO, Directors, Chief Executive Officer, 10% Owner, etc..."], ["market/news/{stock}", "Recently published stock news in Yahoo finance."], ["stock/combine/data", "Get combine stock data such as profile, financial data, statistics, balance sheet, sec-filing, quote, earnings, trends and more!"], ["market/aggressive_small_caps", "Small cap stocks with earnings growth rates better than 25%."], ["market/undervalued_large_caps", "Large cap stocks that are potentially undervalued."], ["market/most_actives", "Stocks ordered in descending order by intraday trade volume."], ["market/small_cap_gainers", "Small Caps with a 1 day price change of 5.0% or more."], ["market/most-watched", "Trending stocks in today's market"], ["market/day_losers", "Stocks ordered in ascending order by price percent change with respect to the previous close."], ["market/day_gainers", "Stocks ordered in descending order by price percent change with respect to the previous close."], ["market/undervalued_growth_stocks", "Stocks with earnings growth rates better than 25% and relatively low PE and PEG ratios."], ["market/top-gainers-depreciated", "Stocks with the most gains in today's market"], ["market/growth_technology_stocks", "Technology stocks with revenue and earnings growth in excess of 25%."], ["stock/key-statistics", "Get stock key statistics data."], ["stock/insider-holders", "Get stock insider holders' information."], ["stock/earnings-history", "Get earnings history information for a particular stock"], ["stock/upgrade-downgrade-history", "Get stock upgrade and downgrade history."], ["stock/insider-transactions", "Get stock insider transactions history."], ["stock/income-statement", "Get stock income statement data."], ["stock/index-trend", "Get index trend earnings history information for a particular stock"], ["stock/cashflow-statement", "Get stock cash flow statements."], ["stock/profile", "Get stock profile information such as company name, descriptions, website, etc..."], ["stock/calendar-events", "Get stock calendar events."], ["stock/balance-sheet", "Get stock balance sheet data."], ["stock/recommendation-trend", "Get stock recommendations and trends."], ["stock/net-share-purchase-activity", "Get net share purchase activity information for a particular stock"], ["stock/institution-ownership", "Get stock institution ownership."], ["stock/sec-filings", "Get stock SEC filings."], ["stock/earnings", "Get earnings information for a particular stock"], ["stock/earnings-trend", "Get earnings trend earnings history information for a particular stock"]]}, "Finshorts": {"tool_desc": "Finshorts is a platform where you can access companies Stock Quote, Company Info, Historical Prices Chart, Historical  Dividends, Cash flow statement in realtime", "apis": [["Historical Prices", "Finshorts provide companies historical prices in realtime"], ["Stock Quote", "Finshorts provide companies stock quote data in realtime"], ["Cash flow statement", "Finshorts provide companies cash flow statement in realtime"], ["Historical Dividends", "Finshorts provide companies historical dividends data in realtime"], ["Company Info", "Finshorts provide company Info in realtime"]]}, "ForexGo": {"tool_desc": "Introducing ForexGo API - the powerful currency exchange solution for developers.", "apis": [["/fx", "Introducing ForexGo API - the powerful currency exchange solution for developers. Effortlessly integrate real-time forex rates and conversion capabilities into your applications with our easy-to-use API. Enhance your projects with accurate and up-to-date exchange data, empowering users across the globe to make informed financial decisions. Get started with ForexGo API today!"]]}, "Oil Thai Price": {"tool_desc": "Price of Oil in Thailand", "apis": [["Get latest price", "Get latest thai oil price"], ["Get image result today price", "Get result image for today price"]]}, "Crowdsense": {"tool_desc": "The most comprehensive real-time alpha-generating data feed API for cryptocurrencies, that analyzes social media sentiment, weighted sentiment, mentions, reach, top coins, spikes, influencer posts, and other chatter updates.", "apis": [["Get Predictive Spikes by Coin Name", "Retrieve predictive social media spikes in the last 24 hours by Coin Name. Results will contain Sentiment, Weighted Sentiment, Mentions and Followers spikes both positive and negative. \n\nThis brings predictive spikes (that went through another machine learning model to predict likelihood of market change within the next 24 hours). These spikes are colored as red and orange.\n\n**Input:**\n\n- Coin Name (Required)\n\n**Output:**\n- EventId\n- EventType\n- Event Time\n- Related coins\n- Event Color\n- Event text\n\n**Definitions:**\n\n- Related coins: Coins mentioned in the post\n- Event type: Determines the type of spike (Sentiment, Weighted sentiment, Mentions or Followers) and the timeframe of the spike (1 hour, 8 hours or 1 day)\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Mentions: Number of posts related to the coin in tracked social media sources.\n- Sentiment: Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n- WeightedSentiment: Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers]\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC\n- Coins in this endpoint are 3 Billion market cap and more"], ["Get All Social Spikes by Coin Ticker", "Retrieve social media spikes in the last 24 hours by Coin Ticker. Results will contain Sentiment, Weighted Sentiment, Mentions and Followers spikes both positive and negative. \n\nThis brings all spikes including:\n\n- Predictive spikes (that went through another machine learning model to predict likelihood of market change within the next 24 hours). These spikes are colored as red and orange.\n- Other spikes in social media metrics that did not go through another layer of market moving prediction. These include spikes that are colored as yellow, gray, and black.\n\n**Input:**\n\n- Coin Ticker (Required)\n\n**Output:**\n\n- EventId\n- EventType\n- Event Time\n- Related coins\n- Event Color\n- Event text\n\n**Definitions:**\n\n- Related coins: Coins mentioned in the post\n- Event type: Determines the type of spike (Sentiment, Weighted sentiment, Mentions or Followers) and the timeframe of the spike (1 hour, 8 hours or 1 day)\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Mentions: Number of posts related to the coin in tracked social media sources.\n- Sentiment: Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n- WeightedSentiment: Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers]\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC"], ["Get Predictive Spikes by Coin Ticker", "Retrieve predictive social media spikes in the last 24 hours by Coin Ticker. Results will contain Sentiment, Weighted Sentiment, Mentions and Followers spikes both positive and negative. \n\nThis brings predictive spikes (that went through another machine learning model to predict likelihood of market change within the next 24 hours). These spikes are colored as red and orange.\n\n**Input:**\n\n- Coin Ticker (Required)\n\n**Output:**\n\n- EventId\n- EventType\n- Event Time\n- Related coins\n- Event Color\n- Event text\n\n\n**Definitions:**\n\n- Related coins: Coins mentioned in the post\n- Event type: Determines the type of spike (Sentiment, Weighted sentiment, Mentions or Followers) and the timeframe of the spike (1 hour, 8 hours or 1 day)\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Mentions: Number of posts related to the coin in tracked social media sources.\n- Sentiment: Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n- WeightedSentiment: Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers]\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC\n- Coins in this endpoint are 3 Billion market cap and more"], ["Get All Social Spikes by Coin Name", "Retrieve social media spikes in the last 24 hours by Coin Name. Results will contain Sentiment, Weighted Sentiment, Mentions and Followers spikes both positive and negative. \n\nThis brings all spikes including:\n\n- Predictive spikes (that went through another machine learning model to predict likelihood of market change within the next 24 hours). These spikes are colored as red and orange.\n- Other spikes in social media metrics that did not go through another layer of market moving prediction. These include spikes that are colored as yellow, gray, and black.\n\n**Input:**\n\n- Coin Name (Required)\n\n**Output:**\n\n- EventId\n- EventType\n- Event Time\n- Related coins\n- Event Color\n- Event text\n\n**Definitions:**\n\n- Related coins: Coins mentioned in the post\n- Event type: Determines the type of spike (Sentiment, Weighted sentiment, Mentions or Followers) and the timeframe of the spike (1 hour, 8 hours or 1 day)\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Mentions: Number of posts related to the coin in tracked social media sources.\n- Sentiment: Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n- WeightedSentiment: Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers]\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC"], ["Get Daily Influencer Posts by Coin Name", "Retrieve news and posts from Top Influencers in social media ordered by date by coin name\nThis endpoint contains results on a specific coin. To search for influencer posts on all coins coins check \"Get Daily Influencer Posts\"\n\n**Input:**\n\n- Coin Name (Required)\n\n\n**Output:**\n\n- EventId\n- EventType\n- Event Time\n- Publisher\n- Source\n- Related coins\n- Event Color\n- Number of followers\n- Event text\n\n**Definitions:**\n\n- Publisher: User name of the publisher of the event in social media\n- Source: Social media where the post was published\n- Related coins: Coins mentioned in the post\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Number of followers: Influencer\u00b4s number of followers in social media\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC"], ["Get Daily Influencer Posts", "Retrieve news and posts from Top Influencers in social media ordered by date\nThis endpoint contains results from all coins. To search for posts on a specific coins check \"Get Daily Influencer Posts by Coin Name\" or \"Get Daily Influencer Posts by Coin Ticker\"\n\n**Output:**\n\n- EventId \n- EventType\n- Event Time\n- Publisher\n- Source\n- Related coins\n- Event Color\n- Number of followers\n- Event text\n\n**Definitions:** \n\n- Publisher: User name of the publisher of the event in social media\n- Source: Social media where the post was published\n- Related coins: Coins mentioned in the post\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Number of followers:  Influencer\u00b4s number of followers in social media\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC"], ["Get Top Coins By Followers", "Retrieve real time top 10 coins by Followers\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Followers value\n\n**Definitions:**\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n- All results are in real time"], ["Get Top Coins By Sentiment", "Retrieve real time top 10 coins by Sentiment\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Sentiment value\n\n**Definitions:**\n\n- Sentiment: Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\n**Details:**\n- All results are in real time"], ["Get Daily Influencer Posts by Coin Ticker", "Retrieve news and posts from Top Influencers in social media ordered by date by coin ticker\nThis endpoint contains results on a specific coin. To search for influencer posts on all coins coins check \"Get Daily Influencer Posts\"\n\n**Input:**\n\n- Coin Ticker (Required)\n\n**Output:**\n\n- EventId\n- EventType\n- Event Time\n- Publisher\n- Source\n- Related coins\n- Event Color\n- Number of followers\n- Event text\n\n**Definitions:**\n\n- Publisher: User name of the publisher of the event in social media\n- Source: Social media where the post was published\n- Related coins: Coins mentioned in the post\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Number of followers: Influencer\u00b4s number of followers in social media\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC"], ["Get Coin Metrics By Name", "Retrieve  coin\u00b4s real time social media metrics by Coin name\nIn the case you want to retrieve historical data check \"Get Coin Historical Metrics by Name\" or \"Get Coin Historical Metrics by Ticker\"\n\n**Input:** \n- Security Name: Coin Name (Required)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security name\n- DataTimeStamp\n\n**Definitions:**\n\n\u2022\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\u2022\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\u2022\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n\u2022\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All dates are in UTC\n- Results are on 1 day timeframe"], ["Get Coin Metrics By Ticker", "Retrieve coin\u00b4s  real time social media metrics by Coin ticker\nIn the case you want to retrieve historical data check \"Get Coin Historical Metrics by Name\" or \"Get Coin Historical Metrics by Ticker\"\n\n**Input:** \n- Security Ticker: Coin Ticker (Required)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security name\n- DataTimeStamp\n\n**Definitions:**\n\n\u2022\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\u2022\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\u2022\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n\u2022\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n\n- All dates are in UTC\n- Results are on 1 day timeframe"], ["Get Top Coins By Followers Change", "Retrieve real time top 10 coins by Mentions change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Followers change value\n\n**Definitions:**\n\n- FollowersChange: Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days\n\n\n**Details:**\n- All results are in real time"], ["Get Top Coins By Mentions Change", "Retrieve real time top 10 coins by Mentions change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Mentions change value\n\n**Definitions:**\n- MentionsChange: Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All results are in real time"], ["Get Top Coins By Mentions", "Retrieve real time top 10 coins by Mentions\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Mentions value\n\n**Definitions:**\n- Mentions: Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\n**Details:**\n- All results are in real time"], ["Get Top Coins By Sentiment Change", "Retrieve real time top 10 coins by Sentiment change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Sentiment change value\n\n**Definitions:**\n- Sentiment Change: Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All results are in real time"], ["Get Coin Historical Metrics By Name", "Retrieve  coin\u00b4s historical social media metrics by Coin Name\nIn the case you want to retrieve real time data check \"Get Coin Metrics by Name\" or \"Get Coin Metrics by Ticker\"\n\n**Input:** \n-  Date (MM/DD/YYYY HH:HH AM/PM) (Required)\n- Security Name: Coin Name (Required)\n- TimeFrame: 1d, 1h, 8h (Optional)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Weighted Sentiment\n- Weighted sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security Name\n- TimeFrame\n- DataTimeStamp\n\n**Definitions:**\n\n\u2022\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\u2022\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\u2022\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tWeightedSentiment \u2013  Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)  in the requested date with TimeFrame required. [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers] \n\u2022\tWeightedSentimentChange - Percentage change of Weighted Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n\u2022\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n\n- All dates are in UTC\n- Historical date is only avaliable from 7 days back"], ["Get Coin Historical Metrics By Ticker", "Retrieve  coin\u00b4s historical social media metrics by Coin ticker\nIn the case you want to retrieve real time data check \"Get Coin Metrics by Name\" or \"Get Coin Metrics by Ticker\"\n\n**Input:** \n-  Date (MM/DD/YYYY HH:HH AM/PM) (Required)\n- Security Ticker: Coin Ticker (Required)\n- TimeFrame: 1d, 1h, 8h (Optional)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Weighted sentiment\n- Weighted sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security name\n- TimeFrame\n- DataTimeStamp\n\n**Definitions:**\n\n\u2022\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\u2022\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\u2022\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tWeightedSentiment \u2013  Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)  in the requested date with TimeFrame required. [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers] \n\u2022\tWeightedSentimentChange - Percentage change of Weighted Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n\u2022\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n\n- All dates are in UTC\n- Historical date is only avaliable from 7 days back"], ["Get Supported Coins", "Get all the supported coins, the result contains pairs of Name and Ticker of each coin ordered alphabetically"]]}, "Investors Exchange (IEX) Trading": {"tool_desc": "The IEX API is a is a free, web-based API supplying IEX quoting and trading data.", "apis": [["IEX Short Interest List", "Consolidated market short interest positions in all IEX-listed securities"], ["IEX Regulation SHO Threshold Securities List", "IEX-listed securities that have an aggregate fail to deliver position for five consecutive settlement days at a registered clearing agency, totaling 10,000 shares or more and equal to at least 0.5% of the issuer\u2019s total shares outstanding (i.e., \u201cthreshold securities\u201d)."], ["Effective Spread", "Returns an array of effective spread, eligible volume, and price improvement of a stock, by market."], ["Time Series", "Alternate way to access the chart endpoint"], ["OHLC", "Returns the official open and close for a give symbol."], ["Book", "Response includes data from deep and quote. Refer to each endpoint for details."]]}, "Twelve Data": {"tool_desc": "Financial data provided for developers, to enter the world markets.", "apis": [["Ratings", "This API request returns ratings of a mutual fund.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol"], ["Composition", "This API request returns the portfolio composition of a mutual fund, including sectors, holding details, weighted exposure, and others.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol"], ["Purchase Info", "This API request returns essential information on purchasing a mutual fund, including minimums, pricing, and available brokerages.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol"], ["EPS Revisions", "This API endpoint returns analysts\u2019 revisions of a company's future quarterly and annual earnings per share (EPS) over the last week and month.\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol"], ["Growth Estimates", "This API endpoint returns consensus analyst estimates over the company's growth rates for various periods.\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol"], ["Analyst Ratings - US Equities", "This API endpoint returns complete information on ratings issued by analyst firms. Works only for US equities.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol"], ["Analyst Ratings - Light", "This API endpoint returns a lightweight version of ratings issued by analyst firms. Works for US and international markets.\n\nAvailability: Mega plan\nData weighting: 75 API credits per symbol"], ["Price Target", "This API endpoint returns the analysts' projection of a security's future price.\n\nAvailability: Mega plan\nData weighting: 75 API credits per symbol"], ["Recommendations", "This API endpoint returns the average of all analyst recommendations and classifies them as Strong Buy, Buy, Hold, or Sell. Also, it returns a recommendation score.\n\nAvailability: Mega plan\nData weighting: 100 API credits per symbol"], ["EPS Trend", "This API endpoint returns a breakdown of the estimated historical EPS changes at a given period.\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol"], ["Revenue Estimate", "This API endpoint returns analysts' estimate for a company's future quarterly and annual sales (total revenue).\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol"], ["Earnings Estimate", "This API endpoint returns analysts' estimate for a company's future quarterly and annual earnings per share (EPS).\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol"], ["Institutional Holders", "Returns the amount of the company\u2019s available stock owned by institutions (pension funds, insurance companies, investment firms, private foundations, endowments, or other large entities that manage funds on behalf of others).\n\nAvailability: Mega plan\nData weighting: 1500 API credits per symbol"], ["Fund Holders", "Returns the amount of the company\u2019s available stock owned by mutual fund holders.\n\nAvailability: Mega plan\nData weighting: 1500 API credits per symbol"], ["Options Expiration", "Return the expiration dates of an option contract.\n\nAvailability: Ultra plan\nData weighting: 200 API credits per symbol"], ["Cash Flow", "Returns complete cash flow of a company showing net the amount of cash and cash equivalents being transferred into and out of a business.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol"], ["Balance Sheet", "Returns complete balance sheet of a company showing the summary of assets, liabilities, and shareholders\u2019 equity.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol"], ["Income Statement", "Returns complete income statement of a company and shows the company\u2019s revenues and expenses during a period (annual or quarter).\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol"], ["Insider Transactions", "Returns trading information performed by insiders.\n\nAvailability: Ultra plan\nData weighting: 200 API credits per symbol"], ["Earnings Calendar", "This API method returns earning data as a calendar for a given date range. By default today\u2019s earning is returned. To call a custom period, use start_date and end_date parameters.\n\nAvailability: Pro plan\nData weighting: 40 API credits per symbol"], ["Earnings", "This API call returns earnings data for a given company, including EPS estimate and EPS actual. Earnings are available for complete company history.\n\nAvailability: Pro plan\nData weighting: 20 API credits per symbol"], ["Splits", "Returns the date and the split factor of shares of the company for the last 10+ years.\n\nAvailability: Pro plan\nData weighting: 20 API credits per symbol"], ["Dividends", "Returns the amount of dividends paid out for the last 10+ years.\n\nAvailability: Pro plan\nData weighting: 20 API credits per symbol"], ["Profile", "Returns general information about the company.\n\nAvailability: Pro plan\nData weighting: 10 API credits per symbol"], ["Logo", "Returns logo of the company.\n\nAvailability: Basic plan\nData weighting: 1 API credit per symbol"], ["Sustainability", "This API request returns brief information on mutual fund sustainability and ESG.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol"], ["Performance", "This API request returns the detailed performance of a mutual fund, including trailing, annual, quarterly, and load-adjusted returns.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol"], ["Summary", "This API request returns a brief summary of a mutual fund.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol"], ["MFs Family List", "This API request returns a list of mutual funds families."], ["MFs List", "This API request returns a list of mutual funds available at Twelve Data. Sorting is in descending order by total assets value. The list is updated daily.\n\nWith Basic, Pro, and Ultra plans, only 50 records will be in response. Mega and Custom plans can access complete data on over 200,000 Mutual Funds."], ["Market Movers - ETFs", "Get the list of the top gaining or losing ETFs today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol"], ["Market Movers - Stocks", "Get the list of the top gaining or losing stocks today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol"], ["Stocks List", "This API call returns an array of symbols available at Twelve Data API. This list is updated daily."], ["Market Movers - Crypto", "Get the list of the top gaining or losing crypto today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol"], ["Market Movers - Forex", "Get the list of the top gaining or losing forex today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol"], ["All data", "This API request returns a complete breakdown of a mutual fund, including summary, performance, risk, ratings, composition, purchase_info, and sustainability.\n\nAvailability: Mega plan\nData weighting: 1000 API credits per symbol"], ["Market Movers", "Get the list of the top gaining or losing mutual funds today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol"], ["Risk", "This API request returns core metrics to measure the risk of investing in a mutual fund.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol"], ["MFs Type List", "This API request returns a list of mutual funds types."], ["Earliest Timestamp", "This method returns the first available DateTime for a given instrument at the specific interval."], ["Symbol Search", "This method helps to find the best matching symbol. It can be used as the base for custom lookups. The response is returned in descending order, with the most relevant instrument at the beginning."], ["Technical Indicators Interface", "This API call return array of objects with available technical indicators. This endpoint might be used to build an abstract interface to make more convenient API calls from the application."], ["Cryptocurrencies List", "This API call return array of cryptocurrency pairs available at Twelve Data API. This list is daily updated."], ["ETFs List", "This API call return array of ETFs available at Twelve Data API. This list is daily updated."], ["Forex Pairs List", "This API call return array of forex pairs available at Twelve Data API. This list is daily updated."], ["Indices List", "This API call return array of indices available at Twelve Data API. This list is daily updated."], ["Currency Conversion", "This API call returns real-time exchange rate and converted amount for currency pair. Works with forex and cryptocurrency."], ["Exchange Rate", "This API call returns real-time exchange rate for currency pair. Works with forex and cryptocurrency."], ["Key Executives", "Returns individuals at the highest level of management of an organization.\n\nAvailability: Mega plan\nData weighting: 1000 API credits per symbol"], ["Options Chain", "Returns a listing of all available options contracts for given security. It shows all listed puts, calls, their expiration, strike prices, and pricing information for a single underlying asset within a given maturity period.\n\nAvailability: Ultra plan\nData weighting: 50 API credits per symbol"], ["Statistics", "Returns current overview of company\u2019s main statistics including valuation metrics and financials.\n\nAvailability: Ultra plan\nData weighting: 50 API credits per symbol"], ["IPO Calendar", "This endpoint returns past, today, or upcoming IPOs.\n\nAvailability: Pro plan\nData weighting: 40 API credits per symbol"], ["COPPOCK", "Coppock Curve(COPPOCK) is usually used to detect long-term trend changes, typically on monthly charts."], ["KELTNER", "Keltner Channels(KELTNER) is a volatility indicator used to spot trend changes and accelerations."], ["ULTOSC", "Ultimate Oscillator(ULTOSC) takes into account three different time periods to enhance the quality of overbought and oversold signals."], ["WMA", "Weighted Moving Average(WMA) smooths out price fluctuations, and puts more weight on recent data points and less on past."], ["TRANGE", "True Range(TRANGE) is usually used as the base when calculating other indicators. TRANGE determines the normal trading range of an asset."], ["MACDEXT", "Moving Average Convergence Divergence Extended(MACDEXT) gives greater control over MACD input parameters. MACDEXT has an unstable period ~ 100."], ["LINEARREGSLOPE", "Linear Regression Slope(LINEARREGSLOPE) calculates the slope for the linear regression trendline for each data point."], ["HLC3", "High, Low, Close Average Values(HLC3) give alternative candlesticks patter. Every element is defined as follows: (high + low + close) / 3."], ["MINMAXINDEX", "Indexes of lowest and highest values over period(MINMAXINDEX)."], ["LINEARREG", "Linear Regression(LINEARREG) is used to determine trend direction by a straight line."], ["HT_TRENDLINE", "Hilbert Transform Instantaneous Trendline(HT_TRENDLINE) comes from the concept of Digital Signal Processing (DSP). It creates complex signals from the simple chart data. You can read more about it in the Rocket Science for Traders book by John F. Ehlers."], ["AVGPRICE", "Average Price(AVGPRICE) uses the formula: (open + high + low + close) / 4."], ["HT_TRENDMODE", "Hilbert Transform Trend vs. Cycle Mode(HT_TRENDMODE) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers."], ["EXP", "Exponential(EXP) transforms input data with the mathematical exponent function."], ["WCLPRICE", "Weighted Close Price(WCLPRICE) is usually used as the base for other indicators for smoothness. Formula: (high + low + close * 2) / 4."], ["STOCHF", "Stochastic Fast(STOCHF) is more sensitive to price changes; therefore, it changes direction more quickly."], ["KAMA", "Kaufman's Adaptive Moving Average(KAMA) is a type of Moving Average(MA) that incorporates market noise and volatility."], ["ADOSC", "Chaikin A/D Oscillator(ADOSC) is an indicator, which finds the relationship between increasing and decreasing volume with price fluctuations. The Chaikin Oscillator measures the momentum of the Accumulation/Distribution Line(ADL) using two Exponential Moving Averages of varying length to the line(MACD)."], ["MIN", "Lowest value over period(MIN)."], ["VWAP", "Volume Weighted Average Price(VWAP) is commonly used as a trading benchmark that gives an average price at which the instrument has been trading during the day."], ["PLUS_DM", "Plus Directional Movement(PLUS_DM) is calculated as High - Previous High."], ["CMO", "Chande Momentum Oscillator(CMO) is used to show overbought and oversold conditions."], ["WILLR", "Williams %R(WILLR) calculates overbought and oversold levels. It can also be used to find entry and exit signals."], ["MOM", "Momentum(MOM) compares the current price with the previous price N timeperiods ago."], ["LINEARREGANGLE", "Linear Regression Angle(LINEARREGANGLE) calculates the angle of the linear regression trendline."], ["ROCR", "Rate of change ratio(ROCR) calculates the ratio between the current price and price n timeperiods ago. Formula: (price / prevPrice)."], ["EMA", "Exponential Moving Average(EMA) places greater importance on recent data points than the normal Moving Average(MA)."], ["SUB", "Subtraction of values of two specified time series."], ["APO", "Absolute Price Oscillator(APO) calculates the difference between two price moving averages."], ["ROCR100", "Rate of change ratio 100 scale(ROCR100) calculates the ratio with 100 scale between the current price and price n timeperiods ago. Formula: (price / prevPrice) * 100."], ["SMA", "Simple Moving Average(SMA) is an arithmetic moving average calculated by adding the latest closing prices and then dividing them by the number of time periods."], ["VAR", "Variance(VAR) calculates the spread between data points to determine how far they from the mean."], ["STDDEV", "Standard Deviation(STDDEV) is used to measure volatility. This might be important when assessing risks."], ["CCI", "Commodity Channel Index(CCI) is a universal indicator that can help to identify new trends and assess current critical conditions."], ["HT_PHASOR", "Hilbert Transform Phasor Components(HT_PHASOR) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers."], ["ADX", "Average Directional Index(ADX) is used to decide if the price trend is strong."], ["SAREXT", "Parabolic SAR Extended(SAREXT) inherits the idea of classic SAR indicator but adds more flexibility in setting parameters."], ["LOG10", "Logarithm to base 10(LOG10) transforms all data points with logarithm to base 10."], ["CRSI", "ConnorsRSI(CRSI) is used to show the oversold and overbought levels of the RSI values."], ["DPO", "Detrended Price Oscillator(DPO) is used to separate price from the trend, in order to more clearly identify the length of cycles."], ["MACD", "Moving Average Convergence Divergence(MACD) is a trend following momentum indicator, which works by subtracting the longer moving average from the shorter one. MACD has an unstable period ~ 100."], ["LINEARREGINTERCEPT", "Linear Regression Intercept(LINEARREGINTERCEPT) calculates the intercept for the linear regression trendline for each data point."], ["MININDEX", "Index of lowest value over period(MININDEX)."], ["MIDPOINT", "MidPoint over period(MIDPOINT) is calculated as (highest value + lowest value) / 2."], ["ADD", "Composite of values of two specified time series."], ["STOCH", "Stochastic Oscillator(STOCH) is used to decide if the price trend is strong."], ["HT_DCPHASE", "Hilbert Transform Dominant Cycle Phase(HT_DCPHASE) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers."], ["Exchanges", "This API call return array of stock, ETF or index exchanges available at Twelve Data API. This list is daily updated."], ["SQRT", "Square Root(SQRT) transforms input data with square root."], ["TRIMA", "Triangular Moving Average(TRIMA) smooths out price fluctuations, but places more weight on the prices in middle of the time period."], ["TSF", "Time Series Forecast(TSF) calculates trend based on the last points of multiple regression trendlines."], ["ADXR", "Average Directional Movement Index Rating(ADXR) is a smoothed version of the ADX indicator. ADXR quantifies momentum change in the ADX."], ["HT_DCPERIOD", "Hilbert Transform Dominant Cycle Period(HT_DCPERIOD) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers."], ["OBV", "On Balance Volume(OBV) is a momentum indicator, which uses volume flow to forecast upcoming price changes."], ["SUM", "Summation of values of two specified time series."], ["ICHIMOKU", "Ichimoku Kink\u014d Hy\u014d(ICHIMOKU) is a group of technical indicators that shows trend direction, momentum, and support & resistance levels. Overall it tends to improve the accuracy of forecasts."], ["MINUS_DI", "Minus Directional Indicator(MINUS_DI) is a component of the Average Directional Index(ADX), and it measures the existence of downtrend."], ["MCGINLEY_DYNAMIC", "McGinley Dynamic(MCGINLEY_DYNAMIC) keeps all the benefits from the moving averages but adds an adjustment to market speed."], ["DEMA", "Double Exponential Moving Average(DEMA) is used to eliminate lag. It does this by taking two Exponential Moving Averages(EMA)."], ["AVG", "Average(AVG) calculates the average value of series in a given time period. Widely used to calculate the 9-day average volume."], ["KST", "Know Sure Thing(KST) calculates price momentum for four distinct price cycles(ROC)."], ["AROONOSC", "Aroon Oscillator(AROONOSC) uses classic Aroon(Aroon Up and Aroon down) to measure the strength of persisting trends and whether they will continue."], ["CORREL", "Measures linear correlation between two time series. Takes values in the range from -1 to 1, where -1 is total negative correlation, 0 is no correlation, and 1 is total positive correlation."], ["HT_SINE", "Hilbert Transform SineWave(HT_SINE) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers."], ["BBANDS", "Bollinger Bands\u00ae(BBANDS) are volatility bands located above and below a moving average. The volatility size parameter depends on standard deviation."], ["NATR", "Normalized Average True Range(NATR) is used to compare and analyze across different price levels due to its normalized quality, which might be more effective than the original ATR."], ["AROON", "Aroon Indicator(AROON) is used to identify if the price is trending. It can also spot the beginning of a new trend and its strength."], ["FLOOR", "Vector FLOOR(FLOOR) transforms input data with the mathematical floor function."], ["RSI", "Relative Strength Index(RSI) is a momentum indicator, which calculates the magnitude of a price change to assess the overbought and oversold conditions in the price of an asset."], ["PERCENT_B", "%B Indicator(PERCENT_B) measures the position of an asset price relative to upper and lower Bollinger Bands."], ["STOCHRSI", "Stochastic RSI(STOCHRSI) as an independent indicator takes advantage of the STOCH and RSI indicators. It is used to determine overbought and oversold levels, as well as current market trends for an asset."], ["MAX", "Highest value over period(MAX)."], ["MINUS_DM", "Minus Directional Movement(MINUS_DM) is calculated as Previous Low - Low."], ["DIV", "Division of values of two specified time series."], ["ROC", "Rate of change(ROC) calculates the rate of change between the current price and price n timeperiods ago. Formula: ((price / prevPrice) - 1) * 100."], ["ROCP", "Rate of change percentage(ROCP) calculates the rate of change in % between the current price and price n timeperiods ago. Formula: (price - prevPrice) / prevPrice."], ["BOP", "Balance of Power(BOP) measures the relative strength between buyers and sellers by assessing the ability of move price to an extreme level."], ["MFI", "Money Flow Index(MFI) is used to identify overbought and oversold levels in an asset. In some cases, it can be used to detect divergences, which might be a sign of upcoming trend changes."], ["MAMA", "MESA Adaptive Moving Average(MAMA) adapts to price fluctuations based on the rate of change of the Hilbert Transform Discriminator. More about MAMA can be read [here](http://www.mesasoftware.com/papers/MAMA.pdf)."], ["ATR", "Average True Range(ATR) is used to measure market volatility by decomposing all asset prices over a specified time period."], ["HEIKINASHICANDLES", "Heikin-Ashi Candles(HEIKINASHICANDLES) translated from Japanese means \"average bar\". It can be used to detect market trends and predict future price fluctuations."], ["CEIL", "Vector CEIL(CEIL) transforms input data with the mathematical ceil function."], ["MULT", "Multiplication of values of two specified time series."], ["MIDPRICE", "Midpoint Price over period(MIDPRICE) is calculated as (highest high + lowest low) / 2."], ["PLUS_DI", "Plus Directional Indicator(PLUS_DI) is a component of the Average Directional Index(ADX), and it measures the existence of uptrend."], ["SUPERTREND", "SuperTrend Indicator(SUPERTREND) is mostly used on intraday timeframes to detect the price upward or downward direction in the trending market."], ["MAXINDEX", "Index of highest value over period(MAXINDEX)."], ["MINMAX", "Lowest and highest values over period(MINMAX)."], ["TEMA", "Triple Exponential Moving Average(TEMA) smooths out price fluctuations, making it more trend detection and more transparent without the lag."], ["SAR", "Parabolic SAR(SAR) is used to identify and spot upcoming asset momentum."], ["T3MA", "Triple Exponential Moving Average(T3MA) makes better smoothing of moving average than the classical TEMA indicator by extending the lookback period and applying other enhanced parameters."], ["Crypto Exchanges", "This API call return array of cryptocurrency exchanges available at Twelve Data API. This list is daily updated."], ["Time Series", "This API call returns meta and time series for equities. Meta object consists of general information about the requested symbol. Time series is the array of objects ordered by time descending with Open, High, Low, Close prices + Volume."], ["Real-Time Price", "This endpoint is a lightweight method that allows retrieving only the real-time price of the selected instrument."], ["Quote", "Quote endpoint is an efficient method to retrieve the latest quote of the selected instrument."], ["PPO", "Percentage Price Oscillator(PPO) shows the relationship between two Moving Averages(MA) as a percentage."]]}, "AwesomeAPI Exchange": {"tool_desc": "Cota\u00e7\u00e3o de Moedas", "apis": [["Retorna os registros dos \u00faltimos dias", "Retorna os registros da ultima ocorr\u00eancia dos \u00faltimos dias"], ["Todas as moedas", "Retorna a ultima ocorr\u00eancia de cada moeda"], ["Retorna os registros de um per\u00edodo espec\u00edfico", "Retorna os registros da ultima ocorr\u00eancia de um per\u00edodo espec\u00edfico"]]}, "Currency_v3": {"tool_desc": "Get current and historical currency exchange rates with ease.", "apis": [["Historical Rates", "Find currency exchange rates for any day since 1999!"], ["Latest Rates", "Get the latest rates for all supported countries."]]}, "Trend and Strength API for Forex ( GOLD/XAUUSD )": {"tool_desc": "Returns data of current trend direction and trend strength for Forex Currency", "apis": [["GET Latest Signal", "Get the current trend direction of Forex GOLD"]]}, "Currency Conversion and Exchange Rates": {"tool_desc": "Simple reliable API for current and historical foreign exchange (forex) currency rates.", "apis": [["Recent Exchange Rates", "Retrieve the latest exchange rate data. Refresh rate will depend on your subscription: updated every 60 minutes, every 10 minutes or every 60 seconds."], ["Historical Exchange Rates", "Retrieve historical exchange rate data. Data is available for most currencies all the way back to the year of 1999."], ["Convert", "In addition to providing converstion rates, our API provides a dedicated endpoint to easily do conversion on a specific amount of the currency."], ["Symbols", "Retrieve a list of all currently available currency symbols"], ["Time-Series Endpoint", "Retrieve historical rates between two specified dates.\n\n`Maximum of 365 day time range`"]]}, "CNBC": {"tool_desc": "This API helps to query for business news and live market data to create a financial site such as cnbc.com", "apis": [["symbols/translate", "Get issueId from specific symbol"], ["symbols/get-peers", "Get peers relating to stock quote, index, exchange, etc..."], ["symbols/get-priceline-chart", "Generate image of price line chart of specific stock quote, index, exchange, etc..."], ["symbols/get-summary", "Get summary information of stock quote, index, exchange, etc..."], ["symbols/get-fundamentals", "Get fundamental information of stock quote, index, exchange, etc..."], ["symbols/get-earnings-chart", "Generate image of earnings chart of specific stock quote, index, exchange, etc..."], ["symbols/v2/get-chart", "Get raw data to draw price line chart of stock quote, index, exchange, etc..."], ["news/v2/list-by-symbol", "List latest news by symbol name"], ["news/v2/list", "List news by category"], ["symbols/get-profile", "Get summary information of stock quote, index, exchange, etc..."], ["symbols/get-chart (Deprecating)", "Get raw data to draw price line chart of stock quote, index, exchange, etc..."], ["v2/auto-complete", "Get auto suggestion by familiar terms or phrase"], ["get-meta-data", "Get meta data that supports for other endpoints"], ["auto-complete (Deprecated)", "Get auto suggestion by familiar words or phrase"], ["news/list (Deprecated)", "List news by category"], ["news/list-by-symbol (Deprecated)", "List latest news by symbol name"], ["market/list-indices", "List all available indices"]]}, "Freedom Finance": {"tool_desc": "Financial data for over 75,000 stocks on over 75 exchanges.", "apis": [["Live Stock Statistics", "Get all the real time statistics about the stock (market cap, etc)"], ["Live Stock Metadata", "Get all the real time metadata about the stock  (currency, trend averages etc)"], ["Historic Stock Prices", "List all end of day quotes (open, close, high, low, volume etc) for given stock symbol"], ["Quarterly Balance Sheets", "Quarterly balance sheet statements"], ["Yearly Balance Sheets", "Annual balance sheet statements"], ["Stock Splits", "List all stock splits for given stock symbol"], ["Dividends", "Download dividend history by specific stock symbol"], ["Companies By Exchange", "Convenient User-Friendly Manually Populated List Of Common Stocks Per Exchange Code. Not Guaranteed To Be Up To Date."], ["List exchanges", "List all exchanges known to have stocks associated with them"]]}, "spacHero - SPAC Database": {"tool_desc": "Official spacHero  SPAC API  with live rankings, SPAC target names, merger meetings, warrant redemption deadlines, price targets, SEC filings, investor presentations and more.", "apis": [["SPAC Top-10 Rankings", "Returns Top-10 gainers, losers and volume leaders for a given period and equity type (i.e., common, unit, warrants). \n\nAccepts three query parameters:\n\n**period: **daily, weekly, monthly\n**type:** common, unit, warrant\n**sortby:** gainers, losers, volume"], ["SPAC Summary", "Retrieve SPAC summary including important dates, status and target names."], ["Latest SPAC Deals, IPOs, Closings", "Returns a list of latest SPAC events, such as deals, ipos, closings, rumors.\n\n**Available options are: ** ipo, closings, deals, rumor"], ["SPAC Calendar", "Get important SPAC dates such as merger meetings dates, warrant redemption deadlines, definitive agreement dates, unit split (estimate), SPAC deadline (estimate).\n\nAvailable options: merger, split, deadline, redemption"], ["SPAC SEC Filings", "Get latest SPAC SEC filings, filter by SPAC symbol."], ["SPAC Price Targets", "Get latest SPAC price targets from analysts, filter by SPAC symbol."]]}, "BB Finance": {"tool_desc": "This API helps to query for all information about finance summary, stocks, quotes, movers, etc\u2026 to create a financial site/application such as bloomberg.com", "apis": [["stock/get-statistics", "Get statistics information of stocks"], ["stories/list", "Get a list of stories related to a sticker"], ["news/list-by-region", "List latest news from different categories and grouped by region"], ["market/get-cross-currencies", "Get exchange rate between currencies"], ["market/get-price-chart", "Get related data to draw price chart"], ["market/get-movers", "Get latest information of movers in the market"], ["market/get-compact", "Get most informative fields about indices, commodities, currencies, rates, etc..."], ["market/get-full", "Get all field and information about tickers"], ["market/auto-complete", "Query suggestion by term and phrase"], ["market/get-chart", "Get related data for drawing chart"], ["stock/get-financials", "Get financial information of stocks"], ["news/list", "List news by category"], ["stories/detail", "Get full story information"]]}, "Currency Converter Pro": {"tool_desc": "Accurate and Reliable Data for 170 World Currencies.", "apis": [["Latest Rates", "Real-time exchange rate data of 170 world currencies. Updated every 10min."], ["Currencies", "List all supported currencies."], ["Convert Currency", "Convert any amount from one currency to another."]]}, "Kalshi Trading API": {"tool_desc": "An API for trading on Kalshi, a CFTC regulated exchange.", "apis": [["GetExchangeStatus", "Endpoint for getting the exchange status."], ["GetMarket", "Endpoint for getting data about a specific market.\n\nThe value for the ticker path parameter should match the ticker of the target market."], ["GetTrades", "Endpoint for getting all trades for all markets."], ["GetEvents", "Endpoint for getting data about all events."], ["GetMarketOrderbook", "Endpoint for getting the orderbook for a market."], ["GetSeries", "Endpoint for getting data about a series by its ticker."], ["GetMarkets", "Endpoint for listing and discovering markets on Kalshi."], ["GetEvent", "Endpoint for getting data about an event by its ticker."], ["GetMarketHistory", "Endpoint for getting the statistics history for a market.\n\nThe value for the ticker path parameter should match the ticker of the target market.\nThe min_ts parameter is optional, and will restrict statistics to those after provided timestamp.\nThe min_ts is inclusive, which means a market history point at min_ts will be returned."], ["GetPortfolioSettlements", "Endpoint for getting the logged-in member's settlements historical track."], ["GetOrders", "Endpoint for getting all orders for the logged-in member."], ["GetPositions", "Endpoint for getting all market positions for the logged-in member."], ["GetBalance", "Endpoint for getting the balance of the logged-in member."], ["GetOrder", "Endpoint for getting a single order."], ["GetFills", "Endpoint for getting all fills for the logged-in member."]]}, "Optimism": {"tool_desc": "All-In-One access to the Optimism blockchain data!", "apis": [["Block", "Get full data from a specific block on the Optimism blockchain."], ["Account Transaction History", "Get an array of all transactions of an address on the Optimism blockchain."], ["Account Balance", "Get the OP balance for an address on the Optimism blockchain."], ["Account Transaction Count", "Get the number of transactions done by an address on the  Optimism blockchain."], ["Current Block Number", "Get the current block number of the Optimism blockchain."], ["Transaction", "Get full data from a specific transaction on the Optimism blockchain!"]]}, "Currencygenie": {"tool_desc": "CurrencyGenie is a powerful API that generates a comprehensive list of currencies from around the world.", "apis": [["Get list of Currency Exchanges_copy_copy", "Performs GET request for getting list of currencies"], ["Get list of Currency Exchanges_copy", "Performs GET request for getting list of currencies"], ["Get list of Currency Exchanges", "Performs GET request for getting list of currencies"]]}, "Greenlight": {"tool_desc": "BUY/SELL signals and trends from a range of popular technical indicators (24 total)", "apis": [["Get Signals", "**Provides BUY/SELL signals and trends for BTC/USDT, ETH/USDT, TRX/USDT 1 hour timeframe.**\n- Types of signals: BUY, SELL, HOLD\n- Types of trends: UP, DOWN, FLAT\n**Use telegram bot for extended functionality**\nAny pair, 6 different timeframes, indicator settings and much more:\nhttps://t.me/crypto_greenlight_bot?start=CEB66C31"]]}, "Card Validator": {"tool_desc": "Credit card number validator or generator", "apis": [["Generate Fake Credit Card Number", "This endpoint create a fake and valid credit card number with desired length."]]}, "Currencies And Countries": {"tool_desc": "Convert currencies, get country informations.", "apis": [["Convert", "You can convert the currencies and get a value."], ["Get Country Info", "You can get country info by using countryName or Iso Name (DE).\nExample :\n\n```\n                       params: {param: 'iso', value: 'DE'}\n                       params: {param: 'countryName', value: 'Germany'}\n```\n\nThese two is gets the same result which is the information of germany. \nExample response:\n\n```\n{\"iso\":\"DE\"\n\"currency\":\"EUR\"\n\"symbol\":\"\u20ac\"\n\"countryName\":\"Germany\"\n\"dateFormat\":\"dd.MM.yyyy\"}\n```\n\nExample2:\n\n```\n                       params: {param: 'currency', value: 'USD'}\n                       params: {param: 'symbol', value: '$'}\n```\n\nYou will get a response like this below. It contains all countries that are using  defined currency. \n\nExample2 Response:\n\n```\n  {\n    iso: 'US',\n    currency: 'USD',\n    symbol: '$',\n    countryName: 'United States',\n    dateFormat: 'M/d/yyyy'\n  },\n  . . .\n```"], ["Convert & Get Symbol", "It is the same thing with the convert endpoint. But this one can give you the symbol of the converted value."], ["Crypto Convert", "You can convert crypto currencies."]]}, "Funds": {"tool_desc": "Get daily and historical funds prices by ISIN ![](https://tip.ep-proxy.net/t/ra-funds)", "apis": [["v1GetFundLatestPrice", "Get fund latest price"], ["v1GetFundHistoricalPrices", "Get fund's historical prices"]]}, "Schwab": {"tool_desc": "Research investments, and follow market news", "apis": [["quote/get-chart", "Get data to draw chart"], ["quote/get-summary", "Get summary information of quote"], ["market/get-volatility", "Get market volatility\n* There are response images in encoded base 64 string, you need to decode to get the images yourself"], ["news/get-market-update-audio", "Get audio link to hear market update news"], ["quote/get-details", "Get details information of quote"], ["news/get-market-update", "Get latest market update news"], ["auto-complete", "Get suggestion by word or phase"], ["market/get-reports", "Get reports about the market\n* You need to use .../content/decrypt endpoint to decrypt content returned by Url fields."], ["market/get-sectors", "Get brief information about all sectors"], ["news/get-details", "Read news in details"], ["market/get-indices", "List all available market indices"], ["quote/get-option-fundamentals", "Get option fundamentals of quote"], ["news/get-market-update-details", "Read market update news in details"], ["market/get-top-mentions", "List top mentions stock quotes"], ["market/get-movers", "List recent movers in the market"], ["content/decrypt", "Used to decrypt content of Url fields returned in .../market/get-reports endpoint"], ["market/get-futures", "Get future reports about the market\n* There are response images in encoded base 64 string, you need to decode to get the images yourself"]]}, "Direct Debit Managed Service": {"tool_desc": "Customised and bespoke reports and exports for easy reconciliation API for a two-way data flow Full database integrations, including Salesforce, Access thankQ CRM and Gateway Ticketing.", "apis": [["Rapidata Services", "Direct Debit Managed Service API"]]}, "WalnutTradingDash": {"tool_desc": "Algo trading dashboard to backtest strategies with over 170 digital assets (crypto, forex, stocks) and 30 technical analysis strategies.", "apis": [["free_access", "The api call will grant access to a unique URL to access the dashboard (demo [here](https://walnuthillai.com/wp-content/themes/blankslate-child/videos/demo_walnuttradingdash.mp4)). The FREE version grants access to half of the assets and technical indicators / strategies and any time period from 2021/06 to 2022/1."], ["full_access", "The api call will grant access to a unique URL to access the dashboard (demo [here](https://walnuthillai.com/wp-content/themes/blankslate-child/videos/demo_walnuttradingdash.mp4)). The PRO version grants access to 60 minutes of use per request, unlimited access to all assets and technical indicators, and any time period up to the previous date."]]}, "Crypto grana": {"tool_desc": "API to manage your position on crypto currency", "apis": [["List histories", "List of your histories"], ["List position for each crypto", "List your current position for each crypto"]]}, "MS Finance": {"tool_desc": "This API helps to query financial summary, stocks, quotes, movers, news, etc...", "apis": [["{type}/parent/get-investment-flows", "Get investment flows as displayed in the Parent tab"], ["{type}/parent/get-summary", "Get summary information as displayed in the Parent tab"], ["{type}/people/get-proxy-voting-shareholder", "Get proxy voting shareholder as displayed in the People tab"], ["{type}/portfolio/get-holdings", "Get holdings as displayed in the Portfolio tab"], ["{type}/portfolio/get-fixed-income-exposure-analysis", "Get fixed income exposure analysis as displayed in the Portfolio tab"], ["{type}/portfolio/get-maturity-schedule", "Get maturity schedule as displayed in the Portfolio tab"], ["{type}/portfolio/get-historical-fixed-income-style", "Get historical fixed income style as displayed in the Portfolio tab"], ["{type}/portfolio/get-current-fixed-income-style", "Get current fixed income style as displayed in the Portfolio tab"], ["{type}/portfolio/get-asset-allocation", "Get asset allocation as displayed in the Portfolio tab"], ["{type}/price/get-other-fees", "Get other fees as displayed in the Price tab"], ["{type}/price/get-taxes", "Get taxes as displayed in the Price tab"], ["{type}/price/get-fee-level", "Get fee level as displayed in the Price tab"], ["{type}/price/get-cost-illustration", "Get cost illustration as displayed in the Price tab"], ["{type}/risk/get-risk-volatility-measures", "Get risk volatility measures in the Risk tab"], ["{type}/risk/get-market-volatility-measures", "Get market volatility measures in the Risk tab"], ["{type}/sustainability/get-esg-risk", "Get ESG risk in the Sustainability tab"], ["{type}/sustainability/get-product-involvement", "Get product involvement in the Sustainability tab"], ["{type}/performance/get-trailing-returns", "Get trailing returns in the Performance tab"], ["{type}/performance/get-returns", "Get returns in the Performance tab"], ["{type}/analysis/get-archived", "Get Morningstar's analysis archived related to an ETF or FUND"], ["{type}/get-morningstar-analysis", "Get Morningstar's analysis related to an ETF or FUND"], ["{type}/get-disclosure-flag", "Get disclosure flag related to an ETF or FUND"], ["stock/v2/key-stats/get-operating-efficiency", "Get key stats operating efficiency in the Valuation tab"], ["stock/v2/key-stats/get-financial-health", "Get key stats financial health in the Valuation tab"], ["stock/v2/get-news", "Get news in the News tab"], ["stock/v2/get-trading-information", "Get Trading Information in the Quote tab"], ["{type}/parent/get-highest-rated-investments", "Get highest rated investments as displayed in the Parent tab"], ["{type}/parent/get-lowest-rated-investments", "Get lowest rated investments as displayed in the Parent tab"], ["{type}/parent/get-morningstar-rating", "Get Morningstar's rating as displayed in the Parent tab"], ["{type}/parent/get-recent-investment-rating-change", "Get recent investment rating change as displayed in the Parent tab"], ["{type}/parent/get-top-medalist-rated-investments", "Get top medalist rated investments as displayed in the Parent tab"], ["{type}/parent/get-medalist-rating", "Get medalist rating as displayed in the Parent tab"], ["{type}/people/get-proxy-voting-management", "Get proxy voting management as displayed in the People tab"], ["{type}/people/get-summary", "Get summary information as displayed in the People tab"], ["{type}/portfolio/get-exposure", "Get exposure as displayed in the Portfolio tab"], ["{type}/portfolio/get-coupon-range", "Get coupon range as displayed in the Portfolio tab"], ["{type}/portfolio/get-credit-quality", "Get credit quality as displayed in the Portfolio tab"], ["{type}/risk/get-risk-return-analysis", "Get risk return analysis in the Risk tab"], ["{type}/risk/get-risk-return-summary", "Get summary of risk return in the Risk tab"], ["{type}/sustainability/get-carbon-metrics", "Get carbon metrics in the Sustainability tab"], ["{type}/performance/get-latest-distributions", "Get latest distributions in the Performance tab"], ["{type}/performance/get-annual-distributions", "Get annual distributions in the Performance tab"], ["{type}/analysis/get-comparables", "Get Morningstar's analysis comparables related to an ETF or FUND"], ["{type}/get-mini-chart-realtime-data", "Get data to draw mini chat"], ["{type}/get-realtime-data", "Get realtime data related to an ETF or FUND"], ["{type}/get-quote", "Get quote related to an ETF or FUND"], ["market/v2/get-quotes (Deprecated)", "Query one or multiple quotes at once\n* This endpoint is deprecated, use .../stock/v2/get-realtime-data endpoint instead"], ["market/get-movers (Deprecated)", "Get top 10 gainers, losers, actives of specific market\n* * This endpoint is deprecated, use .../market/v2/get-movers endpoint instead"], ["market/get-summary", "Get live summary information at the request time"], ["market/auto-complete", "Get auto complete suggestion by term or phrase"], ["market/v2/get-time-series", "Query one or more entities data at once in time series manner"], ["market/v2/auto-complete", "Get auto suggestion by word or phase"], ["market/get-videos", "Get latest videos in the market"], ["market/get-global-indices", "Get information of global indices"], ["market/get-commentaries", "Get latest commentaries in the market"], ["market/get-articles", "Get latest articles in the market"], ["market/v2/get-returns", "Get market return by years"], ["market/v2/get-realtime-data", "Query one or more entities data at once"], ["market/v2/get-movers", "Get movers, such as : actives, gainers, losers,  etc..."], ["stock/get-histories", "Get prices from past to recent"], ["stock/v3/get-profile", "Mapped to Company Profile section in Quote tab"], ["stock/get-quote (Deprecated)", "Get stock quote information"], ["stock/v2/key-stats/get-growth-table", "Get key stats growth in the Valuation tab"], ["stock/v2/get-dividends", "Mapped to Dividends tab"], ["stock/v2/get-competitors", "Mapped to Competitors section in Quote tab"], ["stock/v2/get-analysis-data", "Mapped to Analysis section in Quote tab"], ["stock/v2/get-trailing-total-returns", "Mapped to Trailing Returns tab"], ["stock/v2/get-analysis-report", "Get analysis report by experts"], ["stock/v2/get-mini-chart-realtime-data", "Used to draw chart in Quote tab"], ["stock/v2/get-security-info", "Mapped to Quote section in Quote tab"], ["stock/v2/get-realtime-data", "Get detail information of stock, market,index, etc..."], ["stock/v2/key-stats/get-cash-flow", "Get key stats cash flow in the Valuation tab"], ["stock/v2/get-risk-rating-assessment", "Get risk rating assessment in the Sustainability tab"], ["stock/v2/key-stats/get-overview", "Get key stats overview in the Valuation tab"], ["stock/v2/get-risk-rating-breakdown", "Get risk rating breakdown in the Sustainability tab"], ["stock/get-detail", "Get detail information of stock, market,index, etc..."], ["stock/v2/get-instruments", "Mapped to Competitors section in Quote tab"], ["stock/v2/get-operating-performance", "Mapped to Operating Performance tab"], ["stock/v2/get-short-interest", "Mapped to Short Interest section in Quote tab"], ["stock/v2/get-valuation", "Mapped to Valuation tab"], ["stock/v2/get-ownership", "Mapped to Ownership tab"], ["stock/v2/get-profile", "Mapped to Company Profile section in Quote tab"], ["stock/v2/get-mini-chart-quote", "Used to draw chart in Quote tab"], ["stock/v2/get-executive", "Mapped to Executive tab"], ["stock/v2/get-splits", "Mapped to Dividends tab"], ["stock/v2/get-financial-details", "Mapped to Expand Details View section found in Financials tab"], ["stock/v2/get-financials", "Mapped to Financials tab"], ["stock/v2/get-price-fair-value", "Mapped to Price vs Fair Value tab"], ["stock/v2/get-key-stats", "Mapped to Key Ratios section in Quote tab"]]}, "DeFi Watch": {"tool_desc": "DeFi Watch's API opens access to up-to-date data for thousands of cryptocurrencies.", "apis": [["WALLETS -> BALANCE BY CHAIN", "Get wallet balance in USD by chain"], ["WALLETS -> TRANSFERS BY CHAIN", "Get wallet transfers by chain"], ["WALLETS -> PROFILE BY CHAIN", "Get wallet profile by chain"], ["WALLETS -> ASSETS BY CHAIN", "Get all assets on wallet by chain"], ["TOKENS -> ALL MARKET CAP", "Get data about  tokens with market capitalisation and filter them"], ["POOLS -> ALL", "Gain data about DeFi Pools"], ["TOKENS -> ALL", "Get data about all tokens and filter them"], ["POOLS -> GET POOL BY BLOCKCHAIN", "Get full data about pool by blockchain"], ["BLOCKCHAINS -> ALL", "Get information about all available blockchains"], ["BRIDGES", "Get access to verify data about cross-chain bridges by integrating Bridges API from DeFi Watch into the code. This solution offers links to bridges as well as information about fees and duration. The API code is user-friendly, clear and accessible. \n\n[![](https://live.staticflickr.com/65535/52164830761_c7a2292634_b.jpg)](https://defi.watch/bridges)"]]}, "Cryptocurrency Markets": {"tool_desc": "Official cryptocurrency market API provides a comprehensive list of coins, profiles, stats, trends, most watch, top gainers/losers, newly created, and more!", "apis": [["Most Visited", "Most visited cryptocurrencies today."], ["Top Gainers", "Cryptocurrencies with the most gainers today."], ["Top Losers", "Cryptocurrencies with the most losses today."], ["Videos", "Recently published cryptocurrencies videos."], ["Global Metric", "Current cryptocurrency global metrics."], ["Coin List", "All active cryptocurrencies available to trade"], ["Trending", "Current cryptocurrencies trending today."]]}, "Real-Time Finance Data": {"tool_desc": "Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.", "apis": [["Currency News", "Get the latest news related to a specific currency / forex or crypto."], ["Currency Exchange Rate", "Get currency / forex or crypto exchange rates."], ["Currency Time Series", "Get forex time series for the following periods: **1 day**, **5 days**, **1 month**, **6 months**, **year-to-date**, **1 year**, **5 years** and **all times (max)**."], ["Stock / Company Overview", "Get stock / public company details. Supports all stock types: *stock*, *index*, *mutual fund* and *futures*. Returns company details for the *stock* type."], ["Company Cash Flow", "Get public company's **quarterly** or **annual** cash flow information. Supports the *stock* type only."], ["Company Balance Sheet", "Get public company's **quarterly** or **annual** balance sheet. Supports the *stock* type only."], ["Company Income Statement", "Get public company's **quarterly** or **annual** income statement. Supports the *stock* type only."], ["Stock News", "Get the latest news related to a specific stock.  Supports all stock types: *stock*, *index*, *mutual fund* and *futures*."], ["Stock Time Series", "Get stock time series and key news events for the following periods: **1 day**, **5 days**, **1 month**, **6 months**, **year-to-date**, **1 year**, **5 years** and **all times (max)**. In addition, the endpoints returns the key news events that affected the stock prices  in the specified period. Supports all stock types: *stock*, *index*, *mutual fund* and *futures*."], ["Stock Quote", "Get stock market quote. Supports all stock types: *stock*, *index*, *mutual fund* and *futures*."], ["Search", "Find stocks, indices, mutual funds, futures, currency / forex / crypto using a free-form query or symbol as seen on Google Finance - https://www.google.com/finance."], ["Market Trends", "Get the latest market trends and relevant news. Supported trends: **Most Active**, **Gainers**, **Losers**, **Crypto**, **Currencies** and **Climate Leaders**."]]}, "Coinranking": {"tool_desc": "A simple API for Cryptocurrency Prices - 28k+ users - Real-Time & Historical - Crypto Market Data - Coins - Exchanges - Free & Paid", "apis": [["Get global stats", "These global statistics tell about the data available on coinranking."], ["Get exchanges index", "List of all exchanges currently available on Coinranking, for indexing purposes.\nThis endpoint requires the **ultra** plan or higher."], ["Get coins index", "List of all coins currently available on coinranking, for indexing purposes.\nThis endpoint requires the **ultra** plan or higher."], ["Get market", "Find information on a specific market listed on Coinranking.\nThis endpoint requires the **ultra** plan or higher."], ["Get exchange coins", "Find coins listed on a specific exchange.\nThis endpoint requires the **ultra** plan or higher."], ["Get exchange", "Find information on a specific exchange listed on coinranking. An exchange is a place where cryptocurrencies are traded.\nThis endpoint requires the **ultra** plan or higher."], ["Get exchanges", "Get a list of exchanges. Exchanges are ranked based on their trading volume in the last 24 hours.\nThis endpoint requires the **ultra** plan or higher."], ["Get coin modifiers", "Get the modifiers of a coin's supply and their balance.\nThis endpoint requires the **ultra** plan or higher."], ["Get coin exchanges", "Find exchanges where a specific coin can be traded.\nThis endpoint requires the **ultra** plan or higher."], ["Get coin OHLC data", "Get OHLC (Open High Low Close) data for the coin throughout time.\nThis endpoint requires the **ultra** plan or higher.\n\n**Beta**\nThe OHLC endpoint is currently in beta. This means we might make some changes that could be considered breaking for your application, and we expect to have downtime every now and then while we are still in beta."], ["Get coin", "Find information about a specific coin."], ["Get coin price", "With the price endpoint the price can be requested for a specific coin on a specific time. The response is just a single price nearest to the requested time, including its timestamp."], ["Get coin price history", "Coinranking keeps track of prices on all listed assets. The history endpoint lists prices and their timestamp for the requested time period, useful for making a chart."], ["Get coins", "Get a list of coins. Coins are by default ordered by their rank, which - somewhat simplified - means that they are ordered on marketcap. The response not only returns a list of coins, but also statistics regarding the requested list, such as the volume in the last 24 hours."], ["Get reference currencies", "Get a list of reference currencies, which can be used as reference for coins. The response includes all the essentials for this use-case, such as the symbol (e.g. USD) and - if available - the sign (e.g. $)."], ["Get search suggestions", "Search suggestions are a quick and easy way to find data on coinranking. The endpoint only accepts one parameter; a query. With this query you can find currencies (including fiat), exchanges and markets, by their symbol or name. The response always returns a set of the most prominent coins, exchanges and markets matching your query."], ["Get markets", "Get a list of markets. Markets are ranked by their volume over the last 24 hours. Use our filters to get a subset of the markets.\nThis endpoint requires the **ultra** plan or higher."], ["Get exchange markets", "Find markets on a specific exchange.\nThis endpoint requires the **ultra** plan or higher."], ["Get coin issuance blockchains", "Get the issuance blockchains on which the coin is issued.\nThis endpoint requires the **ultra** plan or higher."], ["Get coin supply", "Get the maximum, total, and circulating supply of a coin."], ["Get coin markets", "Find markets on different exchanges that trade a specific coin.\nThis endpoint requires the **ultra** plan or higher."]]}, "Realtime Crypto Prices": {"tool_desc": "Get the Fastest and Realtime Crypto Rates and more...", "apis": [["Get Realtime Volume", "Returns Realtime volume of a coin in US Dollars."], ["Get Liquidity Value", "Returns Liquidity value of a coin in US Dollars"], ["Market Capitalization", "Returns Market Capitalization of a coin in US Dollars."], ["Get Realtime Rates", "Returns Realtime price of a coin"]]}, "Currency_v2": {"tool_desc": "Fastest Currency API", "apis": [["Convert", "Convert Currency value from and to."], ["Free Exchange Rates", "Convert Currency value from and to."], ["Exchange Rates", "Convert Currency value from and to."], ["Free Convert", "Convert Currency value from and to."]]}, "GaiaLens Historical ESG Scores": {"tool_desc": "Data-driven and transparent historical ESG scores for over 17,000 companies", "apis": [["getHistoricalScoresByYear", "This API returns historical Environmental, Social, Governance and Overall scores for companies on a scale of 0 to 100 based on the year provided in the request.  In addition to this, the API also provides other relevant metrics like Global Rank, Industry Rank and more."]]}, "Quotient": {"tool_desc": "Market data API for intraday (1-minutes) data, end-of-day data, options data, crypto, forex, live prices, fundamental data, trading signal, and much more, on various assets (Stocks, ETFs, Funds, Indices, Forex, Cryptocurrencies, etc), on worldwide stock exchanges (us, canada, australia, uk and europe).", "apis": [["/equity/dividends", "Return dividends history data for a given security."], ["/search/symbol", "Lookup for a Symbol or Name."], ["/crypto/daily", "Return end of day (daily) time series (Date, Open, High, Low, Close, Volume) given the input parameters."], ["/crypto/intraday", "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters."], ["/crypto/live", "Return current market price data given the input parameters."], ["/crypto/signal", "Return a trading signal based on market sentiment, reliable indicators, analyst ratings and news. Signal : `1`=**buy**, `0`=**hold** and `-1`=**sell**. Confidence interval : [0%-100%]."], ["/forex/live", "Return current market price data given the input parameters."], ["/forex/daily", "Return end of day (daily) time series (Date, Open, High, Low, Close, Volume) given the input parameters."], ["/indexes/signal", "Return a trading signal based on market sentiment, reliable indicators, analyst ratings and news. Signal : `1`=**buy**, `0`=**hold** and `-1`=**sell**. Confidence interval : [0%-100%]."], ["/indexes/daily", "Return end of day (daily) time series (Date, Open, High, Low, Close, Volume) given the input parameters."], ["/indexes/live", "Return current market price data given the input parameters."], ["/equity/financial", "Return financial data (revenue, earnings, ratios, etc) for a given security."], ["/equity/live", "Return current market price data given the input parameters."], ["/options/prices", "Return current options data given the input parameters."], ["/equity/daily", "Return end of day (daily) time series (Date, Open, High, Low, Close, Volume) given the input parameters."], ["/equity/intraday", "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters."], ["/indexes/intraday", "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters."], ["/equity/splits", "Return splits history data for a given security."], ["/forex/signal", "Return a trading signal based on market sentiment, reliable indicators, analyst ratings and news. Signal : `1`=**buy**, `0`=**hold** and `-1`=**sell**. Confidence interval : [0%-100%]."], ["/equity/earnings", "Return earnings (EPS, quarterly) history data for a given security."], ["/forex/intraday", "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters."], ["/options/historical", "Return historical options data given the input parameters."], ["/equity/signal", "Return a trading signal based on market sentiment, reliable indicators, analyst ratings and news. Signal : `1`=**buy**, `0`=**hold** and `-1`=**sell**. Confidence interval : [0%-100%]."]]}, "Routing Number Bank Lookup": {"tool_desc": "Lookup a bank's information based on a routing number input.", "apis": [["Get Bank Info", "This endpoint returns information about a bank by passing in the routing number.\n\nQuery Params:\n- **format:** defines the response type, currently XML and JSON are supported. Default value is JSON. Possible values: \"xml\", \"json\"\n- **paymentType:** choose to retrieve either the ACH or Wire Transfer information from the bank. Default value is ACH. Possible values: \"ach\", \"wire\"\n\n####Example:\nGET https://routing-number-bank-lookup.p.rapidapi.com/api/v1/121000248?paymentType=wire&format=json returns the wire transfer information for the bank corresponding to routing number 121000248 in json format."]]}, "Afterbanks PSD2 payments and bank reader": {"tool_desc": "API standardization for a real-time connection to bank accounts.", "apis": [["Listofsupportedbanks", "Get a complete list of supported banks, as well as the names of the fields needed to draw a login form similar to the bank's original."], ["Categorieslist.Onlyforthoseservicekeythatincludethisoption.", "Returns a list with all the categories retrieved by Afterbanks own categorizer."]]}, "Daily-Sec-Financial-Statement-Dataset": {"tool_desc": "While the \"SEC Financial Statement Dataset\" https://www.sec.gov/dera/data/financial-statement-data-sets.html is only provided after each quarter, this API provides the data in the same structure daily.", "apis": [["basic_daily", "This endpoints delivers the daily zip files of filed 10-q and 10-k reports. With the basic subcription, you only have access to daily zip files older than 21 days.\n\nThe structure of the data is similar as in the SEC financial statement dataset (https://www.sec.gov/files/aqfs.pdf), with the exception  that not TAG file is present and that the SUB file only contains a subset of the attributes.\n\nPlease not that the https-url has to end with a \"/\": \nhttps://daily-sec-financial-statement-dataset.p.rapidapi.com/basic/day/2022-11-10**/**"], ["premium_daily", "This endpoints delivers the daily zip files of filed 10-q and 10-k reports. The files are published daily (resp. once or twice a week during the beta phase).\n\nThe structure of the data is similar as in the SEC financial statement dataset (https://www.sec.gov/files/aqfs.pdf), with the exception  that not TAG file is present and that the SUB file only contains a subset of the attributes.\n\nPlease not that the https-url has to end with a \"/\": \nhttps://daily-sec-financial-statement-dataset.p.rapidapi.com/basic/day/2022-11-10**/**"], ["content", "This endpoint delivers the a json that shows which dates are available with which subscription. The format is as follows:\n\n```\n{\n  \"daily\": [\n  {  \n    \"date\": \"2022-01-03\",\n    \"file\": \"20220103.zip\",\n    \"subscription\": \"basic\"\n  },\n...\n  {  \n    \"date\": \"2022-12-02\",\n    \"file\": \"20221202.zip\",\n    \"subscription\": \"premium\"\n  },\n\n```\nEntries marked with \"subscription: premium\" are only accessible with the premium plan. All other entries are available with basic and premium plan"], ["heartbeat", "A simple heartbeat that returns the time of the server to check if the connection to the server is working."]]}, "Credit card prediction": {"tool_desc": "At Credit Card, we know that your time is valuable.", "apis": [["Months_on_book", "Months_on_book, card category  GET request"]]}, "Tradingview TA API (Technical Analysis)": {"tool_desc": "Tradingview API for technical analysis.", "apis": [["Get Symbols From Exchange", "Get symbol list from exchange."], ["Get Analysis From Symbol", "Get analysis data from symbol."], ["Get Exchanges From Screener", "Get exchange list from screener."], ["Get Screeners", "Get list of screeners."]]}, "Investing - Cryptocurrency Markets": {"tool_desc": "These APIs provide data of all cryptocurrencies, markets, ideal for tracking prices and exchange rates.", "apis": [["coins/list-pairs", "List available crypto pairs"], ["coins/get-news", "Get news relating to specific cryptocurrency"], ["coins/get-technical", "Get technical information of specific cryptocurrency"], ["coins/search", "Search for available cryptocurrencies relating to a word, name, etc..."], ["coins/get-analysis", "Get analysis opinion from expert for specific cryptocurrency"], ["coins/get-fullsize-chart", "Get fullsize chart of specific cryptocurrency"], ["coins/get-historical-data", "Get historical data of specific cryptocurrency"], ["coins/get-markets", "Get market information of specific cryptocurrency in specified currency"], ["coins/get-overview", "Get overview information of specific cryptocurrency"], ["get-meta-data", "Get init meta data"], ["coins/get-brief-chart", "Get brief information chart of specific cryptocurrency"], ["currencies/list", "List all available currencies"], ["coins/list", "List all available cryptocurrencies"], ["currencies/get-rate", "Get exchange rate between two different currencies"]]}, "Latest Mutual Fund NAV": {"tool_desc": "API provides latest NAV information of all mutual funds in India from Association of Mutual Funds of India (AMFI).", "apis": [["fetchAllSchemeTypes", "Fetch All Scheme Types"], ["fetchSchemeCategoriesBySchemeType", "Fetch Scheme Categories By Scheme Type"], ["fetchAllSchemeNames", "Fetch All Scheme Names"], ["fetchAllMutualFundFamilies", "Fetch All Mutual Fund Families"]]}, "Seeking Alpha Finance": {"tool_desc": "Seeking Alpha is the world\u2019s largest investing community.", "apis": [["Symbols Brief metrics", "Get metrics by Symbol slugs. Separate multiple slugs with a comma"], ["Symbols Shares", "Get shares for symbol"], ["Symbols Dividend history", "Get the dividend history for the symbol"], ["Symbols Estimated estimates", "Get the estimates for the symbol (Latest Quarter's Earnings, Upcoming Quarter's Earnings). Ex result: https://seekingalpha.com/symbol/NVDA/income-statement"], ["Symbols Ratings", "Get symbols ratings for periods. Ratings: authors, quant, sell side. Ex result: https://seekingalpha.com/symbol/NVDA/valuation/metrics"], ["Symbols Press releases", "Get a list of press releases for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/press-releases"], ["Symbols Option result", "Get option result for the symbol. Ex.: https://seekingalpha.com/symbol/NVDA/options"], ["Symbols Splits", "Get splits for historical prices. Ex.: https://seekingalpha.com/symbol/NVDA/historical-price-quotes"], ["Symbols Brief earnings", "Get earnings by Symbol slugs. Separate multiple slugs with a comma"], ["News List", "Get list of the news by category. Trending news in the /news/trending. Ex.: https://seekingalpha.com/market-news/crypto"], ["Article Comment maps", "Get comment maps by article id"], ["Symbols Faq", "Get Answers to common questions on a topic by Ticker slug. Ex.: https://seekingalpha.com/symbol/NVDA"], ["Stocks Tickers", "Get stocks (tickers) from the screener. Ex. https://seekingalpha.com/screeners/96793299-Top-Rated-Stocks"], ["Symbols Attributes", "Get details by Ticker Slugs. Specify attribute category"], ["Symbols Sector metrics", "Get the sector metrics for the symbol (Revisions Grade)"], ["Symbols Metric grades", "Get the ticker metric for the symbol"], ["Article List", "Get list of the article"], ["Symbols Data", "Get symbol data by Ticker slug, (name, companyName, company, exchange, currency). Ex.: https://seekingalpha.com/symbol/NVDA"], ["Symbols Dividends Payout ratio", "Get dividends payout ratio chart by Ticker slug"], ["Symbols Ticker data", "Get symbol ticker data by Ticker slug, (name, companyName, company, exchange, currency). Ex.: https://seekingalpha.com/symbol/NVDA"], ["Symbols Dividends estimates", "Get dividends estimates data by Ticker slug"], ["Symbols News", "Get a list of news for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/news"], ["Symbols Analysis", "Get a list of analysis for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/analysis"], ["Symbols Sec Filings", "Get a list of sec filings for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/sec-filings"], ["Symbols Ratings histories", "Get symbols histories. Ex result: https://seekingalpha.com/symbol/NVDA/valuation/metrics"], ["Symbols Peers", "Get peers for the symbol. Ex.: https://seekingalpha.com/symbol/NVDA/peers/related-stocks"], ["Symbols Related analysis", "Get a list of related analysis for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/related-analysis"], ["Symbols Metrics", "Get metrics by Ticker slug. This is the most extensive point, use different groups to get attributes"], ["Symbols Historical prices", "Get historical prices by date and Ticker slug. Ex result: https://seekingalpha.com/symbol/NVDA/valuation/metrics"], ["Symbols Option expirations", "Get option expirations for the symbol. Ex.: https://seekingalpha.com/symbol/NVDA/options"], ["Symbols Author ratings", "Get a author ratings for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/ratings/author-ratings"], ["Meta Tooltips", "Get tooltips by Ticker slug. Getting a description of the data, for each category. Use to get additional data and information."], ["Symbols Ratings relative", "Get relative ratings by Ticker slug"], ["Search Advanced", "Get all search result (people,symbols,pages) by query. Advanced search"], ["Symbols Suggested", "Get suggested tickers by symbol"], ["Symbols Transcripts", "Get a list of transcripts for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/earnings/transcripts"], ["Feeds Earnings articles", "Get list of post earnings articles"], ["Symbols Estimated earning announces", "Get estimated earning announces for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/earnings"], ["Article Trending", "Get list of the trending article"], ["Screeners Details", "Get more details about screener. Ex. https://seekingalpha.com/screeners/96793299-Top-Rated-Stocks"], ["Press releases Comment maps", "Get press-releases comment maps by Press releases ID. Ex: https://seekingalpha.com/pr/18970018-nvidia-las-vegas-sands-fall-merck-boeing-rise"], ["Symbols Charts metrics", "Get charts (metrics) by ticker_slug and period"], ["Article Details", "Get all details of the article by article id"], ["News Comments", "Get news comments by news_id. Check `News comment-maps`"], ["Authors Ticker counts", "Get ticker counts of author by slug"], ["Screeners Filters", "Get list of screener filters"], ["News Data", "Get news data by news_id. Author and news content. Ex.: https://seekingalpha.com/news/3893978-canaan-launches-new-generation-bitcoin-mining-machine"], ["Feeds Earnings market current", "Get list of post earnings market current"], ["Meta Tooltips by slug", "Get tooltips for news or article"], ["Symbols Fundamentals", "Get fundamentals data by ticker_slug"], ["Symbols Earning summaries", "Get a earning summaries by symbol"], ["Symbols Financials metrics", "Get financials (income-statement, balance-sheet, cash-flow-statement) for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/income-statement"], ["News Trending", "Get the list of trending news by category"], ["Markets Dividend tr stocks", "Get a list of trending dividend stocks"], ["Article Comments", "Get list of comments by article id"], ["Markets Open", "Getting metadata on open markets"], ["User Instablog posts", "Get insta-blog posts of user by user_id"], ["Symbols Charts period", "Get prices charts by ticker_slug and period"], ["News Comment maps", "Get comment-maps for news by news_id"], ["Feeds Author articles", "Get list of post earnings articles"], ["Search By query", "Get search result (people,symbols,pages) by query. Live keyword search by query, short search"], ["User Discussion comments", "Get comments of discussion by user_id and discussion_id"], ["Instablogs Post data", "Get instablogs post data by instablog_post_id"], ["Screeners List", "Get the list of screeners, (Top Rated Stocks, Top Quant Dividend Stocks, Most Shorted Stocks). Ex. https://seekingalpha.com/screeners"], ["Markets Equities groups", "Get equities groups, (global-equity, countries-equity)"], ["Markets Day watch", "Get day-watch, top gainers, top losers, cryptocurrencies, most active"], ["Authors Details", "Get all details of author by the author slug"], ["Press releases Data", "Get press releases data by Press releases ID. Use `Symbols Press releases` endpoint. Ex: https://seekingalpha.com/pr/18970018-nvidia-las-vegas-sands-fall-merck-boeing-rise"], ["Instablogs Comment maps", "Get instablogs comments map by instablog_post_id"], ["Filings Comment maps", "Get filing comment maps by Filing ID. Use `Symbols Sec Filings` endpoint. Ex: https://seekingalpha.com/filing/6823254"], ["Symbols Quotes", "Get real time quotes by Symbol IDs. For ex: Nasdaq,DowJones (590019,598187). BTC-USD (581328). Separate multiple IDs with a comma. ![Screen](https://i.imgur.com/RPLPfUU.png)"], ["Filings Data", "Get filing data by Filing ID. Use `Symbols Sec Filings` endpoint. Ex: https://seekingalpha.com/filing/6823254"], ["User Discussions", "Get discussions posts of user by user_id"]]}, "CA Lottery": {"tool_desc": "California Lottery history.", "apis": [["Powerball Recent", "Most recent draw for Powerball"], ["Mega Millions Recent", "Most recent draw for Mega Millions"], ["Super Lotto Plus Recent", "Most recent draw for Super Lotto Plus"], ["Fantasy 5 Recent", "Most recent draw for Fantasy 5"], ["Daily 4 Recent", "Most recent draw for Daily 4"], ["Daily 3 Recent", "Most recent draw for Daily 3"], ["Daily Derby Recent", "Most recent draw for Daily Derby"], ["Super Lotto Plus", "Super Lotto Plus History"]]}, "Fund Transfer": {"tool_desc": "This document details out the technical integration approach of FUND TRANSFER and merchants.", "apis": [["ResendOTPFT", "In case you miss the otp from our side."], ["GetBankDetailsFT", "By accessing  this API we can get all the bank details of a particular customer. For this a bank code is required."], ["FindCustomerDetailsFT", "This API permits us to  find a particular customer's details. e.g-customer's name, customer's mobile number etc."]]}, "Pancakeswap API Freemium": {"tool_desc": "All Pancakeswap API ( Feel Free To Ask For More Endpoints )", "apis": [["Get NFT Collections", "An Endpoint to get NFT Collections on Pancakeswap"], ["Get Token Price", "An endpoint to get Token Price"], ["Get Token Balance", "An endpoint to get Token Balance"]]}, "Finanzoo API_Fundamentals": {"tool_desc": "Contains fundamental stock data from the annual reports:\n\n- Diluted earnings per share\n- total capital\n- equity\n- net operating cash flow\n- capital expenditure\n- free cash flow\n- Profit loss\n- Shares outstanding\n- Net sales", "apis": [["API_Dividend", "Contains the annual dividends (split-adjusted without special dividend)\n\nAPI_Dividend\nSyntax:\n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0"], ["API_Index_Isin", "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nisin = search shareuid with ISIN"], ["API_Index_Name", "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nname = search shareuid with company name"], ["API_Index_Wkn", "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nwkn = search shareuid with WKN"], ["API_Pricetobook", "contains the price-book ratio (P / B ratio) for each past trading day"], ["API_Pricetocashflow", "Contains the price-cash-flow ratio (P / C ratio) for each past trading day\n\nAPI_Pricetocashflow\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0"], ["API_Pricetoearning", "Contains the price-earnings ratio (P / E ratio) for each past trading day\n\nAPI_Pricetoearning\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0"], ["API_Pricetosales", "Contains the price turnover ratio (P / S ratio) for each past trading day.\n\nAPI_Pricetosales\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0"], ["API_Roa", "Contains the profitability (ROA ratio) for the financial year.\n\nAPI_Roa\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0"], ["API_Roe", "Contains the equity ratio (ROE ratio) for the financial year.\n\nAPI_Roe\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0"], ["API_Pricetofreecashflow", "Contains the price-free-cash-flow ratio (P / FC ratio) for each past trading day.\n\nAPI_Pricetofreecashflow\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0"], ["API_Fundamentals", "contains fundamental data from the annual reports:\n\n- Diluted earnings per share\n- total capital\n- equity\n- net operating cash flow\n- capital expenditure\n- free cash flow\n- Profit loss\n- Shares outstanding\n- Net sales\n\nDetermine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nname = search shareuid with company name\nwkn = search shareuid with WKN\nisin = search shareuid with ISIN\ntoken = your Finanzoo token (https://www.finanzoo.de/account/api.html) -> You need a premium account to use.\n\n \n\nExample calls:\n\nhttps://api.finanzoo.de/v1/public/?API_Index&name=ibm&token=YOURTOKEN\nhttps://api.finanzoo.de/v1/public/?API_Index&wkn=851399&token=YOURTOKEN\nhttps://api.finanzoo.de/v1/public/?API_Index&isin=US4592001014&token=YOURTOKEN\n\nExample answer:\n\n{\"shareuid\":\"2\",\"isin\":\"US4592001014 \",\"wkn\":\"851399\",\"currency\":\"USD\",\"shortname\":\"IBM\",\"name\":\"International Business Machines Corp.\",\"country\":\"Vereinigte Staaten von Amerika\",\"indizes\":\"Dow Jones Industrial Average,S&P 500\",\"sector\":\"Technology\",\"lastbalanceupdate\":\"2020-01-26\"}\n\nShareuid Excel Table\nFind the shareuid for your query.\n[https://www.finanzoo.de/en/fundamental-api.html](url)\nis required for the API queries"]]}}, "Weather": {"Air Quality": {"tool_desc": "Retrieve current, forecasted, and historical air quality for any point in the world.", "apis": [["Air Quality History", "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon."], ["Air Quality Forecast", "Returns a 3 day (72 hour) air quality forecast for any point in the world given a lat/lon."], ["Current Air Quality", "Retrieves current air quality conditions for any location in the world, given a lat/lon."]]}, "Cloud Cast": {"tool_desc": "Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world.", "apis": [["Get humidty", "Get the humidity for the current city"], ["Get wind speed", "Get the current wind speed"], ["Get hourly forecast", "Get the hourly forecast"], ["Get the forecast", "Get the forecast for the current city"], ["Get current weather", "Gets the current weather for the inputted city name"]]}, "KayuloWeather": {"tool_desc": "[DISCOUNT] Weather forecasts to the minute, weather alerts, historical data and astronomy data.", "apis": [["Weather Alert", "Receive an active weather alert."], ["Weather", "Obtain weather data for the specified location.\n\nThe `dataSets` query parameter is used to obtain different data, like forecasts and current weather. Thus not all query parameters are needed for every data set. See the description of the query parameters to identify, which parameter is needed for which data set."], ["Availability", "Determine the data sets available for the specified location."]]}, "Air Quality by API-Ninjas": {"tool_desc": "Get current air quality data for any region.", "apis": [["/v1/airquality", "API Ninjas Air Quality API endpoint."]]}, "Monitoring Syatem": {"tool_desc": "Monitor The Weather Details", "apis": [["Weather", "Weather details Monitoring and Update in mobile"]]}, "Aviation Weather Center": {"tool_desc": "This API provides official aviation weather data, including SIGMETs, AIRMETs, METARs, TAFs and PIREPs from NOAA, available on aviationweather.gov", "apis": [["Station Info", "Information about a weather reporting station."], ["Most Recent TAFs", "Obtain the most recent TAFs from the past X hours. If you use the `mostRecent` flag only one TAF is returned. Otherwise, all TAFs from the specified time window will be returned."], ["Most Recent METARs", "Obtain the most recent METARs from the past X hours. If you use the `mostRecent` flag only one METAR is returned. Otherwise, all METARs from the specified time window will be returned."], ["METARs in Time Range", "Obtain all METARs for a station collected between these start and end times using ISO8601  date/time format, with UTC offset: YYYY-MM-DDThh:mm:ssZ. Please see [W3C date/time formats](http://www.w3.org/TR/NOTE-datetime)."]]}, "OikoWeather": {"tool_desc": "Hourly time-series weather data for any location from 1950", "apis": [["Weather Data", "Hourly historical and forecast weather parameters in time-series format, from 1950 to 16 days ahead for any location."]]}, "NOAA Tides": {"tool_desc": "United States NOAA tide height and time predictions in JSON format.", "apis": [["Get station information", "Get information about the provided station ID."], ["Get tides for a station", "Get tide information for the given station ID in local times."], ["Get stations", "Get list of all NOAA stations that provide tide predictions to be used in other endpoints."]]}, "Stormglass Complete": {"tool_desc": "API to Complete Stormglass Weather, Bio, Tides, Astronomy, Solar, and Elevation", "apis": [["Get Tide Extreme Data", "**Stormglass Tide Extreme Data**\n\nRetrieve information about high and low tide for a single coordinate. If nothing is specified, the returned values will be in relative to Mean Sea Level - MSL."], ["Get Tide Sea-level Data", "**Stormglass Tide Sea-level Data**\n\nRetrieve the sea level given in meters hour by hour for a single coordinate. If nothing is specified the returned values will be in relative to Mean Sea Level - MSL."], ["GET Astronomy Data", "Stormglass Astronomy Data\n\nRetrieve sunrise, sunset, moonrise, moonset and moon phase for a single coordinate."], ["Get Tide Station Area Data", "**Stormglass Tide Station Area Data**\n\nThe Tide Stations Area Request will list all available tide stations within a defined geographic area.\n\nTop right and bottom left coordinate draws a box with the selected coordinates. \nAll stations with in the area of this box are queried."]]}, "null": {"tool_desc": "Worst weather api on the market.", "apis": [["get_weather", "Information about the current weather."]]}, "World Weather Online API": {"tool_desc": "Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.", "apis": [["Marine History Weather API", "The Historical Marine Weather API method allows you to access marine data since 1st Jan, 2015 for a given longitude and latitude, as well as tide data. The Historical Marine Weather API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon, wind speed, Tide data, significant wave height, swell height, swell direction and swell period."], ["Search API", "The Location search API method takes a query value and returns information about the location, including area name, country, latitude/longitude, population, and a URL for the weather information."], ["Local Weather API", "The Local Weather REST API (also called City and Town Weather API) method allows you to access current weather conditions, the next 14 days of accurate and reliable weather forecast, Air Quality Data, Weather Alerts and Monthly Climate Averages for over 4 million cities and towns worldwide. The Local Weather API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon, wind speed, etc."], ["Local History Weather API", "The Local Historical or Past Weather API (also known as City and Town Historical Weather API) allows you to access weather conditions from 1st July 2008 up until the present time. The API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon and wind speed."], ["Time Zone API", "The Time Zone API method retrieves current local time and UTC offset hour and minute for a specified location."], ["Astronomy API", "The Astronomy and Lunar API method allows you to access astronomy information for any given date."], ["Ski Weather API", "Ski Weather API provides worldwide ski and mountain weather forecast for upto 7-days."], ["Marine Weather API", "Marine Weather API provides worldwide marine weather forecast and tide data for upto 7-days."]]}, "Sunrise Sunset Times": {"tool_desc": "Get sunrise and sunset times using date, latitude, and longitude.", "apis": [["Get Sunrise and Sunset Times", "Get sunrise and sunset times by date, latitude, and longitude."]]}, "National Weather Service": {"tool_desc": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.", "apis": [["/zones/{type}/{zoneId}/forecast", "Forecast data for zone. Example: /zones/forecast/MOZ028/forecast"], ["/products/types/{typeId}/locations/{locationId}", "A product for a location that has issued a product for a specific type.  Example: /products/types/AFD/locations/EAX"], ["/products/types/{typeId}", "A list of products by type. Example: /products/types/AFD"], ["/points/{point}/forecast/hourly", "Hourly forecast data for a point. This response is derrived from the /gridpoints endpoint and is intentionally less structured. If more structure is required, developers should use the /gridpoints endpoint directly. Example: /points/39.0693,-94.6716/forecast/hourly"], ["/gridpoints/{wfo}/{x},{y}", "Raw (commonly referred to as \"gridded\") data provided by the Weather Office. Every forecast request will use this data to build the forecast response. The grid for a given location is determined by the \"property.forecastGridData\" property in the /points/{lat},{lon} endpoint. Example: /gridpoints/EAX/40,48"], ["/alerts/active/zone/{zoneId}", "A list of active alerts by zone id. The ATOM format returns items in CAP-ATOM. Example: /alerts/active/zone/ILZ081"], ["/products/{productId}", "Data of a product.Example: /product/NWS-IDP-PROD-2202326-2064512 (this id is likely now an expired product)"], ["/stations/{stationId}/observations", "A list of observations for a station.  NOTE! The API uses MADIS to provide observation data. The observation may be delayed while MADIS completes quality checks of the data. To limit the delay, the API is provided with incremental updates with various levels of checked data, and the API will return the variation of the observation with the most checked data. It is possible that no data is provided on the first variation, or that no data is checked on the first variation. It is up to the consumer to determine if the quality of data is appropriate. If not, the previous observation can be requested, or the next nearest station can be used. The API returns the state of the data for each value in the response, where \"Z\" (or \"null\") is for not checked (and may never be for some values) and \"V\" for checked. Please refer to MADIS for complete documentation on their data quality process.  Example: /stations/KMKC/observations"], ["/products/types", "A list of product types with an active product"], ["/points/{point}/stations", "Stations nearest to a point in order of distance. Example: /points/39.0693,-94.6716/stations"], ["/alerts/{alertId}", "A specific alert by id provided by a search or list. Example: /alerts/NWS-IDP-PROD-2202530-2064731"], ["/alerts/active/count", "A list of active counts for regions, areas and zones. A list of these items forthcoming."], ["/products/locations", "A list of locations with active products."], ["/alerts/active", "A list of active alerts that can be filtered by parameters. Uses same parameters as the /alerts endpoint, but sets \"active\" parameter to 1 and ignores \"start\" and \"end\" parameters. The ATOM format returns items in CAP-ATOM."], ["/zones/{type}/{zoneId}", "Metadata for a zone. Example /zones/forecast/MOZ028"], ["/alerts/active/area/{area}", "A list of active alerts by area. The ATOM format returns items in CAP-ATOM."], ["/points/{point}/forecast", "Forecast data for a point. The DWML format is a temporary format to aid transition and will be sunset at a later date. This response is derrived from the /gridpoints endpoint and is intentionally less structured. If more structure is required, developers should use the /gridpoints endpoint directly. Example: /points/39.0693,-94.6716/forecast"], ["/products/locations/{locationId}/types", "Metadata about a Weather Office. Example /offices/EAX"], ["/stations/{stationId}/observations/{recordId}", "Data for a specific observation.  NOTE! See note in /stations/{stationId}/observations for important details on observation data.  Example: /stations/KMKC/observations/2017-01-04T18:54:00+00:00"], ["/stations", "A list of stations and station metadata that can be filtered by parameters. If no parameters are provided, then all stations are returned. This list is not configured by field offices and only returns active stations. Example: /stations?limit=10&states=KS,MO"], ["/alerts?{parameters}", "A list of alerts that can be filtered by parameters. If no parameters are provided, then all alerts are returned. The ATOM format returns items in CAP-ATOM."], ["/alerts/active/region/{region}", "A list of active alerts by region. The ATOM format returns items in CAP-ATOM. Example: /alerts/active/region/GL"], ["/points/{point}", "Metadata about a point. This is the primary endpoint for forecast information for a location. It contains linked data for the forecast, the hourly forecast, observation and other information. Example: /points/39.0693,-94.6716"], ["/products/types/{typeId}/locations", "A list of locations that have issues products for a type. Example: /products/types/AFD/locations"], ["/stations/{stationId}/observations/current", "The most current observation for a station. Due to a legacy requirement, this endpoint will support XML for the near future when using the Accept header. It is highly recommend that applications update to the JSON format.  NOTE! See note in /stations/{stationId}/observations for important details on observation data.  Example: /stations/KMKC/observations/current"], ["/stations/{stationId}", "Metadata about a station. Similar to /stations endpoint with id parameter. Example: /stations/KMKC"]]}, "WeatherTest": {"tool_desc": "Get random weather", "apis": [["Fake Weather", "Get a fake weather, no date or authentication is necessary"]]}, "Vision Weather Map": {"tool_desc": "Obtain weather forecast and forecast for diverse cities.", "apis": [["View  from 16 day / daily forecast dates", "16-day forecasts are available in any location or city. Forecasts include the daily weather and are available in JSON or XML format. It is only available for all paid accounts."], ["Climate forecast for 30 days", "With the climate forecast for 30 days you can request weather data for the next 30 days. This product is based on a statistical approach for our historical weather data and is updated every hour."], ["5 day / 3 hour forecast data", "The 5-day forecast is available in any location or city. It contains weather data every 3 hours. The forecast is available in JSON or XML format."], ["Current Weather Data", "With this type of request you can get weather data anywhere on earth. The current weather data is updated online based on data from more than 40,000 weather stations."]]}, "Ouranos": {"tool_desc": "\ud83d\ude80 \ud835\udde0\ud835\uddfc\ud835\ude00\ud835\ude01 \ud835\uddf0\ud835\uddfc\ud835\uddfa\ud835\uddfd\ud835\uddf9\ud835\uddf2\ud835\ude01\ud835\uddf2 \ud835\uddd4\ud835\udde3\ud835\udddc \ud835\uddf6\ud835\uddfb \ud835\uddee\ud835\ude00\ud835\ude01\ud835\uddff\ud835\uddfc\ud835\uddfb\ud835\uddfc\ud835\uddfa\ud835\ude06: 7day and 48hour forecast, seeing and transparency, Predict feature, planet currently visible, moon phase and illumination.", "apis": [["Predict Feature Forecast 7 Day", "Predict Forecast returns \n- Binary predict value, 1 if it\u2019s a good night to observe and 0 if it\u2019s not. This value is calculated according to the forecast for the night.\n- Rating, score out of 5.\n- Tips for astronomers based on the forecast."], ["Predict Feature Forecast 1 Day", "Predict Forecast returns \n- Binary predict value, 1 if it\u2019s a good night to observe and 0 if it\u2019s not. This value is calculated according to the forecast for the night.\n- Rating, score out of 5.\n- Tips for astronomers based on the forecast."], ["7 Day Forecast", "7 Day Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 7 day every 3 hours"], ["3 Day Forecast", "3 Day Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 3 day every 3 hours"], ["Moon Information", "Moon Information return moon phase and illumination."], ["48 Hour Forecast", "Hourly Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 48 hours."]]}, "Ski Resort Forecast": {"tool_desc": "Forecast and current snow conditions for nearly every ski resort.", "apis": [["5 Day Forecast", "Returns the 5 day forecast for a given resort name"], ["Hourly Forecast", "Returns the hourly forecast for a given resort name"], ["Current Snow Conditions", "Returns the current snow conditions for a given resort name"]]}, "Indonesia Latest Weather and Earthquake": {"tool_desc": "This API provides Weather forecast data for districts and cities in Indonesia within 3 days and data on earthquake events that occur throughout Indonesia.", "apis": [["Weather Cities in Indonesia filtered by Province (Code)", "Weather Cities in Indonesia filtered by Province (Code)\n\nHere is the list of Povince Code (kode_bps)\n- 11\tProvinsi Aceh\n- 51\tProvinsi Bali\n- 19\tProvinsi Bangka Belitung\n- 36\tProvinsi Banten\n- 17\tProvinsi Bengkulu\n- 34\tProvinsi DI Yogyakarta\n- 31\tProvinsi DKI Jakarta\n- 75\tProvinsi Gorontalo\n- 15\tProvinsi Jambi\n- 32\tProvinsi Jawa Barat\n- 33\tProvinsi Jawa Tengah\n- 35\tProvinsi Jawa Timur\n- 61\tProvinsi Kalimantan Barat\n- 63\tProvinsi Kalimantan Selatan\n- 62\tProvinsi Kalimantan Tengah\n- 64\tProvinsi Kalimantan Timur\n- 65\tProvinsi Kalimantan Utara\n- 21\tProvinsi Kepulauan Riau\n- 18\tProvinsi Lampung\n- 81\tProvinsi Maluku\n- 82\tProvinsi Maluku Utara\n- 52\tProvinsi Nusa Tenggara Barat\n- 53\tProvinsi Nusa Tenggara Timur\n- 94\tProvinsi Papua\n- 91\tProvinsi Papua Barat\n- 14\tProvinsi Riau\n- 76\tProvinsi Sulawesi Barat\n- 73\tProvinsi Sulawesi Selatan\n- 72\tProvinsi Sulawesi Tengah\n- 74\tProvinsi Sulawesi Tenggara\n- 71\tProvinsi Sulawesi Utara\n- 13\tProvinsi Sumatera Barat\n- 16\tProvinsi Sumatera Selatan\n- 12\tProvinsi Sumatera Utara"]]}, "Ambee Water Vapor Data": {"tool_desc": "World\u2019s first ever water vapor API.", "apis": [["Water Vapour Data By Coordinates", "Get Water Vapour data by Coordinates"]]}, "Indonesia Most Accurate Weather and Earthquake": {"tool_desc": "Provide most accurate data of Indonesian cities weather and forecast plus latest earthquake alert.", "apis": [["Latest earth quake happened on Indonesia BMKG", "Latest earth quake happened on Indonesia"]]}, "climate data": {"tool_desc": "climate data worldwide", "apis": [["Search location by Name or zip code", "Search location by Name or zip code and get the key for the forecast"], ["Get climate data by lat/lon or Key", "get climate for  the location Lat/Lon"]]}, "AI Weather by Meteosource": {"tool_desc": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models.", "apis": [["historical_weather", "Receive **historical weather** data for a **given day** in the past **8 years**. Define your location using GPS coordinates or `place_id` from `Location endpoints`."], ["weather_statistics", "Get average weather: **long-term normals** for a given place for the next 30 days. Define your location using GPS coordinates or `place_id` from `Location endpoints`."], ["hourly", "**Hourly weather** forecast for the next 5 days. **Global** data are based on our **AI technology**, which uses many different models. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`."], ["current", "**Current weather** conditions based on weather stations around the world.  Updated every 10 minutes. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`."], ["daily", "**Daily weather** forecast for the next 21 days. **Global** data are based on our **AI technology**, which uses many different models. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`."], ["minutely", "**Minute-by-minute** precipitation forecast for the next 60 minutes. Updated in **real-time** based on our **AI nowcasting models**. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`."], ["alerts", "**Severe weather alerts** for the USA, Europe, and Canada. **Define your location** using GPS coordinates or `place_id` from `Location` endpoints."], ["find_places", "**Search places by name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places_prefix* endpoint, complete words are required here. You can search for cities, mountains, lakes, countries, etc."], ["find_places_prefix", "**Search places by beginning of the name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places* endpoint, you can specify only the prefix of the place you are looking for. You can search for cities, mountains, lakes, countries, etc."], ["nearest_place", "Use this endpoint to search for the **nearest named place** (village/town/city) from a given GPS coordinates. You will get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information**.\n\n*Note: If you specify coordinates of a secluded place (e.g. middle of the ocean), the nearest point can be very far from the coordinates.*"], ["astro", "Returns global **Sun and Moon information** (sunrise/sunset, moonrise/moonset and moon phase) for the next 30 days. Define your location using GPS coordinates or `place_id` from `Location endpoints`."]]}, "Ambee Air Quality": {"tool_desc": "Global hyperlocal real-time air quality API for 1M+ postcodes.", "apis": [["By Coordinates", "Get nearest places readings based around the given latitude and longitude"], ["By Postal Code", "Check air quality for your postal code"], ["By City", "Get the latest air quality data for your city"], ["By Country", "Provides the air quality data for a country"], ["Weather", "Get weather data for any place based on coordinates"]]}, "History": {"tool_desc": "Get 20 years historical weather data in Europe + Pollen + UV + Air Quality data", "apis": [["hourlyWeather", "This endpoint returns the historical weather on hourly level for a given day for a given location (latitude and longitude)"], ["hourlyWeatherZip", "This endpoint returns the historical weather on hourly level for a given day for a given location (country and zip-code)"], ["dailyWeatherZip", "This endpoint returns the historical weather for a given day for a given location (Country and zip code)"], ["dailyWeather", "This endpoint returns the historical weather for a given day for a given location (latitude and longitude)"], ["dailyWeatherSeries", "This endpoint returns the historical weather for a given series of days for a given location (latitude and longitude)"]]}, "Sun Seeker API": {"tool_desc": "Get live solar position (azimuth and elevation) with a simple API request for given Latitude and Longitude", "apis": [["sunposition", "Parameters:\nlat (float): The latitude of the location for which you want to get the solar position. The value should be between -90 and 90 degrees.\nlon (float): The longitude of the location for which you want to get the solar position. The value should be between -180 and 180 degrees."]]}, "weather forecast 14 days": {"tool_desc": "weather forecast world wide  14 days 6hourly", "apis": [["Get forecastdata by lat/lon", "get forecast for 14 days for the location Lat/Lon"], ["Search location by Name or zip code", "Search location by Name or zip code and get the key for the forecast"]]}, "Weather_v6": {"tool_desc": "Current weather data API, and Weather forecast API.", "apis": [["Current Weather Data of a location.", "Returns the current (most recent) weather observation of a given location"]]}, "Peak Conditions": {"tool_desc": "Local weather reports are not accurate enough for climbing mountains.", "apis": [["search mountain peak by name", "search for mountain peaks by name. returns all mountains with names containing the search query, along with their associated peak_id."], ["get daily report by mountain id", "Returns a daily report for the mountain peak specified in the request."], ["get extended report by mountain id", "Returns an extended 6-day report for the mountain peak specified in the request."]]}, "Groundhog Day API": {"tool_desc": "The GROUNDHOG-DAY.com API is the leading data source for North America's prognosticating groundhogs.", "apis": [["predictions", "Get all predictions for a given year."], ["groundhogs", "Returns all prognosticating animals with their known predictions."], ["root", "Returns a welcome message."], ["spec", "Gets the schema for the JSON API as a yaml file."], ["groundhog", "Returns a prognosticating animal and its known predictions."]]}, "Koppen Climate Classification": {"tool_desc": "Get the K\u00f6ppen climate classificatin for any location in the world using latitude and longitude.", "apis": [["Classification", "Get K\u00f6ppen classification code for the given latitude and longitude."]]}, "Air Quality API": {"tool_desc": "Retrieve current, forecasted, and extensive measurement data for any city in the world!", "apis": [["Air Quality Measurements", "Gives current air quality measurements per hour for a given city!"], ["Air Quality Forecasts", "Gives hourly air quality forecast for a given city!"], ["Current Air Quality", "Gives back data of current air quality in a specified city!"]]}, "Easy Weather": {"tool_desc": "Detailed current conditions, hourly forecasts, daily forecasts, and weather alerts by latitude and longitude in JSON format.", "apis": [["Daily forecast (5 days)", "Get a 5-day daily forecast for the given latitude and longitude."], ["Hourly forecast (240 hours)", "Get a 240-hour forecast for the given latitude and longitude."], ["Hourly forecast (48 hours)", "Get a 48-hour forecast for the given latitude and longitude."], ["Historical (daily)", "Get a historical daily forecast for the given latitude, longitude, and start date/time."], ["Historical (hourly)", "Get a historical hourly forecast for the given latitude, longitude, and start date/time."], ["Daily forecast (10 days)", "Get a 10-day daily forecast for the given latitude and longitude."], ["Current conditions (basic)", "Get (basic) current conditions for the given latitude and longitude."], ["Complete weather (single call)", "Get current conditions, hourly forecast, daily forecast, and alerts in a single response for the given latitude and longitude (you must supply ISO country code to receive weather alerts)."], ["Current conditions (detailed)", "Get (detailed) current conditions for the given latitude and longitude."], ["Weather alerts", "Get weather alerts posted by the local meteorological agency for the given latitude and longitude."]]}, "Foreca Weather": {"tool_desc": "Everything you need to build a weather app", "apis": [["Nowcast", "3-hour forecast in 15-minute time steps."], ["Three-hourly", "A longer three-hourly forecast up to 14 days."], ["Current", "Current weather estimate for location."], ["Latest observations", "Observations from nearby representative weather stations."], ["Location search", "Search for locations by name."]]}, "The Weather API": {"tool_desc": "Get the updated and hyper-accurate weather/aqi information of any city.", "apis": [["weather report", "Gives weather report of a particular city."]]}, "Weather API - By Any City": {"tool_desc": "The API provides current weather information for a specific city worldwide.", "apis": [["Get Weather Updates", "This endpoint get all necessary weather information"]]}, "Weather by API-Ninjas": {"tool_desc": "Get the latest weather data for any region in the world.", "apis": [["/v1/weather", "API Ninjas Weather API endpoint."]]}, "Qwiper Weather": {"tool_desc": "Ajoutez les donn\u00e9es m\u00e9t\u00e9orologiques d'aujourd'hui \u00e0 votre application.", "apis": [["M\u00e9t\u00e9o d'aujourd'hui - Niamey, Niger", "Obtenez la temp\u00e9rature, les conditions du ciel, les vents, l'humidit\u00e9, etc. pour la ville de Niamey."]]}, "WeatherAPI.com": {"tool_desc": "WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.", "apis": [["Realtime Weather API", "Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object."], ["Forecast Weather API", "Forecast weather API method returns upto next 14 day weather forecast and weather alert as json. It contains astronomy data, day weather forecast and hourly interval weather information for a given city."], ["Time Zone API", "Time Zone API method allows a user to get up to date time zone and local time information in json."], ["Future Weather API", "Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future."], ["Sports API", "Sports API method allows a user to get listing of all upcoming sports events for football, cricket and golf in json."], ["History Weather API", "History weather API method returns historical weather for a date on or after 1st Jan, 2010 (depending upon subscription level) as json."], ["IP Lookup API", "IP Lookup API method allows a user to get up to date information for an IP address in json."], ["Astronomy API", "Astronomy API method allows a user to get up to date information for sunrise, sunset, moonrise, moonset, moon phase and illumination in json."], ["Search/Autocomplete API", "Search or Autocomplete API returns matching cities and towns."]]}, "APJOY-Weather Forecast": {"tool_desc": "APJOY-Weather Forecast is a comprehensive and reliable weather forecasting API tailored for your location.", "apis": [["GetWeatherForecast", "This endpoint provides weather forecast information based on the user's location. It returns the current weather conditions, daily forecasts, and additional weather data, such as temperature, humidity, and wind speed. The data is sourced from OpenWeatherMap, ensuring accurate and reliable information."]]}, "Forecast": {"tool_desc": "Get 16 days weather forecast data - worldwide - geographical coordinates...", "apis": [["Index", "See the current API version. Here is the link to the documentation"], ["RapidApiGetForecastHourlyByCoordinates", "Get forecast hourly information."], ["RapidApiGetForecastSummaryByCoordinates", "Get Forecast summary information."], ["RapidApiGetObservationHistoryByStationId", "Get an History object with historical information."], ["RapidApiGetObservationHistoryByCoordinates", "Get an Observation object with historical information."], ["GetStatus", "Check if the API is running."]]}, "Plant Hardiness Zone": {"tool_desc": "Retrieve the USDA Plant Hardiness Zone for a ZIP code", "apis": [["Retrieve the Hardiness Zone", "Pass a ZIP code in the endpoint path to return an object that includes the ZIP code and USDA Plant Hardiness Zone."]]}, "RapidWeather": {"tool_desc": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.", "apis": [["Call 5 day / 3 hour forecast data - By city name", "You can search weather forecast for 5 days with data every 3 hours by city name."], ["Call 5 day / 3 hour forecast data - By ZIP code", "Please note if country is not specified then the search works for USA as a default."], ["Current air pollution data", "Current air pollution data.\nBesides basic Air Quality Index, the API returns data about polluting gases, such as Carbon monoxide (CO), Nitrogen monoxide (NO), Nitrogen dioxide (NO2), Ozone (O3), Sulphur dioxide (SO2), Ammonia (NH3), and particulates (PM2.5 and PM10).\n\nAir pollution forecast is available for 5 days with hourly granularity. Historical data is accessible from 27th November 2020."], ["Forecast air pollution data", "Forecast air pollution data.\nBesides basic Air Quality Index, the API returns data about polluting gases, such as Carbon monoxide (CO), Nitrogen monoxide (NO), Nitrogen dioxide (NO2), Ozone (O3), Sulphur dioxide (SO2), Ammonia (NH3), and particulates (PM2.5 and PM10).\n\nAir pollution forecast is available for 5 days with hourly granularity. Historical data is accessible from 27th November 2020."], ["Reverse geocoding", "Reverse geocoding allows to get name of the location (city name or area name) by using geografical coordinates (lat, lon). The **limit **parameter in the API call allows you to cap how many location names you will see in the API response."], ["One Call API", "The One Call API provides the following weather data for any geographical coordinates:\n\n- Current weather\n- Minute forecast for 1 hour\n- Hourly forecast for 48 hours\n- Daily forecast for 7 days\n- National weather alerts\n- Historical weather data for the previous 5 days"], ["Call 5 day / 3 hour forecast data - By geographic coordinates", "You can search weather forecast for 5 days with data every 3 hours by geographic coordinates."], ["Call 5 day / 3 hour forecast data - By city ID", "You can search weather forecast for 5 days with data every 3 hours by city ID. We recommend to call API by city ID to get unambiguous result for your city."], ["Cities in circle", "API returns data from cities laid within definite circle that is specified by center point"], ["By ZIP code", "Please note if country is not specified then the search works for USA as a default."], ["By city ID", "You can make an API call by city ID.\nWe recommend to call API by city ID to get unambiguous result for your city."], ["By city name", "You can call by city name or city name, state code and country code. Please note that searching by states available only for the USA locations."], ["Previous 5 Days Historical Weather Data", "Historical weather data for the previous 5 days"]]}, "Wavebase": {"tool_desc": "Wave, Weather and Tide Conditions for any spot on the Ocean Surface.", "apis": [["XYZ Map Tiles for Ocean Conditions", "Wavebase Global Ocean Tiles API:\n\nWave Signficant Height (GET): https://api.wavebase.app/v1/tiles/singleband/{variable}/{date-timeslot - YYYYMMDDHH}/0/0/0.png\n\ne.g.: https://api.wavebase.app/v1/tiles/singleband/VHM0/2023051703/0/0/0.png \n\nCurrently only Tile at 0/0/0 is available Free.  Contact:  info@wavebase.app for additional tiles."], ["Ocean Conditions Closest to Latitude / Longitude", "\u200bhttps://api.wavebase.app/v4/conditions/search/{latitude}/{longitude}\n\nSearch for current and predicted ocean conditions closest to a given latitude/longitude.\n\nReturned conditions include the closest point found, along with Waves, Tides and Weather conditions are the location."]]}, "Weather with AI": {"tool_desc": "Global weather forecast powered by Artificial Intelligence.", "apis": [["Get Weather", "Return weather in current, hourly and daily info."]]}, "Visual Crossing Weather": {"tool_desc": "Visual Crossing Weather API provides instant access to both historical weather records and weather forecast data", "apis": [["Weather forecast data", "Provides access to weather forecast information. The forecast is available for up to seven days at the hourly, 12 hour and daily summary level."], ["Historical weather record", "The weather history data is suitable for retrieving hourly or daily historical weather records."]]}}, "Communication": {"GeneralTalker": {"tool_desc": "\u307e\u308b\u3067\u4eba\u9593\u306e\u3088\u3046\u306a\u81ea\u7136\u306a\u4f1a\u8a71\u3092\u5b9f\u73fe\u3059\u308bAPI", "apis": [["on_line", "LINE\u30dc\u30c3\u30c8\u5c02\u7528\u306e\u96d1\u8ac7API\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306fon_line\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u4f8b\u3068\u3001\u305d\u306e\u610f\u5473\u3067\u3059\u3002\n```\n{\n\"response\":{\n    \"res\":\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"         # \u751f\u6210\u3055\u308c\u305f\u8fd4\u7b54\n    \"user_score\":-2.8724350929260254   # \u30e6\u30fc\u30b6\u30fc\u306e\u767a\u8a71\u306e\u30b9\u30b3\u30a2\n    \"lm\":0.7096909880638123            # \u6587\u7ae0\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"mc\":-1.5187406539916992           # \u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"score\":-0.3534274697303772        # \u7dcf\u5408\u30b9\u30b3\u30a2\n    \"history_text\":\"<speaker2>Hello\"   # \u767a\u8a71\u306e\u751f\u6210\u306b\u4f7f\u308f\u308c\u305f\u767a\u8a71\u5c65\u6b74\n    \"res_score_list\":[                 # \u63a1\u7528\u3057\u306a\u304b\u3063\u305f\u8fd4\u7b54\u306e\u30ea\u30b9\u30c8\n        0:[\n            0:\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"       # \u8fd4\u7b54\u306e\u5185\u5bb9\n            1:[                          # \u30b9\u30b3\u30a2\uff08\u6587\u7ae0\u306e\u59a5\u5f53\u6027,\u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027,\u7dcf\u5408\u30b9\u30b3\u30a2\uff09\n                0:0.7096909880638123\n                1:-1.5187406539916992\n                2:-0.3534274697303772\n            ]\n        ]\n        ...     # \u4e2d\u7565\n    ]\n    }\n}\n```"], ["on_twitter", "\u30c4\u30a4\u30c3\u30bf\u30fc\u30dc\u30c3\u30c8\u5c02\u7528\u306e\u96d1\u8ac7API\u3067\u3059\u3002reply_to_id\uff08\u30ea\u30d7\u30e9\u30a4\u5148\u306eID\uff09\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u904e\u53bb\u306e\u4f1a\u8a71\u5c65\u6b74\u3092\u3075\u307e\u3048\u305f\u4f1a\u8a71\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u4f8b\u3068\u3001\u305d\u306e\u610f\u5473\u3067\u3059\u3002\n\n```\n{\n\"response\":{\n    \"res\":\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"         # \u751f\u6210\u3055\u308c\u305f\u8fd4\u7b54\n    \"user_score\":-2.8724350929260254   # \u30e6\u30fc\u30b6\u30fc\u306e\u767a\u8a71\u306e\u30b9\u30b3\u30a2\n    \"lm\":0.7096909880638123            # \u6587\u7ae0\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"mc\":-1.5187406539916992           # \u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"score\":-0.3534274697303772        # \u7dcf\u5408\u30b9\u30b3\u30a2\n    \"history_text\":\"<speaker2>Hello\"   # \u767a\u8a71\u306e\u751f\u6210\u306b\u4f7f\u308f\u308c\u305f\u767a\u8a71\u5c65\u6b74\n    \"res_score_list\":[                 # \u63a1\u7528\u3057\u306a\u304b\u3063\u305f\u8fd4\u7b54\u306e\u30ea\u30b9\u30c8\n        0:[\n            0:\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"       # \u8fd4\u7b54\u306e\u5185\u5bb9\n            1:[                          # \u30b9\u30b3\u30a2\uff08\u6587\u7ae0\u306e\u59a5\u5f53\u6027,\u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027,\u7dcf\u5408\u30b9\u30b3\u30a2\uff09\n                0:0.7096909880638123\n                1:-1.5187406539916992\n                2:-0.3534274697303772\n            ]\n        ]\n        ...     # \u4e2d\u7565\n    ]\n    \"user_utt_id\":1355             # \u30e6\u30fc\u30b6\u30fc\u306e\u767a\u8a71\u306eid\n    \"bot_utt_id\":1356              # \u751f\u6210\u3057\u305f\u8fd4\u7b54\u306eid\n    }\n}\n```"], ["on_slack", "slack\u30dc\u30c3\u30c8\u5c02\u7528\u306e\u96d1\u8ac7API\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306fon_slack\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u4f8b\u3068\u3001\u305d\u306e\u610f\u5473\u3067\u3059\u3002\n```\n{\n\"response\":{\n    \"res\":\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"         # \u751f\u6210\u3055\u308c\u305f\u8fd4\u7b54\n    \"user_score\":-2.8724350929260254   # \u30e6\u30fc\u30b6\u30fc\u306e\u767a\u8a71\u306e\u30b9\u30b3\u30a2\n    \"lm\":0.7096909880638123            # \u6587\u7ae0\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"mc\":-1.5187406539916992           # \u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"score\":-0.3534274697303772        # \u7dcf\u5408\u30b9\u30b3\u30a2\n    \"history_text\":\"<speaker2>Hello\"   # \u767a\u8a71\u306e\u751f\u6210\u306b\u4f7f\u308f\u308c\u305f\u767a\u8a71\u5c65\u6b74\n    \"res_score_list\":[                 # \u63a1\u7528\u3057\u306a\u304b\u3063\u305f\u8fd4\u7b54\u306e\u30ea\u30b9\u30c8\n        0:[\n            0:\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"       # \u8fd4\u7b54\u306e\u5185\u5bb9\n            1:[                          # \u30b9\u30b3\u30a2\uff08\u6587\u7ae0\u306e\u59a5\u5f53\u6027,\u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027,\u7dcf\u5408\u30b9\u30b3\u30a2\uff09\n                0:0.7096909880638123\n                1:-1.5187406539916992\n                2:-0.3534274697303772\n            ]\n        ]\n        ...     # \u4e2d\u7565\n    ]\n    }\n}\n```"], ["on_general", "\u3044\u308d\u3044\u308d\u306a\u30dc\u30c3\u30c8\u3067\u3054\u5229\u7528\u3044\u305f\u3060\u3051\u308b\u96d1\u8ac7API\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306fon_general\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u4f8b\u3068\u3001\u305d\u306e\u610f\u5473\u3067\u3059\u3002\n```\n{\n\"response\":{\n    \"res\":\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"         # \u751f\u6210\u3055\u308c\u305f\u8fd4\u7b54\n    \"user_score\":-2.8724350929260254   # \u30e6\u30fc\u30b6\u30fc\u306e\u767a\u8a71\u306e\u30b9\u30b3\u30a2\n    \"lm\":0.7096909880638123            # \u6587\u7ae0\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"mc\":-1.5187406539916992           # \u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"score\":-0.3534274697303772        # \u7dcf\u5408\u30b9\u30b3\u30a2\n    \"history_text\":\"<speaker2>Hello\"   # \u767a\u8a71\u306e\u751f\u6210\u306b\u4f7f\u308f\u308c\u305f\u767a\u8a71\u5c65\u6b74\n    \"res_score_list\":[                 # \u63a1\u7528\u3057\u306a\u304b\u3063\u305f\u8fd4\u7b54\u306e\u30ea\u30b9\u30c8\n        0:[\n            0:\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"       # \u8fd4\u7b54\u306e\u5185\u5bb9\n            1:[                          # \u30b9\u30b3\u30a2\uff08\u6587\u7ae0\u306e\u59a5\u5f53\u6027,\u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027,\u7dcf\u5408\u30b9\u30b3\u30a2\uff09\n                0:0.7096909880638123\n                1:-1.5187406539916992\n                2:-0.3534274697303772\n            ]\n        ]\n        ...     # \u4e2d\u7565\n    ]\n    }\n}\n```"]]}, "Phone and Email Validator_v2": {"tool_desc": "Extremely Useful tool for Phone, Email, IP Address and Postal Code Validation", "apis": [["PostalCode", "Postal Code or Zip Code to Location For USA only"], ["Phone Number", "E164 Format. Eg 19542567890 for USA"]]}, "2Factor Authentication - India": {"tool_desc": "2Factor.in provides extremely simple to use APIs for implementing 2Factor Authentication ( Phone verification ) with just 1 API Call.", "apis": [["Check Balance - Addon Services", "Check Balance For Addon Services"], ["Sending Voice OTP ( Custom OTP )", "This endpoint is used to send VOICE OTP to India"], ["Sending SMS OTP ( Custom OTP )", "This endpoint is used to send Custom SMS OTP to India"], ["Verify SMS OTP Input", "This endpoint is useful in verifying user entered OTP with sent OTP"], ["Sending SMS OTP ( Auto Generated OTP )", "This endpoint is used to send Auto Generated SMS OTP to India"], ["Verify VOICE OTP Input", "This endpoint is useful in verifying user entered OTP with sent OTP"], ["Sending SMS OTP ( Auto Generated OTP - Custom Template  )", "This endpoint is used to send Auto Generated SMS OTP to India"], ["Sending SMS OTP ( Custom OTP - Custom Template )", "This endpoint is used to send SMS OTP to India"], ["Sending VOICE OTP ( Auto Generated OTP )", "This endpoint is used to send Auto Generated VOICE OTP to India"], ["Block Number - SMS Service", "This endpoint is used to add number to SMS Blocklist"], ["Un-Block Number - SMS Service", "This endpoint is used to remove number from SMS Blocklist"], ["Un-Block Number - VOICE Service", "This endpoint is used to remove number from VOICE Blocklist"], ["Block Number - VOICE Service", "This endpoint is used to add number to VOICE Blocklist"], ["Pull Delivery Report", "Pull Delivery Report - Transactional SMS"]]}, "Flowplayer Drive": {"tool_desc": "Encode videos in the cloud and host them with Flowplayer.", "apis": [["/videos", "List all videos in the library"], ["show video", "Shows the specified video, with embedded encodings"], ["traffic", "Get traffic statistics for the specified video."], ["retention", "Get retention data for the specified video. Retention data answers following questions: How long do viewers spend watching your videos? At what point do they lose interest or tune out and go elsewhere? The returned data tells the percentage (and count) of viewers that watched the video up to a given time in the video's timeline."]]}, "Email Checker and Validator": {"tool_desc": "Use this API to validate the email addresses for your business.", "apis": [["Check Email", "Just paste the Email Address you want to validate and wait for the results"]]}, "Serverless blogging": {"tool_desc": "Serverless blogging enables you to integrate a blogging system within seconds, whilst giving clients a full WYISWYG interface to create and sort content as they please.", "apis": [["MEDIA", "Get image from your sapphire account"], ["GROUPS", "Get different blog groups of your account."], ["BLOGS", "Query blogs from your account"]]}, "Validate Phone by API-Ninjas": {"tool_desc": "Check whether a phone number is valid and get its metadata.", "apis": [["/v1/validatephone", "API Ninjas Validate Phone API endpoint. Returns metadata (including whether it is valid) for a given phone number."]]}, "Networking": {"tool_desc": "This API will help you with several networking-related utilities.", "apis": [["WhatsMyIP", "This will fetch your public IP."]]}, "whin": {"tool_desc": "Send and receive any message type to your WhatsApp or owned groups with our gateway.", "apis": [["personal listener", "The response is an url that you have to use as a webhook destination at the origin service. The content sent to it will be routed as a message to a whatsapp group owned by the user, or to the user.\nLearn use-cases on these videos: [grafana alerts](https://youtu.be/RvVgg0qwNDk),[Shelly notifications](https://youtu.be/B6MLlBUkyvo), [synology notifications](https://youtu.be/zeAJNuXYqH4)."], ["create a group", "This API will create a group, it will add you, and will promote you to Admin of the group. Check this [video](https://youtu.be/wD0DWoua0L4) to learn how to use it."], ["group invite link", "the endpoint returns an invite link url for a group you own."], ["list groups", "This endpoint returns a list of the groups you created through whin."], ["hk receiver", "this endpoint shall be used by the origin services, it's **NOT** to be used on the playground."], ["hook receiver", "This endpoint shall be triggered by the webhook origin and is not intended to be used through this frontend."], ["show url", "This endpoint is used to request the webhook routes created on your account. \nLearn how to use it on this [video](https://youtu.be/8WyG_becZXM)"], ["websocket checker", "Whin-receive (thick-client) websockets checker. \nThis endpoint is **ONLY** used to authorize websocket connections to the backend by thick clients. The Response is a token needed to complete handshaking."], ["signup", "This endpoint is **ONLY** used to enter the code you received to signup. Follow this [video](https://youtu.be/uOZ-oH4kP58), or read the [tutorial](https://rapidapi.com/inutil-inutil-default/api/whin2/tutorials/what-to-do-to-start-using-whin%3F-1), to learn how to start using whin."], ["delete url", "This endpoint will erase the url you set to receive the whatsapps sent to whin. Learn how to use it on this [video](https://youtu.be/8WyG_becZXM)."]]}, "Veriphone": {"tool_desc": "Global phone number verification in a free, fast, reliable JSON API", "apis": [["verify", "Global phone number verification"], ["example", "Get an example phone number for any country"]]}, "Sim based Location Tracking": {"tool_desc": "This API  provides location tracking for any phone number using the cellular network.", "apis": [["Trip'sCurrentStatus", "<p>You can use this endpoint to fetch the details of a trip which also includes the last known location.</p>\n<p><strong>Body Parameters</strong></p>\n\n<p><strong>Notes</strong></p>\n<ul>\n<li>Atleast one of the below three parameters should be passed</li>\n</ul>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>invoice</td>\n<td>No</td>\n<td> invoice received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>id</td>\n<td>No</td>\n<td> trip_id received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>lr_number</td>\n<td>No</td>\n<td> lr_number received in response of submit trip API</td>\n</tr>\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>"], ["Fetchalltrips", "This endpoint is for fetching all trips"], ["CheckConsent", "<p>You can use this endpoint to check concent status of the passed mobile number.</p>\n<p><strong>Body Parameters</strong></p>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>tel</td>\n<td>Yes</td>\n<td> 10 digit comma seperated mobile number used for creating trip</td>\n</tr>\n\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>"], ["FetchaTrip", "<p>This endpoint is for fetching a trip</p>\n<p><strong>Body Parameters</strong></p>\n\n<p><strong>Notes</strong></p>\n<ul>\n<li>Atleast one of the below three parameters should be passed</li>\n</ul>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>invoice</td>\n<td>No</td>\n<td> invoice received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>trip_id</td>\n<td>No</td>\n<td> trip_id received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>lr_number</td>\n<td>No</td>\n<td> lr_number received in response of submit trip API</td>\n</tr>\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>"], ["FetchLocation", "<p>This endpoint is for fetching location of a trip</p>\n<p><strong>Required Body Parameters</strong></p>\n\n<p><strong>Notes</strong></p>\n<ul>\n<li>Atleast one of the below three parameters should be passed</li>\n</ul>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>invoice</td>\n<td>No</td>\n<td> invoice received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>id</td>\n<td>No</td>\n<td> trip_id received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>lr_number</td>\n<td>No</td>\n<td> lr_number received in response of submit trip API</td>\n</tr>\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>"], ["NumberList", "<p>All  of <b>last updated locations</b> of provided concents phone numbers can be fetched through this endpoint,</p>\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>"], ["Getlatestlocation", "<p>This API can be used for getting latest location of the passed number.</p>\n\n\n<p><strong>Body Parameters</strong></p>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>phone_number</td>\n<td>Yes</td>\n<td> 10 digit previously added mobile number</td>\n</tr>\n\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>\n\n<p>\n<h4>Wrong or not added mobile number passed</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">\n{\n    \"status\": \"invalid_mobile\"\n}\n</code></pre>"], ["Checkconcent", "<p>This endpoint is responsible for refreshing the tracking concent of provided number, i.e. whether location tracking is allowed or not yet</p>\n\n<p><strong>Body Parameters</strong></p>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>tel</td>\n<td>Yes</td>\n<td> 10 digit previously added mobile number</td>\n</tr>\n\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>\n\n<p>\n<h4>Wrong or not added mobile number passed</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">\n{\n    \"status\": \"invalid_mobile\"\n}\n</code></pre>"], ["RouteHistory", "<p>Through this endpoint <b>route history</b> can be fetched of provided number..</p>\n\n<p><strong>Body Parameters</strong></p>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>phone_number</td>\n<td>Yes</td>\n<td> 10 digit previously added mobile number</td>\n</tr>\n\n<tr>\n<td>from_date</td>\n<td>Yes</td>\n<td>From date for Route history in YYYY/MM/DD formate</td>\n</tr>\n\n<tr>\n<td>to_date</td>\n<td>Yes</td>\n<td>To date for Route history in YYYY/MM/DD formate</td>\n</tr>\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>"]]}, "Dudu": {"tool_desc": "Dudu.com \u2013 multilingual social network with a unique translation technology allowing Internet users that speak different languages to communicate freely without language barriers.", "apis": [["Command", "Please check http://dudu.com/docs/api/command/list for the proper parameter and method combinations"]]}, "Checky - Verify Phone Number": {"tool_desc": "Determine in realtime if a given phone number is valid and the type of phone line it is connected to.", "apis": [["GET - Verify", "To use this endpoint, you need to make an HTTP GET request to the API with the phone and country parameters in the query string."]]}, "SIGNL4 \u2013 Critical Mobile Alerting": {"tool_desc": "When critical systems fail or major incidents happen, SIGNL4 is the fastest way to alert your staff, engineers, IT admins and workers \u2018in the field\u2019.", "apis": [["/alerts/{alertId}", "Gets an alert by id."], ["/users/{userId}", "Returns a user object with details such as his email address and duty information."], ["/scripts/inventory", "Returns all available inventory scripts which can be added to a SIGNL4 subscription."], ["/categories/{teamId}/metrics", "Sample Request:\r\n            \r\n    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/metrics"], ["/alerts/{alertId}/annotations", "Get annotations of an alert by id."], ["/events/{eventId}/parameters", "Get parameters of an event by id."], ["/users", "Returns a list of user objects with details such as their email address and duty information. Only users who\r\nare part of your team will be returned."], ["/events/{eventId}/overview", "Get overview event by id."], ["/webhooks", "Returns a collection of defined outbound webhooks in the system."], ["/categories/{teamId}/{categoryId}/subscriptions", "Sample Request:\r\n            \r\n    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e/subscriptions\r\n    {\r\n    }"], ["/scripts/instances/{instanceId}", "Gets the script instance specified by the passed instance id."], ["/categories/{teamId}/{categoryId}/metrics", "Sample Request:\r\n            \r\n    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e/metrics"], ["/categories/{teamId}/{categoryId}", "Sample Request:\r\n            \r\n    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e"], ["/alerts/{alertId}/overview", "Get overview alert by id."], ["/scripts/instances", "Returns all script instances in the subscription."], ["/categories/{teamId}", "Sample Request:\r\n            \r\n    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7"], ["/scripts/inventory/parsed/{scriptId}", "Gets the script specified by the passed script id."], ["/alerts/{alertId}/attachments", "Get attachments of an alert by id."], ["/alerts/report", "Returns information about the occurred alert volume in different time periods as well as information about the\r\nresponse behaviour (amount of confirmed and unhandled alerts) of your team members."], ["/users/{userId}/dutyStatus", "Returns a object with duty information."], ["/alerts/{alertId}/notifications", "Get notifications of all users by alert id."], ["GetWebhookById", "Returns information of the webhook specified by the passed id."]]}, "MailValid": {"tool_desc": "A REST API that checks for disposable and invalid emails", "apis": [["Check lists", "The route for checking the lists of disposable or non disposable emails"]]}, "Free Phone Number Lookup and Validation API": {"tool_desc": "Free Lookup and Validation API Phone Numbers and receive additional information like Geo Location, Timezone and Currency.", "apis": [["Free JSON Endpoint", "Please see [https://phone-number-api.com/docs/json](url) for details"]]}, "Zipwhip": {"tool_desc": "Cloud texting for toll free,\r\nlandline,\r\nand mobile numbers\r\nSend and receive text messages\r\nfrom your laptop, desktop, or\r\ntablet computer using your\r\nexisting mobile or landline\r\nphone number.", "apis": [["user/save", "Save details about the user associated with the provided session"], ["group/save", "Create a group. A named group is a unique set of contacts that are referenced similar to a contact  A group is defined as device:/xxxxxxxxxx/xx. After the :/, this is the phone number associated with the account you are sending messages under. The /xx is the id for the group."], ["group/addmember", "Once a group is created via the group/save call, you then need to populate members."], ["message/delete", "Marks the given message as deleted in Zipwhip's database."], ["contact/delete", "This method can take one or more contact ID(s) and delete those records from Zipwhip. A contact's ID is available from contact/list or part of the return from message/send."], ["message/list", "Retrieves messages for account. A start of 0 provides newest to oldest messages."], ["* user/login", "Takes a username and password and returns json with the account's session key. A sessionkey lasts forever, so it is best to store the sessionkey and use it for future purposes."], ["group/get", "Retreive details about an existing group. This call can be used to review the members of the group."], ["group/removemember", "Remove a group member. This is useful if a group member has requested to opt-out of notifications."], ["message/read", "Marks the given message as read in Zipwhip's database."], ["conversation/delete", "Deletes the conversation based on the provided conversation ID. It also deletes the associated messages."], ["contact/save", "Save details about the contact for the given phone number."], ["*message/send", "Sends a message from the logged in user's phone number."], ["conversation/list", "Deletes the conversation based on the provided conversation ID. It also deletes the associated messages."], ["contact/list", "This method returns all contacts associated with session provided."], ["group/delete", "Delete the group. This is similar to deleting a contact, no message objects will be affected by deleting the group."], ["conversation/get", "Retrieves conversation details and messages that specific to the conversation ID provided."], ["user/get", "Provides information about the logged in user or account associated with sessionKey passed in."]]}, "D7 Viber": {"tool_desc": "Experience boundless connectivity with the D7API Gateway, connecting you to a vast messaging network.", "apis": [["Check Balance", "Retrieve details about your D7API account's current balance."], ["Get Message Status", "Retrieve the delivery status of Viber messages that were sent earlier."]]}, "Web Push Notifications Server": {"tool_desc": "Simple server which provides Web Push Notifications service to frontend applications.", "apis": [["Index", "Endpoint to fetch server information"]]}, "PubNub Network": {"tool_desc": "The PubNub Network makes Real-time Communications Simple  with an easy API.", "apis": [["Time", "Timetoken from PubNub Network"]]}, "Automatic-custom-response-creator": {"tool_desc": "send a customer review, you will receive a personalized response proposal automatically", "apis": [["get_response", "There are 3 params necessary : \n\n- First - Add a review \"avis\" (ex. \"Merci pour votre accueil, c'\u00e9tait parfait\")\n- Then - Add a \"business_type\" (ex. \"Restaurant\")\n- Finaly - Add a \"business_brand\" (ex. \"Fuzi\")"]]}, "Validate Phone": {"tool_desc": "\u201cValidate Phone\u201d API validates national and international phone numbers, get location information about phone number.", "apis": [["Validate Phone", "\u201cValidate Phone\u201d API Validates single phone number or bulk phone  numbers."]]}, "Maytapi WhatsApp": {"tool_desc": "Send and receive messages from WhatsApp via Maytapi.", "apis": [["queue", "Returns the queue info of the phone."], ["purgeQueue", "Clears phone's send message queue."], ["getStatus", "Returns the status of the current session."], ["getQRCode", "Gets the image of QR-Code."], ["getProduct", "Gets the product id and webhook url of the account."], ["getListPhones", "Gets the list of phones with their id's and numbers that are registered to the given product id."], ["getScreen", "Returns the screenshot of the screen in the current session"], ["getGroups", "Sets the option for getting the acknowledge messages from the webhook to true or false."], ["redeploy", "Redeploys docker instance of your phone. If your phone having any unexpected problems you can use this endpoint to reboot the instance."], ["checkNumberStatus", "Check phone number status."], ["contacts", "Returns the contacts in the current whatsapp instance."]]}, "Melrose Labs Voice API": {"tool_desc": "The Voice API is used for text-to-speech, speech-to-text and inbound/outbound voice routing.", "apis": [["Retrieve text", "Retrieve text from previously converted speech-to-text."], ["List available numbers for a country", "Get list of available telephone numbers for a country"], ["List available numbers for a country/prefix", "Get list of available telephone numbers for a country and given prefix"], ["List allocated numbers", "Get list of allocated numbers"], ["Retrieve audio file", "Retrieve audio file from previously converted text-to-speech. File is in MP3 format."], ["Get endpoint", "Get endpoint for a number"]]}, "LINE Messaging": {"tool_desc": "LINE Messaging API lets you develop two-way communication between your service and LINE users.", "apis": [["Get content", "Gets image, video, and audio data sent by users."], ["Get rich menu ID of user", "Gets the ID of the rich menu linked to a user."], ["Download rich menu image", "Downloads an image associated with a rich menu."], ["Get rich menu list", "Gets a list of all uploaded rich menus."], ["Get rich menu", "Gets a rich menu via a rich menu ID."], ["Get profile", "Gets user profile information."], ["Get default rich menu ID", "Gets the ID of the default rich menu set with the Messaging API."], ["Get number of sent reply messages", "Gets the number of messages sent with the /bot/message/reply endpoint."]]}, "Grup Terbuka": {"tool_desc": "open api group chat", "apis": [["Kirim Pesan", "api untuk kirim pesan"]]}, "Revista Verde": {"tool_desc": "A Revista Verde (RV) \u00e9 peri\u00f3dico cient\u00edfico internacional semestral do Programa Escola Verde e do Grupo de Pesquisa em Educa\u00e7\u00e3o Ambiental Interdisciplinar (CNPq) sobre problem\u00e1ticas socioambientais e sustentabilidade.", "apis": [["Green Journal", "A Revista Verde (RV) \u00e9 peri\u00f3dico cient\u00edfico internacional semestral do Programa Escola Verde e do Grupo de Pesquisa em Educa\u00e7\u00e3o Ambiental Interdisciplinar (CNPq) sobre problem\u00e1ticas socioambientais e sustentabilidade.\n\nWebsite: https://revistaverde.escolaverde.org"]]}, "Free Phone Carrier Lookup": {"tool_desc": "FREEEEE !!!", "apis": [["Carrier Endpoint", "The phone number carrier provides useful information about location. Please any Bug contact me at @ta9ra9pa9 on Telegram"]]}, "Phone Number Validator": {"tool_desc": "Feed this API a phone number in international format and have it validate it and verified.", "apis": [["Validate Phone Number", "Easily and quickly looks up details about a phone number"]]}, "Mojitok Sticker Store SDK": {"tool_desc": "Mojitok Sticker Store API/SDK is a curated store of licensed animated stickers, emojis, and GIFs.", "apis": [["/stickers/trending", "API that provides information on creators and stickerpacks of 16 popular stickers"]]}, "Phone Formatter": {"tool_desc": "With this API you will be able to get the entered phone number in international, national and several standard formats with additional information about the country for the correct phone numbers.", "apis": [["regions", "Returns a collection of supported regions for the specified\n IETF BCP 47 language tag string."], ["simpleRegions", "Returns a collection of supported regions. Method use \"Accept-Language\" header value for output list of\n regions on specific language"], ["simple", "A simplified version of the formatting method that does not accept additional filtering and parsing parameters\n and uses the language value from the \"Accept-Language\" header."]]}, "Compras Net Api": {"tool_desc": "Compras Net Api", "apis": [["1\u00ba - Obter C\u00f3digo do Chat (Code to Chat)", "Obter C\u00f3digo do Chat"]]}, "QuieroChat": {"tool_desc": "Sistema de chat de <a href=\"https://www.quierochat.com\">QuieroChat</a> para el <a href=\"https://www.quierochat.com/terra-chat/\">Terra Chat</a>.", "apis": [["Acceso al chat", "Conecta al usuario con el chat"]]}, "eazita.com": {"tool_desc": "Eazita's application programming interface (API) provides the communication link between your application and Eazita's SMS Gateway, allowing you to send and receive text messages and to check the delivery status of text messages you've already sent.", "apis": [["Check Account Balance", "Retrieve your current eazita account balance."]]}, "Scout": {"tool_desc": "Telephone Number Insight including Validity, Robocall/SPAM, Reputation, LNP, Carrier, Timezone, and Geographic Information", "apis": [["Advanced Phone Number Lookup", "**Advanced Phone Number Information**\n\n*retrieves valuable technical data about a phone number*\n\n- validity\n\n- approximate location\n\n- timezone\n\n- carrier\n\n- line type\n\n- ported status\n\n- carrier\n\n- robocall/spam score\n\n- much more"], ["Basic Phone Number Validation", "**Basic Phone Number Validation**\n\n- determine if a phone number is in a valid format \n\n- determine if a phone number is impossible for a particular region\n\n- properly format the number for various scenarios like international or local dialing\n\n- attempts to determine line type\n\n- determines country and country code"]]}, "Sagenda Free Booking System": {"tool_desc": "Sagenda is a booking, reservation, scheduling or appointment online software that increases the productivity of your business free of cost.", "apis": [["/Events/GetBookableItemList", "list of the bookable Items"]]}, "Skype Graph": {"tool_desc": "Skype Graph is an Unofficial Skype API that allows you search for Skype users by name or email address", "apis": [["Search", "Search for a Skype user by email address or name"]]}, "Upcall": {"tool_desc": "Upcall provides phone callers through an API and web interface.", "apis": [["fetchSpecificContact", "Get a specific contact"], ["fetchOauthAuthorizedApplications", "Fetch Oauth authorized applications"], ["fetchCallsForCampaign", "Get all calls for a campaign"], ["fetchWebhook", "Get a specific webhook"], ["fetchCampaign", "Get a specific campaign"], ["fetchContacts", "Get contacts for a campaign"]]}, "Truecaller_v2": {"tool_desc": "", "apis": [["Test API", "This API is to test if server is up and running"], ["Get Details", "This end point will display the search details for the number you are looking for."], ["Get Country Codes", "This will return list of all country codes."], ["Get Bulk Details", "This end point will display the search details for the bulk number's you are looking for."]]}, "DNS Lookup": {"tool_desc": "API to programmatically perform DNS lookups.", "apis": [["/Api/a/{domain}", "Sample request:\r\nGET /api/a/oxog.net"], ["/Api/aaaa/{domain}", "Sample request:\r\nGET /api/aaaa/oxog.net"], ["/Api/any/{domain}", "Sample request:\r\nGET /api/any/oxog.net"], ["/Api/mx/{domain}", "Sample request:\r\nGET /api/mx/oxog.net"], ["/Api/ns/{domain}", "Sample request:\r\nGET /api/ns/oxog.net"], ["/Api/soa/{domain}", "Sample request:\r\nGET /api/soa/oxog.net"], ["/Api/txt/{domain}", "Sample request:\r\nGET /api/txt/oxog.net"]]}, "On hold audio messages": {"tool_desc": "Messages for voicemails and switchboards using professional voice talents", "apis": [["Endpoint", "It needs for ordering messages"]]}, "Whatsapp Private API": {"tool_desc": "WhatsApp Private API is an unofficial API that allows developers to access WhatsApp's messaging platform outside of the official WhatsApp application.", "apis": [["GetAccount", "API for get list account under the projects"]]}, "QR Code by API-Ninjas": {"tool_desc": "Generate custom QR codes for any data.", "apis": [["/v1/qrcode", "API Ninjas QR Code API endpoint. Returns a QRCode image binary specified by input parameters."]]}, "Weather_dataSet": {"tool_desc": "Weather_data Set on Django Project", "apis": [["Weather_dataSet", "Check The Weather Api Process"]]}, "Wavecell SMS": {"tool_desc": "Wavecell SMS API allows registered users to send SMS worldwide using a simple , fast and reliable  HTTP API.", "apis": [["SMS-MT - Send SMS (GET)", "Send a SMS message using Wavecell HTTP GET"], ["Get delivery status", "This API should be used to retrieve the current delivery status of a message sent using Wavecell."]]}, "mobile-recharge-plans-api-tariff-Plans-free": {"tool_desc": "well-tried tariff plan API,tri telecom data tested, recharge plans API tried free come to know api,Developer or Company host detect all about  expected latest plans info of variegated in telecom  functioning operators around pan India.", "apis": [["Tariff Plans api", "Just send the operator and circle and GET ALL PLANS according to circle and operator our api"]]}, "QuickBlox": {"tool_desc": "QuickBlox is a cloud\u00adhosted Communications backend service.", "apis": [["GET places.json", "Retrieving a list of the created places by application"], ["GET users.json", "Call this API to get a list of current users of you app. By default it returns upto 10 users, but you can change this by adding pagination parameters."], ["GET geodata/find.json", "Retrieve all (by default) geodata for current application. The ID of the application is taken from the token which is specified in the request"], ["GET blobs/{uid}.xml", "Download File (Get File as a redirect to the S3 object) by uid. 'uid' is a parameter which should be taken from the response of the request for the creating a file. To have a possibility to download a file you should set a status complete to your file firstly."], ["GET blobs.json", "Get list of files for the current user. The ID of the user is taken from the token specified in the request"]]}, "BOTlibre": {"tool_desc": "BOT libre's goal is to foster an open, safe community of artificial intelligent chat bots and their developers.", "apis": [["form-check-instance", "The form-check-instance API validates that a bot ID or name exists, and returns the bot's details."], ["form-check-user", "The form-check-user API validates user, and returns the user's details."], ["form-chat", "The form-chat API receives a chat message and returns the chat bot's reply as an XML document."]]}, "caller-id": {"tool_desc": "Retrieve personal data (including Name, Gender, Job, Company Name, Email, Telco carrier name, etc) with mobile number", "apis": [["search-mobile", "Retrieve personal details with mobile number"]]}, "ISS Location": {"tool_desc": "Sends geographical location of NASA", "apis": [["get", "gets you the data"]]}}, "Jobs": {"Indeed Jobs API - Sweden": {"tool_desc": "Indeed Jobs API - Sweden\nGet the Jobs List as JSON by giving Keyword, Location (Sweden Only) and offset value.", "apis": [["SearchJobs", "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Stockholm (For now this API gets data for Sweden Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'"]]}, "Indeed Jobs API - Finland": {"tool_desc": "Indeed Jobs Search API - Finland\nGet the Jobs List as JSON by giving Keyword, Location (Finland Only) and offset value.", "apis": [["SearchJobs", "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Helsinki (For now this API gets data for Finland Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'"]]}, "Remote Jobs API": {"tool_desc": "Get a list of remote jobs from different resources: weworkremotely, remoteok, GitHub, StackOverflow, Twitch, Mailchimp, Figma...", "apis": [["Get the latest remote jobs", "Get a list of the latest 20 remote jobs"], ["Get a specific remote job by id", "Using the id of the job returned from /jobs route, get more details about a specific job"], ["Pagination for remote jobs", "Paginate over the remote jobs by using the pageId parameter"]]}, "Open To Work Remote API": {"tool_desc": "Open To Work Remote API:\n\nI build a powerful Job Search API for developers.", "apis": [["Search Jobs", "# Open To Work Remote - API\n\n## Search Jobs:\n\nThis endpoint allows you to search for jobs.\n\nYou can search for jobs by filtering by title, tags, salary, location, and company name. All the information comes paginated.\n\n*[Click 3 Dots Button To View More Details About All Params]*\n\n### Parameters and Filters:\n\n**page:** Select the page.\n**perPage:** Quantity of jobs shown per page.\n**title:** Allows search jobs by title/role.\n**tag:** Allows search jobs by tags/categories.\n**location:** Allows search jobs by location.\n**company:** Allows search jobs by the company name.\n**salaryMin:** Allows search jobs by salary.\n**source:** Allows search jobs by the Job Board source."], ["Get One Job", "# Open To Work Remote - API\n\n## Get One Job:\n\nThis endpoint allows you to get info on a job by id."]]}, "Indeed Jobs API": {"tool_desc": "Indeed Jobs Search API - USA\nGet the Jobs List as JSON by giving Keyword, Location (USA Only) and offset value.", "apis": [["SearchJobs", "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = california (For now this API gets data for USA Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'"]]}, "JobSearch": {"tool_desc": "An Easy To Use Job Search API with jobs from all around the world.", "apis": [["/api/v1/Jobs/Search", "Search for your dream job"], ["/api/v1/Jobs/{slug}", "Get details of a job by slug"]]}, "AI Resume Generator": {"tool_desc": "Document Generation API that uses OpenAI to create an example resume when provided the following data: University Name, Degree, and a list of Skills", "apis": [["Generate Document: Cover Letter", "Endpoint that will generate a large text response containing a Cover Letter document using the provided information"], ["Generate Document: Resume", "Endpoint that will generate a large text response containing a Resume document using the provided information"]]}}, "Monitoring": {"Youtube classification api": {"tool_desc": "Train your own machine learning project Stop wasting time scrolling through a list of videos.", "apis": [["Channel name + description", "GET Channel name + description"], ["Tags + video_id", "GET Tags + video_id"], ["Inside on description", "GET Inside on description"], ["More on inside", "GET More on inside"], ["Clean channel data", "GET Clean channel data"], ["Overview of channels", "GET Overview of channels"]]}, "ICS-CERT Advisories": {"tool_desc": "An API to retrieve advisories for Industrial Control Systems that provide timely information about current security issues, vulnerabilities, and exploits from CISA.gov.", "apis": [["Get Advisories By Vendor", "This endpoint will return back Advisories by Vendor and provide timely information about current security issues, vulnerabilities, and exploits from CISA.gov"], ["Get All Advisories", "This endpoint will return back all  advisories and provide timely information about current security issues, vulnerabilities, and exploits from CISA.gov"]]}, "Yandex SERP": {"tool_desc": "\ud83c\udf4f Gain an edge in SEO with our Yandex SERP API.", "apis": [["GetTaskResult [free of use]", "To get the result of the task just provide the **task_id** that you obtained after requesting **GetSerpAsync**. When task is not finished yet you will receive **task_status: inprogress**. For a finished task you will get **task_status: succeeded**. Check the **Example Responses** tab to see the examples. \nPossible task statuses:\n- **pending** - task is waiting for its turn\n- **inprogress** - task has been passed to the worker\n- **succeeded** - task has been finished with success\n\nUse this endpoint how much you want. **It's free of charge**!\n\nThe average **GetCompleteDataAsync**  execution time is 10-40 seconds.  It all depends how many tasks are in the queue."], ["GetMyTasks [free of use]", "Retrieves your all tasks. Use this endpoint when lost your **task_id** . Use this endpoint how much you want. **It's free of charge**!"], ["CancelTask [free of use]", "Cancels pending task. Removes task from your job queue. Use this endpoint how much you want. **It's free of charge**!"], ["Get SERP [async]", "Creates a task that will return complete SERP data for provided domain. Using this endpoint is very simple!\n1. Make a request\n2. Grab received **task_id**\n3. Provide the **task_id** to **GetTaskResult** endpoint to get complete domain data.\n\nThe average execution time is 5-40 seconds. It all depends how many tasks are in the queue."]]}, "Ambee Pollen Data": {"tool_desc": "World\u2019s first-ever pollen API.", "apis": [["/latest/by-lat-lng", "Get nearest places readings based around the given latitude and longitude"]]}, "OTP": {"tool_desc": "send Account Registration OTP", "apis": [["sms", "otp sms to users"]]}, "Screenshot Maker": {"tool_desc": "Take perfect screenshot from websites.", "apis": [["Take screenshot", "collect all parameteres, load the webpage and take screenshot at the end.\nThis API save on a S3 bucket and return the url."]]}, "Ambee Soil Data": {"tool_desc": "Global real-time soil API.", "apis": [["Soil History Data", "Ambee  Soil History Data"], ["Soil Data by lat lng", "get nearest places readings based around the given lattitude and logitude"]]}, "Scan Web Heades API": {"tool_desc": "This API takes domain name as parameter and returns headers status as response", "apis": [["Scan Headers", "This endpoint takes a 'GET' request with domain as a query string parameter and returns  status of Headers of Web Page"]]}, "Price Tracking Tools": {"tool_desc": "This API currently helps to query for prices of products from Amazon.", "apis": [["camelizer/get-prices", "Get latest prices, history highest/lowest prices of a product from Amazon"], ["camelizer/get-price-chart", "Get pricing history chart of a product from Amazon"]]}, "SSL Snitch": {"tool_desc": "The easy way to monitor SSL certificate expirations.", "apis": [["Check", "Takes a domain name and returns SSL information.  Optionally, the extend property can be set for additional information."]]}, "Certficate": {"tool_desc": "Get the SSL certificate details of any public host.", "apis": [["getCertDetails", "Get the certificate details of a domain."]]}, "Counter": {"tool_desc": "Count views on your website or any other specific action on your application.", "apis": [["Get Current Count", "get count and and don't increase"]]}, "Plerdy": {"tool_desc": "Plerdy ( https://www.plerdy.com/ ) is multifunctional SaaS solution for an improvement of conversion on websites.", "apis": [["Heatmap", "With Plerdy Heatmaps we see exactly where the clicks were on the website.  All clicks on the website are recorded and displayed in real time.  Which helps to understand how users behave on the website."]]}, "Similar Web": {"tool_desc": "This API helps you to query website traffic and key metrics for any website, including engagement rate, traffic ranking, keyword ranking and traffic source...", "apis": [["countries/list", "List countries with meta data"], ["get-analysis", "Get website traffic, key metrics, including engagement rate, traffic ranking, keyword ranking and traffic source."]]}, "Newly Registered Domains": {"tool_desc": "Newly Registered Domains API (v1) lets you check which domains have been added.", "apis": [["checkDisposableEmail", "REST API to lookup disposable email"], ["emailValidation", "Clean your email list database with our free email checker and verifier"], ["newlyRegisteredDomains", "REST API to lookup newly registered domains"], ["whois", "REST API to WhoIS lookup data"]]}, "Simple Email Notifications": {"tool_desc": "Notify on cronjob failure.", "apis": [["Send Email Notification", "Intended usage is as a one liner. For example like this:\nbackup.sh && curl https://simple-email-notifications.p.rapidapi.com/Backup finished \u2705 /?email=demo@example.com&rapidapi-key=<your-rapidapi-key>\n\nWe recommend to use your rapidapi key as a query parameter as to reduce the complexity of the curl call.\n\nSend a email notification to the specified recipient. Note that it's not possible to set a email body. It's only possible to set a subject, as this API is only supposed to be used as a notification tool for jobs or tasks that have finished or experienced errors. If you don't set a subject, \"\ud83d\udce9\" will be set automatically for you."]]}, "SearchingWebRequest": {"tool_desc": "We need to search text using Specific keyword", "apis": [["SearchWebRequest", "We need to get the response from the web after specifying a keyword"]]}, "MX - Email server UP or DOWN": {"tool_desc": "With this API you can check if email server exist or not on some domain.", "apis": [["Check EMAIL server", "Returns if email server is up or down."]]}, "openSquat": {"tool_desc": "The openSquat is an open-source project for phishing domain and domain squatting detection by searching daily newly registered domains impersonating legit domains.", "apis": [["Get Daily Domains", "Get the daily list of domains that have been registered in the past day that have a similar word to {keyword} - the keyword should not contain any domain, e.g: Google"]]}}, "Events": {"Holidays by API-Ninjas": {"tool_desc": "Get past, present and future holiday data for any country.", "apis": [["/v1/holidays", "API Ninjas Holidays endpoint"]]}, "\ud83d\udcc5 Crypto Events Calendar \ud83d\ude80": {"tool_desc": "Get crypto events like listing, airdrops, release, tokenomics, partnershiop, other.", "apis": [["Events", "Get crypto events like listing, airdrops, release, tokenomics, partnershiop, other.\nGrouped by days!"]]}, "Today in History": {"tool_desc": "Retrieves data about an important day in history.", "apis": [["Get Event", "Gets a detailed summary of an event."]]}, "contests": {"tool_desc": "Get the list of active contests.", "apis": [["/contests", "Get the latest active contests list"], ["/health", "Use health endpoint to check if server is up and running"]]}, "feriados-brasileiros": {"tool_desc": "API para obter feriados nacionais para uma cidade/estado espec\u00edfica durante um determinado ano.", "apis": [["Feriados dos Estados", "Retorna os feriados de certo estado. Os par\u00e2metros necess\u00e1rios s\u00e3o: 1. Estado - Sigla da Unidade Federativa em letra ma\u00eduscula. 2. Ano"], ["Feriados das Cidades", "Retorna os feriados de certa cidade brasileira. Os par\u00e2metros necess\u00e1rios s\u00e3o: 1. Cidade - Nome da cidade sem acentos ou s\u00edmbolos especiais, com exce\u00e7\u00e3o do h\u00edfen (\"-\") que deve ser mantido. 2. Estado - Unidade Federativa correspondente \u00e0 cidade. Usar a sigla e em letra ma\u00eduscula. 3. Ano"]]}, "Working days": {"tool_desc": "The API returns the number of days,  hours, working days, working hours, wages, weekend days, and the list of public holidays of the requested date period and country.", "apis": [["/1.3/get_info_day", "Get detailed information about a specific day."], ["/1.3/delete_custom_period", "Removing a previously defined custom period"], ["/1.3/analyse", "Analyse a period (you provide a start_date and an end_date over a given calendar, we respond with the period analysis)"], ["/1.3/add_working_hours", "Add an amount of working time to a given start date/time"], ["/1.3/list_non_working_days", "List the non working days (weekend days, public holidays and custom dates) between two dates in chronlogical order."], ["/1.3/define_custom_period", "Defining a custom period (typically days of vacations of an employee or days of annual closure of a company) can be done from the working days websites user interface but can also be done programmatically from the API. A typical use case would be to retrieve the vacations of the workers out of the human ressources software and insert them into a custom calendar, then being able to query available working days."], ["/1.3/add_working_days", "Add (or remove) any number of working days to a date."]]}, "Flag Status": {"tool_desc": "US and state flag half-staff events in JSON format.", "apis": [["Get half-staff events for given flag", "Get all half-staff events for the provided flag"], ["Get current status for given flag", "Get the current status for the provided flag"], ["Get all half-staff events for every flag", "Get every half-staff event for the last 365 days"]]}, "Sagenda v3": {"tool_desc": "We are now hosted on PostMan : https://documenter.getpostman.com/view/3283093/SW7aXT2M?version=latest", "apis": [["List", "A list of bookable items associated with supplied authentication token (account)"], ["Authentication status", "You can use this endpoint to check whether your authentication token is valid. Responds with HTTP 200, API version and list of available claims for a token (for reference)"], ["API status", "Receive an API status. Responds with HTTP 200 OK and API version in body if functional"], ["Get specific event information", "Returns a single event object containing all the booking information."], ["Events for item by date range", "Returns an array of events that start in the date range between startDate and endDate (inclusive) for given bookable item"], ["Get bookings information", "This endpoint lets you request detailed booking information for a given period of time, optionally filtered by bookable item and status."]]}, "Enoch Calendar": {"tool_desc": "Access the Biblical Holydays and Sabbaths using the Enoch Calendar", "apis": [["Get Calendar Components", "Get the calendar components to build the current Hebrew month calendar from the supplied Hebrew month number, if supplied, or the first Hebrew month and, a supplied year, or this year"], ["Count of Days for today", "Get the count of days for today"], ["Count of Days", "Current day count in this Hebrew year from the supplied date string or today's date"], ["Is Holyday", "Get the Holyday, corresponding Scritpures and if this Holyday is also a Sabbath from the supplied date string or today's date. Or false in for all returned properties"], ["Get Hebrew Month and Date", "Get Hebrew Month, Date and holydays from supplied date string or today's date"], ["Is Sabbath Day", "Is supplied date string or today a Sabbath day"], ["Get Hebrew Month", "Get Hebrew Month from supplied date string or today's date"], ["Get Hebrew Date", "Get Hebrew Date  for supplied date string or today's date; as well as current holyday if any"]]}, "Birthday Cake With Name Generator": {"tool_desc": "Write name on unique design best happy birthday cake images with name generator online And download free birthday cake with name to surprise your friends.", "apis": [["Send Name Birthday Cakes", "Write name on birthday cake for free"]]}, "Public Holiday": {"tool_desc": "An API for Public Holidays & Bank Holidays", "apis": [["Public Holidays", "Returns the public holidays from a given year and country."]]}, "Historical Events by API-Ninjas": {"tool_desc": "Search through the most famous events in history.", "apis": [["/v1/historicalevents", "API Ninjas Historical Events API endpoint. Returns a list of up to 10 events that match the search parameters. At least one of the following parameters is required: text, year, month, day."]]}, "Art openings Italy": {"tool_desc": "Introducing the ultimate art event API for Italy - your one-stop destination for discovering and experiencing the best art events happening across the country.", "apis": [["Live events", "To call this service, you would make a GET request to the endpoint /api/ongoing-events with the optional query parameter city. When the service is called, it retrieves a list of events from the database, filtered by the city parameter if it is provided."], ["Events Detail", "This service returns all data related to a specific id. The id field in the example you provided is a unique identifier for the event. It is a string of characters that follows the format of a universally unique identifier (UUID), which is a standardized way of generating a 128-bit identifier that is guaranteed to be unique across all devices and all time."], ["Health check", "The service it allows you to monitor if the application is up time. It returns an healthcheck object that has three properties uptime , message and timestamp."], ["Get all genres", "This service returns a list of all genres of the events."], ["Get all locations", "This service returns a list of all locations where art events take place."], ["Get all cities", "This service returns a list of all cities where art events take place."]]}, "WonderboyAPI": {"tool_desc": "With this information the goal is to make information about racing more widely available", "apis": [["All Belgian Races", "At this endpoint nothing happens for now"], ["Date and Time of last update", "With this endpoint you can retrieve the Date and Time of the last update"]]}, "Calendars": {"tool_desc": "Get list of events from a number of venues", "apis": [["Fetch Events", "Fetches a list of events in either JSON or iCalendar format for the selected calendar"]]}}, "Data": {"Keyword Analysis": {"tool_desc": "Get main keywords for query, similar queries and related domains for query.", "apis": [["PopularSitesForQuery", "Get the **popular sites** for a given search query."], ["QueryKeywords", "Get the **main keywords** for a given search query."], ["SimilarQueries", "Get **similar queries** for a given search query."]]}, "4D Dream Dictionary": {"tool_desc": "Interpretation of your dream to 4/3 digits lucky draw number.\uff08\u4e07\u5b57\u68a6\u5883\u8f9e\u5178\uff09", "apis": [["Get Dream Number", "Return relevant 4/3 digits lucky draw number based on your dream keyword in english or chinese."]]}, "Domain Analysis": {"tool_desc": "Analyze and evaluate domain names for their value and ROI with enriched Whois API data for domainrs and SEO professionals - More at: bishopi.io", "apis": [["Domain Analysis", "For a given domain, get analysis ranging from domain length all the way to past sales and number of mentions."]]}, "Africa-Api ": {"tool_desc": "Africa-Api is a comprehensive project that provides a vast range of data about Africa, including countries, languages, tourism destinations, colonial history, and much more.", "apis": [["tourism[Per Country]", "Returns best tourism locations and categories you can explore in a country in Africa\nTakes parameter <country_name>"], ["independence[All Countries]", "If you provide the name of a country as a parameter, the api will return information about its independence date and the country or countries that colonized it.\nTakes Parameter: <county_name> with value: <all>\nResponse example: \n{\n\"country\":\"Kenya\"\n\"colonizer\":\"United Kingdom\"\n\"independence_date\":\"December 12, 1963\"\n}"], ["languages [Per Country]", "Returns a json of all languages spoken in a specific country in Africa\nTakes parameter <country_name> \nResponse example:\n{2 items\n\"other_languages\":[12 items\n0:\n\"English\"\n1:\n\"Kikuyu\"\n2:\n\"Luhya\"\n3:\n\"Luo\"\n4:\n\"Kalenjin\"\n5:\n\"Kamba\"\n6:\n\"Meru\"\n7:\n\"Embu\"\n8:\n\"Maasai\"\n9:\n\"Turkana\"\n10:\n\"Samburu\"\n11:\n\"Somali\"\n]\n\"national_language\":\"Swahili\"\n}"], ["sizes[All Countries]", "Gets the sizes of all countries in Africa\nTakes parameter: <country_name> with value <all>\nResponse example:\n[54 items\n0:{3 items\n\"size\":2381741\n\"unit\":\"km2\"\n\"country\":\"Algeria\"\n}\n]"], ["resources[Per Country]", "Gives you a list of the most important resources that an African country relies on to keep their economy running.\nTakes parameter <country_name>"], ["countries[AllContries]", "Returns a json of all countries in Africa. Details include: \"name\":\"Algeria\"\n\"latitude\", \"longitude\", \"phone_code\", \"abbreviation\", \"capital_city\""], ["tourism[AllCountries]", "Returns best tourism locations and categories you can explore in each country in Africa"], ["languages[AllCountries]", "Returns a json of all languages spoken in each country in Africa\nTakes parameter <country_name> with value <all>\nResponse example:\n{54 items\n\"Chad\":{2 items\n\"other_languages\":[11 items\n0:\n\"Sara\"\n1:\n\"Maba\"\n2:\n\"Kanembu\"\n3:\n\"Kotoko\"\n4:\n\"Bagirmi\"\n5:\n\"Boulala\"\n6:\n\"Gorane\"\n7:\n\"Marba\"\n8:\n\"Masalit\"\n9:\n\"Tama\"\n10:\n\"Teda\"\n]\n\"national_language\":[2 items\n0:\n\"French\"\n1:\n\"Arabic\"\n]\n}\n]"], ["sizes[PerCountry]", "Gets the size of a specific country.\nTakes parameter: <country_name>\nResponse example:\n{\n\"size\":580367\n\"unit\":\"km2\"\n\"country\":\"Kenya\"\n}"], ["province/state/county[PerCountry]", "Returns json for province/state/county in a specific country in Africa"], ["independence[Per Country]", "If you provide the name of a country as a parameter, the api will return information about its independence date and the country or countries that colonized it.\nTakes Parameter: <county_name>"], ["resources[AllContries]", "Gives you a list of the most important resources that each African country relies on to keep their economy running."], ["country [Specific Country]", "Returns a json of specific country in Africa eg Kenya. Details include: \"name\":\"Algeria\"\n\"latitude\", \"longitude\", \"phone_code\", \"abbreviation\", \"capital_city\""]]}, "Thai Lotto New API": {"tool_desc": "Myanmar 2D/3D, Thai Lottery, Myanmar Currency Exchanger  All the entries data is taken from: https://www.set.or.th/th/home", "apis": [["\u1011\u103d\u1000\u103a\u1002\u100f\u1014\u103a\u1038\u1015\u103c\u101e\u1001\u103c\u1004\u103a\u1038 (Modern & Internet)", "\u101a\u1001\u102f Endpoint \u1019\u103e\u102c\u1010\u1031\u102c\u1037 \u1014\u1036\u1014\u1000\u103a \u1049\u1001\u103d\u1032 \u1014\u103e\u1004\u103a\u1037 \u1014\u1031\u1037\u101c\u100a\u103a \u1042\u1014\u102c\u101b\u102e \u1019\u1031\u102c\u103a\u1012\u1014\u103a\u104a \u1021\u1004\u103a\u1010\u102c\u1014\u1000\u103a \u1011\u103d\u1000\u103a\u1002\u100f\u1014\u103a\u1038 \u1014\u103e\u1004\u103a\u1037 12:01 \u1019\u102d\u1014\u1005\u103a\u104a \u100a\u1014\u1031 4:30 \u1011\u103d\u1000\u103a\u1019\u101a\u103a\u1037 \u1002\u100f\u1014\u103a\u1038\u1019\u103b\u102c\u1038\u1000\u102d\u102f \u1010\u102d\u102f\u1000\u103a\u101b\u102d\u102f\u1000\u103a\u1015\u103c\u101e\u1016\u102d\u102f\u1037\u1021\u1010\u103d\u1000\u103a\u1015\u1032\u1016\u103c\u1005\u103a\u1015\u102b\u1010\u101a\u103a\u104b"], ["Beta Calendar (\u1005\u1019\u103a\u1038\u101e\u1015\u103a\u1006\u1032)", "2019 \u1019\u103e \u101a\u1014\u1031\u1037\u101c\u1000\u103a\u101b\u103e\u102d\u1021\u1001\u103b\u102d\u1014\u103a\u1021\u1011\u102d \u1011\u103d\u1000\u103a\u101b\u103e\u102d\u1001\u1032\u1037\u101e\u1031\u102c 2D History \u1019\u103b\u102c\u1038\u1000\u102d\u102f \u1005\u102f\u1005\u100a\u103a\u1038\u1015\u1031\u1038\u1011\u102c\u1038\u1001\u103c\u1004\u103a\u1038\u1016\u103c\u1005\u103a\u1015\u102b\u101e\u100a\u103a\u104b"], ["2D \u1015\u102d\u1010\u103a\u101b\u1000\u103a\u1019\u103b\u102c\u1038", "\u1010\u1005\u103a\u1014\u103e\u1005\u103a\u1010\u102c\u1021\u1010\u103d\u1000\u103a \u1011\u102d\u102f\u1004\u103a\u1038\u1021\u1005\u102d\u102f\u1038\u101b \u1011\u102e\u1015\u102d\u1010\u103a\u1019\u100a\u103a\u1037\u101b\u1000\u103a\u1019\u103b\u102c\u1038\u1000\u102d\u102f \u1000\u103c\u102d\u102f\u1010\u1004\u103a\u101e\u102d\u101b\u103e\u102d\u1014\u102d\u102f\u1004\u103a\u1019\u101a\u103a\u1037 Endpoint \u1015\u1032\u1016\u103c\u1005\u103a\u1015\u102b\u1010\u101a\u103a\u104b"], ["\u1011\u103d\u1000\u103a\u1001\u1032\u1037\u1015\u103c\u102e\u1038\u101e\u1031\u102c 3\u101c\u102f\u1036\u1038\u1011\u102e", "\u101a\u1001\u102f \u1014\u1031\u101b\u102c\u1000\u1014\u1031\u1010\u1005\u103a\u1006\u1004\u103a\u1037 \u101a\u1001\u1004\u103a\u1011\u103d\u1000\u103a\u101b\u103e\u102d\u1001\u1032\u1037\u1010\u1032\u1037 3D \u1002\u100f\u1014\u103a\u1038\u1019\u103b\u102c\u1038\u1000\u102d\u102f \u1000\u103c\u100a\u103a\u1037\u101b\u103e\u102f\u1014\u102d\u102f\u1004\u103a\u1019\u103e\u102c\u1015\u1032\u1016\u103c\u1005\u103a\u1015\u102b\u1010\u101a\u103a\u104b"]]}, "Food Price Inflation": {"tool_desc": "This API provides the percent change of the Inflations Rate for the Food Prices in the last 2 Years independent of the Price Index (CPI) for food is a component of the all-items CPI.", "apis": [["Get all Food typen", "Get all the food typen from our Data."]]}, "Consumer Reports": {"tool_desc": "This API helps to query trusted ratings and reviews for the products, cars and services used every day to create a review site such as : consumerreports.org", "apis": [["brands/detail", "Get detailed information of a brand"], ["products/get-offers", "Get offers from places or sites to buy product"], ["products/detail", "Get detailed information of a product"], ["products/list", "List products from different categories"], ["product-groups/detail", "Get detailed information of product group"], ["product-groups/list", "List product groups from categories and types"], ["cars/get-images", "Get images of car model by year"], ["cars/get-recalls", "Get recalls relating to a car model year"], ["cars/detail", "Get detailed information of car model by year"], ["search", "Search for brand, car, product, etc... by term or phrase"]]}, "YT-API": {"tool_desc": "An all-in-one Youtube API solution.", "apis": [["Channel Playlists", "Get playlist listing and channel details.\nQuota cost is 1 unit."], ["Shorts Details", "Get Youtube Shorts video info or get **Suggested** Shorts video info.\nQuota cost is 1 unit for Shorts Video Info\nQuota cost is 2 units for suggested Shorts Video Info."], ["Video Details", "Get all the details of the YouTube video.\nQuota cost is 1 unit."], ["Resolve URL", "Resolve URLs like handles, etc.\nQuota cost is 1 unit."], ["Search", "Search videos, playlists, channels, or all of them.\nQuota cost is 1 unit."], ["Trending", "Get trending videos region-wise & niche-wise.\nQuota cost is 1 unit."], ["Playlist", "Get playlist details and video listing.\nQuota cost is 1 unit."], ["Download/Stream", "Stream or download info.\nQuota cost is 5 units."], ["Home Feed", "Get home feeds, region-wise & niche-wise.\nQuota cost is 1 unit."], ["Search Channel's Videos/Playlists", "Search channel's videos and playlists, also get channel details.\nQuota cost is 1 unit."], ["Channel Featured Channels", "Get featured channel listing and channel details.\nQuota cost is 1 unit."], ["Channel Home", "Get Channel's Home Tab Listings.\nQuota cost is 1 unit."], ["About Channel", "Get channel details.\nQuota cost is 1 unit."], ["Convert/Translate/Download Subtitle", "Convert, translate, download the subtitle. \nTo get the subtitle url, use `Video -> Subtitles` endpoint or `Video -> Details` endpoint\nQuota cost is 1 unit."], ["Post Comments", "Get post's comments or thread.\nQuota cost is 1 unit."], ["Post Details", "Get post details.\nQuota cost is 1 unit."], ["Channel Community Posts", "Get community post listing and channel details.\nQuota cost is 1 unit."], ["Subtitles", "Get the list of available subtitles for the video.\nQuota cost is 1 unit."], ["Channel Livestreams", "Get live stream listing and channel details.\nQuota cost is 1 unit."], ["Hashtag", "Get videos or Shorts listings related to any hashtag.\nQuota cost is 1 unit."], ["Shorts Sound Attribution", "Get the Shorts original sound attribution listing.\nQuota cost is 1 unit."], ["Channel Shorts", "Get shorts listing along with channel details\nQuota cost is 1 unit."], ["Shorts Sequence", "Get Shorts sequence.\nQuota cost is 2 units."], ["Channel Videos", "Get channel video listing and channel details.\nQuota cost is 1 unit."], ["Related Videos or Playlists", "Get related videos or playlists.\nQuota cost is 1 unit."], ["Comments", "Get video's or shorts' comments/thread.\nQuota cost is 1 unit."]]}, "Webit QR Code": {"tool_desc": "Generate beautiful QR Codes with custom logo, colors, gradient effects and styles with ease.", "apis": [["Generate QR Code", "Generate a beautiful QR Codes with custom logo, colors, gradient effects and styles with ease."]]}, "Youtube v3 - alternative": {"tool_desc": "Get data similar to YouTube Data API v3 from this API.", "apis": [["Video details", "Get details of the YouTube video."], ["Comments", "Get Comments of the particular video"], ["Playlist", "Get playlist details and videos."], ["Search", "Search videos, playlist, channel."], ["Channel", "Get Channel details and videos"], ["Trending", "Get trending videos of the particular geo"], ["Related Videos", "Get the videos related to the provided video."]]}, "Facebook User Info": {"tool_desc": "Facebook VietNam User Info, Convert  UID To Phone and Phone To UID", "apis": [["find_comment_find_get", "Find Comment by UID or by_object_id(PageID, GroupID)"], ["find_feed_find_get", "Find Feed by UID or by_object_id(PageID, GroupID)"]]}, "Covid Italy statistics": {"tool_desc": "The italian covid statistics", "apis": [["General Info", "General information of service"]]}, "Seeding Data": {"tool_desc": "Completely APIs that helps web developers and web designers generate fake data in a fast and easy way.", "apis": [["CreditCards", "Get 100 credit cards with en_US locale"], ["Custom", "Get 100 rows with first name, last name, country, birthday, email and vat"], ["Persons", "Get 100 persons with en_US locale and gender female"], ["Users", "Get 100 users with en_US locale and gender male"], ["Addresses", "Get 100 addresses with en_US locale"], ["Texts", "Get 100 texts with it_IT locale and 250 characters length"], ["Products", "Get 100 products with en_US locale and taxes of 10% and categories type set as string"], ["Companies", "Get 100 companies with en_US locale"], ["Images", "Get 100 kitten images with height of 300 pixels and locale en_US"], ["Books", "Get 100 books with en_US locale"]]}, "Contact Scraper": {"tool_desc": "This API is really helpful if you want to extract emails or phone numbers from any website without any challenges or coding issues.", "apis": [["Scrape Contact Details from a website", "this endpoint will scrape emails and phones from any website using it`s URL"]]}, "Generate LinkedIn Leads": {"tool_desc": "The top-rated Lead Generation API on RapidAPI that gives valid business emails among all profiles downloaded.", "apis": [["Get Available Job Titles", "Get Available Job Titles which could be used in /leads/leads/ endpoint"], ["Get Available Locations", "Get Available Locations which could be used in /leads/leads/ endpoint"], ["Get Available Companies", "Get Available Companies which could be used in /leads/leads/ endpoint"]]}, "Rich NFT API + Metadata": {"tool_desc": "Rich NFT API.", "apis": [["Activities/Transfers", "**Get collection activity**\n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op\n\n**order_by** \n-time_at\ntime_at\nusd_value\n-usd_value"], ["Top holders", "Get top holders \n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op"], ["Top traits", "Get NFT tokens in specific collection.\n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op\n\n**Filter by traits example**:\ntraits=[{\"name\":\"type\",\"value\":\"Female\"}]\n\n**order_by** \nrarity_rank_at \nOR\n-rarity_rank_at"], ["Traits for collection", "Get all NFT traits attributes of a specific collection\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op"], ["NFT tokens in collection", "Get NFT tokens in specific collection.\n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op\n\n**Filter by traits example**:\ntraits=[{\"name\":\"type\",\"value\":\"Female\"}]\n\n**order_by: options** \nvalue\n-value\nrarity_rank_at\n-rarity_rank_at\npay_usd_value\n-pay_usd_value"], ["Collection info", "Get info about collection.\nSupported chain_id: eth, bsc, matic, avax, arb, op"], ["Collections", "Get NFT collections.\n\nPagination example: start=0&limit=100\nSearch for collections: q=CRYPTOPUNKS\nSupported chain ids: eth, bsc, matic, avax, arb, op"]]}, "Covid-19 Live data": {"tool_desc": "Global COVID-19 Tracker", "apis": [["Global statistics", "The Global live data statistics"]]}, "Complete Study Bible": {"tool_desc": "The most COMPLETE Bible study API available!", "apis": [["Search Strongs Number API", "Returns every verse containing the supplied strong's number.\nInclude lxx boolean option will search the Septuagint translation of the Old Testament when searching for a Greek word. This allows connections to be made between New Testament words and Old Testament concepts."], ["Strongs Number Detail API", "Receives a Strongs Number or comma-separated list of Strong's Numbers (limit 3 at a time) and returns detailed information for each number, including Greek and Hebrew, phonetic pronunciation guide, root, Strong's Condordance, Mounce's Dictionary, Thayer's Greek Lexicon, and Brown-Driver-Brigg's (BDB) Lexicon (Hebrew only).\n\nThayer's and BDB are stored as html and should be displayed as raw html in the browser. Add CSS styling as desired.\nAll scripture references in the html are stored as <a> tags with the following href format: \"/Bible/{book}/{chapter}/{verse}\". If you want the links to work properly, you can program your front-end to recognize these links and do an API call to the Chapter and Verse api  and display the response in a pop-up window."], ["Full Chapter API", "Returns a specified chapter of a book in the Bible.\nBook parameter will accept a full book name, or 3 letter book abbreviation (example: '1Co' = 1 Corinthians). For a full list of books, abbreviations, and chapter counts, send a request to the \"Books\" api.\n\nTranslation options inlcude: \"KJV\", \"KJV-Strongs\", \"ORIG\", and \"LXX\".\nORIG will return Hebrew with Strong's Numbers if book is in the Old Testament, Greek with Strong's Numbers if New Testament.\nLXX is Old Testament only, and returns the Apostolic Polyglot Bible - which is an English translation of the Greek Septuagint with underlying Strong's numbers.\nTranslations with Strong's numbers will return each verse as a JSON array of objects like so:\n [{\"phrase\": \"In the beginning\", \"data_nums\": [\"G746\"]}\nSome phrases are translated from multiple Strong's numbers in tandem, so the data_nums property is an array. You can display the Strong's numbers however you'd like, or hide them from view. You can get data on each Strong's number upon click by calling the \"Strong's Detail API\".\n\n\"Places\" represents an array of objects for each verse containing any known locations mentioned in the verse. Places provide lat / long information and can be displayed on a map using any mapping packages such as LeafletJS, MapboxGL, Google, etc. Detailed info on each place can be obtained by calling the ID number in the \"Place Detail API\". NOTE: some places have numbers in them... i.e. \"Bethany 2\". When this occurs, it is used for distinction and indicates that there is more than one place of the same name referenced in the Bible"], ["Place Detail API", "Used in conjunction with Chapter and Verse API. Whenever a city/region/location is mentioned in a verse, the Chapter and Verse API provides a unique ID for the location that is mentioned. This unique ID is more reliable than searching for a place \"name\", because place names and spellings can change, especially from OT to NT. By using the Place ID's provided with the Chapter and Verse API, you can call the Place API to fetch more detail on each place, which returns a name, location, and data from the Encyclopedia of the Bible (when available).\n\nLat / Longs are included with each place as well, so if you want to use a mapping API (leafletJS, MapBox, etc), you can display real-world locations for every place.\n\nEncyclopedia of the Bible data is provided in html form, display as raw html and apply CSS as desired"], ["Verse Range API", "Use when you only want to fetch a passage subset, not the entire chapter."], ["Passage of the Day API", "Responds with a passage of the day, KJV translation. Can be a single verse or multiple verses. Passages are pre-selected by the API owner and updated every 24 hours."], ["Search Place ID API", "Used in conjuction with Chapter and Verse API, Place Detail API. Receives a Place Unique ID, returns a list of all verses in the Bible that mention the place. Helpful for studying the Biblical history of a particular place."], ["Search Exact Phrase API", "Searches the KJV for the exact phrase supplied"], ["Search All Words API", "Returns KJV verses containing all of the supplied words, in any order. Words are separated by '%20' i.e., spaces. Words are not case-sensitive."], ["Book List and Chapter Counts API", "Lists all books of the Bible, abbreviations, and chapter counts. Can be used as a reference for a chapter selection screen"]]}, "Adzuna": {"tool_desc": "Get the very latest ads and data with Adzuna's API.", "apis": [["Average salary", "Provides historical average salaries"], ["List employers", "List the employers with most jobs advertised."], ["Salary data", "Provides salary data for locations"], ["Salary estimate", "Returns an estimate of the salary of a job."], ["API version", "Returns the current version of this API"], ["Histogram data", "Provide histogram data of salary data"], ["Search jobs", "Search the Adzuna jobs"]]}, "Live Whois Lookup": {"tool_desc": "Get Complete Live Whois detail in xml and json formats", "apis": [["Live Whois Lookup", "Get Complete Whois Detail With Domain Name"]]}, "BIN/IIN Lookup": {"tool_desc": "", "apis": [["BIN/IIN Lookup", "This API for Lookup, check, or search Issuer card information using card BIN.\nInput first 6 digits number of the Credit/Debit Card"]]}, "Blackbox": {"tool_desc": "Blackbox is a Proxy, Tor, Hosting, Cloud, Bogon detection service for IP addresses.", "apis": [["Legacy | V1", "This is a legacy and free IP checked. We provide a simply non-json style response to requests. Responses are cached for 7 days. \n\nCheck out our Documentation for more information.\n\nResponses will be (Y,E,N):\n\n(Y) : Yes, we have determined the IP address to be used by either or multiple of the following: Cloud, Hosting, Tor, Proxy. \n\n(E) : Error, something has gone wrong with the request.\n\n(N) : No, we have determined the IP address to be NOT used by any of the following: Cloud, Hosting, Tor, Proxy."], ["Multiple Array | V2", "Using the GET method you can request an IP specific detections, and other IP information.\n\nCheck out our documentation for more info on our different detections."], ["Singular Object | V2", "Note: This will work only with singular IP lookups.\n\nIf you are unkeen to lookup multiple IP addresses at the same time, and want a simpler request. This might be for you. \n\nWe will return a singular IP object, that will minimize your request complexity, but with the loss of flexibility."]]}, "Avito Scraper": {"tool_desc": "API that extract data of any search on avito.ma", "apis": [["FastSearchFull", "this is a beta test of fast API of Full info Search"], ["SingleOffer", "API  that get info for a single offer"]]}, "Holy Bible": {"tool_desc": "The Best Bible API out there.", "apis": [["GetBooks", "Get List Of All Books."]]}, "Open Brewery DB": {"tool_desc": "Looking for a Beer API?", "apis": [["Get a brewery", "Get Brewery by ID"], ["Search", "Search for a brewery"]]}, "G Search": {"tool_desc": "Web search API using best search engine", "apis": [["/location", "The Location API lets you search for supported Google search locations. You can pass the `location_name` returned by the Location API as the `location_name` parameter and set the `location_parameters_auto` value to true in a Search API query to retrieve search results localized to that location."], ["/search", "Get Real-time Search Result Page"]]}, "Barcodes": {"tool_desc": "Search over 500+ million products with UPC, EAN, JAN, ISBN barcodes.", "apis": [["Search & Product Details", "It returns product results if you enter a search term, and returns product details if you enter a barcode number."]]}, "Addressr": {"tool_desc": "Australian Address Validation, Search and Autocomplete", "apis": [["/addresses/{addressId}", "returns detailed information about a specific address"], ["/addresses", "returns a list of addresses matching the search string"]]}, "Real-Time Lens Data": {"tool_desc": "Fast and Simple image searches - get visual matches, knowledge graph, text and OCR, object detections and additional data available on Google Lens.", "apis": [["Image Search", "Search image by url and get visual matches, knowledge graph, products and prices, text and object detections. See it in on [Google Lens](https://lens.google.com/uploadbyurl?url=https%3A%2F%2Fi.imgur.com%2FHBrB8p0.png)."], ["Object Detection", "Detect landmarks, places, plants, animals, products, and other objects in an image, including bounding boxes, labels / types and confidence score."], ["Image to Text (OCR)", "Extract text from an image and get paragraph, sentence and word level text detections from Google Lens."]]}, "Subtitles for YouTube_v2": {"tool_desc": "Api for fetching YouTube subtitles", "apis": [["Download mp3", "Download mp3 from youtube video."], ["List all available subtitles", "List all available subtitles for a YouTube video"], ["List languages", "List all supported languages"], ["Get Subtitle in JSON format", "Get subtitle as a JSON object"]]}, "Human Resources API": {"tool_desc": "API for supplying demo human resources data of employees and their bank cards.", "apis": [["Get all employees' payment cards.", "This endpoint gets all the available records in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc..."], ["Get a specific employee by employee ID.", "This endpoint gets one record by a specific employee ID that is unique for each employee in the employees table, up to 900 employees with their information.\nFor example:  employee ID , first name, email, and  etc..."], ["Get a specific payment card by card number.", "This endpoint gets one record by a specific card number that is unique for each card in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc..."], ["Paginate through campany employees information.", "This endpoint lets you paginate through all the available records in the employees' table in case you only need a limited number of records for your application, the response includes some metadata information to help you with pagination in the frontend, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc..."], ["Paginate through  employees payment cards infomation.", "This endpoint lets you paginate through all the available records in the bank cards' table in case you only need a limited number of records for your application, the response includes some metadata information to help you with pagination in the frontend, up to 900 bank cards with their information.\nFor example:  card number, holder name,  card type, and etc..."], ["Get employee information associated with a specific payment card.", "This endpoint gets employee record associated with a specific card number that is unique for each card, and displays  the employee information in the response.\nFor example:  employee ID , first name, and  etc..."], ["Get payment cards information associated with a specific employee.", "This endpoint gets all bank payment cards records associated with a specific employee ID that is unique for each employee and displays all cards information in the response.\nFor example:  card number, expiry date, and etc..."], ["Get all campany employees information.", "This endpoint gets all the available records in the employees table, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc..."]]}, "VALUE SERP": {"tool_desc": "", "apis": [["Google Search", "The Google Search Parameters are applicable when making a request to the Search API to retrieve Google search results for a given search term. The search term is specified in the q parameter. The location your search is run from is determined by the location parameter, which can be populated with a full_name value from the Locations API."], ["Locations", "The VALUE SERP Locations API allows you to search for VALUE SERP supported Google search locations. You can supply the `full_name` returned by the Locations API as the `location` parameter in a Search API query to retrieve search results localized to that location."], ["Google Product Online Sellers", "The Google Product Online Sellers Parameters are applicable when making a request with `search_type=product` and `product_type=sellers_online` to retrieve product online sellers results for a given product ID. The product ID is specified in the `product_id` parameter and you should also specify a location parameter to geo-locate the request (locations can be retrieved via the Locations API).\n\nGoogle Product IDs are returned by Google Shopping search requests.\n\n**Products & Location**\nGoogle Product pages are highly location-sensitive so it is important that you specify a location that matches the location that was used to retrieve the `product_id` in the original Google Shopping search request."], ["Google Product", "The Google Product Parameters are applicable when making a request with `search_type=product` to retrieve product results for a given product ID. The product ID is specified in the `product_id `parameter and you should also specify a `location` parameter to geo-locate the request (locations can be retrieved via the [Locations API](https://www.valueserp.com/docs/locations-api/overview)).\n\nGoogle Product IDs are returned by Google Shopping search requests."], ["Google Place Details", "The Google Place Details Parameters are applicable when making a request with search_type=place_details to retrieve place details for a Place. The Place is specified in the data_id parameter, data_id values are returned from search_type=places Places requests.\n\nIf the data_id is not available you may also request a place_details request using a data_cid (a standardised Google Place identifier you may already have access to). However, data_id is the recommended identifier to use."], ["Google Product Specifications", "The Google Product Specifications Parameters are applicable when making a request with `search_type=product` and `product_type=specifications` to retrieve product specifications results for a given product ID. The product ID is specified in the `product_id` parameter and you should also specify a location parameter to geo-locate the request (locations can be retrieved via the Locations API).\n\nGoogle Product IDs are returned by Google Shopping search requests.\n\n**Products & Location**\nGoogle Product pages are highly location-sensitive so it is important that you specify a `location` that matches the location that was used to retrieve the `product_id` in the original Google Shopping search request."], ["Google Product Reviews", "The Google Product Reviews Parameters are applicable when making a request with `search_type=product` and `product_type=reviews` to retrieve product reviews results for a given product ID. The product ID is specified in the `product_id` parameter and you should also specify a location parameter to geo-locate the request (locations can be retrieved via the Locations API).\n\nGoogle Product IDs are returned by Google Shopping search requests.\n\n**Products & Location**\nGoogle Product pages are highly location-sensitive so it is important that you specify a location that matches the location that was used to retrieve the `product_id` in the original Google Shopping search request.\n\n**Place Reviews Pagination**\nProduct Reviews results do not contain a traditional pagination section where a specific page of results is uniquely addressable. Instead, each `product_type=reviews` result will return a `next_page_token` in its' product_results.pagination object. This `next_page_token `can be passed in to the `next_page_token` request parameter to retrieve the next page of Product Reviews results."], ["Google Shopping", "The Google Shopping Parameters are applicable when making a request with `search_type=shopping` to retrieve Shopping results for a given search term. The search term is specified in the `q` parameter and the optional location parameter can be used to geo-locate the shopping request (`locations` can be retrieved via the [Locations API](https://www.valueserp.com/docs/locations-api/overview))."], ["Google Places", "VALUE SERP parses Google Local & Maps results (i.e. local business listings) when the search_type parameter is set to search_type=places. When this parameter is set VALUE SERP provides a places_results array in the result JSON that contains the [Places or Maps results](https://www.valueserp.com/docs/search-api/results/google/places).\n\n**Google Local vs. Google Maps**\n`search_type=places` requests can be executed in two modes to retrieve data from a [Google Local results page](https://www.google.com/search?q=pizza&gl=us&hl=en&uule=w+CAIQICIgTWFuaGF0dGFuLE5ldyBZb3JrLFVuaXRlZCBTdGF0ZXM&tbm=lcl) or from a [Google Maps results page](https://www.google.com/maps/search/pizza/@43.437677,-3.8392765,15z).\n\nYou set the Location of the `search_type=places` request using the `location` request parameter and this can be expressed as either a text location name from the [Locations API](https://www.valueserp.com/docs/locations-api/overview) (which will result in a [Google Local result](https://www.google.com/search?q=pizza&gl=us&hl=en&uule=w+CAIQICIgTWFuaGF0dGFuLE5ldyBZb3JrLFVuaXRlZCBTdGF0ZXM&tbm=lcl)), or as a latitude, longitude and zoom level (which will result in a [Google Maps result](https://www.google.com/maps/search/pizza/@43.437677,-3.8392765,15z))."], ["Google Video", "The Google Video Parameters are applicable when making a request with search_type=videos to retrieve video results for a given search term. The search term is specified in the q parameter and the optional location parameter can be used to geo-locate the videos request (locations can be retrieved via the Locations API)."], ["Google Image", "The Google Image Parameters are applicable when making a request with search_type=images to retrieve image results for a given search term. The search term is specified in the q parameter and the optional location parameter can be used to geo-locate the image request (locations can be retrieved via the Locations API)."], ["Google News", "The Google News Parameters are applicable when making a request with search_type=news to retrieve news results for a given search term. The search term is specified in the q parameter and the optional location parameter can be used to geo-locate the news request (locations can be retrieved via the Locations API).\n\nYou can use the time_period request parameter to refine your news search to specific time periods."]]}, "Linkedin Profile Data": {"tool_desc": "Returns a JSON Profile data from a Linkedin ID", "apis": [["Profile Data", "Returns a JSON for the LinkedIn profile"]]}, "MagicEden": {"tool_desc": "Simple & high performance Magic Eden API, backed by rotating proxies & API keys\n\nCheck out my Opensea / Blur / Looksrare / x2y2 API as well\nhttps://rapidapi.com/openseatools/api/opensea15\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.", "apis": [["URL", "Enter the full Magic Eden URL to bypass in the header request"]]}, "climate-change-live-api": {"tool_desc": "This API shows climate change news all over the world", "apis": [["Get individual publication's news about climate change", "Get individual publication's news about climate change all over the world."], ["Get All Climate Change News", "Get climate change news all over the world"]]}, "Linkedin Live Data": {"tool_desc": "", "apis": [["Supported Locations", "Get a list of the supported LinkedIn locations. You can use these locations to get personalized search results when using an API endpoint that supports location parameter."]]}, "Semantic Quotes": {"tool_desc": "Semantic search for quotes.", "apis": [["Random Quote", "Get random quotes by length and/or tags.  **NOTE:** up to 10 results can be returned, they may have similar meanings. If you want want absolute random, just pick the first result (or set `limit` to 1) and call this API again to get another quote."], ["Search Quotes", "Search quotes which have similar meaning/intent to the query sentences/words. We allow user to flexibly filter the results by the length of the quote, and by a large variety of tags. The results are returned in order of similarity."]]}, "Consulta CNPJ Gr\u00e1tis": {"tool_desc": "API Gratuita de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).", "apis": [["Consulta Unificada", "Retorna todos os dados presentes no Comprovante de Inscri\u00e7\u00e3o do Cadastro Nacional da Pessoa Jur\u00eddica junto a Receita Federal"], ["Consulta Estabelecimento", "Consulta Receita Federal, Simples Nacional e Cadastro de Contribuintes atrav\u00e9s do CNPJ"]]}, "Hull ID Boat HIN Decoder": {"tool_desc": "Decode the 12 digit HIN and check if it is valid.", "apis": [["HIN Decoder - Return Json", "returns json decoded data"], ["Year & Make Lookup (returns json)", "Lookup the boat manufacturers (makes) for a given year. This API can be used to create selection drop down menu for year and make. It will return json results"], ["MIC Lookup", "Enter a boat manuf. code (3 letter MIC) to find info about the company"], ["HIN Decoder - Return html", "setting usertable=1 will return an html table instead of json"]]}, "Genderize  - Nationalize": {"tool_desc": "Get name gender and nationality.", "apis": [["genderize", "Get gender of provided name"], ["nationalize", "Get nationality of provided name"]]}, "Websites on same IP": {"tool_desc": "Search all domains on a shared IP address", "apis": [["Search domains / websites on same IP (shared)", "Search domain and get other domains on same IP address, use IP address OR domain name"]]}, "SERP by Outscraper": {"tool_desc": "Get Search Engine Results Pages from the most common search engine with simple and reliable API provided by Outscraper.", "apis": [["Search", "Returns search results based on a given search query (or many queries). This endpoint is optimized for fast responses and can be used as a real-time API.\n\n[API Docs](https://app.outscraper.com/api-docs)"]]}, "Whois Lookup_v4": {"tool_desc": "WHOIS API (v1) returns well-parsed WHOIS records with fields in JSON formats for any domain name.", "apis": [["newlyRegisteredDomains", "REST API to lookup newly registered domains"], ["whois", "REST API to WhoIS lookup data"], ["emailValidation", "Clean your email list database with our free email checker and verifier"], ["checkDisposableEmail", "REST API to lookup disposable email"]]}, "WA Rego Check": {"tool_desc": "Western Australia vehicle license expiry date query, data from DoTDirect\nhttps://csnb.net/wa-rego-check-api/", "apis": [["Expiry Date Enquiry", "Vehicle license expiry date query and license registration"]]}, "Linkedin Profiles": {"tool_desc": "Scraping data from LinkedIn is hard.", "apis": [["/extract", "Extracts data from Linkedin URL (profile or company page)."], ["/search", "Search company or profile"]]}, "SimilarWeb (historical data)": {"tool_desc": "More than 36 month visits and countries share SimilarWeb data", "apis": [["/api/getCountries", "Returns country shares by months"]]}, "Article Content Extractor": {"tool_desc": "Provide a URL and get main article content from news articles or blog", "apis": [["Get content", "Get main article content from news articles or blog"]]}, "Fish species": {"tool_desc": "A Restful API which is scraping the Wikipedia pages for fish species in order to collect data.", "apis": [["/fish_api/group", "This endpoint will group the available data by the <code>property_value</code> parameter. The available URL query parameters are <code>meta_property</code>,  <code>meta_property_attribute</code>, and <code>property_value</code>. The API will group and return all fishes that are matching the <code>property_value</code> that is given in the meta-object."], ["/fish_api/fishes", "This endpoint will return back all available fishes that are available"], ["/fish_api/fish/{name}", "This endpoint will return information for a specific fish"]]}, "Youtube v3_v2": {"tool_desc": "Get youtube data without any youtube data api key", "apis": [["Video Comments", "Get YouTube video comments."], ["Video details", "Get YouTube video details.\n\nNote:\n**topicDetails** part is not enabled. If you want this part to be included in the API response then please contact us."], ["Captions List", "Returns a list of caption tracks that are associated with a specified video"]]}, "Random Quotes V1": {"tool_desc": "", "apis": [["Quotes", "Returns 5 random quotes"]]}, "Pet Store": {"tool_desc": "My test Pet Store API", "apis": [["getPetById", "Returns a single pet"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"], ["getInventory", "Returns a map of status codes to quantities"]]}, "Data.Police.UK": {"tool_desc": "This is the unofficial documentation for the Data.Police.UK API.", "apis": [["Last updated", "Crime data in the API is updated once a month. Find out when it was last updated."], ["Crime categories", "Returns a list of valid categories for a given data set date."], ["Street-level outcomes", "Outcomes at street-level; either at a specific location, within a 1 mile radius of a single point, or within a custom area."], ["Specific Force", "Provides detailed information about a specific force."], ["Crimes at location", "Returns just the crimes which occurred at the specified location, rather than those within a radius. If given latitude and longitude, finds the nearest pre-defined location and returns the crimes which occurred there."], ["Street-level crimes", "Crimes at street-level; either within a 1 mile radius of a single point, or within a custom area. For custom areas see http://data.police.uk/docs/method/crime-street/"], ["Outcomes for a specific crime", "Returns the outcomes (case history) for the specified crime. Crime ID is 64-character identifier, as returned by other API methods."], ["Street level availability", "Return a list of available data sets."], ["Crimes with no location", "Returns a list of crimes where the responsible force hasn't specified a location."], ["Forces", "A list of all the police forces available via the API. Unique force identifiers obtained here are used in requests for force-specific data via other methods."]]}, "Zipcodebase Zip Code Search": {"tool_desc": "Zip Code API - Free Access to Worldwide Postal Code Data", "apis": [["Postalcode to location information (/search)", "This endpoint allows you to receive information for one or multiple given postalcodes."]]}, "ASN Lookup": {"tool_desc": "Autonomous System Numbers (ASN) internet search engine to quickly lookup updated information about specific ASN, Organization, CIDR, or registered IP addresses (IPv4 and IPv6) among other relevant data.", "apis": [["Fetch information", "Retrieve information based on AS number, CIDR (IPV4 & IPV6) or organization name."]]}, "Cats by API-Ninjas": {"tool_desc": "Get detailed facts for every cat breed.", "apis": [["/v1/cats", "API Ninjas Cats API endpoint."]]}, "Currents News": {"tool_desc": "Currents News API provides JSON format news and articles from forums, blogs, news media outlets with rich metadata.", "apis": [["Latest news", "Get the latest news"], ["Search", "This endpoint allow you to search through ten millions of article over 14,000 large and small news sources and blogs. This includes breaking news, blog articles, forum content. This endpoint is well suited for article discovery and analysis, but can be used to retrieve articles for display, too."]]}, "CNPJ Validator": {"tool_desc": "Validates Brazilian CNPJ numbers.", "apis": [["Generate CNPJ", "Generates a valid CNPJ number."], ["Validate CNPJ", "Check if a CNPJ number is valid. Ignores the following characters: .-/"]]}, "VIN Decoder API - Europe": {"tool_desc": "The VIN Decoder API - Europe retrieves information about a vehicle by decoding its Vehicle Identification Number (VIN).", "apis": [["VIN Decoder", "Provide any VIN number for any vehicle manufactured in Europe. \n\nReceive the Car model, maker, year, engine and other relevant information."]]}, "SA Rego Check": {"tool_desc": "returns the registration details of your South Australia-registered vehicle or boat.", "apis": [["Registration Check", "Information returned from this check includes:\n\nMake\nPrimary Colour\nExpiry Date\u00a0\nbody or hull type\ncompulsory third-party (CTP) insurer (vehicles only)\nheavy vehicle details (gross vehicle, combination, or trailer mass)."]]}, "Mobile-Phones": {"tool_desc": "An API that provides information about all mobile brands and their devices would be a comprehensive source of data for developers seeking to build applications or services related to mobile devices.", "apis": [["Get Devices By Brand", "Params\n\n1. brand_id (required)\n2. page\n3. limit"], ["Get Brands", "Params\n\n1. page\n2. limit"]]}, "Cat Facts": {"tool_desc": "Get a list of cat facts.", "apis": [["Facts", "Retrieve and query facts"]]}, "URL Intelligence": {"tool_desc": "Extracts links from a target URL and provides linking metadata", "apis": [["Rip", "Extract links and info from a given URL"]]}, "Cars by API-Ninjas": {"tool_desc": "Get detailed data on tens of thousands of vehicle models from dozens of automakers.", "apis": [["/v1/cars", "API Ninjas Cars API endpoint."]]}, "scrape for me": {"tool_desc": "scrape remotely for me through python server;\nany website instead of making the execution on your device , \nserver code is using requests & beautifulsoup\nmake sure your scripts are legal and did write it currectly", "apis": [["is it up", "check the server is working \ninsteed of \"up\" in the link you can type anything"]]}, "YouTube v3_v3": {"tool_desc": "YouTube Data v3 API is a tool for developers to access and manipulate YouTube data, including videos, channels, and playlists, so they can create custom experiences for users.", "apis": [["Subscriptions", "Returns subscription resources that match the API request criteria."], ["ChannelSections", "Returns a list of `channelSection` resources that match the API request criteria."], ["Channels", "Returns a collection of zero or more `channel` resources that match the request criteria."], ["Activities", "Returns a list of channel activity events that match the request criteria. For example, you can retrieve events associated with a particular channel or with the user's own channel."], ["Videos", "Returns a list of videos that match the API request parameters."], ["Search", "Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching `video`, `channel` and `playlist` resources, but you can also configure queries to only retrieve a specific type of resource."], ["Playlists", "Returns a collection of playlists that match the API request parameters. For example, you can retrieve all playlists that the authenticated user owns, or you can retrieve one or more playlists by their unique IDs."], ["PlaylistItems", "Returns a collection of playlist items that match the API request parameters. You can retrieve all of the playlist items in a specified playlist or retrieve one or more playlist items by their unique IDs."], ["CommentThreads", "Returns a list of comment threads that match the API request parameters."], ["I18nLanguages", "Returns a list of application languages that the YouTube website supports."], ["Comments", "Returns a list of comments that match the API request parameters."], ["I18nRegions", "Returns a list of content regions that the YouTube website supports."], ["VideoCategories", "Returns a list of categories that can be associated with YouTube videos."], ["Captions", "Returns a list of caption tracks that are associated with a specified video."]]}, "Refactor numbers in human readable form like 1K or 1M": {"tool_desc": "By this API, you can refactor any number into human-readable form like 1000 can be read as 1K, or 1000000 can be read as 1M.", "apis": [["Number", "Send a number to get the refactored human-readable form of the number.\nYou can use this to show the price for your products to your e-commerce website, and many more."]]}, "Personator": {"tool_desc": "Easily verify a person\u2019s information, lookup and check customer data.", "apis": [["Personator Endpoint", "Access to Personator Web Service"]]}, "Phishing Url Risk API": {"tool_desc": "This API helps you detect if the URL is legitimate or a phishing link, It prevents against phishing, Suspicious URL and fraudulent link.", "apis": [["Phishing Url Detection API", "This end point takes a  'GET' request with urll/string as a parameter and retunrs  phishing risk indicators such as :  url Redirecting risk, SubDomains, HTTPS, Domain Regulation Length,\nIframeRedirection, Age of Domain, DNS Recording, WebsiteTraffic."]]}, "Whois Lookup_v5": {"tool_desc": "Whois Lookup API in Json or Xml", "apis": [["NsLookup", "NsLookup queries the specified DNS server and retrieves the requested records that are associated with the domain name you provided. These records contain information like the domain name\u2019s IP addresses."]]}, "EV Charge Finder": {"tool_desc": "Extremely Fast and Simple searches for EV charging stations, anywhere in the world.", "apis": [["Search by Coordinates Point", "Search for EV charging stations near specific geographic coordinates point."], ["Search by Location", "Search for EV charging stations near a specific location specified as a free-form location query (e.g. *San Francisco, CA, USA*)."]]}, "Sex Offenders": {"tool_desc": "National Registered Sex Offenders API for the United States.", "apis": [["Search Sex Offenders", "Params:\n@lat: latitude\n@lng: longitude\n@radius: search radius in Miles (Mi), e.g. radius = 0.2 means the API will search for sex offenders within 0.2 miles of the given lat and lng\n\nResponse:\n@offenders: List of Offender Object; If no offenders are found, it will return empty list `offenders: []`.\n\nExtensive database of National Registered Sex Offenders API for the United States. This API covers 750k+ offender records, 1M+ crime records, 19k+ cities, and all 50 states. Supports lat/lng search with radius."]]}, "Screenshot URL to image": {"tool_desc": "Generate screenshots of websites with simple api, accept various parameters such as width, height, full page", "apis": [["Screenshot Endpoint", "Take a screenshot from a webpage url."]]}, "Udemy course scrapper api": {"tool_desc": "We have bring an api that will help to fetch udemy course scrapper for your next project Get Udemy course scraper for your next project.", "apis": [["Course URL", "Provide the course URL"], ["Course Instructor", "Provide the course Instructor"]]}, "EPA Superfunds": {"tool_desc": "An intuitive endpoint to query the EPA Superfunds list.", "apis": [["Superfund Search", "Search Superfunds by {lat, lng, radius}"]]}, "autocomplete usa": {"tool_desc": "USA Address, City, Zip code - Zip4, Zip code Autocomplete", "apis": [["Autocomplete Zipcodes Lite", "Autocomplete USA Zipcodes Lite"]]}, "Axesso - Instagram Data Service": {"tool_desc": "This API returns data from Instagram like posts, comments, replies and different account informations.", "apis": [["comments", "Fetch comments for a given post. Therefore the shortcode needs to be passed which is returned in the \"node\" array from posts endpoint. If in the first response \"data.shortcode_media.edge_media_to_parent_comment.page_info.has_next_page\" equals true, then more comments exists and it can be fetched by passing \"data.shortcode_media.edge_media_to_parent_comment.page_info.end_cursor\" to the after param in the next request."], ["accountInfo", "Fetch data for a give account. The response includes the field \"id which is required for further requests e.g. posts, comments and replies and needs to be passed to query param userId. This endpoint needs the sessionid to work."], ["posts", "Get posts for a give user. This endpoints needs the userid which can be obtained from the account-info endpoint. For pagination the field data.user.edge_owner_to_timeline_media.page_info.end_cursor from the response needs to be passed to after param in the next request."], ["replies", "Fetch replies for a given commentId.  CommentId can be obtained from the comments endpoint response in field node.id. Also the field edge_threaded_comments.page_info.end_cursor needs to be passed for the given comment which can also be found in the response from the comments endpoint."]]}, "OpenSea GraphQL": {"tool_desc": "An API that provides easy and efficient access to both OpenSea's GraphQL API and OpenSea's Testnet GraphQL API.", "apis": [["(Advance) X-Signed-Query & Payload [BETA]", "This endpoint provides a verified request template based on the latest consecutive request."]]}, "Google Search 2": {"tool_desc": "Serpdog(https://serpdog.io) is a Google Search API that allows you to access Google Search Results in real time.", "apis": [["Google Maps Reviews", "Using this API you can get the JSON data of the review results."], ["Google Maps Data ID", "Using this API you can get the JSON results of the data ID of a particular place."], ["Google Images", "Using this API you can get the JSON data of the image results."], ["Google Videos", "Using this API you can get the JSON data of the video results."], ["Google News", "Using this API you can get the JSON data of the news results."], ["Autocomplete Results", "Use this API to get suggestions based on the entered keyword."], ["Organic Results", "Using this API you can get the JSON data of the organic search results."]]}, "Email address search": {"tool_desc": "Search our database of email addresses by partial match", "apis": [["Email search", "Search email addresses by partial match"]]}, "WatchSignals": {"tool_desc": "Watchsignals is a data-driven platform for luxury watches (new &amp; pre owned) and services, empowering customers with an AI driven valuation tool.", "apis": [["Get exchange rates", "Return latest exchange rates"]]}, "runs.tech": {"tool_desc": "Find the technologies that powers a company", "apis": [["getTechDomains", "Retrieve the domains that use a specific technology"], ["getAllTech", "returns a list of all of the technology that runs.tech can find"], ["getDomainTech", "retrieve domain technology information"]]}, "IP Geo Location - Find IP Location and Details": {"tool_desc": "API returns location data such as country, city, latitude, longitude, timezone, asn, currency, security data for IPv4 and IPv6 addresses in JSON formats.", "apis": [["iplocation", "Provides Geo information for the given IP."]]}, "DNS Records Lookup": {"tool_desc": "Fast DNS Records Lookup", "apis": [["DNS Request", "DNS Request\n\nType can be one of:\n'A', 'AAAA', 'AFSDB', 'APL', 'CAA', 'CDNSKEY', 'CDS', 'CERT', 'CNAME', 'CSYNC', 'DHCID', 'DLV', 'DNAME', 'DNSKEY', 'DS', 'EUI48', 'EUI64', 'HINFO', 'HIP', 'HTTPS', 'IPSECKEY', 'KEY', 'KX', 'LOC', 'MX', 'NAPTR', 'NS', 'NSEC', 'NSEC3', 'NSEC3PARAM', 'OPENPGPKEY', 'PTR', 'RP', 'SMIMEA', 'SOA', 'SPF', 'SRV', 'SSHFP', 'SVCB', 'TA', 'TKEY', 'TLSA', 'TXT', 'URI', 'ZONEMD'\n\nIDN domains should be converted before requesting.\n\nUse **xn--fuball-cta.de** instead of **fu\u00dfball.de**"]]}, "iOS Store": {"tool_desc": "Get API access to iOS Store data", "apis": [["Get app reviews", "This endpoint allows us to fetch app reviews given app Id"], ["Get similar apps", "This endpoint fetches the similar apps to a given app Id"], ["Get iOS App", "This endpoint is used to fetch specific app from app Id"], ["Search", "The endpoint is used to search iOS application"]]}, "Leetcode Compensation": {"tool_desc": "An API service to obtain HOT posts of Leetcode Discuss Compensation", "apis": [["Get Information of a particular post", "This API Endpoint will return information of a particular post with specific postID."], ["Get HOT posts of Leetcode Discuss Compensation", "This API Endpoint will return 150 HOT posts of Leetcode Discuss Compensation."]]}, "Risk Management Framework": {"tool_desc": "The Risk Management Framework (RMF) makes it easy to view and compare controls and CCIs.", "apis": [["Get CCI by Number", "This endpoint will return a single CCI and it's definition based on the 6-digit CCI identification number."], ["Get Subcontrol By Control", "This endpoint will return all the subcontrols/ccis owned by a control such as AC-1. In the case of AC-1, this endpoint will return AC-1.1, AC-1.2, etc."], ["Get All Controls", "Returns a complete list of all Risk Management Framework (RMF) controls."], ["Get All SubControls", "Returns all the subcontrols of all main controls. \n\nEx/ AC-1 is a main control while AC-1.1 is a subcontrol."], ["Get All CCIs/APs", "Returns all Control Correlation Identifiers (CCIs)  AKA Assessment Procedures (APs)."]]}, "OpenBlur": {"tool_desc": "Unofficial Listings API for blur.io\n\n- For Blur V1 endpoints use this API: https://rapidapi.com/openseatools/api/opensea15\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.", "apis": [["Retrieve Listings", "Retrieve Top 100 Blur Listings"], ["Retrieve Collections", "Retrieve all Blur Collections"], ["isSuspicious", "Records a history of isSuspicious / stolen NFTs change over time"], ["Retrieve Listing Events", "Retrieve Blur Listing Events"], ["Retrieve Orders Created", "Retrieve the order history for both blur and seaport orders on Blur marketplace"], ["Retrieve Bids", "Retrieve All Blur Bids"]]}, "MoodRing": {"tool_desc": "Get the mood from Storybox's MoodRing", "apis": [["Quizzes", "Retrieves all the MoodRing Quizzes."], ["Quiz", "Get one quiz by quizId."], ["Users", "Get all users of MoodRing"], ["User", "Get a user with userId"], ["Responses", "Get all responses to the quizzes"], ["Response by QuizId", "Get all responses of a certain quizId."], ["Responses from a Question", "Get all responses to a question."]]}, "World countries": {"tool_desc": "World countries available in multiple languages, with associated alpha-2, alpha-3, and numeric codes as defined by the ISO 3166 standard", "apis": [["get a country by alpha-2 numeric code", "get a  country by alpha-2 numeric codes ISO 3166-1 alpha-2 code are two-letter country codes defined in ISO 3166-1, \n\npart of the ISO 3166 standard published by the International Organization for Standardization (ISO),"]]}, "Fear and Greed index": {"tool_desc": "Fear and Greed index.", "apis": [["/index", "Actual Fear and Greed index"], ["/historical", "Get the index for the given date."]]}, "x2y2": {"tool_desc": "Unofficial API for x2y2 - 1,000+  requests/min\n\nSimple & high performance Blur API, backed by rotating proxies & API keys\n\nCheck out my Opensea / Looksrare / Blur APIs as well\nhttps://rapidapi.com/user/openseatools\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.", "apis": [["x2y2 GET", "x2y2 API endpoint (https://api.x2y2.io)\nMake over 1000 requests / minute\n\nSimply copy the path into the x2y2_path header.\n\n![](https://i.ibb.co/WKYfTDy/x2y2-path-get-header.png)"]]}, "Encryption-Api": {"tool_desc": "Encrypt/Decrypt String/File Using these Algorithms (AES, DES, TripleDES, RC2, Rijndael).", "apis": [["DecryptString", "Decrypt encrypted-text (base64-format) using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value)."]]}, "Amazon-Products-API": {"tool_desc": "API to provide amazon products data", "apis": [["Home", "Home Route to show usage message"]]}, "Iframely": {"tool_desc": "Providing a simple API for embedding content from any URL", "apis": [["endpoint", "main endpoint to get extract json"]]}, "100% Success Instagram API - Scalable & Robust": {"tool_desc": "750 requests a minute, 100% success rate Instagram API, any scale is supported.", "apis": [["post-likes", "Get post likes list"], ["child-comments", "Get child comments list"], ["hashtag-info", "Get results of hashtag search by keyword"], ["user-search", "Get user search results of keyword"], ["user-followers", "Get user followers list"], ["user-info", "Get data of user profile"], ["post-comments", "Get post comments list"], ["fbsearch-places", "Get results of fbsearch-places endpoint"]]}, "US States": {"tool_desc": "Detailed and accurate information for each U.S.", "apis": [["Get subdivisions by abbreviation", "Retrieve all state subdivisions for the provided state abbreviation."], ["Get metadata", "Get value lists for common fields."], ["Get symbols by abbreviation", "Retrieve all state symbols for the provided state abbreviation."], ["Get states by FIPS", "Retrieve all fields for states matching the provided FIPS code(s).  Multiple FIPS codes can be provided separated by commas."], ["Search states by capital", "Retrieve all fields for states/territories matching the provided capital.  Partial and full name searches are accepted."], ["Get states by census region", "Retrieve all fields for states matching the provided Census Region(s).  Multiple census regions can be provided separated by commas."], ["Get states by abbreviation", "Retrieve all fields for states/territories matching the provided abbreviation(s).  Multiple abbreviations can be provided separated by commas."], ["Get detailed state data", "Retrieve all fields for each states and territory."], ["Get states by census division", "Retrieve all fields for states matching the provided Census Division(s).  Multiple census divisions can be provided separated by commas."], ["Search states by name", "Retrieve all fields for states/territories matching the provided Name.  Name field is searched.  Partial and full name searches are accepted."], ["Get basic state data", "Retrieve name, abbreviation, capital, and population for each state and territory."]]}, "Shopify Stores Info": {"tool_desc": "This API returns a info such as email, phone number, etc for shopify stores.", "apis": [["Search", "In this endpoint you can search any particular Niche, or keyword for more narrowed results."], ["Get Store Info", "This endpoint retrieves information on any store in Shopify."]]}, "Unofficial Trust Pilot": {"tool_desc": "This API helps to query data relating to reviews and consumer reports to create a reviewing platform, such as : trustpilot.com", "apis": [["stars/get-image", "Get image links displaying the star-rate"], ["stars/get-string", "Get string describing the star-rate"], ["consumers/get-web-links", "Get web links to a consumer"], ["consumers/get-reviews", "Get reviews belonging to a consumer"], ["consumers/detail", "Get detailed information of a consumer"], ["business-units/get-web-links", "Get web link of a business unit"], ["business-units/get-reviews", "Get reviews related to a business unit"], ["business-units/detail", "Get detailed information of a business unit"], ["business-units/search-by-domain", "Search for exact business unit by domain name"], ["business-units/search", "Search for business units by term or phrase"], ["categories/search", "Search for categories in which the term or phrase belong to"]]}, "Web Search Autocomplete": {"tool_desc": "Fast and Simple web search query autocomplete with support for Knowledge Graph entities.", "apis": [["Autocomplete", "Get query suggestions from Google Search, including Knowledge Graph information when available."]]}, "TransitFeeds": {"tool_desc": "An extensive collection of official public transit data from around the world, including GTFS, GTFS-RealTime and more.", "apis": [["getFeedVersions", "Retrieve a list of feed versions. This list can be filtered by a number of input parameters"]]}, "Open Proxies": {"tool_desc": "Open proxy IP:Port lists, curated by ProxyMesh.", "apis": [["Open Proxies", "Get a list of 200-400 working open proxies, updated every 15 minutes. Because they can go up & down, these IPs may not be functional when you retrieve them. For higher reliability, consider a [paid proxy service](https://proxymesh.com/)."], ["Hourly Open Proxies", "Get a list of 200-400 working open proxies, updated every hour. Because they can go up & down, these IPs may not be functional when you retrieve them. For higher reliability, try the **Open Proxies** endpoint."], ["Daily Open Proxies", "Get a list of 200-400 open proxies, updated once per day around 00:00 UTC.  Because they can go up & down, these IPs may not be functional when you retrieve them. For higher reliability, try the **Hourly** or **Open Proxies** endpoints."]]}, "GTrend": {"tool_desc": "Discover the power of Google Trends Data API!", "apis": [["regionList", "List support region / Country"], ["geoMap", "Get geo map data from given query"], ["relatedQuery", "Get related query from given query"], ["relatedTopic", "Get related topic from given query"], ["timeseries", "Get timeseries from query"]]}, "Scraper's Proxy": {"tool_desc": "Simple HTTP proxy API made for scrapers.", "apis": [["Tor GET", "Send request to the [Tor network](//www.torproject.org/). Use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability for normal websites. Only recommended to access websites that are only accessible from the Tor network (e.g. websites with a \".onion\" top level domain), since this enpoint is slower than other endpoints."], ["JavaScript Rendered Page GET", "Render html using a real browser. Useful for if content is loaded asynchronously or generated dynamically in the browser. JavaScript rendering is usually required to scrape websites that use React, Angular or Vue. For websites that do not need javascript rendering use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability."], ["Standard GET", "Basic proxy GET request"], ["Parser GET", "Automatically parses html into an easily processable json format"]]}, "Ultimate password generator": {"tool_desc": "Generate robust, customizable passwords with Ultimate password generator by DevPicker.", "apis": [["Generate password", "Get your desired password with specific options to use"]]}, "Uers API": {"tool_desc": "Fake users data for Employee Management", "apis": [["Get Single User", "This Endpoint return Individual user data for the  provided user ID"], ["Get all users", "Get all the users"]]}, "Business email compromise (BEC) API\t": {"tool_desc": "This API protect your business from Business email compromise (BEC),  it takes email and returns  keys risk indicators such as : email validation, blacklisted, phishing, dmarc seurity,  spoofing risk, malicious activity.", "apis": [["Business Email Compromise (BEC) API", "This API protect your business from Business email compromise (BEC), \nit takes email and returns  keys risk indicators such as : email\nvalidation, blacklisted, phishing, dmarc seurity,  spoofing risk, malicious activity."]]}, "Dog breeds": {"tool_desc": "The API is scraping the Wikipedia pages for dogs in order to collect data", "apis": [["Group breed data by property", "This endpoint will group the available data by the given property and the property value. The property can be any property of the JSON response object including the properties of the meta object. \n\nThe API will return all dog breeds that are matching the property value that is given."], ["Get Breed Information", "This endpoint will return information for a specific dog breed"], ["Get All Dog Breeds", "This endpoint will return back all available dog breeds that are available"]]}, "TheClique": {"tool_desc": "API for TheClique company", "apis": [["FansPro overview", "Enter Type (agent, player, team), id\nWhen choosing a team, you can choose a season (2022, 2021, ...)"], ["Playlist", "Get playlist by Channel ID"], ["Trending", "Get trending videos of the particular geo"], ["Channel", "Channel info by ID"], ["oztix", "You just need to enter the name of the event or artist. You will receive information about all available events\n\nFor example:\nBEST NIGHT EVER - Hockey Dad & Ruby Fields - Gold Coast\nor\nAdam Newling - 'Barmy' Tour\nor\nGood Things Festival 2022"], ["IMDb Pro people contacts", "View the contacts of a specific artist or other employee"], ["Moshtix", "You just need to enter the name of the event or artist. You will receive information about all available events.\nA few clarifications to get the correct answer:\n\n1. If the name contains the symbol + or /, please shorten the name to the beginning of this symbol. For example, searching by name \"Y&O Sundays w/ Vetta Borne // Ra Ra Viper // Edith // Ricky's Breath\" will not give results. But if will use shorted name \"Y&O Sundays\", you will get the desired result.\n\n2. If the name is too long, try to shorten it sensibly. For example, searching by name \"SEADECK SYDNEY - SOUNDS LIKE SUNDAYS FT. J. WORRA - Sunday 20th November\" will not give results. But if will use shorted name \"SEADECK SYDNEY - SOUNDS LIKE SUNDAYS\", you will get the desired result.\n\nThe reasons for these clarifications arise from the specific work of the Moshtix site search engine. \nThank you for your understanding and I wish you pleasant work ;)"], ["Live Nation", "For get results input ***slug***\nFor example, from url \"https://www.livenation.com.au/festival/united-we-dance-tickets\" need get only ***united-we-dance-tickets***\nWorks only for festivals"], ["resident advisor API", "Enter ID event\n\nFor example, with the url \"https://ra.co/events/1618892\" we need \"1618892\""], ["Matches by Club", "Enter SLUG, ID and SEASON\n\nFor example: chelsea-fc, 631, 2022"], ["Player Achievements", "Enter SLUG and PLAYER_ID\n\nFor example: lionel-messi, 28003"], ["Year-End Top Artists", "Get the Year-End Top Artists chart.\nAvailable years **2006 - 2022**"], ["Year-End Billboard Global 200", "Get the Year-End Billboard Global 200 chart.\nAvailable years **2021 - 2022**"], ["Year-End Billboard 200 Albums", "Get the Year-End Billboard 200 Albums chart.\nAvailable years **2002 - 2022**"], ["Year-End Hot 100 Songs", "Get the Year-End Hot 100 Songs chart.\nAvailable years **2006 - 2022**"], ["Weekly Artist 100", "Get the Artist 100 chart."], ["Weekly Global 200", "Get the Billboard Global 200 chart."], ["Weekly Billboard 200", "Get the Billboard 200 chart."], ["Weekly Hot 100", "Get the Billboard Hot 100 chart."], ["Events", "Enter SLUG of the artist\nYou can get SLUG from Search endpoint"], ["Overview", "Detailed info about Artist by SLUG\nYou can get SLUG from Search endpoint"], ["Search", "The endpoint for search artists by NAME"], ["Agency", "Enter SLUG and ID"], ["Everything", "Search through millions of articles from over 80,000 large and small news sources and blogs.\n\nThis endpoint suits article discovery and analysis."], ["Top Headlines", "This endpoint provides live top and breaking headlines for a country, specific category in a country, single source, or multiple sources. You can also search with keywords. Articles are sorted by the earliest date published first.\n\nThis endpoint is great for retrieving headlines for use with news tickers or similar."], ["Player news", "Enter SLUG and Player_ID\n\nFor example: mohamed-salah, 148455"], ["Player info", "Enter SLUG and PLAYER_ID\n\nFor example: lionel-messi, 28003"], ["Squad", "Enter SLUG, ID and SEASON\n\nFor example: borussia-dortmund, 16, 2022"], ["Get User Profile", "Enter SLUG user.\nFor example, from URL  **https://soundcloud.com/siamusic** get only  -     **siamusic**"], ["List Artist Albums/Singles/Compilations", "Enter Artist ID and type search"], ["TuneFind Search", "Enter the name of the artist. Please don't use the symbols: #$%^@!/\nFor example, in the name \"#1 Dads\" please remove the symbol # for correct search."], ["EventBrite detail", "Enter the ID of the festival. Example, luft-2022-tickets-409654235847\nYou can get ID from \"EventBrite search\" API"], ["EventBrite search EVENT ID", "Enter the name of the festival. Example,  LUFT 2022"], ["Transfermarkt details", "Enter **SLUG ** from Transfermarkt search API.\n\nIt os working for all types (players, clubs, managers, referees, etc)"], ["SongKick search Artist", "Enter the name of the artist.\nFor example, ed sheran"], ["TuneFind for Details", "Please, enter the slug of artist. For example, taylor-swift or acdc.\nYou can get a slug  by using the TuneFind Search API"], ["Get info about artist", "Give info about artist on allmusic.com\n\nResponse -> json"]]}, "Rest Countries": {"tool_desc": "Countries' data\u2014name, flag (form Twitter icons), ISO-codes, etc", "apis": [["Get Countries", "returns all the currently available countries.  Every item includes the following parameters: \n- Short name\n- Short name lowcase\n- Full name\n- ISO alpha-2-code\n- ISO alpha-3-code\n- ISO numeric 3-digit code\n- Flag (from Twitter emojis)\n- Official flag \u2014only for those countries which have an unnoficial flag"]]}, "LBC Shark": {"tool_desc": "Api of leboncoin\nif you need this api contact me on private XD", "apis": [["SingleOffer", "get single offer by ID"]]}, "BuiltWith Domain": {"tool_desc": "Get web technology current and usage history for a domain going back to 2000.", "apis": [["v19 JSON", "Get technology usage for a domain"]]}, "Returns company info based on the website": {"tool_desc": "Name of the company, description, ceo info, links to the social platforms, hq location info, top competitors", "apis": [["getCompanyByWebsite", "For valid response use valid website domain.  Other values will generate exceptions. Subdomains will be removed."]]}, "Web Search": {"tool_desc": "Billions of webpages, images and news with a single API call.", "apis": [["imageSearch", "Get relevant images for a given query."], ["newsSearch", "Get news articles relevant for a given query."], ["webSearch", "Get relevant web pages for a given query."]]}, "Mzansi Loadshedding Api ": {"tool_desc": "Get load sheding schedule for any area by simply searching  the town name.", "apis": [["town", "Returns the schedule for the specific requested town"]]}, "Google Search Results Scraper": {"tool_desc": "Scrapes search results from google including ads, translation, weather, knowledge graph results, image search, top news results, people also ask, did you mean, dictionary results and more.", "apis": [["Image Search", "Runs a standard image search and parses the output to a clean json object."], ["Top News", "Returns current top news by region and language as a clean json object."], ["Web Search", "Runs a standard google web search and parses the results returning a clean json object"]]}, "Proxy-Spider Proxies": {"tool_desc": "The most reliable premium proxy servers list.", "apis": [["/proxies.example.json", "This is a free sample of ten proxies. Sign up and receive the full list."]]}, "Whois Lookup_v2": {"tool_desc": "Whois Lookup API in JSON", "apis": [["Whois Lookup", "Whois Lookup API returns data in JSON."]]}, "Vietnamese News": {"tool_desc": "Metadata of 250,000+ tagged Vietnamese local news articles from as soon as 2005.", "apis": [["Query by Date", "- Show all articles and all of their metadata fields that have the publish date match the provided string.\n- For the URL, `date` can be shortened to `d`.\n- Each query will return **10 results**, sorted by date incrementally. Add `/1`, `/2`, etc. at the end of the URL to fetch more. Default is equal to `/0`."]]}, "App Store": {"tool_desc": "Unofficial Apple App Store Api", "apis": [["Privacy Permissions by ID", "Get privacy permissions for an app by ID"], ["Categories", "Get App Store categories and their matching category codes"], ["Similar Apps By ID", "Get a list of apps similar to the provided app"], ["Similar Apps By bundle ID", "Get a list of apps similar to the provided app by app bundle ID"], ["Applications by Developer", "Get a list of apps published by a chosen developer"], ["Search", "Search for apps on the App Store"], ["Reviews by bundle ID", "Get reviews for a chosen app by app bundle id"], ["Reviews by ID", "Get reviews for a chosen app by app id"], ["Application Details By bundle ID", "Get Application information by app bundle id."], ["Application Details By ID", "Get Application information by app id."], ["New paid ios apps", "Get list of new paid ios apps"], ["New free ios apps", "Get list of new free ios apps"], ["New ios apps", "Get list of new ios apps"], ["Top grossing mac apps", "Get list of the top grossing mac apps"], ["Top grossing ipad apps", "Get list of the top grossing ipad apps"], ["Top grossing ios apps", "Get list of the top grossing ios apps"], ["Top paid mac apps", "Get list of the top paid mac apps"], ["Top paid ipad apps", "Get list of the top paid ipad apps"], ["Top paid ios apps", "Get list of the top paid ios apps"], ["Top free mac apps", "Get list of the top free mac apps"], ["Top free Ipad apps", "Get list of the top free Ipad apps"], ["Top free IOS apps", "Get list of the top free apps on IOS"]]}, "Car Data": {"tool_desc": "Use this API to pull relevant automobile data such as the car make, model, type, and year.", "apis": [["Cars", "Retrieve and filter lists of cars"], ["Types", "get a list of supported types"], ["Makes", "get a list of supported makes"], ["Years", "get a list of supported years"]]}, "Real Estate Records": {"tool_desc": "Real estate transaction records for New York City and whole New Jersey.", "apis": [["transactions", "Show transactions given a zipcode. The API returns 50 records each time in descending order by date and supports pagination. This API requires a subscription cost.\n\nThe returned data shows the summary of information. To get further detail (such as the unit of a building that posts the most recent transaction, use summary API.\n\nSample data of the API when query zipcode 10019 is:\n \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"310\",\n        \"STREET\": \"W 56th St\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL COOP UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-07-21T00:00:00.000Z\",\n      \"lastSalesAmount\": 514000,\n      \"maxSalesAmount\": 1359000,\n      \"TotalRecords\": 74\n    },"], ["detail", "Return all detailed historical transactions of a given address. To call this API, it requires to call summary API first using address information. Then use the Id value returned from the summary API and call this API with the same Id. This API requires a subscription cost."], ["summary", "Get a summary of property records by units given an address (if it's a multi-unit building). Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. This API requires a subscription cost. \n\nThis API provides details a level further than the \"address\" endpoint. For instance,  for 220 Central Park S, New York, NY 10019 it returns\n  \"data\": [\n    {\n      \"_id\": {\n        \"id\": \"6144a17b3afc5ca06ea0dd95\",\n        \"Loc\": {\n          \"coordinates\": [\n            -73.9802,\n            40.76719\n          ],\n          \"type\": \"Point\"\n        },\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"UNIT\": \"67\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 59500000,\n      \"SQFT\": 0,\n      \"TotalRecords\": 1\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index"], ["address", "Get a high level of summary of property records given an address. Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. **This API is free to use.**\n\nIf it's an apartment building, it will return total records available for every property type. For instance,  for 220 Central Park S, New York, NY 10019,  it returns:\n  \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"Location\": {\n        \"coordinates\": [\n          -73.9802,\n          40.76719\n        ],\n        \"type\": \"Point\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 239958219.15,\n      \"TotalRecords\": 100\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index"]]}, "NREL National Renewable Energy Laboratory": {"tool_desc": "The National Renewable Energy Laboratory's developer network helps developers access and use energy data via Web services, including renewable energy and alternative fuel data.", "apis": [["Nearest Stations", "Return the nearest alternative fuel stations within a distance of a given location."], ["Utility Rates", "This service returns annual average utility rates ($/kWH) for residential, commercial and industrial sectors as well as the local utility name for a specific location. This service does not return complex rate information.  Version 3 is the current version of the utility rates API. Previous versions have been deprecated and its users are encouraged to migrate to this newly enhanced version."], ["All Stations", "Return a full list of alternative fuel stations that match your query."], ["PVWatts", "NREL's PVWatts calculates the energy production of grid-connected photovoltaic (PV) energy systems. This service estimates the performance of hypothetical residential and small commercial PV installations.  Version 4 is the current version of the PVWatts API. Previous versions have been deprecated and its users are encouraged to migrate to this newly enhanced version."]]}, "ScrapeNinja": {"tool_desc": "High performance API for web scraping.", "apis": [["/scrape (legacy)", "Scrape via GET method. Not recommended for production, you'd better use POST requests."]]}, "Indonesian National Identity Card Validator": {"tool_desc": "Indonesian NIC Validator & Detail Finder API", "apis": [["data", "Check validation and get details of indonesian national identity card such as day, month, year, gender and location"]]}, "Diablo4 Smartable": {"tool_desc": "The Diablo 4 API offers the Diablo IV news, gameplays, guides, top players, and other information.", "apis": [["GetGames", "Get Diablo 4 gameplays."], ["GetNews", "Get Diablo 4 news."], ["GetGamesByTopic", "Get Diablo 4 gameplays by topic."], ["GetCommunities", "Get Diablo 4 communities"], ["GetPeople", "Get Diablo 4 influencers and top players."], ["GetTopics", "Get Diablo 4 topics."], ["GetNewsletters", "Get Diablo 4 newsletters."], ["GetSponsorships", "Get Diablo 4 sponsorships."]]}, "Pocket Cube Solver": {"tool_desc": "Returns the list of all optimal solutions ( QTM not HTM ) for a given pocket cube ( 2x2x2 ) position.", "apis": [["getRandomSolution", "Returns json data consisting of a random optimal solution of a given cube position."], ["getAllSolutions", "Returns json data consisting of all the solutions of a given cube position."]]}, "Get Twitter mentions": {"tool_desc": "Find your brand, competitor, or any other query mentions across the Twitter", "apis": [["GetMentions", "Find your brand, competitor, or any other query mentions across Twitter"]]}, "CryptoPriceTracker": {"tool_desc": "You Can Get All Cryptos Price Real Time With Rate Change.", "apis": [["Get All Coins Prices", "This Endpoint Will Return Coin Currency Name , Price, RateChange."]]}, "Geography": {"tool_desc": "Powerful APIs for getting information about Countries and Cities", "apis": [["Get SubRegions", "Get list of sub regions in the world"], ["Get Sub Regions", "Get list of sub regions of a region"], ["Search Countries By Language", "Search Countries by its used Language"], ["Search Countries TimeZone", "Search Countries where provided TimeZone is used by the country"], ["Search Countries By Region", "Search Countries by its Region"], ["Get Countries", "Get brief details of all Countries"], ["Search Countries By Sub-Region", "Search Countries by its Sub-Region"], ["Get Continents", "Get list of continents in the world"], ["Search Countries By capital", "Search Countries by capital. Both official and common names are searched"], ["Search Countries By Idd", "Search Countries by its International Direct Dialing Number"], ["Search Neighbour Countries by country code", "Search broder sharing countries for given country code. Country code is ISO 3166 standard alpha code"], ["Search Countries By Continent", "Search Countries by its Continent"], ["Search Countries by population", "Search countries by minimum population or maximum population or between minimum and maximum population. Search operation will include both upper and lower limit."], ["Search Countries By Name", "Search Countries by Name. Both official and common names are searched"], ["Search Countries By Currency", "Search Countries by currency used by the country. The search can be based on currency code or currency name. By default substring match is used. If exact match is required, one should pass query parameter \"exactMatch=true\""], ["Get Country By FIFA Code", "Get Country by FIFA assigned Country Code"], ["Get Country By AlphaCode", "Get brief countries details by ISO 3166 standard alpha code"], ["Get Regions", "Get list of regions in the world"], ["Get Cities", "Get details about cities"]]}, "Global Patent": {"tool_desc": "Search global patents from world-wide countries with your keyword for freemium", "apis": [["search patent", "search with keyword and return list of patents"]]}, "KVStore": {"tool_desc": "The simple storage service", "apis": [["Collection List", "Get the list of all collections"], ["Get Collection info", "Get information about the Collection"], ["Get items", "Get <key,value> pairs ordered by DESC creation time"], ["Get storage info", "Show the user's storage status and information"]]}, "BlockIt": {"tool_desc": "BlockIt\nBlockIt is detect IP Address a Proxy, Tor, Hosting, Cloud, Bogon and etc.", "apis": [["BlockIt", "BlockIt is detect IP Address a Proxy, Tor, Hosting, Cloud, Bogon and etc."]]}, "Redfin Base": {"tool_desc": "[IMPROVED SEARCH API]  API Redfin offers a powerful search feature that allows users to easily find their desired properties.", "apis": [["Auto-complete", "You send a request and receive the following information:\n- `id`: The unique identifier for the city.\n- `type`: The type of the city.\n- `name`: The name of the city.\n- `subName`: The additional description of the city.\n- `url`: The direct URL to access the city's information page on Redfin.com.\n- `active`: The active status of the city.\n- `claimedHome`: The status of claimed home ownership.\n- `invalidMRS`: The invalid MRS (Market Revenue Share) status.\n- `businessMarketIds`: The list of relevant business market IDs.\n- `countryCode`: The country code.\n- `internalSearchVolume`: The internal search volume statistic."], ["Get region info", "This API will return `region_type_id`, `region_id`\n\u279e Will use for API \u3010Search by region\u3011"]]}, "PowerBI": {"tool_desc": "The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.", "apis": [["GetSponsorships", "Get Power BI sponsorships"], ["GetNewsletters", "Get Power BI newsletters"], ["GetTopics", "Get Power BI topics."], ["GetNews", "Get Power BI news."], ["GetCommunities", "Get Power BI communities."], ["GetLearningResources", "Get Power BI learning resources."], ["GetLearningResourcesByTopic", "Get Power BI learning resources by topic."], ["GetSamples", "Get Power BI samples"], ["GetFunctions", "Get Power BI DAX functions."], ["GetFunctionsByTopic", "Get Power BI DAX functions by topic."], ["GetPeople", "Get Power BI influencers."], ["GetPeopleByTopic", "Get Power BI influencers by topic."], ["GetNewsByTopic", "Get Power BI news by topic."], ["GetCommunitiesByTopic", "Get Power BI communities by topic."]]}, "Indian Names": {"tool_desc": "API for fetching Indian Names", "apis": [["Get Status", "API to check if the service is up"], ["Get Names", "Fetch a random list of indian names"]]}, "Crypto Prices API": {"tool_desc": "Crypto prices API is an API that provides updates on the status of your favorite crypto coins.", "apis": [["Prices and up and down", "Here you can fetch the data using this rest endpoint"]]}, "Location and Time": {"tool_desc": "A collection of location and time utilities.", "apis": [["Get Astral Data by City", "Get times of various aspects of the sun for specified date and city, including dawn, sunrise, noon, sunset, dusk times. **Note**: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use /astral/bylocation endpoint instead."], ["Calculate Distance Between Locations", "Calculate distance between two geolocations. We return the [Geodesic distance](https://en.wikipedia.org/wiki/Geodesics_on_an_ellipsoid)  and [Great-circle distance](https://en.wikipedia.org/wiki/Great-circle_distance) for different use cases."], ["Decode Geohash", "Decode a [geohash](https://en.wikipedia.org/wiki/Geohash) string into a geolocation with a bounding box."], ["Search City by Name", "Get details of the city specified by name, fuzzy search is supported. Up to 10 records for cities with similar name may be returned. Information includes city name, alternative names, geolocation (latitude/longitude), population, timezone, map url, and more."], ["Get Time at Other City", "Find out time at `to_city` given `from_time` and `from_city`. Daylight saving time are taken care of.  **Note**: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use `/timeat/bylocation` endpoint instead."], ["Get Time Diff by Timezone", "Find out time difference from `from_time` to `to_time` for specified timezone. Daylight saving time are taken care of."], ["Get Date and Time by Location", "Get date and time for specified location."], ["Get Time at Other Timezone", "Find out time at `to_timezone` for given `from_time` and `from_timezone`. Daylight saving time are taken care of."], ["Encode Geohash", "Encode a geolocation into [geohash](https://en.wikipedia.org/wiki/Geohash) string which can then used for applications such as proximity search."], ["Calculate Distance Between Cities", "Calculate distance between two cities. We return the [Geodesic distance](https://en.wikipedia.org/wiki/Geodesics_on_an_ellipsoid) and [Great-circle distance](https://en.wikipedia.org/wiki/Great-circle_distance) for different use cases. Note: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use `/distance/bylocation` endpoint instead."], ["Get Geolocation by IP", "Get geographic location information about the specific IP address. Information includes the city, country, continent, geolocation with accuracy, postal code, and more."], ["Search City by Location", "Get details of the city near specified geolocation (latitude/longitude). Up to 10 records for cities close to the specified location may be returned. Information includes city name, alternative names, geolocation (latitude/longitude), population, timezone, map url, and more."], ["Search Country by Name", "Get details of the country specified by name, fuzzy search is supported. Up to 10 records for countries with similar name may be returned. Information includes country name, capital, area, population, languages, neighbors, phone code, postal code, and more."], ["Get Time Diff by City", "Find out time difference from `from_time` to `to_time` for specified cities. Daylight saving time are taken care of.  **Note**: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use `/timediff/bylocation` endpoint instead."], ["Get Time at Other Location", "Find out time at `[to_lat, to_lon]` given `from_time` and `[from_lat, from_lon]`. Daylight saving time are taken care of."], ["Get Supported Timezones", "Get all supported timezones."], ["Get Holidays", "List holidays for the specified country and year."], ["Get Date and Time by Timezone", "Get date and time for specified timezone."], ["Get Date and Time by City", "Get current date and time for specified city, fuzzy search is supported. **Note**: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use `/datetime/bylocation` endpoint instead."], ["Get Astral Data by Location", "Get times of various aspects of the sun for specified date and location, including dawn, sunrise, noon, sunset, dusk times."], ["Get Time Diff by Location", "Find out time difference from `from_time` to `to_time` for specified location. Daylight saving time are taken care of."]]}, "World Bank | GDP": {"tool_desc": "Sourced from World Bank at https://datahelpdesk.worldbank.org/knowledgebase/articles/898581-api-basic-call-structures", "apis": [["List of countries with income level", "Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/V2/incomeLevel/LIC/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json"], ["List all countries", "Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/v2/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json"]]}, "YouTube Video Info": {"tool_desc": "Get YouTube Video Information including the Audio and Video Streams!", "apis": [["Info", "Get all the Information of an YouTube Video, including Audio and Video Streams"]]}, "TelephoneToCountry": {"tool_desc": "Validate and get location information about phone number.", "apis": [["getCountryByNumber", "Returns country info by phone number"]]}, "IP reputation, geoip and detect VPN": {"tool_desc": "Block fraud attempts in realtime.", "apis": [["ip-reputation", "Fetch detailed information about the specified IPv4 or IPv6 address. Get the country by geolocation, ISP or hosting provider. You will also find out if this IP address has a history of abuse or malicious activity."]]}, "Tokenizer": {"tool_desc": "Format preserving tokenization.", "apis": [["tokenize", "Tokenizes a value passed to the endpoint.  The value must be 1KB or smaller and the follow characters are not allowed:\n- The forward slash (/) character\n- The backslash () character\n- The number sign (#) character\n- The question mark (?) character\n- Control characters from U+0000 to U+001F, including:\n     - The horizontal tab (t) character\n     - The linefeed (n) character\n     - The carriage return (r) character\n- Control characters from U+007F to U+009F"]]}, "COVID-19 INDIA": {"tool_desc": "COVID-19 Updated using Goverment Database | Coded With \u2764\ufe0f By Hritik R", "apis": [["Get Info", "Get Covid Latest Information"], ["Get Details", "Coronavirus India Live Updates (State)"], ["Get Latest Updates", "Coronavirus India Live Guidelines, Bills, etc"]]}, "Gis Engine": {"tool_desc": "Provide regions, cities and districts per countries", "apis": [["Get districts", "Get districts by providing the country code, region code and city number\n\n- country_code can be fetch from Get Countries endpoint\n- region_code can be fetch from Get Regions endpoint\n- city_num can be fetch from the Get Cities endpoint"], ["Get cities", "Get cities by providing the country code and region code\n\n- country_code can be fetch from Get Countries endpoint\n- region_code can be fetch from Get Regions endpoint"], ["Get region details", "Get the region details by providing the country code and region code"], ["Get regions", "Get regions  per country\n\n- country_code can be fetch from Get Countries endpoint."], ["Get country details", "Get the country details by providing the country code (2 letter code)"], ["Get all countries", "Get all supported countries"], ["Health Check", "Provide a way to test connectivity to API"]]}, "Genderizeio": {"tool_desc": "Predict the gender of a person based on their name.", "apis": [["genderize", "Predict the gender of a person based on their name."]]}, "Barcode Lookup": {"tool_desc": "Lookup product data and pricing for over 635 million unique items by UPC, EAN, ISBN codes or search terms.", "apis": [["Product", "Endpoint to retrieve product data."]]}, "Most expensive NFT artworks": {"tool_desc": "Get list of most expensive and bestselling NFTs ever", "apis": [["Monthly volume by gallery", "Get list of monthly volume by gallery"], ["Latest sold", "Get recent sold artworks list.\n\n**Possible filtering by gallery: **\nArt Blocks\nAsync Art\nAuction Houses\nFoundation\nhic et nunc\nKnownOrigin\nMakersPlace\nNifty Gateway\nSuperRare"], ["Most expensive", "Get most expensive artworks list.\n\n**Possible filtering by gallery: **\nArt Blocks\nAsync Art\nAuction Houses\nFoundation\nhic et nunc\nKnownOrigin\nMakersPlace\nNifty Gateway\nSuperRare"]]}, "Payment card numbers generator": {"tool_desc": "A simple service to generate random credit/debit card numbers", "apis": [["Generate", "# Generate payment card numbers\n\n## Default values\n\n**scheme**: \"visa\"\n**count**: 5"]]}, "Historical Figures by API-Ninjas": {"tool_desc": "Get vital information on the most famous people in history.", "apis": [["/v1/historicalfigures", "API Ninjas Historical Figures API endpoint. Returns a list of up to 10 people that match the search parameters. Either **name** and/or **title** parameter is required."]]}, "Car Data_v2": {"tool_desc": "Use this API to pull relevant automobile data such as the car make, model, type, and year.", "apis": [["Cars", "Retrieve and filter lists of cars"]]}, "News Content Extraction - Live": {"tool_desc": "Comprehensive Extraction of Web News Content", "apis": [["Get Support Languages", "List of supported Languages."], ["Get Hot Topics", "Hot Topics ranking by Google."], ["Get Popular News Urls", "List of popular news url links ranking by Google."]]}, "Crypto Gem Finder": {"tool_desc": "Find your next gem crypto!", "apis": [["Today Best", "Get Today most popular coins"], ["Fresh potential gems", "Get Recently added coins"]]}, "Fresh LinkedIn Profile Data": {"tool_desc": "One-stop API for all LinkedIn Scraping Needs: profiles, companies, activities/posts, and job posts.", "apis": [["Search Jobs", "Search jobs posted on LinkedIn. This endpoint is useful for scraping job openings of a specific company on LinkedIn. \n\nTo scrape all results from each search, change the param *start* from 0 to 25, 50, ... until you see less than 25 results returned.\n\n**2 credits per call.**"], ["Get Profile PDF CV", "Get the CV of a LinkedIn profile in PDF format. **1 credit per call.**"], ["Get Open to Work Status", "Given a LinkedIn profile URL, the API will let you know if that profile is \u201copen to work\u201d or not. **1 credit per call.**"], ["Get Profile Posts", "Get 50 latest posts of a person based on his/her LinkedIn profile url. **2 credits per call.**"], ["Get Linkedin Profile by Sales Nav URL", "Get full profile data, including experience & education history, skillset and company related details. **1 credit per call.**"], ["Get Company Jobs Count", "Get number of opening jobs the company posted on LinkedIn. **1 credit per call.**"], ["Get Company Ads Count", "Get number of ads the company posted on LinkedIn. **1 credit per call.**"], ["Get Company Posts", "Get 50 latest posts from a LinkedIn company page. **2 credits per call.**"], ["Get Company by Domain", "Find a company on LinkedIn using its web domain. **1 credit per call.**"], ["Get Company Data by LinkedIn URL", "Given a company\u2019s LinkedIn URL, the API will return valuable data points in JSON format. **1 credit per call.**"], ["Get Job Details", "Scrape the full job details, including the company basic information. **1 credit per call.**"], ["Get Search Results", "Get search results. Please make sure the search is \"done\" before calling this endpoint."], ["Check Search Status", "Get the status of your search using the request_id given in step 1."], ["Get LinkedIn Profile Data", "Get full profile data, including experience & education history, skillset and company related details. Accept all type of profile urls. **1 credit per call.**"], ["Get Profile Recent Activity Time", "Get the time of the latest activity. **2 credits per call.**"], ["Get Company Data by ID", "Given a company\u2019s LinkedIn internal ID, the API will return valuable data points in JSON format. **1 credit per call.**"], ["Get Open Profile Status", "Given a LinkedIn profile URL, the API will let you know if that profile is \u201copen profile\u201d or not. **1 credit per call.**"], ["Get Supported Countries", "Get supported countries. Use the country codes in your \"Search employees\" endpoint."], ["Get Supported Industries", "Get supported industries. Use the industry_id in your \"Search employees\" endpoint."]]}, "NIV Bible": {"tool_desc": "An simple and quick web tool that allows you to retrieve data from both Old and New Testament based on a book, chapter or verse.", "apis": [["GetSingleVerse", "Get a single verse based on the book, chapter and verse number."]]}, "RaastaAPI": {"tool_desc": "This API provides access to the database that contains road-related information about Karachi, Pakistan.", "apis": [["getIntersection", "For a given route, this returns the total number of potholes and speedbreakers that have been found in the database that our system has detected."], ["getPoints", "This will retrieve specific points from the database and return it."], ["getNearestNeighbor", "For every location point given, this searches the database and returns the nearest pothole and speed-breaker events and the distances from it."]]}, "Tardis.dev": {"tool_desc": "The most granular data for cryptocurrency markets \u2014 tick-level L2 & L3 order book updates, tick-by-tick trades, quotes, open interest, funding rates, liquidations, options chains and more.", "apis": [["Exchanges", "Gets the exchanges details: available symbols, availability dates, available channels, CSV datasets info, incidents etc."]]}, "English Words": {"tool_desc": "4, 5 and 6 letter english words with meanings to create your own word based games", "apis": [["getMeaning", "Returns the meaning of the word"]]}, "Wayback machine domain archived lookup": {"tool_desc": "Query domain to discover years available on Wayback Machine", "apis": [["Wayback Query", "API query domain for years available on Wayback machine"]]}, "TikTok API": {"tool_desc": "Reliable TikTok API", "apis": [["Collection Videos/Details", "Return a collection details and videos"]]}, "YouTube Media Downloader": {"tool_desc": "A scraper API for YouTube search and download.", "apis": [["List Channel Playlists/Releases/Podcasts", "This endpoint lists playlists, releases or podcasts of a YouTube channel. Pagination scraping is supported."], ["Search for Channel Videos and Playlists", "This endpoint searches for videos and playlists in a YouTube Channel. Pagination scraping is supported."], ["List Featured Channels", "This endpoint lists subscribed or featured channels of a YouTube channel. Pagination scraping is supported."], ["List Channel Posts (Poll/Video/Image)", "This endpoint lists poll, video, or image posts of a YouTube channel. Pagination scraping is supported."], ["List Channel Videos/Shorts/Live", "This endpoint lists videos, shorts or live streams of a YouTube channel. Pagination scraping is supported."], ["Get Channel Details", "This endpoint fetches details of a YouTube channel."], ["List Hashtag Videos", "This endpoint lists YouTube videos related to the hashtag. Pagination scraping is supported."], ["List Post Comments", "This endpoint lists comments of a YouTube community post. Pagination scraping is supported."], ["Get Post Details", "This endpoint fetches details of a YouTube community post."], ["List Playlist Videos", "This endpoint lists **available** videos of a YouTube playlist (unavailable ones won't be listed by YouTube). Pagination scraping is supported. Thumbnails won't be blurred by age safety."], ["Get Playlist Details", "This endpoint fetches details of a YouTube playlist (user created playlist, album or radio playlist)."], ["Search for Channels", "This endpoint searches for YouTube channels. Pagination scraping is supported."], ["Search for Playlists", "This endpoint searches for YouTube playlists. Pagination scraping is supported. Thumbnails will not be blurred by age safety."], ["Search for Videos (Movies)", "This endpoint searches for YouTube videos (movies) with optional filters. Pagination scraping is supported. Thumbnails will not be blurred by age safety."], ["List Autocomplete Suggestions", "This endpoint lists autocomplete predictions depending on the keyword."], ["List Related Videos and Playlists", "This endpoint lists related videos and playlists of a YouTube video. Pagination scraping is supported. It's recommended to get the first page by calling `Video > Get Video Details`, and then get subsequent pages here."], ["Get Video Details", "This endpoint fetches full details of a YouTube video, including URLs of videos, audios, thumbnails and subtitles as well as related videos and playlists."], ["Translate, Convert, Download Subtitle", "This endpoint lets you translate, convert and download a subtitle of a YouTube video. Before doing this, please call endpoint `Video > Get Video Details` to obtain subtitle URLs."], ["List Video Comments", "This endpoint lists comments of a YouTube video. Pagination scraping is supported."]]}, "Currency Exchange": {"tool_desc": "Live currency and foreign exchange rates by specifying source and destination quotes and optionally amount to calculate.", "apis": [["listquotes", "List the available quotes in JSON Array this API support, all the available quotes can be used in source and destination quote. Refer exchange endpoint for more information how to call the currency exchange from the source quote to destination quote."], ["exchange", "Get Currency Exchange by specifying the quotes of source (from) and destination (to), and optionally the source amount to calculate which to get the destination amount, by default the source amount will be 1."]]}, "Country Location API": {"tool_desc": "The Country Location API is a RESTful API that allows developers to retrieve location data for any country in the world.", "apis": [["Country Location API", "The Country Location API is a RESTful API that allows developers to retrieve location data for any country in the world. Using a GET request with a country parameter, the API retrieves information about the specified country, such as its name, capital city, region, subregion, population, languages, and currencies."]]}, "Todo Lsit": {"tool_desc": "Make my own Todo Lsit", "apis": [["get my todo list", "get all my todo list title"], ["get todo list detail infomation", "get my todo list detail infomation,include title,content,due"]]}, "SSH Honeypot": {"tool_desc": "SSH honeypot data including logins, commands, and proxy requests", "apis": [["Commands Run", "Commands being run by honey pot logins"]]}, "CPF Validator": {"tool_desc": "Validates Brazilian CPF numbers.", "apis": [["Validate CPF number", "Checks if a CPF number is valid."], ["Generate CPF", "Generate a random valid CPF number."]]}, "Google Local Rank Tracker": {"tool_desc": "Real-Time overview of your Google Local Ranking across multiple coordinate points in a Grid View.", "apis": [["Keyword Search at Coordinates", "Make a Keyword search at a Coordinate (lat/lng) for all the business."], ["Calculate GeoGrid Coordinate Points", "Get all grid coordinate points based on a center geocoordinate point and distance arguments."], ["Keyword Search With Ranking", "Make a Keyword search at a Coordinate (lat/lng) for all the business and get the ranking of a specific business at that point. The ranking data is determined by the business place_id or business name."], ["GeoGrid Seach With Ranking", "Make a full grid search and get the ranking of a specific business in every coordinate point in the grid. The grid cells / entires in the results are ordered left-to-right then top-to-bottom.  Contains additional ranking data for the business by place_id or business name."]]}, "\ud83d\udd25 All-In-One Crypto Swiss Knife \ud83d\ude80": {"tool_desc": "Coins, NFTS, Portfolio tracker, Whales, airdrops, news, tweets, YT videos, reddit posts, DeFi protocols,, games, podcasts, events, gas price and more!", "apis": [["Top coins by market cap", "Get top coins by mCap"], ["Gas price", "get current ETH gas price"], ["Summary", "Get play 2 earn  market summary"], ["Free games", "get list of free games"], ["Upcoming", "get upcoming play 2 earn games"], ["Trending games", "get trending play 2 earn games"], ["Games", "Get play 2 earn games"], ["Reddit", "Get top latest crypto posts from Reddit from any subreddit.\nname= subreddit name from reddit url\nExample: https://www.reddit.com/r/dogecoin/"], ["Twitter", "Get crypto tweets by curated authors"], ["Youtube videos", "Get videos.\nBy default returns videos with 'crypto' keyword but  you can search for any keyword"], ["Whale Activities", "Get latest whale activities."], ["Whales rank", "Get biggest whale addresses"], ["Events", "Get crypto upcoming  events grouped by dates"], ["Projects / Staking/ Other Activities", "Get activities that address is involved in"], ["NFTs on address", "Get list of NFTs that address holds."], ["Net worth history (sparklines)", "Get sparklines with address net worth for chart rendering.\nReturns array of objects with timestamp and USD value"], ["Address transaction history", "Get transaction history of any address.\nSupported chains:     \"eth, bsc, matic, avax, okt, hmy, heco, klay, op, arb, ftm, xdai, cro, mobm, celo, aurora, fuse, evmos, cfx, kava\";"], ["Tokens Balances", "get balance of any address.\nsupportedChains: eth, bsc, matic, avax, okt, hmy, heco, klay, op, arb, ftm, xdai, cro, mobm, celo, aurora, fuse, evmos, cfx, kava"], ["Top holders", "Get top holders in each protocol"], ["Protocols", "Get protocols.\nYou can search by adding 'q' query param.\n\nSupported chains:  \"eth, bsc, matic, avax, okt, hmy, heco, klay, op, arb, ftm, xdai, cro, mobm, celo, aurora, fuse, evmos, cfx, kava\";"], ["Pools", "Get DeFi pools\nYou can get id from /protocols endpoint."], ["Total value locked", "Get TVL  in each chain"], ["Potential upcoming", "Get list of tokenless protocols that may airdrop soon"], ["Single Coin", "Get single coin info and history sparklines for rendering chart"]]}, "Solcast": {"tool_desc": "The Solcast API is a solar radiation and solar energy forecasting data service that is designed to be easy to use and to integrate with other systems that are looking for live solar radiation and solar PV energy output data.", "apis": [["Simple Radiation Forecast", "The simple radiation request returns detailed solar radiation data for the next week based only on your latitude and longitude."], ["Simple PV Power Forecast", "The simple PV power request returns a first-guess PV power output forecast, based on your specified latitude and longitude plus some basic PV system characteristics."]]}, "BaseConverterAPI": {"tool_desc": "An API that converts a number from one base to another", "apis": [["getAlphabets", "This endpoint is used for getting all the alphabets"]]}, "MLS Router": {"tool_desc": "The MLS Router API provides consumers access to MLS data feeds to develop apps using Property Listings and Headless Architecture.", "apis": [["List Properties", "top: this parameter determines the number of records on each page (max is 200, default is 10).\n\nskip: this parameter determines the page number (default is 0).\n\nselect: this parameter determines the needed fields (default is all). note: more than 20 fields cannot be selected explicitly.\n\nfilter: this determines the filtered criteria which are implemented by users. note: filters must be defined in Odata format.\n\norderby: this parameter sorts results by the defined field (default is ListingKey). note: this parameter accepts \u201casc\u201d and \u201cdesc\u201d as an argument (default is \u201casc\u201d)."]]}, "Users list": {"tool_desc": "Provide users data", "apis": [["Users list", "Get a list of users."]]}, "Track the mentions and conversations about your business": {"tool_desc": "Find your brand, competitor, or any other query mentions across the web daily, including websites, Twitter, Reddit, forums, blogs, and other", "apis": [["GetMentions", "Find your brand, competitor, or any other query mentions across the web"]]}, "MetaAPI Mindfulness Quotes": {"tool_desc": "Get a random quote about mindfulness from a list of 100 quotes.", "apis": [["getMindfulnessQuote", "Get a random quote about mindfulness from a list of 100 quotes."]]}, "Animals by API-Ninjas": {"tool_desc": "Detailed and interesting facts for thousands of animal species.", "apis": [["/v1/animals", "API Ninjas Animals API endpoint. Returns up to 10 results matching the input name parameter."]]}, "Hashing-Api": {"tool_desc": "Blake2B/MD5/SHA Text/File/Bytes Hashing", "apis": [["SHA Text Hash", "Hash text (as query-string-parameter) using SHA1, SHA256, SHA384 or SHA512 algorithm according to selected mode path-parameter [1, 256, 384, 512]."], ["MD5 Text Hash", "Hash text (as query-string-parameter) using MD5 algorithm."], ["Blake2B Text Hash with Key", "Hash text (as query-string-parameter) with private-key (as query-string-parameter) using blake2b algorithm."], ["Blake2B Text Hash", "Hash text (as query-string-parameter) using blake2b algorithm."]]}, "Date and Time": {"tool_desc": "An API to calculate the current date and time by a timezone, co-ordinates or address for those times when you cannot do this client-side.", "apis": [["getDateTimeByTimezone", "Get Date and time for a given timezone."], ["getDateTimeByAddress", "This endpoint internally calculates the co-ordinates and timezone to calculate the current date and time"], ["getDateTimeByCoOrdinates", "Get Date and time for a pair of given co-ordinates."]]}, "Reqres": {"tool_desc": "Reqres", "apis": [["Unknown", "List of unknown resources"]]}, "Simple Salvage Vin Check": {"tool_desc": "Provided by vinalert.com, this simple api will return true or false for any VIN depending on the salvage records that are found.", "apis": [["salvagecheck", "Returns true if the VIN was in a salvage database in the past. False otherwise. Must be a valid 17 digit vin from North America."]]}, "FilePursuit": {"tool_desc": "Search the web for files, videos, audios, eBooks & much more.", "apis": [["pursuit", "Search for a query in file names and path"], ["discover", "Discover every file crawled by FilePursuit using links and domains"]]}, "Unicode Codepoints": {"tool_desc": "A RESTful Interface to Unicode Data, this API gives easy and standardized access to all information from Codepoints.net.", "apis": [["Search", "Search for Codepoints. This API exposes the functionality of the main site\u2019s search."], ["Property", "Show one Property for All Codepoints"], ["Glyph", "Request a Sample Glyph"], ["Filter", "Filter a String, e.g. , by Unicode version or only uppercase letters"], ["Name", "Request a Codepoint\u2019s Name"], ["Codepoint", "show detailed information about a single codepoint. You can specify fields of interest with the \u201cproperty\u201d parameter: codepoint/1234?property=age,uc,lc"], ["Script", "Information about a Script"], ["Block", "Information about a Unicode block"], ["Transform", "Transform a String, e.g. , to upper-case, NFC, NFD, \u2026"], ["Plane", "Information about a Unicode plane"]]}, "Crime Data By ZipCode API": {"tool_desc": "The Crime Data By ZipCode API allows users to retrieve crime scores for a specific Zip Code in the US.", "apis": [["Get Crime Rates by ZIP", "Just with the ZIP code to analyze, you will be receiving a JSON object with an Overall Crime Scoring, and also a breakdown of different crimes that are assessed on the zone. \n\nGet information like:\n\n- \"Overall Crime Grade\".\n- \"Violent Crime Grade\".\n- \"Property Crime Grade\".\n- \"Other Crime Grade\".\n- \"Violent Crime Rates\".\n- \"Property Crime Rates\".\n- \"Other Crime Rates\".\n- \"Crime Rates Nearby\".\n- \"Similar Population Crime Rates\"."]]}, "Google Play API": {"tool_desc": "Detaied Google Play API.", "apis": [["Get App Reviews", "Returns app reviews. Uses cursor."], ["Apps From Category", "Returns apps from category."]]}, "Whois Lookup_v3": {"tool_desc": "This API pulls up-to-date records from the original data sources in real time, so you can have access to fresh data.", "apis": [["Check Similarity", "This endpoint Helps to check if two domains are similar.\n\nParemeters:\n> domain1 \n>domain2"], ["DNS Lookup", "This endpoint pulls DNS data from a domain\n\nParameters:\n> domain - The domain to search\n> rtype - The type of record to pull. Records availables: A, PTR, MX, CNAME, TXT,NS."], ["NS Lookup", "This endpoint returns IP from a domain. (NameServer)\n\nParameters\n-> search - The domain to search"], ["Domain Information", "This endpoint pulls the domain information, such as IP, expiration date and much more.\n\n\nParameters:\n-> search - The domain to search, don't add https or http. i.e: google.com"]]}, "Advanced SERP Operators": {"tool_desc": "Real-Time & Accurate Advanced Search Engine Results.", "apis": [["get-related-search-terms", "Related searches in Google search"], ["search-within-website", "Search within a website"], ["search-for-words-in-title-text-or-url", "Search for words in the title and text or URL"], ["find-pages-with-keywords", "Return results where the text appears in the body of the page."], ["get-related-keywords", "Scrape Google for all the related keywords that it shows at the bottom of the search results page, and show them to you along with the Volume and other SEO metrics in the Related Keyword Tool."], ["get-related-questions", "The People Also Ask For Keywords Tool. We scrape Google for all the keywords shown in the \"people also ask for\" boxes, that it shows when you click a link and then go back to the Google SERP."], ["find-blogs", "You can easily find blogs with specific search terms or phrases."], ["search-for-words-in-url", "Search for words in URL"], ["search-words-in-title", "Find a web page with certain words in the title"], ["find-sites-linking-to-competitions", "Find sites linking to competitors"], ["find-competition-mentions", "Find PR opportunities by finding competitor mentions"], ["find-pages-linked-to-specific-anchor-text", "finds pages that are linked to any specific anchor text."], ["search-related-sites", "Helps you find sites related to a specified URL."], ["search-by-filetype", "Search operator helps you to find results for a specific file type."], ["search-links-in-website", "Search for all links in a website"], ["find-keywords-in-url", "Return only results where the search words are included in the URL"], ["check-index-block-pages", "Check if Indexed Pages You Thought Were Blocked, are indeed not blocked."], ["search-a-range", "Search \"Android phone\" but only show results where the price ranges from $300-$500; also works for dates and other numbers"], ["number-indexed-pages", "how many pages (more specifically URLs) a search engine has in its index."], ["find-non-secure-pages", "Find non-secure pages (non-https) of a given domain name"]]}, "Consulta CNPJ Tempo Real": {"tool_desc": "API Tempo Real de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).", "apis": [["Gera Comprovante RFB", "Gera Comprovante da Receita Federal em PDF"], ["Consulta Estabelecimento", "Consulta CNPJ unificada a Receita Federal, Simples Nacional e Cadastro de Contribuintes"], ["Consulta Cadastro de Contribuintes", "Consulta as Inscri\u00e7\u00f5es Estaduais no Cadastro Centralizado de Contribuintes"], ["Gera Comprovante Simples", "Gera Comprovante em PDF do Simples Nacional"], ["Consulta Unificada", "Retorna todos os dados presentes no Comprovante de Inscri\u00e7\u00e3o do Cadastro Nacional da Pessoa Jur\u00eddica junto a Receita Federal"]]}, "Apple App Store Scraper": {"tool_desc": "Enter an AppStore app ID and retrieve app information like pricing, reviews, descriptions, and more.", "apis": [["Scrape AppStore", "Get details of App Store Listing"]]}, "phone validation": {"tool_desc": "Mobile phone validation with extended checks", "apis": [["/{phone}", "Get info on phone number"]]}, "Link Preview": {"tool_desc": "Open graph protocol data parser.", "apis": [["parse(minified) ogp meta data", "Parse minified link preview"]]}, "IP and Location Spoofing Detection": {"tool_desc": "Ensure that the individuals and merchants you\u2019re onboarding are not attempting to defraud you by hiding behind a fake IP address or pretending to be from a different location.", "apis": [["GET Call", "Used to fetch api result using the request id received in responses."]]}, "BreachDirectory": {"tool_desc": "Check if an email, username, password, or phone number was compromised in a data breach.", "apis": [["index", "Base URL for using each of BreachDirectory's API functions: auto, sources, and password."]]}, "ASIN Data": {"tool_desc": "", "apis": [["Category", "The Category Parameters are applicable when making a request with `type=category` to retrieve category results for an Amazon category. Categories can be specified either via passing an Amazon category URL in to the url parameter, or by passing a Category ID in the `category_id` and an Amazon domain in the `amazon_domain` parameter. The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nCategory results are retrieved from the category listing page on Amazon."], ["Offers", "The Offers Parameters are applicable when making a request with `type=offers` to retrieve seller Offers for a single product on Amazon - the product is specified using either the asin and `amazon_domain` parameters or the url parameter (where the url parameter contains a link to an Amazon product offers page). The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nOffers are retrieved from the offers listing popup window for a single product on Amazon."], ["Reviews", "The Reviews Parameters are applicable when making a request with `type=reviews` to retrieve customer Reviews for a single product on Amazon - the product is specified using either the asin and `amazon_domain` parameters or the url parameter (where the url parameter contains a link to an Amazon reviews page). The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nReviews are retrieved from the customer reviews page for a single product on Amazon."], ["Search", "The Search Parameters are applicable when making a request with `type=search` to retrieve search results for an Amazon domain - the Amazon domain is specified using the `amazon_domain` parameter and the search term is specified in the `search_term` parameter. The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nSearch results are retrieved from the search results page on Amazon."], ["Product", "The Product Parameters are applicable when making a request with `type=product` to retrieve details of a single product on Amazon - the product is specified using either the asin and `amazon_domain` parameters or the url parameter (where the url parameter contains a link to an Amazon product page). The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nProduct details are retrieved from the product page for a single product on Amazon."]]}, "BigBox": {"tool_desc": "", "apis": [["Product", "The Product Parameters are applicable when making a request with `type=product` to retrieve details of a single product on Home Depot - the product is specified using either the item_id parameter or the url parameter (where the url parameter contains a link to a Home Depot product page). The parameters should be appended as querystring parameters to the Home Depot Product Data APIGETHTTP request.\n\nProduct details are retrieved from the product page for a single product on Home Depot"], ["Reviews", "The Reviews Parameters are applicable when making a request with `type=reviews` to retrieve customer Reviews for a single product on Home Depot - the product is specified using either the item_id or url parameter (where the url parameter contains a link to a Home Depot product page). The parameters should be appended as querystring parameters to the Home Depot Product Data API GET HTTP request.\n\nReviews are retrieved from the customer reviews page for a single product on Home Depot."], ["Questions", "The Questions Parameters are applicable when making a request with type=questions to retrieve customer Questions for a single product on Home Depot - the product is specified using either the item_id or url parameter (where the url parameter contains a link to a Home Depot product page). The parameters should be appended as querystring parameters to the Home Depot Product Data APIGETHTTP request.\n\nQuestions are retrieved from the customer questions page for a single product on Home Depot."], ["Category", "The Category Parameters are applicable when making a request with `type=category` to retrieve category results from Home Depot. The category is specified in the category_id parameter. The parameters should be appended as querystring parameters to the Home Depot Product Data API GET HTTP request.\n\nCategory results are retrieved from the Category results page on Home Depot."], ["Search", "The Search Parameters are applicable when making a request with `type=search` to retrieve search results from Home Depot. The search term is specified in the search_term parameter. The parameters should be appended as querystring parameters to the Home Depot Product Data API GET HTTP request.\n\nSearch results are retrieved from the Search results page on Home Depot."]]}, "Email Search": {"tool_desc": "Simple and Powerful web search for emails - get emails found on the web given a query and an email domain in real-time.", "apis": [["Search Emails", "Search the web for emails using a query and email domain and get up to 5,000 email addresses."]]}, "Axesso - Facebook Data Service": {"tool_desc": "Axesso API to query facebook data like posts, comments and corresponding replies.", "apis": [["page info", "Fetch information for a page like followers and many more"], ["post details", "Fetch post details for a single post"], ["comments", "Fetch comments for a given feedbackId (returned in the post endpoint). For pagination the optional query parameter \"after\" can be used by including \"comments.data.feedback.page_info.end_cursor\" from the previous response."], ["replies", "Fetch comments for for given feedbackId which is located in \"data.feedback.display_comments.edges.node.feedback.id\" in the post or comments endpoint. For pagination the optional query parameter \"after\" can be used by including \"comments.data.feedback.page_info.end_cursor\" from the revious response."], ["posts", "Query posts by providing url e.g. https://www.facebook.com/longhornsteakhouse/posts/.  In the response the field \"nextUrl\" have to passed to the next request to fetch the next posts."]]}, "Industry NAICS Search": {"tool_desc": "Find the NAICS code base on free  search or find all description of industry for a given NAICS code", "apis": [["Filter and Query NAICS & Description", "This endpoint will allow you to search by freeform text, eg. Hotel and get all the list of NAICS code, hash, and description back.\nYou can also filter the search if you have an NAICS code and want to get the description and the hash of the industry."]]}, "FreeCurrencyAPI - free currency data": {"tool_desc": "Our free currency conversion API is the perfect tool to handle your exchange rate conversions.", "apis": [["/rates", "Getting the latest foreign exchange rates"]]}, "Store Apps": {"tool_desc": "Extremely Fast and Simple API to search and list apps/games top charts on the Google Play Store and get their full details and reviews.", "apis": [["Top Paid Apps", "Top paid apps chart."], ["App Details", "Get full app details."], ["Search", "Search for apps on the Store."], ["Top Free Apps", "Top free apps chart."], ["Top Grossing Games", "Top grossing games chart."], ["Top Free Games", "Top free games chart."], ["App Reviews", "Get all app reviews."], ["Top Grossing Apps", "Top grossing apps chart."], ["Top Paid Games", "Top paid games chart."]]}, "Homeless Shelter": {"tool_desc": "Introducing our National Registered Homeless Shelters API for the United States, featuring an extensive and up-to-date database.", "apis": [["By Zip Code", "Search Homeless Shelters by Zip Code"], ["By State & City", "Search Homeless Shelters by State & City"], ["By Location", "Search Homeless Shelters by Location Coordinate and Radius"]]}, "WikiHow": {"tool_desc": "Retrieve random out-of-context text and images from WikiHow articles", "apis": [["Steps", "Gets a random selection of WikiHow steps."], ["Images", "Gets the src URL for random WikiHow images"]]}, "Article Extractor": {"tool_desc": "Get main article content and meta data from news articles or blog entries.", "apis": [["GET /article/parse", "Extract main article and meta data from a news entry or blog post."]]}, "Fake Identity Generator": {"tool_desc": "The most complete and cheap Fake Identity Generation API", "apis": [["GenerateRandomIdentity", "Use this endpoint to generate a random fake identity, click the test button and enjoy the informations generated!"]]}, "OG Link preview": {"tool_desc": "Link preview uses Open Graph protocol to get metadata from a website such as a title, description, images, favicon and raw data", "apis": [["Scrape Open graph details", "Scrape website with Open Graph protocol to get metadata from a website such as a title, description, images, favicon and raw data"]]}, "Zillow_v2": {"tool_desc": "Access US and CA property data in JSON, CSV, or Excel formats.", "apis": [["Search for properties by coordinates", "Search for filtered properties by coordinates.\nYou can select the output format (JSON , CSV , XLSX) using the optional \"output\" parameter."], ["List of properties by URL", "Get a list of properties by providing the zillow search results URL\nYou can select the output format (JSON , CSV , XLSX) using the optional \"output\" parameter."], ["Search for properties", "Search for filtered properties by address, neighborhood, city, or ZIP code.\nPS : Searching by address would return the details of the property instead of a list\nFor a list of properties, you can select the output format (JSON , CSV , XLSX) using the optional \"output\" parameter."], ["Zestimate history", "Zestimate history by zpid"], ["Photos", "Returns a property's photos with different sizes and types."], ["Property details", "Get a property's details by its zpid"], ["Walk, Transit and Bike Score", "Get Walk, Transit and Bike Score of a property by zpid"], ["Rent Zestimate and Comparable properties", "Returns a property's rent zestimate and it's comparable properties in the same area."], ["Agent's active listings", "Get agent's active listings by zuid"], ["Agent Reviews", "Get agent reviews by the agent's zuid"], ["Agent's rental listings", "Get agent's rental listings by zuid"], ["Agent details by username", "Get agent's details by username(contact infos, active listings and reviews etc).\nPS : username is the profile link \nExample : \nusername :  Pardee-Properties\nfor https://www.zillow.com/profile/Pardee-Properties/"], ["Search for agents", "Search for agents by location and name"]]}, "Crops": {"tool_desc": "Plants for agricultural purposes in Spain: info about taxonomy, growing period, fruit type, categorization, and other.", "apis": [["Crops list", "This endpoint returns back all crops that are grown in Spain, being possible to filter them through query string (see Optional Parameters)."]]}, "Youtube Trending": {"tool_desc": "Unofficial API to gather video information from the trending section of Youtube", "apis": [["trending", "Gather Trending Videos from Youtube"]]}, "Website Analyze and SEO Audit (PRO)": {"tool_desc": "Analyze website and get seo audit report and speed report , onpage and offpage reports, informations about domain , hosting and more", "apis": [["Loading Speed Data", "Website Loading speed Related Information"], ["Onpage SEO Analyze", "Get Website audit data"]]}, "Country List": {"tool_desc": "Get All Country List,  (Get State  and District List of India)", "apis": [["Get All Country List", "Nodes:\niso: iso\ncountryname: country name\nnicename: nicename\niso3: iso3\nnumcode: numcode\nphonecode:phonecode"]]}, "Awesome RSS": {"tool_desc": "Generating RSS is super easy", "apis": [["/v1/feeds", "List your current RSS"], ["/v1/{feedId}", "Get RSS content\n\n**If you use an RSS reader**\n\nIf you use RapidAPI, you will need to include two header parameters, *X-RapidAPI-Key* and *X-RapidAPI-Host*.\n\nI know this may not be friendly to RSS readers, so I suggest you use `https://awesome-rss.cys.fyi/api/v1/{feedId}` instead to get your content. Then add the link to your reader."]]}, "seo api": {"tool_desc": "Simple SERP API with accurate, real-time search engine results by location, device, and language.", "apis": [["Video", "Perform Video Search\n\nParameters\n----------\nquery : A url encoded query string, for reference checkout https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters\n\nReturns\n-------\njson: a list of results with the link, description, and title for each result"], ["Search B", "Perform SEO search for secondary search engine"], ["Job", "Perform Job Search\n\nCurrently only supports jobs in North America\n\nParameters\n----------\nquery : Position Title and Location (optional). The query should be url encoded\n\nReturns\n-------\njson: a list of jobs with their link to apply, description, and title for each job opportunity"], ["SERP GET", "Perform Google Search and search for website in Search Engine Results Pages (SERP)\n\nParameters\n----------\nquery : the string query to perform search. supports advance queries. Check out https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters guide for formatting, it is recommended to set the query `&num=100`\n\nReturns\n-------\njson: a list of results with the query, website, searched_results, and position. json[\"position\"] will be set to -1 if website is not found in results"], ["Images", "Perform Google Image Search\n\nParameters\n----------\nquery : the string query to perform search. supports advance queries.\n\nReturns\n-------\njson: a list of results with the link, description, title, and image thumbnail for each result"], ["Crawl", "Perform Google Search\n\n Parameters\n----------\nquery : the string query to perform search. supports advance queries. Check out https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters guide for formating\n\nReturns\n-------\njson: a the html source of the results page"], ["Search", "Perform Google Search\n\nParameters\n----------\nquery : A url encoded query string, for reference checkout https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters\n\nReturns\n-------\njson: a list of results with the link, description, and title for each result"], ["Scholar", "Perform Scholar Search\n\nParameters\n----------\nquery : A url encoded query string, for reference checkout https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters\n\nReturns\n-------\njson: a list of results with the link, description, and title for each result"], ["News", "Perform Google News Search\n\n Parameters\n----------\nquery : the string query to perform search for Google news. A simple query for `president` will be `q=president`. An example of multiple keyword would be `q=news+about+presdient+trump`. News can also be filtered by country and language. For `US` news and in English the query will be `q=trump&ceid=US:en` for news in Great Britian the query will be `q=trump&ceid=GB:en`\n\nReturns\n-------\njson: {\"feed\": { \"title\" : \"trump\" ...} , \"entites\": [ {\"title\" : \"Trump doubles down on divisive messaging in speech to honor Independence Day - CNN\", \"links\": []} ...]}"], ["Products", "Search for products rankings"], ["Status", "It \"status\" == true then API is up"]]}, "PlantWise": {"tool_desc": "Streamline plant care in your applications.", "apis": [["plant", "Get all information regarding a specific plant type"]]}, "DataEstado": {"tool_desc": "Un esfuerzo por recopilar informaci\u00f3n de las instituciones p\u00fablicas de la Administraci\u00f3n Central del Estado chileno.", "apis": [["Ministerio espec\u00edfico", "Obtiene el listado de un s\u00f3lo ministerio"], ["Listar todos", "Obtener listado de todos los ministerios y subsecretar\u00edas."]]}, "Real-Time News Data": {"tool_desc": "Extremely Fast and Simple API to get top news globally or per topic and search for news by query and geographic area in real-time.", "apis": [["Language List", "Get valid languages for a country code, to be used with all other APIs."], ["Topic Headlines", "Get the latest news headlines for a topic."], ["Top Headlines", "Get the latest news headlines/top stories for a country."], ["Search", "Search news articles by query with an option to limit the results to a specific time range."], ["Local Headlines (Geo)", "Get local, geo based headlines"], ["Topic News By Section", "Get topic news article in a specific section."]]}, "FastYTAPI": {"tool_desc": "Fetch YouTube info: channel, videos, video recommendations, search for channels and special endpoint: recommended channels for a given channel.", "apis": [["Video and recommendations", "Returns details about a video and the first page or recommendations.\nPass the returned `pagination` of this endpoint into the \"Recommended videos (w/ pagination)\" endpoint to obtain the next recommendations."], ["Channel's videos/streams/shorts ids (w/ pagination)", "Returns the list of videos/streams(a.k.a. lives)/shorts ids with some basic information for each.\n\nPagination is possible, which allows to retrieve all videos/streams/shorts of a channel with several subsequent requests. For this, provide the `pagination` received in the previous request to this endpoint.\n\nResults are returned ordered by upload date, from latest to oldest."], ["Video recommendations (w/ pagination)", "Return video recommendations given a videoId."], ["Search channel", "Returns list of channel when searching YouTube for the provided query."], ["Recommended channels", "Returns a list of recommended channels for the provided channel.\n\nNote: this endpoint requires some heavier computations, response time might take ~5 seconds."]]}, "Zillow Base": {"tool_desc": "[IMPROVED SEARCH API] These APIs provide a powerful and user-friendly real estate search feature.", "apis": [["locationSuggestions", "Search for a location"], ["locationSuggestions_v2", "Search for a location"], ["getZipCodeByCounty", "Get zip code by county"], ["getLocationInfoByZipCode", "Get location information by zip code"], ["getZipCodeByCity", "Get zip code by city"]]}, "ASN Details": {"tool_desc": "Get details about Autonomous System Numbers (ASN), find ASN of IPs/CIDRs, find ASNs of each country etc", "apis": [["get_details_by_asn_number", "Enter an ASN Number (Integer) to get all of its details such as IP ranges, Country, Organization, CIDR."], ["get_asn_by_country", "Enter country code (ISO 2 letter code such as US, GB etc) to get all the ASNs associated with that country."], ["get_asn_by_ip", "Enter an IP Address (Both IPv4 or IPv6 Addresses allowed) to get its ASN number, Organization, Country etc."]]}, "Thesaurus by API-Ninjas": {"tool_desc": "Get synonym and antonyms for any word.", "apis": [["/v1/thesaurus", "API Ninjas Thesaurus API endpoint. Returns a list of synonyms and a list of antonyms for a given word."]]}, "Age Calculator": {"tool_desc": "Returns Age calculation based on requested date.", "apis": [["Age Calculator", "Calculates age based on the requested date. Accepts different formats and Time Zones."], ["Usable Time Zones", "Call this endpoint to view the current endpoint. Find the appreciate time zone for your location. \nExample: US/Eastern, US/Pacific, Europe/London ..."]]}, "OpenSea Data Query": {"tool_desc": "Get opensea data without any api key", "apis": [["Retrieve collection offers V2", "This endpoint is used to get collection offers for a specified collection."], ["Retrieve all offers V2", "get all open offers for a collection"], ["Retrieve all listings V2", "get all active listings for a collection"], ["Retrieve offers V2", "This endpoint is used to fetch the set of active offers on a given NFT for the Seaport contract."], ["[Deprecated] Retrieving listings", "Used to fetch active listings on a given asset."], ["Retrieve trait offers V2", "This endpoint is used to get all trait offers for a specified collection."], ["[Deprecated] Retrieving offers", "Used to fetch active offers for a given asset."], ["[Deprecated] Retrieving orders", "How to fetch orders from the OpenSea system."], ["Retrieve listings V2", "This endpoint is used to fetch the set of active listings on a given NFT for the Seaport contract."], ["Retrieving a collection", "Used for retrieving more in-depth information about individual collections, including real time statistics like floor price."], ["Retrieving collection stats", "Use this endpoint to fetch stats for a specific collection, including realtime floor price statistics"], ["Retrieving bundles", "Bundles are groups of items for sale on OpenSea. You can buy them all at once in one transaction, and you can create them without any transactions or gas, as long as you've already approved the assets inside."], ["Retrieving collections", "The `/collections` endpoint provides a list of all the collections supported and vetted by OpenSea. To include all collections relevant to a user (including non-whitelisted ones), set the owner param.\n\nEach collection in the returned area has an attribute called primary_asset_contracts with info about the smart contracts belonging to that collection. For example, ERC-1155 contracts maybe have multiple collections all referencing the same contract, but many ERC-721 contracts may all belong to the same collection (dapp).\n\nYou can also use this endpoint to find which dapps an account uses, and how many items they own in each - all in one API call!"], ["Retrieving assets", "To retrieve assets from our API, call the `/assets` endpoint with the desired filter parameters.\n\nAuctions created on OpenSea don't use an escrow contract, which enables gas-free auctions and allows users to retain ownership of their items while they're on sale. So this is just a heads up in case you notice some assets from opensea.io not appearing in the API."], ["Retrieving a contract", "Used to fetch more in-depth information about an contract asset."], ["Retrieving events", "The `/events` endpoint provides a list of events that occur on the assets that OpenSea tracks. The \"event_type\" field indicates what type of event it is (transfer, successful auction, etc)."]]}, "Quotes_v2": {"tool_desc": "A Quotes API is an application programming interface that allows developers to access and retrieve a collection of quotes.", "apis": [["Quotes by Keywords", "Returns Quotes containing specified keyword"], ["Get Available Authors", "Returns list of available authors"], ["Quotes By Authors", "Returns the quotes by specified authors"], ["Quote of The Day", "Returns Quote of the Day"], ["Random Quotes", "Get a Random Quote on Each Request"]]}, "Unique Username Generator By Pizza API": {"tool_desc": "The Unique Username API Service provided by PIZZA API is a simple tool that generates unique usernames for users during the registration process of any app or website.", "apis": [["Random Username Generator", "Returns a Random and unique username everytime"]]}, "Thai Lottery Result": {"tool_desc": "Thai lottery results API, Provided by Thailand-API.com", "apis": [["Lottery Results by Date ID", "Lottery Results by date id - \u0e1c\u0e25\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e23\u0e32\u0e07\u0e27\u0e31\u0e25"], ["Latest Draw Date", "Get latest draw date information - \u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e27\u0e31\u0e19\u0e2b\u0e27\u0e22\u0e2d\u0e2d\u0e01\u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14"], ["Draw Date Listing", "Draw Date Listing - \u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e27\u0e31\u0e19\u0e2b\u0e27\u0e22\u0e2d\u0e2d\u0e01"]]}, "Railway Periods": {"tool_desc": "An API to calculate the railway period of a UTC date in milliseconds since epoch (Unix timestamp).", "apis": [["Get Railway Period for UTC date", "This endpoint will return railway period between:\n{\"millis\":\"0\",\"railwayPeriod\":\"1969-1970 P10\"} (01/01/1970 00:00:00)\nAnd\n{\"millis\":\"8640000000000\",\"railwayPeriod\":\"2243-2244 P8\"} (17/10/2243 00:00:00)"]]}, "Cities Cost of Living and Average Prices API": {"tool_desc": "The Cities Cost of Living and Average Prices API provides data on the cost of living and average prices of goods and services in various cities around the world.", "apis": [["Cost Of Living By City", "This endpoint will retrieve the average prices and cost of living for the desired city. Declare country and city."], ["Cost of Living By Country", "This endpoint will retrieve the average cost of living in a certain country. This endpoint will calculate the average prices and cost of living across the given country."], ["Get Cities by Country", "This endpoint will retrieve all the supported cities in a given country."], ["Get Countries", "Retrieve all the supported countries in this API."]]}, "Domain name search": {"tool_desc": "Search 600m+ domain names in use/retired by partial match.", "apis": [["Domain name search", "Search 600m+ root domains (domain names) by partial match"]]}, "CountryByIP": {"tool_desc": "Get country code by providing IP address (IPV4 & IPV6).", "apis": [["getCountryByIP", "Get Country code by IP address. IPV4 & IPV6 both are supported."]]}, "AI detection": {"tool_desc": "Quickly determine the authenticity of your data with just a single API call.", "apis": [["Check text", "This endpoint allows you to easily submit text for analysis and determine if it was generated by a machine or a human. Just please **do not use any special characters** - it wont work :) . \nNote: **The results start to get reliable after around 50 tokens.**"]]}, "Captcha": {"tool_desc": "Metropolis can solve any Captcha for you.", "apis": [["solve", "Solve a Captcha given an image URL"]]}, "Best Backlink checker API": {"tool_desc": "Best Backlink checker, You can check Top backlinks, New backlinks, Poor Backlinks, etc", "apis": [["Exact URL (Non English)", "Get backlinks of a specific URL. Non English URL's only"], ["New Backlinks", "Get the list of top backlinks and counts"], ["Poor Backlinks", "Get the list of top backlinks and counts"], ["Top Backlinks", "Get the list of top backlinks and counts"], ["Exact URL", "Get backlinks of a specific URL."]]}, "YouTube Search (Unlimited)": {"tool_desc": "Get YouTube Search Results Without API Key or Quota Restrictions", "apis": [["Search Results", "Get Top 22 YouTube Search Results with Video ID, URL, Thumbnail, Title & Duration. No API Key/No Quota Limits"]]}, "Domain Info": {"tool_desc": "This API returns informations on any domain online.", "apis": [["Full information", "This endpoint returns the full information on the domain."], ["Check domain info", "This endpoint returns the domain information."]]}, "Zillow Data v2": {"tool_desc": "Real-time data, unofficial API Zillow com, search for-sale and rental listings\n\nZillow is a leading real estate website in the United States that provides information on buying, selling, renting, and investing in properties such as homes, apartments, and condos.", "apis": [["Autocomplete", "Find location for search"]]}, "Zip Code Master": {"tool_desc": "Profile and demographic data for every US ZIP code in JSON format.", "apis": [["Get ZIP code summary", "Retrieve a summary profile for the provided ZIP code."], ["Get ZIP code detail", "Retrieve a detailed profile and demographic data for the provided ZIP code."]]}, "Yandex Video API": {"tool_desc": "\ud83d\udd25 Unlock a world of video data with our Yandex SERP API.", "apis": [["Get video from yandex search results", "Use advanced filtering to get specific video from yandex! Remember to set from which domain you want data. Default is yandex.com but  yandex.ru, .by, .kz, .uz are also available. Set page number in order to get more results. 0 is the first page, 1 is second and so on."]]}, "Rainforest": {"tool_desc": "", "apis": [["Author Page", "The Author Page Parameters are applicable when making a request with type=author_page to retrieve data from the authors page single author on Amazon - the author is specified using either the author asin and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon authors page). The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nAuthor Page data is retrieved from the author page for a single author on Amazon."], ["Also Bought", "The Also Bought Parameters are applicable when making a request with type=also_bought to retrieve also bought details for a single product on Amazon - the product is specified using either the asin and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon product page). The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nAlso bought details are retrieved from the product page for a single product on Amazon. An type=also_bought request will automatically paginate through all of the pages of also-bought data and return every also bought result."], ["Offers", "Offers are retrieved from the offers listing popup window for a single product on Amazon.\n\nThe Offers Parameters are applicable when making a request with type=offers to retrieve seller Offers for a single product on Amazon - the product is specified using either the asin and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon product offers page). The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request."], ["Questions", "The Questions Parameters are applicable when making a request with type=questions to retrieve customer Questions & Answers for a single product on Amazon - the product is specified using either the asin and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon product page). The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nQuestions are retrieved from the customer questions page for a single product on Amazon"], ["Deals", "The Deals Parameters are applicable when making a request with type=deals to retrieve Lightning Deal / Daily Deals results for an Amazon lightning deals / daily deals / 'goldbox' page. The category of deals and Amazon domain are specified using the category_id and amazon_domain parameter. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nDeals results are retrieved from the deals listing page on Amazon.\n\nYou can retrieve category IDs for each amazon_domain using the Categories API. Category IDs are also returned in the categories array in each type=deals response.\n\nMultiple category IDs can be supplied, comma seperated, in the category_id parameter. For example, to request deals for Beauty (3760911) and Electronics (172282) categories on amazon.com the parameters would be category_id=3760911,172282&amazon_domain=amazon.com.\n\nIf you wish to retrieve Deals from the deals homepage for a given amazon_domain, simply omit the category_id parameter entirely."], ["Autcomplete", "When making a request with the type parameter set to type=autocomplete Rainforest API will return autocomplete suggestions for the search term specified in the search_term parameter, on the Amazon domain specified in the amazon_domain parameter.\nYou may scope your autocomplete request to an Amazon autocomplete alias (synonymous with a product area or top-level category) by specifying the alias using the autocomplete_alias parameter. The available autocomplete_alias values vary depending on the amazon_domain used. You can find a full list of all autocomplete aliaes, per Amazon-domain, in the autocomplete aliases reference."], ["ASIN to GTIN", "When making a request with the type parameter set to type=asin_to_gtin Rainforest API will attempt to look up GTIN / EAN / UPC / ISBN numbers for the ASIN and Amazon domain specified in the asin and amazon_domain parameters."], ["Formats & Editions", "The Formats & Editions Parameters are applicable when making a request with the type parameter set to type=formats_editions Rainforest API will return data from the Formats & Editions popup (typically shown on books and collectables product pages to list all of the ASINs of different formats of the current ASIN) for the product specified in either the asin and amazon_domain parameters or the url parameter. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nFormats & Editions data is retrieved from the Formats & Editions popup for a single product on Amazon"], ["Question Answers", "The Question Answers Parameters are applicable when making a request with type=question_answers to retrieve all answers for a single question on Amazon - the question is specified using either the question_id and amazon_domain parameters or the url parameter (where the url parameter contains a link to a question answers page). The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nQuestion Answers are retrieved from the customer question answers page for a single question on Amazon."], ["Reviews", "The Reviews Parameters are applicable when making a request with type=reviews to retrieve customer Reviews for a single product on Amazon - the product is specified using either the asin and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon reviews page). The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nReviews are retrieved from the customer reviews page for a single product on Amazon."], ["Reviewer Comments", "The Review Comments Parameters are applicable when making a request with type=review_comments to retrieve customer Review Comments for a single customer review on Amazon - the review is specified using the review_id, asin and amazon_domain parameters. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nReview comments are retrieved from the customer reviews page for a single customer review for a single product on Amazon."], ["Wishlist", "The Wishlist Parameters are applicable when making a request with the type parameter set to type=wishlist Rainforest API will return data from the Wishlist page for the wishlist specified in either the wishlist_id and amazon_domain parameters or the url parameter. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nWishlist data is retrieved from the Wishlist popup."], ["Charts", "The Charts parameters are applicable when making a request with type=charts to retrieve Charts results. The Charts page can be specified using the url parameter. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nCharts results are retrieved from the charts page on Amazon."], ["Store", "The Store parameters are applicable when making a request with type=store to retrieve Brand Store results for a Brand Store. The Brand Store can be specified either by the url parameter, or by a combination of the store_id and amazon_domain parameters. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request."], ["Seller Products", "The Seller Products Parameters are applicable when making a request with type=seller_products to retrieve seller product listing results for a single seller on Amazon - the seller is specified using either the seller_id and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon seller product listing page). The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nSeller product listing results are retrieved from the seller product listings page for a single seller on Amazon. You can retrieve the seller_id value for a given seller from other Rainforest requests, such as type=offers requests."], ["Seller Feedback", "The Seller Feedback Parameters are applicable when making a request with type=seller_feedback to retrieve seller customer feedback details for a seller on Amazon - the seller is specified using the seller_id and amazon_domain parameters. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nSeller feedback details are retrieved from the feedback section of the seller profile page. You can retrieve the seller_id value for a given seller from other Rainforest requests, such as type=offers requests.\n\nA maximum of 5 seller feedback records can be returned per request. You can paginate through multiple pages of seller feedback records using the page parameter. Inspect the pagination.has_next_page property to determine whether there is a next page of results to retrieve."], ["Seller Profile", "The Seller Profile Parameters are applicable when making a request with type=seller_profile to retrieve seller profile details for a single seller on Amazon - the seller is specified using either the seller_id and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon seller profile page). The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nSeller profile details are retrieved from the seller profile page for a single seller on Amazon. You can retrieve the seller_id value for a given seller from other Rainforest requests, such as type=offers requests.\n\nYou can use subsequent seller products and seller feedback requests to retrieve iterate all of the products and customer feedback from a given seller."], ["Reviewer Profile", "When making a request with the type parameter set to type=reviewer_profile Rainforest API will return details of reviewer specified in either the reviewer_id and amazon_domain parameters or the url parameter.\n\nReviewer profile details are retrieved from the reviewer profile page. You can retrieve the reviewer_id value for a given reviewer from other Rainforest requests, such as type=reviews requests."], ["Bestsellers", "The Bestsellers Parameters are applicable when making a request with type=bestsellers to retrieve Bestseller results from an Amazon bestsellers page - the bestsellers page is specified either using the category_id and amazon_domain parameters (where category_id is a Category ID returned from the Categories API, or by using the url parameter. The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nNote that, if using the url parameter it should be url-encoded.\n\nBestsellers results are retrieved from the bestsellers listing page on Amazon. Rainforest supports all types of Amazon Bestseller pages, bestsellers, new releases, movers & shakers, most wished for and gift ideas."], ["Category", "The Category Parameters are applicable when making a request with type=category to retrieve category results for an Amazon category. Categories can be specified either via passing an Amazon category URL in to the url parameter, or by passing a Category ID in to the category_id (where the category_id is returned from the Categories API) and an Amazon domain in to the amazon_domain parameter. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request."], ["Search", "The Search Parameters are applicable when making a request with type=search to retrieve search results for an Amazon domain - the Amazon domain is specified using the amazon_domain parameter and the search term is specified in the search_term parameter. The parameters should be appended as querystring parameters to the Product Data API GET HTTP request."], ["Single Product", "The Product Parameters are applicable when making a request with type=product to retrieve details of a single product on Amazon - the product is specified using either the asin and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon product page). The parameters should be appended as querystring parameters to the Product Data API GET HTTP request"]]}, "User": {"tool_desc": "Instagram users", "apis": [["Instagram User", "Here you can find the default value of an Instagram users details and test your API successfully."]]}, "Youtube v3 Lite": {"tool_desc": "Lite version of Youtube Data API v3.", "apis": [["Channel Videos/Playlists", "Get channel videos or playlists.\nQuota cost is 1."], ["Trending/Charts", "Get Trending Videos list or Chart.\nQuota cost is 1."], ["Search", "Get search results.\nQuota cost is 1."], ["Comments", "Get comments list.\nQuota cost is 1."], ["Playlist Items", "Get playlist items.\nQuota cost is 1."], ["Playlists", "Get playlist details.\nQuota cost is 1."], ["Related Videos", "Get related videos list.\nQuota cost is 1."], ["Videos", "Get YouTube Video details.\nQuota cost is 1. For statistics part, quota is +1."], ["Channels", "Get channel details.\nQuota cost is 1."]]}, "Random Chunk API": {"tool_desc": "A simple random picker for names, movies, TV shows, quotes, and numbers.", "apis": [["getRandomColor", "Get a random quote."], ["getRandomQuote", "Get a random quote."], ["getRandomArray", "Generate a random array with numbers, words or mixed values."], ["getRandomMovie", "Returns random movies from over 1000 movie list."], ["getRandomUser", "Returns random user data such as name, e-mail, etc."], ["getRandomName", "Returns random people's names.."], ["getRandomPassword", "Get random password string."]]}, "Vessel Data": {"tool_desc": "Global live on board vessels information.", "apis": [["Get Vessel Photo", "Image of vessel based on given ship id.\n*Image might not be display correctly here due to base64 issue of Test Endpoint, but it work indeed.*"], ["Get All Vessels", "Return all available on board vessels.\nVisit our [demo site](https://core-api.net/vessel/map.html)"], ["Get Vessel Info", "Individual on board vessel info based on given ship id.\nVisit our [demo site](https://core-api.net/vessel/map.html)"], ["Get Vessels by Geo Position", "Return available vessels within 300 nautical miles radius of the given geo coordinate.\nVisit our [demo site](https://core-api.net/vessel/map.html)"], ["Get Vessels by Ship Name", "Return vessels by its name.\nVisit our [demo site](https://core-api.net/vessel/map.html)"]]}, "GeoDB Cities": {"tool_desc": "Get global city, region, and country data.", "apis": [["Place Distance", "Gets this place's distance to the given place."], ["Place Time", "Get this place's current time in ISO-8601 format: HHmmss.SSSZ"], ["Place Date-Time", "Get this place's current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ"], ["Place Located In", "Get the details for the containing populated place (e.g., its county or other administrative division), including location coordinates, population, and elevation above sea-level  (if available). \n\nCurrently, this data is highly dependent on whether the Wikidata **locatedIn** relation is properly defined. If you see an issue, please propose a change to the corresponding Wikidata entry."], ["Place Details", "Get the details for a specific place, including location coordinates, population, and elevation above sea-level (if available)."], ["City Date-Time", "Get the city current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ"], ["City Located In", "Get the details for the containing populated place (e.g., its county or other administrative division), including location coordinates, population, and elevation above sea-level  (if available). \n\nCurrently, this data is highly dependent on whether the Wikidata **locatedIn** relation is properly defined. If you see an issue, please propose a change to the corresponding Wikidata entry."], ["Cities", "Find cities, filtering by optional criteria. If no criteria are set, you will get back all known cities with a population of at least 1000."], ["Places Near Location", "Get places near the given location, filtering by optional criteria."], ["Places Near Place", "Get places near the given place, filtering by optional criteria."], ["Country Places", "Get the places in the given country."], ["Country Region Divisions", "Get the administrative divisions in the given region."], ["Country Region Cities", "Get the cities in the given region."], ["Country Region Details", "Get the details of a specific country region, including number of cities."], ["Country Regions", "Find regions in a specific country, filtering by optional criteria. Regions can be states, provinces, districts, or otherwise major political divisions."], ["Country Details", "Get the details for a specific country, including number of regions."], ["City Time", "Get the city current time in ISO-8601 format: HHmmss.SSSZ"], ["City Distance", "Gets the distance to the given city."], ["Cities Near Location", "Get cities near the given location, filtering by optional criteria."], ["Admin Division Details", "Get the details for a specific administrative division, including location coordinates, population, and elevation above sea-level (if available)."], ["Cities Near Division", "Get cities near the given administrative division, filtering by optional criteria."], ["Admin Divisions", "Find administrative divisions, filtering by optional criteria. If no criteria are set, you will get back all known divisions with a population of at least 1000"], ["Country Region Places", "Get the places in the given region."], ["Places", "Find places, filtering by optional criteria. If no criteria are set, you will get back all known places."], ["Countries", "Find countries, filtering by optional criteria. If no criteria are set, you will get back all known countries."], ["Time-Zone", "Get the time-zone current time in ISO-6801 format: HHmmss.SSSZ"], ["Time-Zones", "Get all known time-zones."], ["Currencies", "Get currencies, filtering by optional criteria. If no criteria are set, you will get back all known currencies."], ["City Details", "Get the details for a specific city, including location coordinates, population, and elevation above sea-level (if available)."], ["Admin Divisions Near Location", "Get administrative divisions near the given location, filtering by optional criteria."], ["Admin Divisions Near Division", "Get divisions near the given administrative division, filtering by optional criteria."], ["Time-Zone Time", "Get the time-zone current time in ISO-6801 format: HHmmss.SSSZ"], ["Time-Zone Date-Time", "Get the timezone current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ"], ["Languages", "Get all supported languages"], ["Locales", "Get all known locales."], ["Cities Near City", "Get cities near the given city, filtering by optional criteria."]]}, "QR Code Generator API": {"tool_desc": "This API returns a QR Code in PNG format, based on input string", "apis": [["/qrcode", "This endpoint will return a qrcode base on string given in input."]]}, "JSearch": {"tool_desc": "Fast and Simple Job Search for jobs posted on LinkedIn, Indeed, Glassdoor, ZipRecruiter, BeBee and many others, all in a single API.", "apis": [["Search", "Search for jobs posted on job sites across the web."], ["Job Details", "Get all job details, including additional application options / links, employer reviews and estimated salaries for similar jobs."], ["Search Filters", "Accepts all **Search** endpoint parameters (except for `page` and `num_pages`) and returns the relevant filters and their estimated result counts for later use in search or for analytics."], ["Estimated Salary", "Get estimated salaries for a jobs around a location"]]}, "VRM STR Tools": {"tool_desc": "Vacation Rental Management and Short Term Rental Tools.", "apis": [["Get VRBO Listing Reviews", "Returns up to the last 10 reviews on a listing from VRBO\n\n**Where to find your VRBO Listing ID**\n![](https://vitesa.com/rapidAPI_Images/vrbo_listingID.png)"], ["Get Airbnb Listing Ratings", "Returns the ratings from a listing on Airbnb\n\n**Where to find your Airbnb Listing ID**\n![](https://vitesa.com/rapidAPI_Images/airbnb_listingID.png)"], ["Get Airbnb Listing Reviews", "Returns up to the last 10 reviews on a listing from Airbnb\n\n**Where to find your Airbnb Listing ID**\n![](https://vitesa.com/rapidAPI_Images/airbnb_listingID.png)"]]}, "UK Real Estate Rightmove": {"tool_desc": "Real-time data, unofficial API rightmove co uk\n\nRightmove is a leading UK Real Estate website in the United Kingdom.", "apis": [["commercial/property-to-rent/detail", "Commercial property to rent for detail"], ["commercial/property-to-sale", "Commercial property for sale"], ["commercial/property-to-sale/detail", "Commercial property for sale for detail"], ["commercial/property-to-rent", "Commercial property to rent"], ["student-property-to-rent/detail", "Student property to rent for detail"], ["student-property-to-rent", "Student property to rent"], ["property-to-rent/detail", "Property to rent for detail"], ["similar-to-property", "Similar to this property"], ["new-homes-for-sale/detail", "New homes for sale for detail"], ["new-homes-for-sale", "New homes for sale"], ["similar-to-property/detail", "Similar to this property for detail"], ["property-for-sale/detail", "Property for sale for detail"], ["auto-complete", "Get auto complete suggestion by term or phrase"]]}, "Weather": {"tool_desc": "Current weather data API, and Weather forecast API - Basic access to the Weatherbit.io Weather API.", "apis": [["5 day Forecast", "3 hour interval - 5 day forecast for a given lat/lon"], ["Current Weather Data of a location.", "Returns the current (most recent) weather observation of a given location"], ["1 Hour / Minutely Forecast (Nowcast)", "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall"], ["16 Day Forecast", "Returns a 16 day (daily) forecast"], ["120 Hour Forecast", "Returns a forecast for up to 120 hours in the future (default 48 hours)"], ["Severe Weather Alerts", "Get servere weather alerts from local meteorlogical agencies (US, EU, and Isreal supported )"]]}, "Power BI Smartable": {"tool_desc": "The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.", "apis": [["GetNews", "Get Power BI news."], ["GetCommunities", "Get Power BI communities."], ["GetSamples", "Get Power BI samples"], ["GetFunctions", "Get Power BI DAX functions."], ["GetLearningResources", "Get Power BI learning resources."], ["GetPeople", "Get Power BI influencers."], ["GetLearningResources (topic)", "Get Power BI learning resources by topic."], ["GetFunctions (topic)", "Get Power BI DAX functions by topic."], ["GetTopics", "Get Power BI topics."], ["GetNewsletters", "Get Power BI newsletters"], ["GetSponsorships", "Get Power BI sponsorships"]]}, "GS1-Code128 Generator": {"tool_desc": "This API returns a GS1-Code128 Barcode in PNG format based on company prefix, code, quantity and lot", "apis": [["gs1code128", "it gets data, company_prefix, lot and quantity and it generates a barcode. company_prefix and data is required."]]}, "Sign Hexagram": {"tool_desc": "\u63d0\u4f9b\u7075\u7b7e\u5728\u7ebf\u62bd\u7b7e\u89e3\u7b7e\u3001\u7075\u7b7e\u795e\u5366\u5360\u535c\u3002", "apis": [["Get Sign Hexagram", "Return one of the sign with full info by given category."], ["Get Categories", "Return a list of category of sign with description and image link."]]}, "Cat breeds": {"tool_desc": "The API is scraping the Wikipedia pages for cats in order to collect data", "apis": [["Group breed data by property", "This endpoint will group the available data by the given property and the property value. The property can be any property of the JSON response object including the properties of the meta object."], ["Get Breed Information", "This endpoint will return information for a specific cat breed"], ["Get All Cat Breeds", "This endpoint will return back all available cat breeds that are available"]]}, "Dogs by API-Ninjas": {"tool_desc": "Detailed, qualitative information on over 200 different breeds of dogs.", "apis": [["/v1/dogs", "Get a list of dog breeds matching specified parameters. Returns at most 20 results. To access more than 20 results, use the offset parameter to offset results in multiple API calls."]]}, "US Gun Laws": {"tool_desc": "Query for gun laws by state or retrieve data for all states.", "apis": [["Get laws for one state", "This endpoint provides links to gun law documentation for any particular state."], ["Get laws for all states", "This endpoint will provide links to gun law documentation for all 50 states."]]}, "Amazon Web Scraping API": {"tool_desc": "Provides access to amazon product details, customer reviews, product images, videos, and more, with support for all Amazon websites across the globe.", "apis": [["Get Websites", "Get the available websites available by country to extract amazon product data."], ["Search Products(All countries)", "Allows to search products in Amazon using real time data scraping API."], ["Get Deals", "Get amazon deals allowing to filter by category.  The category list is included in the response."], ["Get Languages", "Return the list of currently supported languages in the API."], ["\u200bGet Product Details(All countries)", "Get the detail of a specific product from Amazon using the ASIN code."], ["\u200bGet Product Reviews(All countries)", "Get the reviews for specific product using the ASIN code."]]}, "CheckThatPhone": {"tool_desc": "Real-time phone validation and data lookup for US numbers.", "apis": [["/checkthatphone", "Validation, carrier look-up, line type, portability status, geoIP and timezone, routing.\nSimply provide a United States phone number and an ip (optional) to get a result."]]}, "Airdna": {"tool_desc": "API for Short-Term Rental Data Analytics | Vrbo & Airbnb Data | Rentalizer", "apis": [["Rentalizer", "Rental Property Calculator by address"], ["Property listings", "Get rental properties of Airbnb and Vrbo by location and date."], ["Suggest region", "Returns suggested regions by keyword"], ["Top property managers", "Returns the largest property managers"], ["Overview", "Returns overview stats (ADR, OCC ,Revenue ..) of a location rental data"]]}, "Diagnostics Code List": {"tool_desc": "Diagnostics Code List", "apis": [["DiagnosticsCodeList\u0650", "Diagnostics Code List\u0650  A lightweight API based on ICD-10-CM (International Classification of Diseases, Tenth Revision, Clinical Modification) that displays medical diagnoses data using the diagnostic code, the diagnosis name, or symptoms, which can be used by health care providers ( health information managers, nurses and other healthcare professionals ) clinics and hospitals in their own systems or be a part of prognosis and diagnosis systems, Search can be done using diagnostics Codes or the diagnosis name, symptoms, and procedure names.  ( result is JSON you can use it in your site or your own system )  DiagnosticsCode : String  DiagnosticsName : String"]]}, "whatsapp data": {"tool_desc": "fetch whatsapp profiles data", "apis": [["Fetch profile picture", "Gets the whatsapp number profile picture, you can select its resolution (`high` or `low`) and the response format: `png` file, `url` or `base64` encoded file."], ["Fetch business data", "The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account."], ["Is whatsapp for business?", "Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not."], ["About", "This endpoint will return the `About` data of the Whatsapp for business number, and when the value was set."], ["Is registered on whatsapp?", "This endpoint returns `true` if the phone is registered on whatsapp."]]}, "Car Utils": {"tool_desc": "FREE resources for checking VIN, getting the market value of your car, estimating the cost of ownership in US,  checking fuel economy, and more to come.", "apis": [["Estimate Ownership Cost", "Estimate how much you will spend on the car with specified VIN for the next 5 years."], ["Estimate Market Value", "Estimate market value of the car with specified VIN."], ["Decode VIN", "Decode VIN, get valuable information for the car you are interested in."], ["Get fuel economy information", "Get fuel economy information from the official U.S. government source."], ["Get vehicle models", "Get all supported vehicle models for specified make."], ["Get vehicle makes", "Get all supported vehicle makes."]]}, "dummyData": {"tool_desc": "provides various types of dummy data", "apis": [["overview", "Overview of all entry points and usage"]]}, "Azure Smartable": {"tool_desc": "The Azure Smartable API offers the Microsoft Azure news, learning resources, events, influencers and other information.", "apis": [["GetNewsByTopic", "Get Azure news by topic."], ["GetLearningResources", "Get Azure learning resources"], ["GetLearningResourcesByTopic", "Get Azure learning resources by topic."], ["GetFutureEvents", "Get future Azure events."], ["GetFutureEventsByTopic", "Get future Azure events by topic."], ["GetPastEvents", "Get past Azure events."], ["GetPeopleByTopic", "Get Azure influencers by topic."]]}, "IP WHOIS & Geolocation": {"tool_desc": "This service is provided by ipfinder.ch and offers precise data on both IPv4 and IPv6 addresses, including information on the associated AS, company, location, abuse contact, and more.", "apis": [["IP Lookup", "For IPv4 & IPv6"]]}, "Local Business Data": {"tool_desc": "Extremely comprehensive and up-to-date local business search - get business reviews and rating, photos, phone, address / location, website, emails / social profiles and 30+ other fields.", "apis": [["Business Reviews", "Get all business reviews. Supports pagination, query and several sort options."], ["Business Photos", "Get all business photos."], ["Business Details", "Get full business details including emails and social contacts. Supports batching of up to 20 Business Ids."], ["Search In Area", "Search businesses in a specific geographic area defined by a center coordinate point and zoom level. To see it in action, make a query on Google Maps, wait for the results to show, move the map or change the zoom and click \"Search this area\" at the top."], ["Search Nearby", "Search businesses near by specific geographic coordinates. To see it in action, right click on a specific point in the map on Google Maps and select \"Search nearby\", enter a query and search."], ["Search", "Search local businesses on Google Maps."], ["Autocomplete", "Returns place/address, business and query predictions for text-based geographic queries."]]}, "COVID-19 News": {"tool_desc": "API to find all news mentioning COVID -19.", "apis": [["/v1/covid", "Highly customizable search through our database of news only on the next specific keywords: \n`covid`,`covid-19`, `coronavirus`, `\u043a\u043e\u0440\u043e\u043d\u0430\u0432\u0438\u0440\u0443\u0441`, `koronavir\u00fcs`, `koronavir\u00fcs`, `coronavir\u00fcs`, `\u0627\u0644\u062a\u0627\u062c\u0649`\nAll filters and sorting options are allowed."]]}, "Email and internal links scraper": {"tool_desc": "Email and links scraper allows you to get all emails and internal links from any sent to the API URL", "apis": [["GET request", "Pass URL as \"url\" GET parameter.\nExample: /?url=https://example.com"]]}, "Random User by API-Ninjas": {"tool_desc": "Random user data generator for placeholders and testing.", "apis": [["/v1/randomuser", "API Ninjas Random User API endpoint. Returns a fake random user profile."]]}, "Real-Time Web Search": {"tool_desc": "Ultra-Fast, Simple and Reliable real-time web searches at an unbeatable price.", "apis": [["Search", "Get real-time organic search results from across the web. Supports all Google Advanced Search operators such (e.g. inurl:, site:, intitle:, etc)."]]}, "Youtube video subtitles list": {"tool_desc": "Youtube video subtitle list", "apis": [["SubtitleList", "Get list of subtitle for video"]]}, "Fake Data Generator": {"tool_desc": "With this API you can generate fake random data with different predefined layouts or define your own layout.", "apis": [["/random_address", "With this enpoints you can manage the generation of fake addresses and retrieve them by id."], ["/random_custom", "This endpoint generate a list of fake  data ustomizing the layout setting the number and type.\n\nYou can define fake data layout with de 'layout' param.\n\nThe structure of this param:\n\n```\n{'fields': \t{\n\t\t\t\t'date': {'type': 'DATE_AND_HOUR'},\n\t\t\t\t'name': {'type': 'NAME_FULL_NAME'},\n\t\t\t\t'purchase': {\n\t\t\t\t\t\t\t\t'type': 'COMPOUND', \n\t\t\t\t\t\t\t\t'fields': {\n\t\t\t\t\t\t\t\t\t\t\t'company': {'type': 'COMPANY_NAME'},\n\t\t\t\t\t\t\t\t\t\t\t'amount': {'type': 'CURRENCY_PRICE'}\n\t\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t}\n\t\t\t}\n}\n```\n\nWith 'type': 'COMPOUND', you can add nodes, tha max depth is 3.\n\nIn regard to the diferents type of data, you can use this types:\n\n```\n'COUNTRY'\n'COUNTRY_CODE'\n'CITY'\n'STREET_ADDRESS'\n'BUILDING_NUMBER'\n'POSTAL_CODE'\n'COMPANY_NAME'\n'COMPANY_SUFFIX'\n'COMPANY_BUSINESS'\n'COMPANY_PHRASE'\n'CREDIT_CARD_EXPIRE'\n'CREDIT_CARD_NUMBER'\n'CREDIT_CARD_PROVIDER'\n'CREDIT_CARD_SECURITY_CODE'\n'CURRENCY_PRICE'\n'CURRENCY_CODE_NAME'\n'CURRENCY_CRYPTO_CODE_NAME'\n'NAME_PREFIX_NAME'\n'NAME_FIRST_NAME_MALE'\n'NAME_FIRST_NAME_FEMALE'\n'NAME_LASTNAME'\n'DATE'\n'DATE_AND_HOUR'\n'DATE_CENTURY'\n'DATE_THIS_DECADE'\n'DATE_THIS_MONTH'\n'INT'\n'PARAGRAPH'\n'PARAGRAPH_LOREMIPSUM'\n'SENTENCE'\n'SENTENCE_LOREMIPSUM'\n'BBAN'\n'IBAN'\n'SWIFT'\n'SWIFT11'\n'TEXT'\n'TEXT_LOREMIPSUM'\n'URL'\n'WORD'\n```"], ["/random_custom_by_id", "Retrieve  fake  data banks by id customizing the layout setting the number and type.\n\nYou can define fake data layout with de 'layout' param.\n\nThe structure of this param:\n\n```\n{'fields': \t{\n\t\t\t\t'date': {'type': 'DATE_AND_HOUR'},\n\t\t\t\t'name': {'type': 'NAME_FULL_NAME'},\n\t\t\t\t'purchase': {\n\t\t\t\t\t\t\t\t'type': 'COMPOUND', \n\t\t\t\t\t\t\t\t'fields': {\n\t\t\t\t\t\t\t\t\t\t\t'company': {'type': 'COMPANY_NAME'},\n\t\t\t\t\t\t\t\t\t\t\t'amount': {'type': 'CURRENCY_PRICE'}\n\t\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t}\n\t\t\t}\n}\n```\n\nWith 'type': 'COMPOUND', you can add nodes, tha max depth is 3.\n\nIn regard to the diferents type of data, you can use this types:\n\n```\n'COUNTRY'\n'COUNTRY_CODE'\n'CITY'\n'STREET_ADDRESS'\n'BUILDING_NUMBER'\n'POSTAL_CODE'\n'COMPANY_NAME'\n'COMPANY_SUFFIX'\n'COMPANY_BUSINESS'\n'COMPANY_PHRASE'\n'CREDIT_CARD_EXPIRE'\n'CREDIT_CARD_NUMBER'\n'CREDIT_CARD_PROVIDER'\n'CREDIT_CARD_SECURITY_CODE'\n'CURRENCY_PRICE'\n'CURRENCY_CODE_NAME'\n'CURRENCY_CRYPTO_CODE_NAME'\n'NAME_PREFIX_NAME'\n'NAME_FIRST_NAME_MALE'\n'NAME_FIRST_NAME_FEMALE'\n'NAME_LASTNAME'\n'DATE'\n'DATE_AND_HOUR'\n'DATE_CENTURY'\n'DATE_THIS_DECADE'\n'DATE_THIS_MONTH'\n'INT'\n'PARAGRAPH'\n'PARAGRAPH_LOREMIPSUM'\n'SENTENCE'\n'SENTENCE_LOREMIPSUM'\n'BBAN'\n'IBAN'\n'SWIFT'\n'SWIFT11'\n'TEXT'\n'TEXT_LOREMIPSUM'\n'URL'\n'WORD'\n```"], ["/random_bank", "This endpoint generate a list of fake banks"], ["/random_company", "This endpoint generate a list of fake companies"], ["/random_company_by_id", "Retrieve fake companies by id."], ["/random_credit_card", "This endpoint generate a list of fake credit cards"], ["/random_crypto", "This endpoint generate a list of fake crypto assets"], ["/random_crypto_by_id", "Retrieve fake crypto assets by id."], ["/random_post", "This endpoint generate a list of fake posts"], ["/random_address_by_id", "Retrieve a fake address by id"], ["random_profiles", "This endpoint generate a list of fake user profiles"], ["random_profile_by_id", "Retrieve fake profiles by id."], ["/random_bank_by_id", "Retrieve fake banks by id."], ["/random_credit_card_by_id", "Retrieve fake credit cards by id."], ["/random_post_by_id", "Retrieve fake post by id."]]}, "aircraftscatter": {"tool_desc": "Aircraft Scatter API by ADSBexchange.com", "apis": [["Aircraft Scatter Data", "Returns all aircraft above 10,000 feet within 1000 kilometres from specified latitude and longitude."]]}, "EV Charging Stations": {"tool_desc": "Electric vehicle charging stations full information.", "apis": [["Get Stations within 10 km", "Return nearest charging stations within 10 km radius."], ["Get Stations within 5 km", "Return nearest charging stations within 5 km radius."], ["Get Stations within 1 km", "Return nearest charging stations within 1 km radius."]]}, "SEO API - Get Backlinks": {"tool_desc": "Backlink Checker API, is the ultimate tool for analyzing your website's backlinks, as well as those of your competitors.", "apis": [["GetTopBacklinks", "Get domains top backlinks"]]}, "Busy and Popular Times": {"tool_desc": "The goal of this API  is to provide an option to use Google popular times data, until it is available via Google's API.", "apis": [["Search a Place", "Search for a location exactly the way you Google it. The API will only work if the search returns the \"Popular Times\" graph in the result"]]}, "Gloppo Fake API": {"tool_desc": "Gloppo Fake API is a collection of developer friendly endpoints for returning randomly generated data for testing purposes.", "apis": [["/people", "Get a list of random generated fake people data."]]}, "Places in radius": {"tool_desc": "API for retrieving places &amp; facilities data for given origin, distance and list of facility types.", "apis": [["places_in_radius_places_in_radius_get", "This endpoint returns:\n-  all the facilities that meet specified category (grocery_store, gym, railway_station etc.)\n- are within specified radius from starting_point\n\nReturned data (please let us know, what additional data to provide to your plan):\n - unique place_id\n- location (lat,lng)\n- type\n- distance data (walking and driving, counting from origin)\n- business details : email (if provided), phone"]]}, "Opensea_v2": {"tool_desc": "Opensea / Blur / Looksrare / x2y2  API - 1,000+  requests/min\n\nSimple & high performance Opensea / Blur / Looksrare / x2y2  API, backed by rotating proxies & API keys\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.", "apis": [["Retrieve active loans offers", "This endpoint is used to retrieve the active loan offer levels for a collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve blur events", "This endpoint is used to retrieve events, customisable.\n\n**Filter examples:**\n{\"count\":50,\"eventFilter\":{\"mint\":{},\"sale\":{},\"transfer\":{},\"orderCreated\":{}}}\n\n{\"count\":50,\"tokenId\":\"541\",\"contractAddress\":\"0x60e4d786628fea6478f785a6d7e704777c86a7c6\",\"eventFilter\":{\"mint\":{},\"sale\":{},\"transfer\":{},\"orderCreated\":{}}}\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Search", "Blur Search Query\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve aggregated loan offers", "This endpoint is used to retrieve the aggregated loan offer levels for a collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve blur collections", "This endpoint is used to retrieve information about all collection, including real time statistics such as floor price.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve user collection bids", "This endpoint is used to retrieve the active collection bids to a user wallet address.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve collection bids", "This endpoint is used to retrieve the collection bid price levels for a collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve collection", "This endpoint is used to retrieve more in-depth information about an individual collection, including real time statistics such as floor price.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["x2y2 GET", "x2y2 API endpoint (https://api.x2y2.io)\nMake over 1000 requests / minute\n\nSimply copy the path into the x2y2_path header.\n\n![](https://i.ibb.co/WKYfTDy/x2y2-path-get-header.png)"], ["Retrieve all offers", "Get all open offers for a collection\n\nThis endpoint is used to get all open offers for a given collection. It returns: all offers on individual NFTs, all collection offers, and all trait offers. The offers are sorted by ascending date (oldest listings first) -- at this time, we do not support any other sorting methods.\n\nThe response has two fields: offers and an optional next cursor in case the number of offers is greater than our default page size (100). This endpoint returns only a subset of the fields found in our orders endpoint. Here is the model for each offer:\n\norder_hash\nchain\ncriteria: specifies if the offer was for an individual NFT, a collection offer, or a trait offer\nprotocol_data"], ["Retrieve all listings", "Get all active listings for a collection\n\nThis endpoint is used to get all active listings for a given collection. The listings are sorted by ascending date (oldest listings first) -- at this time, we do not support any other sorting methods.\n\nThe response has two fields: listings and an optional next cursor in case the number of active listings is greater than our default page size (100). This endpoint returns only a subset of the fields found in our orders endpoint. Here is the model for each listing\n\norder_hash\nchain\ntype: can be basic, english, or dutch\nprice\nprotocol_data\nSample URL\nhttps://api.opensea.io/v2/listings/collection/cool-cats-nft/all"], ["Retrieve trait offers", "This endpoint is used to get all trait offers for a specified collection.\n\nWhat are trait offers?\nA trait offer is an offer that applies to every item in a collection with the specified trait. For example, this is a filter that shows every Cool Cat NFT where the type is 'tier' and the value is 'classy_1'.\n\nBelow is a response when querying trait offers for Cool Cats where trait type is 'tier' and the value is 'classy_1'.\n\nNote: this example query might not return any data if there are no open offers for that trait.\n\nSample URL\nhttps://api.opensea.io/v2/offers/collection/cool-cats-nft/traits?type=tier&value=classy_1"], ["Retrieve collection offers", "This endpoint is used to get collection offers.\n\nWhat are collection offers?\nIf you'd like to purchase into a collection but don't have a particular NFT in mind, collection offers allow you to make an offer that applies to all NFTs in a collection.\n\nBelow is a response when querying collection offers for Cool Cats."], ["Retrieve listings", "This endpoint is used to fetch the set of active listings on a given NFT for the Seaport contract."], ["Retrieve offers", "This endpoint is used to fetch the set of active offers on a given NFT for the Seaport contract."], ["Retrieve assets", "This endpoint returns a set of NFTs based on the specified filter parameters.\n\nAuctions created on OpenSea don't use an escrow contract, which enables gas-free auctions and allows users to retain ownership of their items while they're on sale. In these cases, some NFTs from opensea.io may not appear in the API until a transaction has been completed."], ["Retrieve collections", "This endpoint provides a list of all the collections supported and vetted by OpenSea. To include all collections relevant to a user (including non-whitelisted ones), set the owner param.\n\nEach collection in the response has an attribute called primary_asset_contracts with info about the smart contracts belonging to that collection. For example, ERC-1155 contracts maybe have multiple collections all referencing the same contract, but many ERC-721 contracts may all belong to the same collection (dapp).\n\nYou can also use this endpoint to find which dapps an account uses, and how many items they own in each in a single API call."], ["Retrieve an asset", "This endpoint is used to fetch information about a single NFT, based on its contract address and token ID. The response will contain an Asset Object."], ["Retrieve collection fees", "This endpoint returns the various collection fees\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["ETH price", "Get the current ETH price, can beused to generate a new __cf_bm token to be passed in every request as a header called '__cf_bm'\n\nhttps://developers.cloudflare.com/fundamentals/get-started/reference/cloudflare-cookies/"], ["Retrieve rewards", "This endpoint is used to retrieve if bid rewards\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve fees", "This endpoint returns the various contract fees\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve airdrop leaderboard", "Retrieve the current airdrop leaderboard list\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve collection traits", "This endpoint is used to retrieve trait information about a single collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve collection activity", "This endpoint is used to retrieve activity for an individual collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve tokens / listings", "This endpoint returns a set of NFTs based on the specified filter parameters.\n\nFilter for Listed Tokens: {\"cursor\":null,\"traits\":[],\"hasAsks\":true}\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retreive portfolio", "This endpoint is used to retrieve portfolio details for a single wallet address.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve user airdrop rewards", "Retrieve user airdrop rewards\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve collection stats", "This endpoint can be used to fetch stats for a specific collection, including real-time floor price data."], ["Retrieve owners", "This endpoint is used to obtain the entire list of owners for an NFT. Results will also include the quantity owned."], ["Retrieve events", "This endpoint provides a list of events that occur on the NFTs that are tracked by OpenSea. The event_type field indicates the type of event (transfer, successful auction, etc) and the results are sorted by event timestamp.\n\nNote that due to block reorganizations, recent events (less than 10 minutes old) may not reflect the final state of the blockchain."], ["Rarity Tools", "Rarity Tools Collection Items Endpoint , to  use you need to understand the source code of the webpage and reconstruct."], ["User Information", "Scrape all the HTML information from the NFT asset page without having to use chrome , scrape 10,000  NFTs images, & metadata in under 11min (*using top plan)"], ["Collection Information", "Scrape all the HTML information from the NFT collection page without having to use chrome."], ["Asset Information", "Scrape all the HTML information from the NFT asset page without having to use chrome , scrape 10,000  NFTs images, & metadata in under 11min (*using top plan)"], ["Retrieve bundles", "Bundles are groups of NFTs for sale on OpenSea. You can buy them all at once in one transaction, and you can create them without any transactions or gas, as long as you've already approved the NFTs inside."], ["Retrieve a collection", "This endpoint is used to retrieve more in-depth information about an individual collection, including real time statistics such as floor price."], ["Retrieve a contract", "This endpoint is used to fetch detailed information about a specified contract."]]}, "Quotes by API-Ninjas": {"tool_desc": "Access over 50,000 quotes from famous people.", "apis": [["/v1/quotes", "Returns one (or more) random quotes."]]}, "Flowers": {"tool_desc": "Information about flowers.", "apis": [["Show image", "Show image of the flower"], ["Get by id", "Get all info about the flower"]]}, "Trulia Real Estate Scraper": {"tool_desc": "\ud83c\udfe1 Master the real estate market with Trulia API.", "apis": [["Search for SOLD", "To download data from SALE, you must first generate a Token with Get search token and set search_type=Sold. Then you need to use this generated token by setting the search_token value in this endpoint. Or just use one of our developer libraries. Everything is already implemented there."], ["Search for SALE", "To download data from SALE, you must first generate a Token with Get search token and set search_type=ForSale. Then you need to use this generated token by setting the search_token value in this endpoint. Or just use one of our developer libraries. Everything is already implemented there."], ["Get home details", "Returns full details of home. Call **Get listing by url** or get items from *Search*. In response you'll get **url** of home. Take this url and pass it here into query. You can also go to https://www.trulia.com/AZ/Scottsdale/ and take urls e.g. https://www.trulia.com/p/az/fountain-hills/14834-e-valley-vista-dr-fountain-hills-az-85268--2113652369"], ["Get listing by url", "Returns homes from the listing. Just go to https://www.trulia.com/ select the listing you are interested in e.g. https://www.trulia.com/AZ/Scottsdale/ and pass that url into query."], ["Get search token", "Get search token and use it in **search/for_sale**, **search/for_rent**, **search/sold** endpoints."]]}, "US Cell Coverage by Zip Code": {"tool_desc": "Check Cell Coverage by zip code for all US networks", "apis": [["Get Coverage", "Get cell coverage for AT&T, T-Mobile, U.S. Cellular and Verizon by zip code"]]}, "Bible Memory Verse Flashcard": {"tool_desc": "This KJV Bible API allows users to retrieve verses/chapters in 1 of 6 formats.", "apis": [["Search for Chapters containing Terms", "Takes term(s) and returns chapters  that contain term(s). Terms are not case sensitive.  Books, operators etc. are NOT CASE SENSITIVE.\n\n**   ONLY SEARCHES 2 BOOKS   (NO RANGE FUNCTION) **"], ["Search Term - Chapter Address Summary", "Returns a summary for chapter addresses that contain term criteria\n\n**  CAN SEARCH A RANGE OF BOOKS.  \n(first_book = 'matthew' , second_book = 'john' MEANS ENDPOINT SEARCHES  'matthew'  'mark'  'luke' 'john')    **"], ["Search Term - Verse Address Summary", "Returns a summary for verse addresses that contain term criteria.\n\n**  CAN SEARCH A RANGE OF BOOKS.  \n(first_book = 'matthew' , second_book = 'john' MEANS ENDPOINT SEARCHES  'matthew'  'mark'  'luke' 'john')    **"], ["Search for Verses containing Terms", "Takes term(s) and returns verses that contain term(s). Terms are not case sensitive. \nBooks, operators etc. are NOT CASE SENSITIVE\n\n**  CAN SEARCH A RANGE OF BOOKS.  \n(first_book = 'matthew' , second_book = 'john' MEANS ENDPOINT SEARCHES  'matthew'  'mark'  'luke' 'john')    **"], ["Search Term - Count occurrences of terms found in text", "Return number of term criteria occurrences in chosen book(s)\n\n**  CAN SEARCH A RANGE OF BOOKS.  \n(first_book = 'matthew' , second_book = 'john' MEANS ENDPOINT SEARCHES  'matthew'  'mark'  'luke' 'john')    **"], ["Get Verses", "Takes parameters and returns requested verses"], ["Get Chapter", "Takes parameters and returns one chapter for chosen bookname"]]}, "Local Businesses by Outscraper": {"tool_desc": "Get Local Businesses' information with simple and reliable Maps Places API provided by Outscraper.", "apis": [["Search Places", "Returns places from Places Maps based on a given search query (or many queries).\n\nThe results from searches are the same as you would see by visiting a regular Maps site. However, in most cases, it's recommended to use locations inside queries (e.g., bars, NY, USA) as the IP addresses of Outscraper's servers might be located in different countries.\n\nThis endpoint is optimized for fast responses and can be used as a real-time API."], ["Get Places Reviews", "Returns Places Maps reviews from places when using search queries (e.g., `restaurants, Manhattan, NY, USA`) or from a single place when using IDs or names (e.g., `NoMad Restaurant, NY, USA`, `0x886916e8bc273979:0x5141fcb11460b226`, `ChIJrZhup4lZwokRUr_5sLoFlDw`). In addition to the reviews, it returns places information.\n\nIn case no reviews were found by your search criteria, your search request will consume the usage of one request.\n\nThis endpoint is optimized for fast responses and can be used as a real-time API. Set the `reviewsLimit` parameter to 10 to achieve the maximum response speed."]]}, "Twitter Pack_v2": {"tool_desc": "Complete pack to get any public information on twitter, includes Twitter Trends, Search Tweet, User Activity", "apis": [["user-tweet-detail", "Get user tweet and reply"], ["user-timeline", "Get tweet timeline by user ID"], ["search-tweet", "search tweet by query"]]}, "Randomizer": {"tool_desc": "Fast and straightforward API to retrieve a random sequence of characters!", "apis": [["getRandom", "Retrieve a random sequence of characters matching the provided query attributes"]]}, "Top NFT Collections": {"tool_desc": "Provides up-to-date information on the top NFT collections across various networks, including Ethereum, BNB Chain, Polygon, Arbitrum, Optimism, and Solana.", "apis": [["Trending with pagination", "Trending with pagination provided by OpenSea"], ["Trending - Testnets", "Giving the same result in https://opensea.io/rankings/trending"], ["Trending", "Giving the same result in https://opensea.io/rankings/trending"], ["Top Ranking - Testnets", "Giving the same result in https://opensea.io/rankings"], ["Top Ranking", "Giving the same result in https://opensea.io/rankings"], ["Get Top NFT Collections", "Get the NFT collections ordered by volume or sales."]]}, "Trinidad Covid 19 Statistics": {"tool_desc": "This API provides Covid-19 statistics by year, month, day and most recent day in Trinidad and Tobago", "apis": [["getMostRecentDay", "This endpoint fetches the most recent Trinidad & Tobago Covid 19 statistics.  It returns data for that specific day alone."], ["getStatsbyDay", "This endpoint fetches Trinidad & Tobago Covid 19 statistics by  day. For a valid response, the months are input as \"01\" or \"12\" and not the actual month name such as \"January\" or \"December\". Th e days are entered in the similar format as months ie \"01\" -\"31\" and not actual days such as \"Thursday\" or \"Monday\","], ["getStatsbyYear", "This endpoint delivers Trinidad & Tobago Covid 19 statistics by year. For a valid response, the beginning year is 2020 and the latest year is the current year."], ["getStatsbyMonth", "This endpoint fetches Trinidad & Tobago Covid 19 statistics by month. For a valid response, the months are input as \"01\" or \"12\" and not the actual month name such as \"January\" or \"December\"."]]}, "Open Graph SEO Scraper": {"tool_desc": "Extract open graph and social details from any website or URL.", "apis": [["Scrape Open Graph", "Extract open graph and social details from any website or URL"]]}, "Random Word API": {"tool_desc": "This easy-to-use, 100% free API randomely picks out words from the entire english dictionnary with many parameters.", "apis": [["Get Word by Length and Start", "Returns a random word of specified length and that starts with specified string.\nFor example, 7 and \"fru\" will return any word that is 7 letters long and starts with \"fru\", such as \"fruiter\"."], ["Get Word by Contain", "Returns a random word that contains a certain string.\nFor example, if the string is \"le\" then you will get any word that contains the string, whether it's at **the start, the end or the middle**, and you will get for example \"odourless\"."], ["Get Word by Start", "Returns a random word that starts with the specified string.\nFor example, \"fru\" will only return words that start with \"fru\", such as \"fruit\""], ["Get Word by Length and Contain", "Returns a random word that contains a certain string and contains a certain amount of letters.\nFor example, if the substring is \"le\" and the length \"7\", you will get a word that contains \"le\" and is 7 characters long, such as \"dozzled\"."], ["Get Word by Start and Contain", "Returns a random word that starts with a certain string and contains a certain string.\nFor example, if the start is \"fru\" and the substring is \"le\", you will get a word that starts with \"fru\" and contains \"le\", such as \"frustules\"."], ["Get Word by Length, Start and Contain", "Returns a random word that is a certain amount of characters long, starts with a certain string and contains a certain string.\nFor example, if the length is 7, the start \"fru\" and the substring \"le\", you will get a 7 letter long word that begins with fru and contains le, like \"frumple\"."], ["Get Word by Length", "Returns a random word that has the specified length. For example, 7 will return any word that is 7 letters long, such as \"swallow\"."], ["Get Word", "Returns a random word. No parameters. Just randomness."], ["Get French Word", "Same as random word, but grabs a random french word instead."]]}, "Blur": {"tool_desc": "Unofficial API for blur.io - 1,000+  requests/min\n\nSimple & high performance Blur API, backed by rotating proxies & API keys\n\nCheck out my Opensea / Looksrare / x2y2 API as well\nhttps://rapidapi.com/openseatools/api/opensea15\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.", "apis": [["Retrieve collection activity", "This endpoint is used to retrieve activity for an individual collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve collection traits", "This endpoint is used to retrieve trait information about a single collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retreive portfolio collections", "This endpoint is used to retrieve collections owned for a single wallet address.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve blur events", "This endpoint is used to retrieve events, customisable.\n\n**Filter examples:**\n{\"count\":50,\"eventFilter\":{\"mint\":{},\"sale\":{},\"transfer\":{},\"orderCreated\":{}}}\n\n{\"count\":50,\"tokenId\":\"541\",\"contractAddress\":\"0x60e4d786628fea6478f785a6d7e704777c86a7c6\",\"eventFilter\":{\"mint\":{},\"sale\":{},\"transfer\":{},\"orderCreated\":{}}}\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retreive portfolio", "This endpoint is used to retrieve portfolio details for a single wallet address.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve a collection", "This endpoint is used to retrieve more in-depth information about an individual collection, including real time statistics such as floor price.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve tokens", "This endpoint returns a set of NFTs based on the specified filter parameters.\n\nFilter for Listed Tokens: {\"cursor\":null,\"traits\":[],\"hasAsks\":true}\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve fees", "This endpoint returns the various contract fees\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve airdrop leaderboard", "Retrieve the current airdrop leaderboard list\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve collection fees", "This endpoint returns the various collection fees\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Search", "Blur Search Query\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve collection pricing chart", "This endpoint is used to retrieve collection pricing chart data\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve asset", "This endpoint is used to retrieve information about a single NFT.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retreive collections", "This endpoint is used to retrieve information about all collection, including real time statistics such as floor price.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retreive collection prices", "This endpoint is used to retrieve collection prices\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve active user lend ETH offers", "This endpoint is used to retrieve active user lend ETH offers\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve active loans offers", "This endpoint is used to retrieve the active loan offer levels for a collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve aggregated loan offers", "This endpoint is used to retrieve the aggregated loan offer levels for a collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve rewards", "This endpoint is used to retrieve if bid rewards\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve user airdrop rewards", "Retrieve user airdrop rewards\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve tokens / listings", "This endpoint returns a set of NFTs based on the specified filter parameters.\n\nFilter for Listed Tokens: {\"cursor\":null,\"traits\":[],\"hasAsks\":true}\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."], ["Retrieve user collection bids", "This endpoint is used to retrieve the active collection bids to a user wallet address.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature."]]}, "Arbeitnow Free Job Board": {"tool_desc": "A Job Board API for jobs in Germany and remote with visa sponsorship, relocation support and 4 day work week jobs.", "apis": [["Free Job Postings API", "Built in Berlin, Arbeitnow helps companies hire candidates with visa sponsorship / four day work week / remote opportunities.\n\nFour day work weeks - Companies offering better work life balance with a shorter work week results in improved productivity and helps retain candidates. Get your company listed on the\u00a0[4 day work week jobs](https://arbeitnow.com/4-day-work-week-jobs)\u00a0page\n\nHiring without Whiteboard - No trivia questions or stress inducing whiteboard interviews? We will include you in our popular section among tech\u00a0& software developers -\u00a0[hiring without whiteboard.](https://arbeitnow.com/hiring-without-whiteboard)\n\n[Jobs with Salary / Compensation](https://arbeitnow.com/jobs-with-salary)\u00a0information helps bring transparency to candidates on what they can expect from an offer."]]}, "Cloudflare bypass": {"tool_desc": "Unofficial Cloudflare bypass - 1,000+  requests/min\n\nSimple & high performance API, backed by rotating proxies & API keys\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\nJoin our Discord to inquire & find out the latest information and tools: \n\nhttps://discord.gg/Yezs2VDhBV", "apis": [["GET Requests", "Scrape any website with GET requests\n\nURL: enter full URL required"]]}, "Lowest Bins Api": {"tool_desc": "Hypixel Lowest bins api", "apis": [["Fetch lowest bins", "This endpoint lets you fetch the lowest bins"]]}, "Jiosaavn": {"tool_desc": "Get Jiosaavn Data (Get all possible data of songs, albums, playlists & lyrics)", "apis": [["Get Data", "Get Jiosaavn Data (Get all possible data of songs, albums, playlists & lyrics)"]]}, "Keyword Research for Youtube": {"tool_desc": "Unlock the Power of Youtube Keyword Research for Your Youtube Channel with our API.", "apis": [["Keyword Research", "Get exact and related keywords information including monthly search , SEO difficulty and competition score"]]}, "Car Specs": {"tool_desc": "Fast, simple and reliable API to retrieve car data.", "apis": [["Download Entire Database", "Returns a zipped csv file containing all the data that the Car Specs API owns."], ["Get Car Specs", "Returns detailed specs for the chosen car by trim id."], ["Get Trims By Generation ID", "Returns a list of all engines (trims) available for a given generation of a car model."], ["Get Generations By Model ID", "Returns a list of generations of a car model."], ["Get Makes", "Returns a list of all car manufacturers available in the API."], ["Get Models By Make ID", "Returns a list of all models for a given car make."]]}, "IP Geolocation - IPWHOIS.io": {"tool_desc": "You can use https://ipwhois.io/ to filter out bot traffic, customize content based on visitor's location, display full country names, perform bulk IP geolocation, and more.", "apis": [["JSON endpoint", "Detailed information on our website: https://ipwhois.io/documentation"]]}, "Domain DA - PA Check": {"tool_desc": "Domain authority score & page authority score, backlink count, moz rank information.", "apis": [["URL Metrics", "- Title\n- Domain Authority Score\n- Page Authority Score\n- Equity\n- Links\n- Moz Rank"]]}, "Social Links Search": {"tool_desc": "Search for social profile links on the web - Facebook, TikTok, Instagram, Snapchat, Twitter, LinkedIn, Youtube channels, Pinterest and Github.", "apis": [["Search Social Links", "Get social profile links by search query or keywords. The following social networks are supported: Facebook, TikTok, Instagram, Snapchat, Twitter, Youtube, LinkedIn, GitHub and Pinterest."]]}, "Feku Json": {"tool_desc": "Free Feku ( Fake ) API for Testing and Prototyping.", "apis": [["getBookById", "get Specific Book by ID"], ["getBooks", "get list of all books"], ["getProductById", "Get Specific Product by ID"], ["getProducts", "To Get all Product list"], ["getUserById", "To to Specific User by ID"], ["Get Users", "To Get list of all Users"]]}, "Website Contacts Scraper": {"tool_desc": "Scrape emails, phone numbers and social profiles (Facebook, TikTok, Instagram, Twitter, LinkedIn and more) from a website domain in real-time.", "apis": [["Scrape Contacts from Website", "Extract emails, phone numbers and social profiles from website root domain domain."]]}, "VinHub": {"tool_desc": "Provide popular vehicle history reports for cars from USA & Canada", "apis": [["Check", "Check if report exist"]]}, "Commodity Rates API": {"tool_desc": "The Commodity Rates API provides real-time and historical pricing data for various commodity markets, including metals, energy, and agricultural products.", "apis": [["Open/High/Low/Close (OHLC) Price", "Allows you to query the API to get the open, high, low, and close price.\nThis endpoint has a limitation of one symbol per request."], ["Time-Series", "With this endpoint, you will be provided with daily historical rates between two dates of your choice. \n\nNote: This endpoint has a limitation of 365 days per range, and only can provide one symbol information per request.\n\nAll the commodities rates you get need using ANY currency as a base currency (base parameter) need to be divided by 1\nWe return the values based on the base currency. For example, for 1 USD the return is a number like 0.00055307742 for Gold (XAU).\nTo get the gold rate per troy ounce in USD: 1/0.00055307742 = 1808.06 USD"], ["Historical Rates", "Historical rates are available for most symbols all the way back to the year 2021. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.\n\nNote: All the commodities rates you get need using ANY currency as a base currency (base parameter) need to be divided by 1\nWe return the values based on the base currency. For example, for 1 USD the return is a number like 0.00055307742 for Gold (XAU).\nTo get the gold rate per troy ounce in USD: 1/0.00055307742 = 1808.06 USD"], ["Latest Rates", "Check the real-time exchange rate data updated every 60 seconds with this endpoint. \n \n\nNote: All the commodities rates you get need using ANY currency as a base currency (base parameter) need to be divided by 1\nWe return the values based on the base currency. For example, for 1 USD the return is a number like 0.00055307742 for Gold (XAU).\nTo get the gold rate per troy ounce in USD: 1/0.00055307742 = 1808.06 USD"], ["Supported Symbols", "Check all the available symbols for your queries. This endpoint retrieves all the supported commodities and currencies as well."]]}, "Email": {"tool_desc": "Analyse the content of an Email Address and check if it is valid or not.", "apis": [["analysis", "Analyse, validate and parse the content of a given Email Address"]]}, "Car Verification Nigeria": {"tool_desc": "Use this API to determine the location where a Nigeria car is registered.", "apis": [["Verify Plate Number Location", "Enter the first 3-digit of any Nigeria plate number to know the state and LGA it comes from. For example, if a plate number is GGE123YZ. you will pass the parameter as GGE or gge (not case sensitive) and the state, LGA and state slogan will be displayed including its unique id. Feel free to try it out."]]}, "DNS Lookup": {"tool_desc": "NsLookup queries the specified DNS server and retrieves records associated with the domain name you provided.", "apis": [["Reverse", "Get name servers from an IP"], ["Nslookup", "NsLookup queries the specified DNS server and retrieves the requested records that are associated with the domain name you provided. These records contain information like the domain name\u2019s IP addresses.\n\nThe following types of DNS records are especially useful:\n\n- **A**: the IPv4 address of the domain.\n- **AAAA**: the domain\u2019s IPv6 address.\n- **CNAME**: the canonical name \u2014 allowing one domain name to map on to another. This allows more than one website to refer to a single web server.\n- **MX**: the server that handles email for the domain.\n- **NS**: one or more authoritative name server records for the domain.\n- **TXT**: a record containing information for use outside the DNS server. The content takes the form name=value. This information is used for many things including authentication schemes such as SPF and DKIM."]]}, "Zillow": {"tool_desc": "Fast and highly available API.", "apis": [["Walk, Transit and Bike Scores", "Get Walk, Transit and Bike Scores of a property by zpid"], ["List of properties by url", "Get a list of properties by providing the zillow search results URL"]]}, "Electric Vehicle Charging Stations": {"tool_desc": "Designed to provide users with the ability to search for and locate electric vehicle charging stations.", "apis": [["GetByCordsAdv", "Uses Latitude & Longitude to get near by electric charging stations"], ["GetAccessType", "Returns access type options for stations"], ["GetEVConnectors", "Return only electric charging connector types that can be used to filter GetByCordsAdv."], ["GetOwners", "Return stations owned by the given types of owners. A single owner type, or a comma-separated list of multiple owner types, may be given."], ["GetNetworks", "Return only electric charging stations that belong to the given network. A single network, or a comma separated list of multiple networks, may be given."], ["GetByCords", "Uses Latitude & Longitude to get near by electric charging stations"]]}, "File Extension": {"tool_desc": "Get data based on file extension.", "apis": [["details", "Get data based on file extension. Currently only has one endpoint to get icon and full name of the file extension"]]}, "Kick.com API | Kick API": {"tool_desc": "Detailed Kick.com API.", "apis": [["Get Chat Messages", "Returns chat messages from livestream ID."], ["Get Livestreams (from Category)", "Returns livestreams from category."]]}, "Real-Time Image Search": {"tool_desc": "Fast and Simple real-time image web searches with support for all filters available on Google Advanced Image Search.", "apis": [["Search", "Get real-time image search results from across the web. Supports all Google Images search filters."]]}, "JailBase": {"tool_desc": "JailBase provides mugshots and arrest information to the public for free.", "apis": [["Search", "Search for individuals by name"], ["Sources", "All the organizations we collect information for"]]}, "Lorem Ipsum Api": {"tool_desc": "Generate Lorem Ipsum placeholder text for your applications.", "apis": [["Sentence", "Create lorem ipsum by defining the number of sentences"], ["Paragraph", "create lorem ipsum by defining the number of paragraph"], ["Word", "Create lorem ipsum by defining the number of words"]]}, "Player Data": {"tool_desc": "SSCB players", "apis": [["/search_by_weight", "<br /><br />\n<b>Authentication:</b> not required"], ["/SearchPlayer", "<br /><br />\n<b>Authentication:</b> not required"]]}, "CHAT GPT AI BOT": {"tool_desc": "Simply ask for whatever you require, and our API will provide the solutions.", "apis": [["AI BOT", "Simply ask for whatever you require, and our API will provide the solutions. Let us know your needs, and our AI BOT will effortlessly generate the marketing copy for you. With this convenient tool, you'll have more time to dedicate to your passions."]]}, "Hedonometer": {"tool_desc": "With hedonometer.org we\u2019ve created an instrument that measures the happiness of large populations in real time.", "apis": [["Timeseries", "Call the happiness timeseries"]]}, "Person App": {"tool_desc": "Gender API.", "apis": [["Gender from Name", "Given someones name infer their gender"]]}, "Address From To Latitude Longitude": {"tool_desc": "Free API to convert coordinates (latitude, longitude) to and from address An Easy, Open, Worldwide, Free Geocoding API", "apis": [["Coordinates (latitude longitude) to Address", "By using this geographic tool you can get an address from lat long coordinates."]]}, "Azure": {"tool_desc": "The Azure Every Day API offers the Microsoft Azure news, learning resources, events, influencers and other information.", "apis": [["GetNewsByTopic", "Get Azure news by topic."], ["GetLearningResources", "Get Azure learning resources"], ["GetLearningResourcesByTopic", "Get Azure learning resources by topic."], ["GetPastEvents", "Get past Azure events."], ["GetFutureEvents", "Get future Azure events."], ["GetFutureEventsByTopic", "Get future Azure events by topic."], ["GetPeopleByTopic", "Get Azure influencers by topic."]]}, "YouTube Influencer Search": {"tool_desc": "The YouTube Influencer Search API returns the most relevant influencers for your target keyword or domain.", "apis": [["getSearchResults", "Get the results from a certain search id"]]}, "Realtor": {"tool_desc": "Query real time data of US real estate properties and agents", "apis": [["Property Details", "Get property details by  property ID  or by Address"], ["Search for region", "Get location suggestions by keyword"], ["Search agents", "Search agents by city/zip"], ["Agent details", "Get agent details by id"], ["Search properties for sale", "Search properties for sale by Address, School, City, Zip or Neighborhood. Filter the results using different parameter filters"], ["Search properties for rent", "Search properties for rent by location"]]}, "Cigars": {"tool_desc": "Data about Cigar brands, Cigars, and country data", "apis": [["Get Brand by ID", "Grab a Brand by it's Database ID"], ["Get Brands", "Get Cigar brands, paginated and searchable."], ["Get Cigar Strengths", "Get Enum of cigar strengths"], ["Get Cigar Average Ring Gauge", "Get the average ring gauge of cigars, filter supported"], ["Get Cigar Average Length", "Get the average length of cigars, filter supported"], ["Get Cigar by ID", "Get a Cigar by it's Database ID"], ["Get Colors", "Get Enum of Cigar colors"], ["Get Cigars", "Get cigar data, paginated with filters"]]}, "GeoAPI": {"tool_desc": "APIs to get data based on city and countries name.", "apis": [["Get City Detail", "Get details of a city from its name."], ["Get Cities in a Country", "Get cities in a country based on population."], ["Get Country Details", "Get details of country from its name and prefix."]]}, "Get Companies By SIC Code API": {"tool_desc": "The Get Companies By SIC Code API allows users to retrieve information on companies based on their Standard Industrial Classification (SIC) code.", "apis": [["Search Companies by Name", "This endpoint will allow you to search for companies by their name. This endpoint will provide you with the company slug that could be used to get additional company data, like SIC code and NAICS code."], ["Get Company Data by Company Slug", "Using the Company Slug that is provided in the \"Get Companies by SIC code\" endpoint, you will be receiving additional information about a company. \nGet city, state, zip code, estimated annual revenue, years in business, and estimated company size, and company NAICS."], ["Get Companies by SIC Code", "Retrieve a list of the top 100 companies that are related to a given SIC code."]]}, "Instagram Downloader": {"tool_desc": "You can download any video,story,highlights,igtv,reel,post on this api \\n Conact us : https://PPooP.t.me \\n My Channel : https://keepdeving.t.me", "apis": [["hid", "get all highlights by id"]]}, "Get Docs": {"tool_desc": "data", "apis": [["RetrieveClaimListByUser", "Retrieve Claim List By User"]]}, "Local Rank Tracker": {"tool_desc": "Ultra-Fast and Reliable Local Grid Search - see Google My Business ranking on a map in real-time.", "apis": [["Ranking at Coordinate Point", "Get search results at the specified coordinate point and additional ranking data for the business with `place_id`."], ["Full Grid Search", "Make a full grid search and get the ranking of a specific business in every coordinate point in the grid. The grid cells / entires in the results are ordered left-to-right then top-down."], ["Search Business Locations", "Returns a list of found Google My Business locations based on search query, including Service Area Businesses (SAB)."], ["Calculate Grid Coordinate Points", "Get all grid coordinate points based on a center geocoordinate point and distance arguments."], ["Keyword Search at Coordinate Point", "Get search results at the specified coordinate point without any rank comparison data."]]}, "indeed": {"tool_desc": "Get company and job information from indeed", "apis": [["Company jobs", "Search jobs by company."], ["Jobs Search", "Search jobs with by query and location."], ["Company details", "Crawl information for Indeed's Companies."], ["Company Search", "Search companies by name."], ["Job details", "Crawl information for Indeed's Job."]]}, "Fresh LinkedIn Company Data": {"tool_desc": "**Real-time** LinkedIn Company data based on Numeric ID, Domain or URL.", "apis": [["Get Company by Domain", "Given a company\u2019s web domain, the API will return valuable data points in JSON format."], ["Get Company Data by Its LinkedIn Internal ID", "Given a company\u2019s LinkedIn internal ID, the API will return valuable data points in JSON format."], ["Get Company Data by LinkedIn URL", "Given a company\u2019s LinkedIn URL, the API will return valuable data points in JSON format."], ["Get Company Ads Count", "Get number of ads the company posted on LinkedIn. 1 request = 1 credit."], ["Get Company Jobs Count", "Get number of opening jobs the company posted on LinkedIn. 1 request = 1 credit."]]}, "Livescan a Domain": {"tool_desc": "Get essential (24 data points) domain information realtime with one simple call.", "apis": [["Domain Information", "Get data points of a given domain : A record, MX record, TXT/SPF record, SOA record, CMS Type (Generator), Certificate Issuer, Certificate Subject, Certificate Start Date, Certificate End Date, Domain creation date, Domain name (or partial), Domain expire date, Domain updated date, Javascript Libraries, Hostname (or partial), HTML Header Tags,  IP Address, Page title from domain homepage, Page meta tags (including og), Organization, Registrar, TLD, Server software (Apache, PHP, nginx etc), Server geolocation"]]}, "Twitter": {"tool_desc": "Twitter API", "apis": [["Continuation User's Media", "This endpoint returns the list of a user's medias"], ["User's Media", "This endpoint return a list of user's media given a user ID"], ["User's Tweets", "This endpoint return a list of user's tweets given a username"], ["Available Locations  (Beta)", "Get the list of available locations"], ["Get trends near a location (Beta)", "Returns the top 50 trending topics for a specific id (woeid), if trending information is available for it."], ["Tweet User Retweets Continuation", "This endpoint returns the next  list of user who retweeted the tweet"], ["Tweet User Retweets", "This endpoint returns a list of user who retweeted the tweet"], ["Lists Tweets Continuation", "This endpoint returns the next list of tweets in a given Twitter list"], ["Lists Tweets", "This endpoint return a list of tweets in a given Twitter list"], ["Lists Details", "This endpoint returns the public information a Twitter Lists"], ["Tweet Details", "This endpoint return general information about a tweet"], ["Search", "This endpoint return search results"], ["User Details", "This endpoint returns the public information about a Twitter profile"], ["Tweet User Favoriters", "This endpoint returns a list of user who favorited the tweet"], ["Tweet User Favoriters Continuation", "This endpoint returns the next list of user who favorited the tweet"], ["Tweet Replies", "This endpoint returns a list of reply tweets"], ["User's Followers", "This endpoint return a list of user's followers given a user ID"], ["Get User's Username", "This endpoint returns a User's username given a user ID"], ["Continuation User's Likes", "This endpoint returns the list of a user's Likes"], ["User's Likes", "This endpoint return a list of user's likes given a user ID"], ["Hashtag", "This endpoint return hashtag results"], ["Hashtag Continuation", "This endpoint return the next hashtag results"], ["User's Following", "This endpoint returns the list of following"]]}, "Request Boomerang": {"tool_desc": "Easily create fake requests with your data, and send what you need to receive.", "apis": [["Get your data", "Returns the data that you provide. The data parameter must be a valid JSON"]]}, "World Coordinates to Income": {"tool_desc": "Get sub-city level individual per-capita USD/yr income data from across the globe.", "apis": [["World Coordinate to Income", "Granular city per capita income"]]}, "Bible Search": {"tool_desc": "Retrieve chapters and verses from the Old Testament and New Testament of the KJV.", "apis": [["Get Book By Name", "Returns a book of the Bible."], ["Get Chapter by BookName", "Returns a chapter of a book in the Bible."], ["Get Verse by BookName", "Returns a verse of the Bible."], ["Get Verses by BookName", "Get a range of verses of the Bible."], ["Get Book by Id", "Returns a book of the Bible."], ["Get Chapter by BookId", "Returns a chapter of a book in the Bible."], ["Get Verse by BookId", "Returns a verse of the Bible."], ["Search Text", "Return all verses from the bible by text parameter."], ["Get Books", "Returns a list of the books in the Bible."], ["Random Verse", "Returns a random verse of the bible."]]}, "Unofficial Efteling API": {"tool_desc": "An Unofficial Efteling API is a software tool that allows developers to access real-time queue times and news from the Efteling amusement park, located in the Netherlands.", "apis": [["Retrieve the latest blogs", "Retrieve the latest blogs, these are updated once every hour"], ["Retrieve specific Queue time", "retrieve a specific queue item based on the ID that can be retrieved from the /queue endpoint"], ["Retrieve all Queue times", "Retrieve all the queue times in the efteling, data will be updated every 10 minutes"]]}, "10000+ Anime Quotes With Pagination Support": {"tool_desc": "Access best quality anime quotes from over 10000+ animes with pagination supports.", "apis": [["Recent Quotes by pagination", "Get recent anime quotes without any categorization:\nRequired GET parameter\n**page**:  1\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`"], ["Search quote based on quote id", "Get full quote info based on quote_id.\n\nRequired GET parameter\n**quote_id**:  3702\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`"], ["Search quote by anime name", "Get anime quotes based on anime search\n\nRequired GET parameter\n**page**:  1\n**search**:  Naruto\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above **search** means it will try to fetch all quotes related to that anime\n**Note:** Search param should contain atleast 3 characters\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`"], ["Get Random anime quote", "**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`"], ["Quote of the Day", "Get quote of the day.\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`"], ["Search quote by character name", "Get anime quotes based on character search:\nRequired GET parameter\n**page**:  1\n**search**: Lelouch\n\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above **search** means it will try to fetch all quotes spoken by that character\n**Note:**  Search param should contain atleast 3 characters.\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`"], ["Popular Quotes by pagination", "Get anime quotes popular among fans:\nRequired GET parameter\n**page**:  1\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`"]]}, "Random Word Generator": {"tool_desc": "Random words and more provided by RandomWordGenerator.com", "apis": [["Generate a random word", "Scour through thousands of words from the RandomWordGenerator.com database"]]}, "Vibrant DNS": {"tool_desc": "Get DNS record information", "apis": [["Get DNS Records", "Get a domains DNS records"]]}, "Captcha_v2": {"tool_desc": "SmileMe's Captcha provide a Captcha image for you.", "apis": [["getErrors", "This endpoint is used to get a list of available error codes"], ["Calculation captcha", "- Provide info captcha for website to prevent auto request."], ["Number  captcha", "Captcha code is number format.\n\n- params: length is number (from 1 to  8, default is 6)"], ["String captcha", "captcha code is string format.\n\n- params: length is number (from 1 to 8, default is 6)"], ["Custom captcha", "captcha code is user format. \n\n- string is number or character, string length is up to 8 (from 1 to 8)"]]}, "Lorem Ipsum by API-Ninjas": {"tool_desc": "Generate configurable lorem ipsum placeholder text.", "apis": [["/v1/loremipsum", "API Ninjas Lorem Ipsum API endpoint. Returns one or more paragraphs of lorem ipsum placeholder text."]]}, "yoonit": {"tool_desc": "Parse quantities and units from text / text replace", "apis": [["currencies", "Returns a list of all supported currencies"]]}, "Chain49": {"tool_desc": "Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner\n\nWebsocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)", "apis": [["Estimate transaction fee V2", "Returns an estimated transaction fee for a specific confirmation target.\nIf you want your transaction to be included in the next block, then you give 1 as parameter. If it is not urgent, then you can wait a bit longer and get an estimation for the fifth next block."], ["Get NFT metadata V2", "Only works on Ethereum-like blockchains (currently ethereum and bsc)\n\nGet metadata like name or description for a specified contract and token ID.\nThe resulting data contains a link which can then be used to request the IPFS link for the actual image to display in a block explorer for example.\n\nNote: this route was implemented by us and is therefore not yet supported by existing blockbook clients."], ["Get raw block data V2", "Returns the raw hex-encoded block data for a given block hash or height"], ["Get UTXO V2", "Returns array of unspent transaction outputs of address or xpub, applicable only for Bitcoin-type coins. By default, the list contains both confirmed and unconfirmed transactions. The query parameter confirmed=true disables return of unconfirmed transactions. The returned utxos are sorted by block height, newest blocks first. For xpubs or output descriptors, the response also contains address and derivation path of the utxo.\n\n\n\nUnconfirmed utxos do not have field height, the field confirmations has value 0 and may contain field lockTime, if not zero.\n\nCoinbase utxos have field coinbase set to true, however due to performance reasons only up to minimum coinbase confirmations limit (100). After this limit, utxos are not detected as coinbase."], ["Get address V2", "Returns balances and transactions of an address. The returned transactions are sorted by block height, newest blocks first.\n\nThe **details** query parameter can specify the level of details returned by the request (default: \"txids\").\nPossible values are:\n\n**basic**: return only xpub balances, without any derived addresses and transactions\n\n**tokens**: basic + tokens (addresses) derived from the xpub, subject to tokens parameter\n\n**tokenBalances**: basic + tokens (addresses) derived from the xpub with balances, subject to tokens parameter\n\n**txids**: tokenBalances + list of txids, subject to from, to filter and paging\n\n**txs**: tokenBalances + list of transaction with details, subject to from, to filter and paging"], ["Get xpub V2", "Returns balances and transactions of an xpub or output descriptor, applicable only for Bitcoin-type coins.\n\nBlockbook supports BIP44, BIP49, BIP84 and BIP86 (Taproot) derivation schemes, using either xpubs or output descriptors (see https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md)\n\nNote: usedTokens always returns total number of used addresses of xpub.\n\nDetailed documentation found here: https://github.com/trezor/blockbook/blob/master/docs/api.md#get-xpub"], ["Get Balance History V2", "Returns a balance history for the specified XPUB or address\n\nThe value of sentToSelf is the amount sent from the same address to the same address or within addresses of xpub."], ["Get Tickers V2", "Returns currency rate for the specified currency and date. If the currency is not available for that specific timestamp, the next closest rate will be returned. All responses contain an actual rate timestamp."], ["Get block hash V2", "Get block hash by its height\n\nNote: Blockbook always follows the main chain of the backend it is attached to."], ["Blockchain Info Summary", "Get basic summary of info relating to the currently selected blockchain"], ["List available blockchains", "Get an array of active blockchains"], ["Get Block V2", "Returns information about block with transactions, subject to paging.\n\nNote: Blockbook always follows the main chain of the backend it is attached to. If there is a rollback-reorg in the backend, Blockbook will also do rollback. When you ask for block by height, you will always get the main chain block. If you ask for block by hash, you may get the block from another fork but it is not guaranteed (backend may not keep it)"], ["Get Mempool V2", "Get a list of transaction IDs currently in the mempool of the node (meaning unconfirmed transactions not included in any block yet)\n\nNote: this route was implemented by us and is therefore not yet supported by existing blockbook clients."], ["Get transaction (as is from Backend) V2", "Returns transaction data in the exact format as returned by backend, including all coin specific fields"], ["Get transaction V2", "Get transaction returns \"normalized\" data about transaction, which has the same general structure for all supported coins. It does not return coin specific fields (for example information about Zcash shielded addresses).\n\nA note about the blockTime field:\nfor already mined transaction (confirmations > 0), the field blockTime contains time of the block\nfor transactions in mempool (confirmations == 0), the field contains time when the running instance of Blockbook was first time notified about the transaction. This time may be different in different instances of Blockbook."], ["Send transaction (in URL) V2", "Sends new transaction to backend\n\nIt is recommended to use POST for sending transactions as there is a limit on how much data can be sent in the URL itself."], ["Get Tickers list V2", "Returns a list of available currency rate tickers (secondary currencies) for the specified date, along with an actual data timestamp."], ["JSON-RPC over HTTP", "All JSON-RPC methods are also available as normal HTTP GET routes if you specify a method (and optional parameters) in the URL."]]}, "BlogsAPI": {"tool_desc": "Get evergreen blogs for your mobile apps.", "apis": [["Latest Posts", "Get all blogs ordered by latest first."], ["Blogs by category", "Get all blogs from a particular category by its ID."], ["Search Tags", "Get all blogs if the term is one of the tags."], ["Single Category", "Get single category details with its thumbnail and description."], ["Categories", "List all available categories from the BlogsAPI."], ["Search", "Search blogs by keyword."], ["Single blog", "Single blog post details by its ID."], ["All blogs", "All blogs paginated in a set of 20."]]}, "Dicolink": {"tool_desc": "Dicolink API lets you retrieve information about French words, including definitions, synonyms, antonyms, quotes, expressions, lexical field, scrabble score, and much more...", "apis": [["Get Definitions", "Get definition of a word"], ["Get Lexical Field", "Get Lexical Field for a word"], ["Get Antonyms", "Get antonyms of a specific word"], ["Get Citations", "Get citations of a word"], ["Get Expressions", "Get Expression with a specific word"], ["Get Scrabble score", "Get Scrabble score for a word"], ["Get synonyms", "Get synonyms of a specific word"]]}, "Reddit - Track the mentions and conversations about your business": {"tool_desc": "Find your brand, competitor, or any other query mentions across the Reddit", "apis": [["GetMentions", "Track the mentions and conversations about your business"]]}, "Phone": {"tool_desc": "Full set of cool Telephone validation functions with a coverage of more than a hundred different countries.", "apis": [["area-code", "Get the International Country Calling Code and the Local Area Code information"], ["analysis", "Analyse, validate and parse the content of a given Phone Number"], ["flag", "Get the Flag Image from a given Country"], ["iso", "Get the ISO codes from a given Country"], ["region", "Get the Geographic Region information"], ["directory", "Get all the Local Area Codes from a given Country"]]}, "Thai Lottery": {"tool_desc": "Api for serve result of Thailand lottory.", "apis": [["Get lottery result by date.", "Get lottery result by date - \u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e23\u0e32\u0e07\u0e27\u0e31\u0e25 \u0e42\u0e14\u0e22\u0e23\u0e30\u0e1a\u0e38\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48"], ["Get all round dates.", "Get all round dates - \u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e2b\u0e27\u0e22\u0e2d\u0e2d\u0e01\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14"], ["Get latest lottery result", "Get latest lottery result - \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e23\u0e32\u0e07\u0e27\u0e31\u0e25 \u0e07\u0e27\u0e14\u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14"]]}, "Linkedin Company and Profile Data": {"tool_desc": "Introducing our LinkedIn Company and Profile Data API!", "apis": [["Supported Locations", "Get a list of the supported LinkedIn locations. You can use these locations to get personalized search results when using an API endpoint that supports location parameter."]]}, "Api plaque immatriculation SIV": {"tool_desc": "Immatriculation API (France) \n\nNotre service Web permettra \u00e0 votre site Internet ou \u00e0 vos applications d\u2019identifier les motos et les scooters en utilisant leur plaque d\u2019immatriculation.", "apis": [["/get-vehicule-info2", "* R\u00e9cup\u00e9rer les informations des v\u00e9hicules simplement avec notre API PLAQUE IMMATRICULATION rapide flexible .\n\nLes donn\u00e9es sont demand\u00e9es \u00e0 notre api plaque immatriculation en temps r\u00e9el \u00e0 partir de sources de donn\u00e9es officielles du gouvernement, de sorte que les informations que vous voyez soient en temps r\u00e9el et non mises en cache, ou stock\u00e9es."], ["/get-vehicule-info", "* R\u00e9cup\u00e9rer les informations des v\u00e9hicules simplement avec notre API PLAQUE IMMATRICULATION rapide flexible .\n\nLes donn\u00e9es sont demand\u00e9es \u00e0 notre api plaque immatriculation en temps r\u00e9el \u00e0 partir de sources de donn\u00e9es officielles du gouvernement, de sorte que les informations que vous voyez soient en temps r\u00e9el et non mises en cache, ou stock\u00e9es."]]}, "Referential DB": {"tool_desc": "Get global countries, states, and cities data.", "apis": [["Country Details", "Get the country details by country code"], ["States", "Get the list of states within country"], ["Cities in a state", "Get the list of cities in a state."], ["Cities in a country", "Get the list of cities in a country."], ["Countries", "Get the list of countries."]]}, "Motivational Content": {"tool_desc": "Get motivational quotes and motivational pictures.", "apis": [["Get a Specific Quote", "This endpoint fetches a specific quote using the provided 'id'."], ["Get All Motivational Quotes", "This endpoint fetches all the motivational quotes. However, you can do pagination as well using the 'skip' and 'limit' parameters."], ["Get a Specific Picture", "This endpoint fetches a specific motivational picture according to the given id."], ["Get All Motivational Pictures", "This endpoint fetches all the pictures. However, you can use 'skip' and 'limit' parameters to do pagination."]]}, "World Population": {"tool_desc": "Get interesting information about countries' population", "apis": [["getCountriesByContinent", "Obtain countries' data according to the continent."], ["getPopulationByCountryCode", "Get the population's data of a country by its country code (ISO 3166-1 alpha-3 format). More information at https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3."]]}, "TLD": {"tool_desc": "Collection of official top level domains", "apis": [["Get list of top level domains", "Get an exhaustive list of more than official 1500 generic and country code TLDs for which domains can be registered with."]]}, "Google Trends US": {"tool_desc": "Gives the list of trending search results in the United States at the current time.", "apis": [["Get Trending Result", "Gives you an array of trending search result."]]}, "House Plants": {"tool_desc": "HOUSE PLANT DATABASE & RESTful API for house plant data (Over 300+ plant details/images) along with their description and information on how to best take care of them (ideal temperature, light, etc.)\n\nNEW ROUTES COMING SOON (GetAllLite, GetByLatinName, GetByCommonName, GetCategories, GetAllByCategory)", "apis": [["GetBySearch", "Searches through all plants and returns the closest results matching \"Latin name\", \"Family\", \"Other names\", \"Common name\", \"Common name (fr.)\", \"Description\", \"Categories\", \"Origin\" in order by highest most likely. This route is case insensitive and uses fuzzy search"], ["GetAll", "Returns all plant data within an array. Information for each plant returned contains (but not limited to) the list below\n\n- Latin name \n- Img \n- Id\n- Family \n- Other names \n- Common name \n- Common name (fr.) \n- Description \n- Categories \n- Origin \n- Climat \n- Temperature max\n- Temperature min\n- Zone \n- Growth \n- Light ideal \n- Light tolered \n- Watering \n- Insects \n- Disease \n- Appeal \n- Color of leaf \n- Color of blooms \n- Blooming season \n- Perfume \n- Avaibility \n- Pot diameter\n- Height at purchase\n- Width at purchase\n- Height potential\n- Width potential\n- Available sizes\n- Bearing \n- Clump\n- Pruning \n- Style \n- Use"], ["GetAllLite", "Gets all items but only identifying data. All additional data can be grabbed from the GetById route or the GetAll route which return all item with all its keys, no restriction"], ["GetAllCategories", "Get all available categories for all plants"], ["GetById", "Returns a single plants data within an object. Information for each plant returned contains (but not limited to) the list below\n\n- Latin name \n- Img \n- Id\n- Family \n- Other names \n- Common name \n- Common name (fr.) \n- Description \n- Categories \n- Origin \n- Climat \n- Temperature max\n- Temperature min\n- Zone \n- Growth \n- Light ideal \n- Light tolered \n- Watering \n- Insects \n- Disease \n- Appeal \n- Color of leaf \n- Color of blooms \n- Blooming season \n- Perfume \n- Avaibility \n- Pot diameter\n- Height at purchase\n- Width at purchase\n- Height potential\n- Width potential\n- Available sizes\n- Bearing \n- Clump\n- Pruning \n- Style \n- Use"], ["GetByCategory", "Get all item based on a category"]]}, "Domain WHOIS Lookup API": {"tool_desc": "The WHOIS Lookup API is a powerful, RESTful API that allows you to retrieve WHOIS information for any registered domain name.", "apis": [["domain_name", "Please provide the domain name for which you would like to retrieve WHOIS details."]]}, "Yelp Reviews": {"tool_desc": "Extremely Fast and Simple Yelp business searches and reviews.", "apis": [["Business Search", "Search for Yelp businesses by query / keyword and location."], ["Business Reviews", "Fetch a single or multiple business review pages from Yelp (each page includes up to 10 reviews)."]]}, "Global Address": {"tool_desc": "Easily verify, check or lookup address.", "apis": [["Global Address", "Validate, Standardize and Cleanse Addresses across the globe"]]}, "US Zipcodes": {"tool_desc": "The API offers detailed data about zip codes in the USA, including geographic coordinates, county, city, and time zone.", "apis": [["/{code}", "Return a zip code detail"]]}, "QRMaster API": {"tool_desc": "Generate High-Quality QR Codes with Ease", "apis": [["http://emiledaou99.pythonanywhere.com/url", "QRMaster API is a cutting-edge tool for developers and businesses that want to generate high-quality QR codes effortlessly. With QRMaster API, you can create custom QR codes with a variety of options, including size, color, and design.\n\nOur API is built on reliable and scalable technology, ensuring that you can generate thousands of QR codes per day without any performance issues. The API is easy to use, with straightforward documentation and code samples available in a variety of programming languages.\n\nWhether you're building a mobile app, developing a marketing campaign, or creating a new product, QRMaster API can help you create QR codes that meet your needs. With competitive pricing and flexible plans, QRMaster API is an excellent value for any business that wants to take advantage of the power of QR codes."]]}, "Barcodes Lookup": {"tool_desc": "Search over 500 million products with UPC, EAN, JAN, ISBN barcodes.", "apis": [["Search & Product Details", "It returns product results if you enter a search term, and returns product details if you enter a barcode number."]]}, "Neostrada Domains": {"tool_desc": "edit your neostrada domains", "apis": [["domainlist", "Get a list of your domains"]]}, "Matrimony Profiles": {"tool_desc": "Get Matrimony Profiles based on Religion, Caste, Marrital Status, Education, Age, Height, etc filters.", "apis": [["Get Profile Details", "Get Profile Details of Member for given member_id"]]}, "German Cities": {"tool_desc": "Returns information about all German cities with more than 2500 inhabitants: Number of inhabitants, average age and more", "apis": [["city_name", "Gibt Informationen zu der angegebenen Stadt zur\u00fcck. Bei Mehrdeutigkeit werden maximal drei Ergebnisse zur\u00fcckgegeben. Zur\u00fcckgegebene Werte sind: Einwohnerzahl, Durchschnittsalter, umliegende Orte."]]}, "Liquidation Report": {"tool_desc": "Crypto liquidation tracking and reporting system.", "apis": [["Lickhunter Pro", "Suites of data tailored specifically for Bybit Lickhunter v4"], ["Liquidation Data", "Get the summary liquidation data for all coin. Data include total liquidation value, total liquidation amount, mean & median liquidation value."], ["Liquidation Report", "Get the latest liquidation data from Binance, Bybit and OKX exchange. Data is limited to 1000 rows."]]}, "Latest Laptop Deals": {"tool_desc": "Planning to buy a new laptop but want to save as much money as you can?", "apis": [["Get Latest Laptop Deals", "Get Latest Laptop Deals available right now."]]}, "ScrapeMaster": {"tool_desc": "ScrapeMaster is a Web Scraping  API that helps you to scrap data from any website, you can:           - Get all page data.", "apis": [["Get data by \"id\"", "This endpoint will return all data from a specific tag and its id."], ["Get data by \"class\"", "This endpoint will return all data from a specific tag and its class attribute."], ["Get data by \u201ctag\u201d", "This endpoint will return all data from a specific tag."], ["Get all page's content", "This endpoint will return all the page's content from the URL given by the user."]]}, "Historical YouTube Data": {"tool_desc": "Historical channel views and subscribers for YouTube channels.", "apis": [["Historic views and subscribers", "Returns historic views and subscribers for a channel, along with basic details of the channel (name, handle, thumbnails, etc.).\n\n**Note:**\n `viewsHist`/ `subsHist` data format: \n`[[timestampInMilliSecondsA, valueA], [timestampInMilliSecondsB, valueB], ...]`."]]}, "Cek ID PLN PASCA DAN PRA BAYAR": {"tool_desc": "Cek ID Pelanggan PLN", "apis": [["Get Data ID Pelanggan Tagihan PLN / PASCA BAYAR", "GET Data Pelanggan Tagihan PLN / PLN PASCA BAYAR /Postpaid\n- masukan id PLN di form id"], ["GET Data ID Pelanggan Token PLN", "GET Data Pelanggan Token PLN / PLN PRA BAYAR\n- masukan id PLN di form id"]]}, "Polish zip codes": {"tool_desc": "Poczta polska - zip codes", "apis": [["find-zip-codes-by-city-and-district", "Return all zip codes located in city's district"], ["find-zip-codes-by-city-and-street", "Return all zip codes by street name in the city."], ["zip-code-info", "Return zip code information, that is a list of zip code entries"], ["find-zip-codes-by-city", "Return all zip codes that belong to this city. If there is more then one city with that name, all zip codes are returned."]]}, "Name Using Domain": {"tool_desc": "Get the Domain/Org name by Domain", "apis": [["NameByDomain", "Get Domain or Organization Name using Domain."]]}, "Emotional Poem": {"tool_desc": "This API'v choice poem from emotional parameters.", "apis": [["getPoem", "/app/api/getPoem\nmethod:only: [\"cos\", \"dot\", \"cross\", \"euler\"]\ntype:only: [\"max\", \"min\"]\ndelight:0.0-1.0\nanger:0.0-1.0\nsorrow:0.0-1.0\npleasure:0.0-1.0"]]}, "Tomba": {"tool_desc": "Search or verify lists of email addresses in minutes", "apis": [["DomainStatus", "Returns domain status if is webmail or disposable."], ["Enrichment", "The Enrichment API lets you look up person and company data based on an email, For example, you could retrieve a person\u2019s name, location and social handles from an email"], ["DomainSearch", "You can use this endpoint to show different browser icons to your users. The code argument receives the browser code as it appears in your user /account/sessions endpoint. Use width, height and quality arguments to change the output settings."], ["LinkedinFinder", "This API endpoint generates or retrieves the most likely email address from a Linkedin URL."], ["EmailVerifier", "verify the deliverability of an email address."], ["EmailFinder", "generates or retrieves the most likely email address from a domain name, a first name and a last name."], ["AuthorFinder", "This API endpoint generates or retrieves the most likely email address from a blog post url."], ["EmailCount", "Domain name from which you want to find the email addresses."]]}, "Diffbot": {"tool_desc": "Diffbot extracts data from web pages automatically and returns structured JSON.", "apis": [["Article API", "The Article API is used to extract clean article text from news articles, blog posts, and other text-heavy web pages."], ["Frontpage", "The Frontpage API takes in a multifaceted \u201chomepage\u201d and returns individual page elements."], ["Product API", "The Product API retrieves full product data from any e-commerce shopping page."]]}, "Lotto Draw Results - Global": {"tool_desc": "Up to 65 countries lotto draw results available.", "apis": [["Game List", "Games available by country."], ["Region List", "List of regions available by country code and name."], ["Get Draw Result", "Get draw result by given region, game and draw date."]]}, "Lootero": {"tool_desc": "Endpoints for the Lootero Application", "apis": [["Shared Service", "This endpoint returns the items related to a share code"]]}, "Tesla VIN Identifier": {"tool_desc": "Project TEMPA - This API is capable of resolving Tesla's VIN Identifier", "apis": [["VIN Detection", "This endpoint is capable of resolving a Tesla VIN identifier to an actual VIN. This conversion has a success rate of approximately 98%.\nThe following information is encoded in a Tesla VIN:\nManufacturer ID\nModel Type\nPlatform Type\nSeat Belt Type\nDrive System \nMotor Type\nYear of Manufacturing\nManufacturing Location (Fremont, Shanghai, Berlin, Austin)\nSpecial Series (like R for research)\nVIN Serial"], ["Manufacturing Location Detection", "This endpoint resolves a VIN identifier to manufacturing location.\nA few examples:\nLRW-C (Shanghai, China)\nXP7-B (Berlin, Germany)"], ["Manufacturing Year Detection", "Detects the manufacturing year of the respective vehicle."], ["Model Detection", "This endpoint resolves a VIN identifier to a model type"]]}, "Youtube Search": {"tool_desc": "Youtube API", "apis": [["Youtube Channel ID", "This endpoint get the channel ID of a Youtube Channel given the channel name"], ["Channel Details", "This endpoint get all available details about a given channel ID"], ["Channel Search", "This endpoint gets search results in a given Youtube channel using the channel ID"], ["Channel Videos", "Get the latest videos published by a Youtube channel"], ["Video Comments", "This endpoint returns a list comments under a given Youtube video"], ["Video Details", "Get all publicly available details about a Youtube Video"], ["Video Subtitles", "Get the available subtitles of a Youtube Video"], ["Trending Videos", "This endpoint returns the list of trending videos given a country"], ["Video Recommendation Continuation", "This endpoint will return the continuation list of recommended videos based on a former call to /video/recommendation/ endpoint."], ["Video Recommendation", "This endpoint returns a list of recommended videos based on a given a video ID"], ["Youtube Search", "This endpoint will a specific number of videos for a specific keyword, note that the maximum is 40 videos per request"]]}, "AirportsData": {"tool_desc": "Get basic information from 28k+ airports and landing strips around the world.", "apis": [["Get airports", "Will return data from 28k+ airports in the database."]]}, "Lexicala": {"tool_desc": "Lexicala API is a REST interface offering access to dictionary and lexical data from our monolingual, bilingual, multilingual and learner\u2019s dictionaries in JSON format.", "apis": [["SearchEntries", "search for entries with filters in query"], ["Test", "test that the API is running"], ["Languages", "all supported languages and codes"], ["Senses", "get specific sense by its unique ID"], ["Entries", "get specific entry by its unique ID"], ["Search", "search for entries with filters in query"]]}, "Company Logo": {"tool_desc": "Clearbit api alternative.", "apis": [["Get Company Logo by Domain", "Fetch company logo by providing domain in query params"]]}, "StopModReposts Blocklist": {"tool_desc": "The StopModReposts Blocklist in different data formats.", "apis": [["YAML", "YAML Ain't Markup Language endpoint"], ["XML", "Extensible Markup Language endpoint"], ["JSON", "JavaScript Object Notation endpoint"]]}, "URL Shortener - We store your links forever!": {"tool_desc": "Convenient URL shortening service without ads and registration.", "apis": [["GET request", "Enter your password to get click-through statistics for your link.\nShows long URL and visitor statistics."]]}, "Realtor API for Real Estate Data": {"tool_desc": "Data API for Realtor USA\nYou can use this API to get all the Realtor Property data, Realtor Agents data and Realtor School data.", "apis": [["RealtorSchoolList", "This endpoint will give you the Realtor School List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York etc\nstate_code: CA or NY etc\nschool_level: It can be either one of them (elementary, middle, high, private & charter)\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"coordinates\": {\n      \"lat\": 37.247605,\n      \"lon\": -121.946069\n    },\n    \"funding_type\": \"public\",\n    \"grades\": [\n      \"K\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"id\": \"078653021\",\n    \"location\": {\n      \"city\": \"San Jose\",\n      \"city_slug_id\": \"San-Jose_CA\",\n      \"state\": \"CA\"\n    },\n    \"name\": \"Carlton Elementary School\",\n    \"parent_rating\": 4,\n    \"rating\": 9,\n    \"review_count\": 27,\n    \"school url\": \"https://www.realtor.com/local/schools/Carlton-Elementary-School-078653021\"\n  }`"], ["RealtorAgentList", "This endpoint will give you the Realtor Agent List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"agent_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"agent_bio\": \"Mark Lafferty Office: 925-216-6203 nEmail Me Keller Williams Tri-Valley Realtyn2300 First St. #316nLivermore, CA 94550nnExperiencenAs an agent who's an expert in this local area, I bring a wealth of knowledge and expertise about buying and selling real estate here. It's not the same everywhere, so you need someone you can trust for up-to-date information. I am eager to serve you. Here are some of the things I can do for you:nnFind Your Next HomenYou need someone who knows this area inside and out! I can work with you to find the right home at the right price for you, including all the neighborhood amenities that matter - not to mention the essential criteria you have for your ideal homennSell a HomenWhen it's time to move, you need someone who will advertise your home, show to prospective buyers, negotiate the purchase contract, arrange financing, oversee the inspections, handle all necessary paperwork and supervise the closing. I can take care of everything you need, from start to close.nnConsult on Home Selling TacticsnOftentimes buyers don't visualize living in your home the way you do. I can make your home attractive to its ideal audience - which can help you get top dollar. Things like staging the home, making repairs or minor improvements, or even simply painting the walls can be the difference between a home resting on the market and one that's sold fast.n..\",\n    \"agent_languages\": [],\n    \"agent_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": true,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_12D2140114631531\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      }\n    ],\n    \"agent_photo\": \"http://p.rdcpix.com/v01/aaa120200-c0o.jpg\",\n    \"agent_rating\": 0,\n    \"agent_recommendations_count\": 0,\n    \"agent_reviews_count\": 0,\n    \"agent_served_areas\": [\n      {\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"agent_slogan\": \"\",\n    \"agent_specializations\": [\n      {\n        \"name\": \"Buyer\"\n      },\n      {\n        \"name\": \"Commercial\"\n      },\n      {\n        \"name\": \"First Time\"\n      },\n      {\n        \"name\": \"Golf\"\n      },\n      {\n        \"name\": \"Investment Properties\"\n      },\n      {\n        \"name\": \"Land\"\n      },\n      {\n        \"name\": \"Ranch\"\n      },\n      {\n        \"name\": \"Seller\"\n      },\n      {\n        \"name\": \"Vinyard\"\n      },\n      {\n        \"name\": \"Winery\"\n      }\n    ],\n    \"agent_team_details\": {\n      \"is_team_member\": false\n    },\n    \"agent_type\": [\n      \"buyer\",\n      \"seller\"\n    ],\n    \"agent_website\": \"http://www.marklafferty.com\",\n    \"for_sale\": {\n      \"count\": 4,\n      \"last_listing_date\": \"2023-01-31T01:52:43Z\",\n      \"max\": 1970000,\n      \"min\": 849950\n    },\n    \"is_realtor\": true,\n    \"joined\": [\n      0,\n      0\n    ],\n    \"license\": [\n      {\n        \"country\": \"US\",\n        \"license_number\": \"01344268\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"marketing_areas\": [\n      {\n        \"city_state\": \"Fremont_CA\",\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Sunol_CA\",\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Livermore_CA\",\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Pleasanton_CA\",\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Milpitas_CA\",\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"San Jose_CA\",\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"East Foothills_CA\",\n        \"name\": \"East Foothills\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Alum Rock_CA\",\n        \"name\": \"Alum Rock\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Mount Hamilton_CA\",\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"office_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"office_fulfillment_id\": 1424399,\n    \"office_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": true,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_153013A10033\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      }\n    ],\n    \"office_name\": \"KELLER WILLIAMS TRI-VALLEY\",\n    \"office_party_id\": \"3145631\",\n    \"office_phone\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 397-4200\",\n        \"type\": \"Office\"\n      }\n    ],\n    \"office_website\": \"WWW.PIERCETHEMARKET.COM\",\n    \"party_id\": 4232697,\n    \"person_name\": \"MARK M. LAFFERTY\",\n    \"phones\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 216-6203\",\n        \"type\": \"Mobile\"\n      }\n    ],\n    \"position\": \"Agent\",\n    \"profile_url\": \"https://www.realtor.com/realestateagents/MARK-M.-LAFFERTY_PLEASANTON_CA_135850_943184397\",\n    \"profile_url_id\": \"https://www.realtor.com/realestateagents/56b01aefbb954c01006a3382\",\n    \"recently_sold\": {\n      \"count\": 30,\n      \"last_sold_date\": \"2023-01-13\",\n      \"max\": 2850000,\n      \"min\": 630000\n    },\n    \"served_zip_codes\": [\n      \"94539\",\n      \"94550\",\n      \"94551\",\n      \"94566\",\n      \"94586\",\n      \"95035\",\n      \"95036\",\n      \"95101\",\n      \"95103\",\n      \"95106\",\n      \"95108\",\n      \"95109\",\n      \"95110\",\n      \"95111\",\n      \"95112\",\n      \"95113\",\n      \"95115\",\n      \"95116\",\n      \"95121\",\n      \"95122\",\n      \"95127\",\n      \"95131\",\n      \"95132\",\n      \"95133\",\n      \"95134\",\n      \"95135\",\n      \"95138\",\n      \"95140\",\n      \"95148\",\n      \"95150\",\n      \"95151\",\n      \"95152\",\n      \"95153\",\n      \"95154\",\n      \"95155\",\n      \"95156\",\n      \"95157\",\n      \"95158\",\n      \"95159\"\n    ],\n    \"types\": \"agent\",\n    \"video_url\": null\n  }`"], ["RealtorPropertyList", "This endpoint will give you the Realtor Property List with the data as given below, if you provide the city, state_code and offset.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\noffset: min = 0 and max can be depends on the total number of results. but the maximum number of results you can see at a time is 42. So you need to keep increasing the offset value by 42 to achieve a pagination.  To achieve pagination you have to start the offset from 0 and increase the offset by 42.\n\n`{\n    \"agent\": [\n      {\n        \"office_name\": \"CENTURY21 REAL ESTATE ALLIANCE\"\n      },\n      {\n        \"office_name\": null\n      }\n    ],\n    \"branding\": [\n      {\n        \"name\": \"CENTURY 21 Real Estate Alliance\",\n        \"photo\": null,\n        \"type\": \"Office\"\n      }\n    ],\n    \"last_update_date\": \"2022-12-06T01:24:16Z\",\n    \"list_date\": \"2022-08-23T23:24:23Z\",\n    \"list_price\": 875000,\n    \"listing_id\": \"2946989531\",\n    \"location\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"coordinate\": {\n          \"lat\": 37.71979,\n          \"lon\": -122.462898\n        },\n        \"line\": \"9 Garfield St\",\n        \"postal_code\": \"94132\",\n        \"state\": \"California\",\n        \"state_code\": \"CA\"\n      },\n      \"county\": {\n        \"fips_code\": \"06075\",\n        \"name\": \"San Francisco\"\n      },\n      \"street_view_url\": \"https://maps.googleapis.com/maps/api/streetview?channel=rdc-streetview&client=gme-movesalesinc&location=9%20Garfield%20St%2C%20San%20Francisco%2C%20CA%2094132&size=640x480&source=outdoor&signature=NniMw06UKhWMjlwyIN-dwOajrxo=\"\n    },\n    \"open_house_description\": \"No Open House Available\",\n    \"other_listings\": {\n      \"rdc\": [\n        {\n          \"listing_id\": \"2946989531\",\n          \"listing_key\": null,\n          \"primary\": true,\n          \"status\": \"for_sale\"\n        }\n      ]\n    },\n    \"permalink\": \"https://www.realtor.com/realestateandhomes-detail/9-Garfield-St_San-Francisco_CA_94132_M23343-72866\",\n    \"photos\": [\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\"\n      },\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b145756411s.jpg\"\n      }\n    ],\n    \"price_reduced_amount\": null,\n    \"primary_photo\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\",\n    \"property_description\": {\n      \"baths\": 1,\n      \"baths_1qtr\": null,\n      \"baths_3qtr\": null,\n      \"baths_full\": 1,\n      \"baths_half\": null,\n      \"beds\": 0,\n      \"garage\": 2,\n      \"lot_sqft\": 2539,\n      \"name\": null,\n      \"sold_date\": \"2017-08-17\",\n      \"sold_price\": 45373,\n      \"sqft\": 1094,\n      \"stories\": null,\n      \"sub_type\": null,\n      \"type\": \"single_family\",\n      \"year_built\": 1947\n    },\n    \"property_id\": \"2334372866\",\n    \"source\": \"BDCA\",\n    \"status\": \"for_sale\",\n    \"tax_record\": \"6A966F0C987E7C5A1DB0D29A6B22116A\",\n    \"type\": \"mls\",\n    \"virtual_tour_link\": \"No Virtual Tour Available\"\n  }`"]]}, "SnapChat Story": {"tool_desc": "Download all stories and account information easy , Channel : https://t.me/keepdeving , Dm : https://t.me/PPooP", "apis": [["Get Data and Story", "Get Data and Story by username"]]}, "OutSystems Community API": {"tool_desc": "Get information about the OutSystems community.", "apis": [["get_profiles", "Returns a list of profiles"], ["get_profile_series", "Returns time series snapshots of a profile."], ["get_profile", "Returns the details of a profile."]]}, "Android PlayStore Scraper": {"tool_desc": "Enter a PlayStore app ID and retrieve app information like pricing, reviews, descriptions, and more.", "apis": [["Scrape PlayStore", "Scrape AppStore app listing details like descriptions, and reviews"]]}, "Domain SEO Analysis": {"tool_desc": "Bishopi's advanced and real-time proprietary SEO metrics for domain names investors, keywords research and SEO professionals.", "apis": [["Domain SEO Analysis", "Get popular SEO metrics for a given domain name"], ["SERP Analysis", "SERP Analysis aka keyword overview. Discover thousands of great keyword ideas, analyze their ranking difficulty and calculate their traffic potential."]]}, "EAN13 Code Generator API": {"tool_desc": "This API return a EAN13 Barcode in PNG format, based on input of a 12 or 13 lenght code", "apis": [["ean13", "This endpoint returns a PNG with an EAN13 barcode or an error, based on a 12-13 lenght code. In case of 12 it will calculate automatically check-digit, in case of 13 it will check the check-digit."]]}, "Free stopwords": {"tool_desc": "StopwordAPI.com offers an easy solution for you to retrive words that you want to remove from a string.", "apis": [["Categories", "Will list all available word categories. Check this before calling /stopwords"], ["Stopwords", "Will return the exact extract words to use in your data analysis or application"], ["Languages", "Will list all available stopword languages including how many words each language contains."]]}}, "Logistics": {"Pack & Send": {"tool_desc": "Logistics and Shipment Services", "apis": [["/api/Tracking/", "If you support your Pack & Send Reference Number, we can provide your with some relevant information."]]}, "Transitaires": {"tool_desc": "Transitaires de d\u00e9douanement en Nouvelle-Cal\u00e9donie", "apis": [["Transitaire", "R\u00e9cup\u00e8re un transitaire donn\u00e9e"], ["Transitaires", "Renvoie tous les transiatires"]]}, "Amex Australia (Fastway Australia) Tracking": {"tool_desc": "Tracking API for Aramex Australia also know as Fastway Australia.", "apis": [["Track Package", "Track a package shipping details using a package tracking number"]]}, "TrackingMore_v2": {"tool_desc": "All-in-one global package tracking tool.", "apis": [["carriers/list", "List all supported carriers"], ["packages/track (Deprecated)", "Get tracking information of specific package"], ["packages/v2/track", "Get tracking information of specific package"], ["carriers/detect", "Detect carrier by providing tracking number"]]}, "Create Container Tracking": {"tool_desc": "User will be able to initiate the container tracking using this API", "apis": [["Get Tracking Data", "The user will be able to retrieve the data using this endpoint."]]}, "Pridnestrovie Post": {"tool_desc": "Transnistria parcel tracking", "apis": [["Get track info", "Get track info by track number"]]}, "Air Cargo CO2 Track And Trace": {"tool_desc": "Track your Air Cargo shipments and measure CO2 with more than 170 airlines", "apis": [["PULL (track)", "By providing a valid AWB, you can get tracking information for the shipment."]]}, "Transportistas de Argentina": {"tool_desc": "Obten las oficinas, localidades y precios de tus envios en Argentina para Andreani, Oca y Correo Argentino.", "apis": [["/tracking/correo_argentino/result_task/:task_id", "Result for one Task ID."], ["/cities/states/:stateIsoCode", "List of city for iso state."], ["/cities/postcode/:stateIsoCode/:postCode", "List of city for iso state and postcode."], ["/cities/search/:stateIsoCode/:keyword", "Search city for iso state and keyword name."], ["/cities/states", "List of states for Argentina with iso code."], ["/quotes/city/correo_argentino/:weight/:stateIsoCodeSrc/:normalizeCityNameSrc/:stateIsoCodeDst/:normalizeCityNameDst", "List of quote for iso state and city keyword name in Correo Argentino."], ["/quotes/postcode/oca/:cuit/:operativa/:cost/:weight/:volume/:postCodeSrc/:postCodeDst", "Quote for postcode in OCA e-Pack."], ["/quotes/postcode/correo_argentino/:weight/:postCodeSrc/:postCodeDst", "List of quote for postcode in Correo Argentino."], ["/tracking/correo_argentino/create_task/:service/:tracking_code", "Create task to get the history.\nThe result of the trace can be obtained after approximately 20-60 seconds by calling the endpoint: /tracking/correo_argentino/result_task/:task_id\n**IMPORTANT: ** The result will only be stored for approx 1 hour."], ["/offices/postcode/:service/:postCode", "List of offices for iso state and postcode."], ["/offices/search/:service/:stateIsoCode/:keyword", "List of offices for iso state and postcode."]]}, "suivi-colis": {"tool_desc": "L'API de suivi des colis en Nouvelle-Cal\u00e9donie", "apis": [["Health", "Get the API's health"], ["Latest", "L'\u00e9tat courant (ie. le dernier \u00e9tat du colis)."], ["Count", "Compte le nombre d'\u00e9tapes de l'historique, pratique pour limiter la consommation r\u00e9seau ou les ressources sur un IoT. Permet par exemple de poller un \u00e9tat de mani\u00e8re optimale."], ["All", "Tout l'historique du colis depuis son envoi jusqu'au dernier \u00e9tat en cours."]]}, "Orderful": {"tool_desc": "API for EDI", "apis": [["Transactions", "Get Transaction by ID"]]}}, "Travel": {"IRCTC": {"tool_desc": "An API with various functionalities for Indian railways IRCTC API.", "apis": [["Get Train Live Status", "This API will take train no and day of journey, and will return current status of train with other informations."]]}, "Airbnb listings": {"tool_desc": "Get airbnb listings details, prices, availability and more using listing IDs, latitude and longitude or \"market\".", "apis": [["Listings by market", "Retrieve listings ids and last updated dates for prices, availability and ratings in the specified market. Returns 50 results. Can be filtered on bedrooms and max guest capacity"], ["Listings by lat lng", "Retrieve listings ids, distance from starting point and last updated dates for prices, availability and ratings in a range from a given geographical point. Returns 50 results. Can be filtered on bedrooms and max guest capacity"], ["Count listings by market", "Retrieve listings count in the specified market. Can be filtered on bedrooms and max guest capacity"], ["Listings by administrative divisions", "Retrieve listings ids and last updated dates for prices, availability and ratings in the specified geographic area. Geocrafic area names can be found from \"Get administrative divisions\" endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie listings with cities with the same name but in different countries). Returns 50 results. Can be filtered on bedrooms and max guest capacity"], ["Count  listings by lat lng", "Retrieve listings count in a range from a given geographical point. Can be filtered on bedrooms and max guest capacity"], ["Count Listings by administrative divisions", "Retrieve listings count in the specified geographic area. Geocrafic area names can be found from \"Get administrative divisions\" endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie listings with cities with the same name but in different countries). Can be filtered on bedrooms and max guest capacity"], ["Listing Prices Full", "Retrieve listing prices for the next 12 months"], ["Listing Availability Full", "Retrieve listing availability and stay length rules for the next 12 months\n**Note**: The fact the available field is true does not means that the listing can be booked. It only tells indicates that it is not taken. To confirm if it is really available for stay you must verify all previous and following day rules for stay length are respected."], ["Listing Availability", "Retrieve listing availability and stay length rules for the requested month.\n**Note**: The fact the available field is true does not means that the listing can be booked. It only tells indicates that it is not taken. To confirm if it is really available for stay you must verify all previous and following day rules for stay length are respected."], ["Listing status Full", "Retrieve the calculated status (available/not available for stay) for the next 12 months of a listing based on previous and following days stay rules."], ["Listing Prices", "Retrieve listing prices for the requested month"], ["Listing status", "Retrieve the calculated status (available/not available for stay) of a listing based on previous and following days stay rules."], ["Prices and Availability by administrative divisions", "Retrieve average Price, average price of available properties only, availability percent and number of processed properties in an geographical administrative division. Geographic area names can be found from \"Get administrative divisions\" endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie listings with cities with the same name but in different countries). Can be filtered on bedrooms and max guest capacity."], ["Get administrative divisions", "Retrieve geographical admin names to be used in Listing by georef endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie cities with the same name but in different countries). Returns 50 results"], ["Prices and Availability by lat lng", "Retrieve average Price, average price of available properties only, availability percent and number of processed properties in a range from a given geographical point. Max range is 20000 meters. Can be filtered on bedrooms and max guest capacity."], ["Amenities", "Retrieves amenities ids And descriptions. Returns 50 results"], ["Markets", "Retrieve Market names to be used in Listing by market endpoint. Returns 50 results"], ["Connect test", "No parameters needed. Useful to test connectivity and authentication"]]}, "Great Circle Math Api": {"tool_desc": "An api to perform mileage calculations by receiving location information.", "apis": [["Get Distance By City, State, Country In Km", "Takes city, state, and country of both locations and returns latitude, longitude, and calculated miles in kilometers."], ["Get Distance By City, State, Country", "Takes city, state, and country of both locations and returns latitude, longitude, and calculated miles."], ["Get Distance", "Returns the circle math distance in miles."], ["Get Distance in Km", "Returns circle math distance in kilometers."]]}, "Airbnb Search": {"tool_desc": "Real-time data, unofficial airbnb API, get airbnb listings data, place to stay at an amazing price.", "apis": [["Autocomplete", "Find location for search"]]}, "World Airports Directory": {"tool_desc": "API returns all matching airpot details based on the most relevant keyword of city, airport code, city code etc.", "apis": [["SearchAirports", "Primary API to  get all the matching airports based on the keyword you pass in the params. API runs best matching algorithm to find most relevant airports matching with either city, city code or airport code and so on.\n**BONUS**: It returns complete `Airport Name, Lat, Long, Timezone, Country, Country Code, Airport Code and City Code.`\n\nNOTE: This API is case insensitive.\n\nFor e.g.\n1. When user trying with city `/v1/airports/dubai`\n2. When user trying with Airport Code `/v1/airports/dxb`\n3. When user trying with city code `/v1/airports/omdb`"], ["ListAllAirports", "API to explore all airports we have in our huge directory."]]}, "Ski Resorts and Conditions": {"tool_desc": "Ski Resorts and Conditions", "apis": [["Resort View", "View the information of a resort"], ["Resorts", "Paginated list of all resorts"], ["Index", "Show a list of all endpoints available"]]}, "Airports Finder": {"tool_desc": "Airport Finder is a robust API designed to locate airports worldwide.", "apis": [["Get Airports By Coordinates", "The \"Get Airports By Coordinates\" API enables you to retrieve a list of airports based on specific latitude and longitude coordinates. By providing the latitude and longitude values, this API returns comprehensive details about airports located within that vicinity. This information includes airport names, IATA codes, locations, and additional relevant data."], ["Get Airports By Country", "The \"Get Airports By Country\" API allows you to easily retrieve a list of airports based on a specific country. This API provides comprehensive details about airports, including their names, IATA codes, locations, and additional information."], ["Get Airports By City", "The \"Get Airports By City\" API enables you to effortlessly retrieve a list of airports based on a specific city. This API provides comprehensive details about airports, including their names, IATA codes, locations, and additional information."], ["Get Airport Details By Code", "The \"Get Airport Details By Code\" API allows you to quickly retrieve comprehensive information about airports based on their IATA codes. Obtain precise details such as airport names, locations, time zones, and more with this efficient and reliable API."]]}, "Traveldax": {"tool_desc": "Boosting revenue on metasearch channels through pricing intelligence.", "apis": [["Insights", "Access all the processed insights in order to boost revenue on metasearch channels."], ["New Search", "Add a new search to the queue. It will be executed in real time."]]}, "KAYAK Flights": {"tool_desc": "Pricing and flight itineraries information on KAYAK.", "apis": [["Results", "Pricing and results data as it appears on the source website."]]}, "Airports Info (\u03b1)": {"tool_desc": "All airports around the globe are here.", "apis": [["Airport Info", "Get airport details\nIf you want a specific airport, say it in a comment"]]}, "webcams.travel": {"tool_desc": "The World's Largest Landscape Webcam API ***** Get webcams by categories, country, region or just nearby your location ***** Get timelapse slideshows for every webcam ***** Get an uncluttered webcam layer for your map", "apis": [["/webcams/list/nearby={lat},{lng},{radius}", "This is a modifier. Returns a list of webcams near the given coordinates {lat},{lng} up to the given {radius} in kilometers. Required: {lat}, {lng}, {radius}. The maximum value for {radius} is 250."], ["/webcams/list/category={category}[,{category}[,...]]", "This is a modifier. Returns a list of webcams according to the listed categories. Multiple categories must be separated by comma. Required: at least one {category}."], ["/webcams/list/continent={continent}[,{continent}[,...]]", "This is a modifier. Returns a list of webcams according to the listed continents. Multiple continents must be separated by comma. Required: at least one {continent}."], ["/webcams/list/{modifier}[/{modifier}[/...]]", "Returns a list of webcams according to the applied {modifier}s. Initially, the list contains all webcams. The resulting list of webcams from applying a modifer will be used as input for the following modifier. modifiers are processed from left to right. With every applied modifier, the list of webcams will be narrowed down. Possible values for {modifier} are: \"webcam\" (initial list of webcams), \"nearby\" (list of webcams around a position), \"bbox\" (list of webcams in an area), \"category\" (list of webcams in a category), \"continent\" (list of webcams in a continent), \"country\" (list of webcams in a country), \"region\" (list of webcams in a region of a country), \"exclude\" (exclude webcams from a list of webcams), \"orderby\" (order the list of webcams), \"limit\" (slice the list of webcams). \"webcam\", if given, is always applied first. \"exclude\", \"orderby\", and \"limit\" are always applied (even if not explicitly given) in this order and always after \"webcam\", \"nearby\", \"bbox\", \"category\", \"continent\", \"country\", and \"region\" have been applied.  If none of \"webcam\", \"nearby\", \"bbox\", \"category\", \"continent\", \"country\", and \"region\" are applied, then all webcams are in the list before applying \"exclude\", \"orderby\", and \"limit\".  Please refer to the description of the various {modifier}s to learn more about their parameter and defaults.  A {modifier} may be applied only once. If a {modifier} is listed multiple times, it may only applied once."], ["/webcams/list/country={country}[,{country}[,...]]", "This is a modifier. Returns a list of webcams according to the listed country. Multiple countries must be separated by comma. Required: at least one {country}. Possible values are ISO 3166-1-alpha-2 codes."], ["/webcams/list/region={region}[,{region}[,...]]", "This is a modifier. Returns a list of webcams according to the listed region. Multiple regions must be separated by comma. Required: at least one {region}. Possible values are ISO 3166-1-alpha-2 codes for the country and a region code separated by a dot."], ["/webcams/list/bbox={ne_lat},{ne_lng},{sw_lat},{sw_lng}", "This is a modifier. Returns a list of the webcams in the bounding box given by north-east ({ne_lat},{ne_lng}) and south-west ({sw_lat},{sw_lng}) coordinates. Required: {ne_lat},{ne_lng},{sw_lat},{sw_lng}."], ["/webcams/list/exclude={webcamid}[,{webcamid}[,...]]", "This is a modifier. Exclude the {webcamid} from a list. Multiple {webcamid} must be separated by comma. Required: at least one {webcamid}"], ["/webcams/list/orderby={order},{sort}", "This is a modifier. Returns the list of webcams ordered by {order}. The optional sorting direction is given by {sort}. Required {order}."], ["/webcams/list/limit={limit},{offset}", "This is a modifier. Returns the list of webcams sliced by {limit}. The optional offset is given by {offset}. Required: {limit}. The maximum value for {limit} is 50. {offset} defaults to 0. If limit is not given, then a default of limit=10 is applied."], ["/webcams/map/{ne_lat},{ne_lng},{sw_lat},{sw_lng},{zoom}", "Returns a list of webcams optimized for displaying on a map for a given bounding box and {zoom} level. The value for the zoom level is compatible with the Google Maps zoom level."], ["/webcams/list/property={property}[,{property}[,...]]", "This is a modifier. Returns a list of webcams according to the listed {property}. Multiple {property} must be separated by comma. Required: at least one {property}. Possible values are \"editors\" (featured from the editors), \"hd\" (high resolution webcams), and \"live\" (webcams with a live stream)."], ["/webcams/list/webcam={webcamid}[,{webcamid}[,...]]", "This is a modifier. Returns a list of webcams according to the listed {webcamid}s. Multiple {webcamid}s must be separated by comma. Required: at least one {webcamid}."]]}, "Skyscanner API": {"tool_desc": "The Skyscanner API offers developers a way to integrate Skyscanner's data into their own applications, allowing users to access and interact with the vast travel data offered by Skyscanner.", "apis": [["Locations", "Geographical locations have the concept of hierarchy. Each location has a parent of a larger hierarchy.  I.e.: a place `type` of `airport` can have a parent of `city` and `city` can have a parent of `country`."], ["Locales", "You can use the `/locales` endpoint to retrieve the locales that we support to translate your content. The names of the locales returned are in the native language associated with the locale."], ["Markets", "You can use the `/markets` endpoint to retrieve the market countries that we support. Most suppliers (airlines, travel agents, and car hire dealers) set their fares based on the market (or country of purchase). It is therefore necessary to specify the market country in every query. The names of the markets returned are localised based on a locale passed as a parameter."], ["Currencies", "You can use the `/currencies` endpoint to retrieve the currencies that we support and information about how we format them in Skyscanner."], ["Carriers", "The Carriers API returns a full list of active carriers with name and IATA code indexed by their carrierId."]]}, "Flight , Airline Consolidator, Flight Aggregator": {"tool_desc": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.", "apis": [["Flight aggregator", "FlightsLogic Global Airfare APIs connect you to the finest information in the travel industry. You can now build, innovate and launch your web and Mobile applications with our Flight API. Inspirational search features combine our Global Airfare APIs with your existing travel offering to complement your product range."]]}, "Travelopro ": {"tool_desc": "Travelopro is a leading travel technology company It provides online travel booking solution and APIs for flights, hotels, cars,etc.", "apis": [["Travelopro", "Travelopro is the best leading travel technology company"]]}, "Vehicle charging stations ": {"tool_desc": "Find EV charging stations for cars\nYou can use this API to retrieve charging location information,", "apis": [["Get Stations", "Return nearest charging stations within\nA POI (Point of Interest), also referred to as a Site or ChargePoint, is the top-level set of information regarding a geographic site with one or more electric vehicle charging equipment present."]]}, "Hotels": {"tool_desc": "This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travelling site/application, such as : hotels.com", "apis": [["reviews/list (Deprecated)", "Get all reviews of specific property"], ["reviews/v2/list (Deprecated)", "Get all reviews of specific property"], ["properties/get-details (Deprecated)", "Get all available information of a property"], ["properties/list (Deprecated)", "List properties with options and filters"], ["get-meta-data (Deprecated)", "Get locale meta data"], ["locations/v2/search (Deprecated)", "Search for related locations and suggestions"], ["properties/get-hotel-photos (Deprecated)", "Get all available photos of property"], ["properties/v2/resolve-url", "Hotels system is being merged with Expedia. This endpoint helps to convert the old hotel ID (embedded in the shared link, Ex : \"ho133528\" in hotels.com/ho133528/) to the new one (423818)."], ["v2/get-meta-data", "Get locale meta data"], ["locations/search (Deprecated)", "Search for related locations and suggestions"], ["locations/v3/search", "Search for related locations and suggestions"]]}, "Flightera Flight Data": {"tool_desc": "Flight status, on-time performance and statistics by Flightera", "apis": [["aircraftInfo", "Returns detailed aircraft information for an aircraft identified by registration.\nOnly works for currently active aircraft"], ["airlineFlights", "Returns a list of flights for an airline given a start time. The list is sorted ascending by scheduled departure time.\nThe next departure/ time is returned for pagination (use start times to paginate).\nThe dates returned for each flight represent the scheduled departure date in local time and can be used to query flight data via /flight/info."], ["airlineSearch", "Returns a list of airlines for a given country, identifiers or name search pattern. Multiple arguments can be specified to limit the search.\nEither one of the arguments must be specified."], ["airlineAircrafts", "A list of plane registrations for a given airline. Can search by ident only.\nOnly returns currently active aircraft"], ["airlineStatistics", "Returns detailed airline statistics for airlines identified by the provided identifiers. In most cases the list should contain only one entry, unless the ident is ambiguous.\nIf searched by ident, only one airline is returned.\nOne of ident, iata, icao must be provided.\nStatistics are calculated overnight and represent the current day's data."], ["airlineInfo", "Returns detailed airline information for airlines identified by the provided identifiers. In most cases the list should contain only one entry.\nHowever, due to the nature of the data, it is possible that multiple entries are returned.\nIf searched by ident, only one airline is returned.\nOne of ident, iata, icao, name must be provided."], ["airportMetar", "Returns the most recent METAR for an airport specified by the given ident.\nIncludes a parsed version of the METAR."], ["airportSearch", "Returns a list of airports for a given country, bbox or timezone. Multiple arguments can be specified to limit the search.\nEither one of country, bbox or timezone must be specified."], ["airportFlights", "Returns a list of flights for an airport, direction and time. The list is sorted ascending by scheduled departure time for direction==\"departure\" and sorted descending by scheduled arrival time for direction==\"arrival\".\nThe next departure/arrival time is returned for pagination.\nThe dates returned for each flight represent the scheduled departure date in local time and can be used to query flight data via /flight/info."], ["airportInfo", "Returns detailed airport information for airports identified by the provided identifiers. In most cases the list should contain only one entry.\nHowever, due to the nature of the data, it is possible that multiple entries are returned.\nIf searched by ident, only one airport is returned.\nOne of ident, iata, icao, localID must be provided."], ["aircraftSearch", "A list of plane registrations for a given search criteria.\nCan search by airline ident, country, model\nIf multiple arguments are provided, they will be chained as AND\nReturns only currently active aircraft"], ["airportStatistics", "Returns detailed airport statistics for airports identified by the provided identifiers. In most cases the list should contain only one entry, unless the ident is ambiguous.\nIf searched by ident, only one airport is returned.\nOne of ident, iata, icao, localID must be provided.\nStatistics are calculated overnight and represent the current day's data."], ["flightStatistics", "Returns statistics for a flight number with one entry per route flown. Statistics are updated daily.\nThe query can be filtered by route.\nStatistics are always as of today, please contact us if you require historical statistics."], ["flightInfo", "Returns the info for a flight on a specified date, or the current flight if date is omitted. Will return a 400 if the date requested is outside the subscription level"], ["flightSearch", "Returns a list of flights for a given flight number. Minimum and/or maximum date can optionally be specified to limit the search. Results are ordered by departure date ascending. The next departure time is returned for pagination.\nWill return a 400 if the date range requested is outside the subscription level"]]}, "Flight Fare Search": {"tool_desc": "Elevate your travel game with Flight Fare Search API!", "apis": [["Airport Arrivals", "An Endpoint to fetch Arrivals on a given date"], ["Flight Search V2", "A faster, more agile Endpoint that's used to search flights."], ["Airport Departues", "An endpoint to get Departues in an airport"], ["Airport Search", "An endpoint to search airports"]]}, "Booking com": {"tool_desc": "Find all hotels, view prices, photos of the hotels, reviews.", "apis": [["Search cars locations", "Search cars locations by name"], ["Search car rental", "Search car rental. Browse our inventory of hundreds of cheap car rentals. Get the best rental car deals on your next trip"], ["Vehicle supplier details", "Vehicle supplier details by vehicle_id"], ["Important information", "Important information of vehicles"], ["Exchange rates", "Get currency exchange rates"], ["Car rental details", "Car rental details by vehicle_id. First, call `Search car rental`"], ["Rental terms", "Rental terms and conditions by pick up location_id"], ["Rental extras", "Get additional services when renting"], ["Reviews metadata of the hotel", "Get reviews metadata of the hotel by hotel_id"], ["Nearby cities", "Get a list of nearby cities by coordinates"], ["Questions about the hotel", "Get questions and answers of hotel staff by hotel_id"], ["Hotel on the map", "Get nearby landmarks and geo info of the hotel by hotel_id"], ["Room list of the hotel", "Get room list of the hotel by hotel_id. Room prices, photos and full room descriptions"], ["Reviews about the supplier of vehicles", "Reviews about the supplier of vehicles by location_id"], ["Location highlights of the hotel", "Get location highlights of the hotel by hotel_id. Ex.: metro, rail"], ["Description of the hotel", "Get description of the hotel by hotel_id"], ["Review scores of the hotel", "Get review scores of the hotel by hotel_id"], ["Hotel children policy", "Get hotel children policy by hotel_id"], ["Search hotels by coordinates", "Get available hotels by coordinates latitude and longitude"], ["Policies of the hotel", "Get policies of the hotel by hotel_id"], ["Payment features of the hotel", "Get payment features of the hotel by hotel_id"], ["Reviews of the hotel", "Get reviews of the hotel by hotel_id"], ["Search hotels", "Get available hotels by the filter. Indicate the `destination_id` and `dest_type` -> use **@Search locations** endpoint, check-in and check-out date, number of adults and children. For possible filters use **@Filters for search** endpoint. Use `page_number` to paginate and navigate through the result pages! <br/> Comparable to: ![Search locations](https://i.imgur.com/PCuK81r.png)"], ["Tips of the hotel", "Get guest tips of the hotel by hotel_id"], ["Facilities of the hotel", "Get facilities of the hotel by hotel_id. Ex.: `Restaurant`, `Room service`, `Breakfast in the room`"], ["Search locations", "Search locations or hotels by name. Comparable to: ![Search locations](https://i.imgur.com/wLgLE5X.png)"], ["Nearby places of the hotel", "Get nearby places of the hotel by hotel_id. Ex.: nearby `Airport`, `Shopping Centre`"], ["Photos of the hotel", "Get all photos of the hotel by hotel_id"], ["Filters for search", "Get a list of available filters for hotel search"], ["List of Districts", "Returns all the districts where Booking offers hotels."], ["Hotel data", "Get hotel data by hotel_id"], ["List of Payment types", "Returns a list of payments. Only payments with {bookable} set to 1, can be used in processBooking. For processBooking, we always support Visa, Mastercard and American Express."], ["List of Cities", "Returns a list of cities where Booking.com offers hotels. location: Latitude and longitude. timezone: Timezone of the city."], ["List of Hotels", "This call returns the hotel and room data. List of hotels"], ["List of Facility types", "Returns facility types names and their translations"], ["List of Regions", "Returns all the regions where Booking offers hotels."], ["List of Hotel types", "Returns hotel types names and their translations."], ["List of Room facility types", "Returns room facility types names"], ["List of Hotel facility types", "Returns hotel facility types names and their translations"], ["List of Room types", "Returns room types names"], ["List of Hotel chains", "Returns a list of hotel chains."], ["List of Countries", "Returns all the country where booking offers hotels."], ["Hotels Search", "Get available hotels by the filter. Indicate the `destination_id` and `dest_type` -> use **@Search locations** endpoint, check-in and check-out date, number of adults and children. For possible filters use **@Filters for search** endpoint. Use `page_number` to paginate and navigate through the result pages! <br/> Comparable to: ![Search locations](https://i.imgur.com/PCuK81r.png)"], ["Meta Properties description", "Get meta properties description"], ["Filters for search", "Get a list of available filters for hotel search"], ["Description of the hotel", "Get description of the hotel by hotel_id"]]}, "Deutsche Bahn": {"tool_desc": "Search stations and trips within Deutsche Bahn network.", "apis": [["Search trips", "Find trips between two stations"], ["Autocomplete", "Search for train and public transport stations in Germany and across Europe"]]}, "Flight _v2": {"tool_desc": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.", "apis": [["Flight API", "FlightsLogic Global Airfare APIs connect you to the finest information in the travel industry. You can now build, innovate and launch your web and Mobile applications with our Flight API. Inspirational search features combine our Global Airfare APIs with your existing travel offering to complement your product range."]]}, "Skyscanner_v2": {"tool_desc": "Skyscanner API allows users to search best flights and hotels with details and best price.", "apis": [["Get Similar Hotels", "Get all the similar hotels based on the selected hotel."], ["Search Flights Filter By Agent Id", "Get and poll all flights, search between origin and destination with prices, filter, sorting for specific agent id."], ["Search Flights Multi Stops", "Get and poll all flights. Searching the flights between multiple locations with prices, filter, sorting etc."], ["Search Cars", "Use this API for searching the cars for hire based on location."], ["Search Location", "Use this API to get EntityId for the pickup and drop location."], ["Get Recommend Hotels", "Use this API to get recommend hotel based on the hotel selected."], ["Get Things To Do", "Use this API to get Thing  to do nearby the hotel selected."], ["Get Hotel Reviews", "Get all the review related to the hotel selected."], ["Get Hotel Price", "Get the detail price for the hotel and room selected."], ["Get Hotel Details", "Get all the details of the hotel, room, amenities, reviews etc. based on a unique Id selected."], ["Search Hotel", "Get and poll hotel room search with prices, filter etc."], ["Get Hotel Filters", "This API is used to get all the available filters for the place to visit."], ["Search Place", "Search for a place to get the **entityId** needed in searching the hotel API."], ["Search Flights", "Get and poll all flights, search between origin and destination with prices, filter, sorting."], ["Get Flight Details", "Get all the details of the fights based on a unique Id."], ["Search Flight Everywhere", "Use this API to get flights when the destination is everywhere or unsure."], ["Search Flight Everywhere Details", "Get all the details of the fights based on a unique Id."], ["Test API", "This API is to test if server is up and running"], ["Get Config", "This API endpoint is responsible for providing  some of the parameters require for most of the API's."], ["Search Airport", "This API endpoint is responsible for providing a list of Airports for the location."]]}, "Hotels com Provider": {"tool_desc": "Search hotels, see prices, photos of the hotels, reviews.", "apis": [["Regions Search", "Search region, locations, city or hotel by name"], ["Hotel Slug convert", "Get Hotel ID from Hotel Site slug, (https://hotels.com/ho219115) `ho219115` -> `1105156`"], ["Domains List", "Get a list of Domains, available domains code, currencies and locales"], ["Hotels Search", "Get hotels by the filter. Set the `domain`, it is necessary for localization at the currency setting. (meta / Domains List). `accessibility` parameter, needed to get ONLY available hotels. Indicate the `region_id` -> use `Region Search`, check-in and check-out date, number of adults and children"], ["Hotel Rooms (offers)", "Get available rooms at the hotel"], ["Reviews scores", "Get hotel overall score"], ["Reviews list", "Get hotel reviews list"], ["Reviews summary", "Get hotel reviews summary"]]}, "World Scuba Diving Sites Api": {"tool_desc": "Are you a scuba diver looking for interesting dive sites around the world?", "apis": [["Query Divesites by a country or a region.", "The endpoint returns a json list of dive sites which match the region or country entered as the query. The range of results depend but there is usually around 100-500 sites for each country. There are around 15'000 dive sites listed in the database."], ["Query divesites by gps boundaries (For use with maps)", "The API endpoint that queries dive sites by GPS boundaries allows developers to search for dive sites within a specified geographical region, defined by a set of latitude and longitude coordinates. This endpoint can be particularly useful for creating interactive maps or applications that require displaying dive sites within a specific area. To use it add the four map bounds as query params"]]}, "Nomad List Cities": {"tool_desc": "Explore best cities to live for digital nomads!", "apis": [["Latin America", "Get Latin America cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc"], ["North America", "Get North America cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc"], ["Middle East", "Get Middle East cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc"], ["Oceania", "Get Oceania cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc"], ["Africa", "Get African cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc"], ["Asia", "Get Asian cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc"], ["Europe", "Get European cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc"], ["All citites", "Get all cities sorted by overall score.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc"]]}, "SEPTA": {"tool_desc": "Provides hackathon-style access to the SEPTA API.", "apis": [["Next to Arrive", "Fetch a list of regional rail trains that will soon be traveling from point A to point B."], ["Regional Rail Schedules", "By train number, lol."], ["TrainView", "Regional Rail real-time train locations"]]}, "World Dive Centres Api": {"tool_desc": "An API for diving centres,boats and shops that allow developers to access information about PADI, SSI, and SDI dive operators around the world.", "apis": [["Query Dive Operators by a country or a region.", "The endpoint returns a json list of dive sites which match the region or country entered as the query. The range of results depend but there is usually around 100-500 sites for each country. There are around 15'000 dive sites listed in the database."]]}, "Airbnb_v2": {"tool_desc": "Airbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent.", "apis": [["Get Property Checkout Price", "This API will return the checkout cost of the Property"], ["Test API", "This API is to test if server is up and running"]]}, "FlightsLogic's Flight Booking | Flight Booking Software": {"tool_desc": "FlightsLogic provides Flight Booking Software, Flight Booking API to the travel agents, tour operators and travel companies worldwide.", "apis": [["https://flightslogic.com/about.php", "FlightsLogic provides Flight Booking Software, Flight Booking API to the travel agents, tour operators and travel companies worldwide."]]}, "ASR Hub": {"tool_desc": "ASR Hub is a nomalized XML API which integrates airline content from multiple sources like Direct &amp; NDC connect, Multi-GDS and aggregators from various markets and\u00a0 offers search, ticket, Payments, ancillary sales, and post bookings services through a single API.", "apis": [["/api/TripDetails/{MFRef}", "Retrives the TripDetails based on the  MFRef Number\r\n- MFRef"], ["/api/ScheduleChangeAccept/{MFRef}/{FlightId}", "Accept Schedule Change based on the UserInputs\r\n - MFRef\r\n - Flight Id"]]}, "AI Trip Planner": {"tool_desc": "The API generates personalized trip plans based on the user's specified number of days and location.", "apis": [["Get Trip Plan", "This endpoint is used to generate trip plan based on no. of days and destination."]]}, "flight | flight aggregator": {"tool_desc": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.", "apis": [["flight", "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide."]]}, "Travel API's": {"tool_desc": "TravelPD offers b2b and b2c booking portals, booking engines, travel API integration services for travel companies such as Travel Agents, Tour Operators, DMC\u2019s, TMC\u2019s and Wholesalers at affordable pricing.", "apis": [["B2B Travel portal development with API integration", "TravelPD offers affordable travel portal development solutions with travel API integration and travel portal software."]]}, "StreetNarrator": {"tool_desc": "Give us a Street name!", "apis": [["street", "StreetNarrator API Get a unique history/touristic AI text for any street around the world"]]}, "TripVair AI Flight Cancel Predictor": {"tool_desc": "TripVair AI FCP is an API that returns the probability a future flight will be cancelled up to 363 days in the future.", "apis": [["GET /flights/v1/cancel", "Offers a statistical  probability of a future flight being cancelled using deep learning AI from 7 days up to 363 days in advance"]]}, "Skyscanner Flights": {"tool_desc": "Pricing and flight itineraries information on Skyscanner.", "apis": [["Results", "Pricing and results data as it appears on the source website."]]}, "Travelo Pro": {"tool_desc": "Travelopro provides online travel booking solution and APIs for flights, hotels, cars , transfers, sightseeing etc.", "apis": [["Travel Technology", "Travelopro provides travel API integration, third party API integration, xml API integration services for hotels, flights, car rentals, holiday packages and many more."]]}, "Booking": {"tool_desc": "This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travel site such as : booking.com", "apis": [["review-filters/list", "List supported options metadata for filtering reviews"], ["filters/list", "A list of filter options to pass in categories_filter field. Pass params and values are as same as .../properties/list API"], ["reviews/list", "List reviews of stayed guests"], ["properties/get-hotel-photos", "Get photos of hotel"], ["properties/detail", "Get brief information of a property"], ["properties/v2/get-rooms", "Get full details of rooms in the hotel"], ["properties/get-policies", "Get policies of property by id"], ["properties/get-featured-reviews", "Get featured reviews of stayed guests"], ["properties/get-description", "Get description of property by id"], ["properties/list-by-map", "List properties by coordinate of bounding box"], ["properties/list", "List properties having type of resorts, hotels, motels, hostels, etc as on official site"], ["properties/get-static-map", "Get static map at specific GEO location"], ["properties/get-rooms (Deprecated)", "Get full details of rooms in the hotel"], ["properties/get-facilities", "Get facilities of property by id"], ["currency/get-exchange-rates", "Get currency exchange rates between different countries"], ["locations/auto-complete", "List suggested locations by countries, cities, districts, places name"]]}, "Tripit": {"tool_desc": "TripIt organizes travel plans into an itinerary that has all of your trip details in one place.", "apis": [["Get", "A get request is used to retrieve a specific object from the TripIt API given its TripIt object ID. Since get requests do not change data they are all made via an HTTP GET request for a URL that takes the following form:"], ["List", "A list request is used to retrieve multiple objects given an object type and set of filter parameters. Since list requests do not change data they are all made via an HTTP GET request for a URL that takes the following form:"], ["Delete", "A delete request is used to delete existing objects"]]}, "borders": {"tool_desc": "USA Cross Border Waiting Times is an API service that provides real-time updates on wait times at various border crossings between the United States/Canada and United States/Mexico.", "apis": [["USA Borders Waiting Times", "Returns all usa ports with description and wait times."]]}, "Cities Cost of Living": {"tool_desc": "Get detailed information about the living expenses of 650+ cities around the world.", "apis": [["Get Currencies List", "Get a list of all the Currencies available"], ["Get Cities List", "Get a list of all the Cities available"]]}, "FlightsLogic Flight": {"tool_desc": "FlightsLogic integrates Flight API, Flight Search API Integration, Flight Ticket Software, Flight XML API Integration for travel companies worldwide.", "apis": [["FlightsLogic Flight API", "FlightsLogic provides Flight API integration within your new or existing online travel website. Flight API integration connects travel agents and customers across the globe, extensively broadening your market reach. We deliver Flight API Integration Solution- one of the most reliable and most trusted Global Distribution Systems (GDS), that helps the travel portals get the best service suppliers by their side to broadcast their effective services at the portal and that successively can bring vast website traffic as well."]]}, "Flixbus": {"tool_desc": "A service that provides flixbus travel search, available cities, stations, timetables and routes.", "apis": [["stations", "Get a list of stations"], ["search-trips", "Search trips from-to. Specify for which parameters (from_id, to_id) you are looking for, city or station"], ["cities", "Get a list of cities"], ["schedule", "Get a list of schedule"], ["trip-details", "Get a trip details by trip uid"]]}, "VOO": {"tool_desc": "Voos baratos para Madrid", "apis": [["End1", "Para ver voos baratos"]]}, "Flixbus_v2": {"tool_desc": "New Flixbus API that provides Flixbus travel search, timetables, stops, cities, routes and autocomplete.", "apis": [["Search trips", "Search trips between two cities or stations"], ["Get timetable", "Returns timetable for a given station id and date"], ["Autocomplete", "Search for Flixbus stations"]]}, "Real-Time PNR Status API for Indian Railways": {"tool_desc": "It is an unofficial PNR Status API that provides real-time information on the status of Indian Railways train reservations.", "apis": [["PNR Status", "This is an unofficial PNR Status API that provides real-time information on the status of Indian Railways train reservations. This API is designed for educational purposes only and is not affiliated with Indian Railways in any way."], ["Live Train Running Status", "Live Train Running Status is a crucial keyword in the world of railway transportation, and Qrail is one of the leading providers of this service. With Live Train Running Status, passengers can get real-time updates on the current location and running status of their train, including expected arrival and departure times. Qrail's Live Train Running Status service is highly reliable and accurate, providing passengers with peace of mind and ensuring that they arrive at their destinations on time. With this service, passengers can plan their journey better and avoid any inconvenience caused by unexpected delays or cancellations."]]}, "Flight Data_v2": {"tool_desc": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog.", "apis": [["The prices for the alternative directions", "Brings the prices for the directions between the nearest to the target cities back."], ["Non-stop tickets", "Returns the cheapest non-stop tickets for the selected route with departure/return date filters."], ["The popular directions from a city", "Brings the most popular directions from a specified city back."], ["Airline data in json format", "API returns a file with a list of airlines from the database"], ["The calendar of prices for a month", "Brings the prices for each day of a month, grouped together by the number of transfers, back"], ["Airplane data in json format", "API returns a file with a list of airplanes from the database"], ["Popular airline routes", "Returns routes for which an airline operates flights, sorted by popularity."], ["City data in json format", "API returns a file with a list of cities from the database"], ["Tickets for each day of month", "Returns the cheapest non-stop, one-stop, and two-stop flights for the selected route for each day of the selected month"], ["Alliance data in json format", "API returns a file with a list of alliances from the database"], ["Special offers", "Brings the recent special offers from the airline companies back in the .XML format."], ["The prices for the airline tickets", "Brings back to the list of prices, found by our users during the recent 48 hours according to the filters used."], ["Airport data in json format", "API returns a file with a list of airports from the database"], ["The calendar of prices for a week", "Brings the prices for the nearest dates to the target ones back"], ["Cheapest tickets", "Returns the cheapest non-stop tickets, as well as tickets with 1 or 2 stops, for the selected route with departure/return date filters. Important: Old dates may be specified in a query. No error will be generated, but no data will be returned."], ["Data of countries in json format", "API returns a file with a list of countrys from the database"], ["Cheapest tickets grouped by month", "Returns the cheapest non-stop tickets, as well as tickets with 1 or 2 stops, for the selected route grouped by month."], ["Data on the routes in json format", "The query returns a file with a list of routes from the database."]]}, "SBB Suisse railway": {"tool_desc": "Search stations and trips within Suisse railway network SBB.", "apis": [["Search trips", "Find trips between two stations"], ["Autocomplete", "Search for train and public transport stations in Switzerland and across Europe"]]}, "UKRail": {"tool_desc": "UKRail is an API for UK train times.", "apis": [["/GetUKRail", "Query the API to get rail data."]]}, "Tsaboin Cams": {"tool_desc": "With our API, you can extend your projects (check terms and conditions for more details) by connecting to our servers for traffic details around bus-stops and for live traffic cams.", "apis": [["camlist", "List all available traffic cameras"]]}, "iRail": {"tool_desc": "Search for train trips in Belgium using the iRail API.", "apis": [["Departures", "Departures of trains in Belgium"]]}, "Priceline com Provider": {"tool_desc": "priceline.com | Lets you search hotels, cars for rent, flights.", "apis": [["Auto Suggest", "This API will provide a list of possible cities and hotels for a given search string"], ["Search (results v)", "The getResultsRequest endpoint returns car availability based on the provided search criteria"], ["Search hotels locations by geolocation", "Search locations by coordinates. Set coordinates latitude and longitude"], ["Download cities", "Downloads a list of Hotel cities"], ["Download companies", "Downloads a list of companies"], ["Search hotels locations", "Search locations by name"], ["Search - express results", "Provides discounted Express (Cached) and Closed User Group (Live) Rates using the getExpress.Results endpoint."], ["Download airports", "Downloads a list of Airports"], ["Download countries", "Downloads a list of countries"], ["Hotel details", "Get all reviews and images of the hotel by hotel_id"], ["Search cars locations", "Search locations by name"], ["Search flights locations", "Search airports and locations by name"], ["Booking details of the hotel", "Get hotel descriptions, prices and available booking options. Indicate the hotel_id, check-in and check-out date"], ["Search hotels", "Get available hotels by the filter. Indicate the `location_id` -> use `Search locations`, check-in and check-out date"], ["Download filter amenities", "Downloads an Amenity list filtered"], ["Download cities clusters", "Downloads a list of Hotel cities clusters"], ["Hotel details", "Provides information on the specified hotel"], ["Search car rentals", "Search car rentals by filter. Indicate the `location_id` -> use `Search locations` api point"], ["Search flights", "Search flights. Set type: `ONE_WAY` or `ROUND_TRIP`. Set location_departure and location_arrival, use `/flights/locations` api point. You can filter out tickets by price, max duration and number of stops"], ["Search (round-trip)", "Returns a contract for a flight round trip search through the getFlightRoundTrip endpoint"], ["Download airports", "Downloads a list of airports with IATA codes for Flight search"], ["Seat Map", "Gets the seat map of all flights in a contract bundle through the getFlightSeatMap endpoint"], ["Auto complete", "Gets airport and city ids for the air product related to words in passed string through the getAutoComplete endpoint"], ["Contract", "Gets the contract for the PPN bundle provided by a flight return, departure, or combined (round trip/multi-city) through the getFlightContract endpoint"], ["Search (return flights)", "Gets all the return flights for a given contract/return bundle from FlightDepartures through the getFlightReturns endpoint"], ["Search (departures, one way)", "Returns a set of flights for departure (one way flight search or return/ multi-city flight search) through the getFlightDepartures endpoint"], ["Search (results request)", "The getResultsRequest endpoint returns car availability based on the provided search criteria"], ["Download cities", "Downloads a list of cities"], ["Download locations", "Downloads a list of Locations"], ["Search flights", "Search flights. Set type: `ONE_WAY` or `ROUND_TRIP`. Set location_departure and location_arrival, use `/flights/locations` api point. You can filter out tickets by price, max duration and number of stops"], ["Download airports", "Downloads a list of airports with IATA codes for Flight search"], ["Auto complete", "Gets airport and city ids for the air product related to words in passed string."], ["Hotel photos", "This API returns a list of photos per hotel"], ["Search (express multi-contract)", "Provides hotel and multiple rates information per hotel using the getExpress.MultiContract endpoint."], ["Download property types", "Downloads Property Types list"], ["Download chains", "Downloads a list of Hotel chains"], ["Hotel reviews", "This API returns a list of reviews"], ["Download areas", "Downloads an Area list"], ["Download states", "Downloads a list of Satets"], ["Express Contract", "Provides the hotel inventory and corresponding rates for Express (cache) or Closed User Group (live)"], ["Downalods hotels", "Downalods a list of Hotels"], ["Download amenities", "Downloads a list of Amenities"]]}, "Flight Integration": {"tool_desc": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.", "apis": [["Flight Integration", "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide."], ["Flight", "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide."]]}, "Gas Price": {"tool_desc": "Reach gasoline and diesel prices in different fuel stations in different cities.", "apis": [["europeanCountries", "Service that brings up the current gasoline prices at european countries."], ["allUsaPrice", "Service that brings the average current gasoline prices of states in America."], ["canada", "The service that brings gas prices in the Canada."], ["stateUsaPrice", "The service that brings gas prices in the United States by state."], ["usaCitiesList", "The service that get list of cities with price information in the USA."]]}, "Tripadvisor": {"tool_desc": "Tripadvisor API helps to query realtime  Hotels search, Flights prices, Restaurants, Attracting locations, etc to create a travelling site.", "apis": [["Test API", "This API is to test if server is up and running"]]}}, "Video_Images": {"Alt Bichinhos": {"tool_desc": "A collection of pet images with alt text!", "apis": [["Get All Languages", "This endpoint will return back all languages available for the image."], ["Get German Alt Text.", "This endpoint will return back a pet image with alt text in **German.**"], ["Get Spanish Alt Text", "This endpoint will return back a pet image with alt text in **Spanish.**"], ["Get Portuguese Alt Text.", "This endpoint will return back a pet image with **Brazilian Portuguese** alt text."], ["Get English Alt Text.", "This endpoint will return back a pet image with alt text in **English.**"]]}, "html5tomp4": {"tool_desc": "convert html5 animations to mp4 videos for social media posts", "apis": [["getResult", "get result of previous requested rendering with job_id"]]}, "Youtube Videos": {"tool_desc": "An easy-to-use API to fetch videos from Youtube in MP4 format.", "apis": [["/mp4", "Returns a list of MP4 files with different qualities and other details."]]}, "Flaticon": {"tool_desc": "5M+ icons and vectors at your fingertips", "apis": [["style", "Method that allows you go get detailed information about a style, the design format that an icon or a pack has. Styles are the different versions in which an icon a given family may appear. For example, an icon may be available in lineal, color, or lineal color styles."], ["category", "Method that allows you to get detailed information about a category. Categories are the different themes in which icons are grouped at Flaticon."], ["totalPacks", "Method that allows you to get a number stating the full quantity of packs available at Flaticon. The number refreshes periodically according to the content available at flaticon.com. Packs are sorted into two groups: PREMIUM packs and SELECTION packs. PREMIUM packs are those that contain one or more PREMIUM icons."], ["categories", "Method that allows you to get a paged list with information about Flaticon categories. Categories are the different themes in which icons are grouped at Flaticon."], ["totalPacksPremium", "Method that allows you to get a number stating the full quantity of PREMIUM packs available at Flaticon. The number refreshes periodically according to the content available at flaticon.com. PREMIUM packs are those that contain one or more PREMIUM icons."], ["download", "Method that allows you to download the selected icon with the selected format."], ["tags", "Method that allows you to get a paged list with information about Flaticon tags that icons or packs have."], ["tag", "Method that allows you go get detailed information about a tag."], ["totalPacksSelection", "Method that allows you to get a number stating the full quantity of SELECTION packs available at Flaticon. The number refreshes periodically according to the content available at flaticon.com. SELECTION packs are those that contain only SELECTION icons."], ["totalIconsSelection", "Method that allows you to get a number stating the full quantity of SELECTION icons available at Flaticon. The number refreshes periodically according to the content available at flaticon.com."], ["searchPacks", "Method that allows you to get a paged list with the results of the search. Packs returned by the search may be SELECTION packs or PREMIUM packs, according to the content."], ["searchIcons", "Method that allows you to get a paged list with the results of the search. Icons returned by the search may be SELECTION icons or PREMIUM icons. By default, it will return a list order by priority. If no order is set, it will return items order by priority. In order to avoid 403 errors when svg icon is used to show the icon in result lists you must not store data in cache more than 15 minutes"], ["pack", "Method that allows you to get detailed information about a pack. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family."], ["packs", "Method that allows you to get a paged list with information about the packs available at Flaticon. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family.  By default, it will return a list order by priority. If no order is set, it will return items order by priority."], ["icons", "Method that allows you to get a paged list with information about the icons available at Flaticon. By default, it will return a list order by priority. If no order is set, it will return items order by priority. In order to avoid 403 errors when svg icon is used to show the icon in result lists you must not store data in cache more than 15 minutes"], ["styles", "Method that allows you to get a paged list with information about Flaticon styles, design formats that icons or packs have. Styles are the different versions in which an icon from a given family may appear. For example, an icon may be available in lineal, color, or lineal color styles."], ["totalIcons", "Method that allows you to get a number stating the full quantity of icons available at Flaticon. The number refreshes periodically according to the content available at flaticon.com."], ["totalIconsPremium", "Method that allows you to get a number stating the full quantity of PREMIUM icons available at Flaticon. The number refreshes periodically according to the content available at flaticon.com."], ["icon", "Method that allows you to get detailed information about an icon."]]}, "JSON2Video": {"tool_desc": "Your free API for video creation and editing", "apis": [["Get the status of your movie renders", "Get a list of your movie renders, in what step of the rendering process they are and a link to the resulting video once they finish."]]}, "NSFW / Nude Detection": {"tool_desc": "An API to detect NSFW or nudity within an image (as URL).", "apis": [["NSFW detection", "AI-based detection if an image is likely to contain NSFW content (nudity)."]]}, "free images API": {"tool_desc": "this API provides copyright free images", "apis": [["copyright free images API", "in this API we  gathered best sources of free to use images, and we keep adding more sources."]]}, "Petey Vid Video Search API": {"tool_desc": "Access Petey Vid search engine, search over 600 million videos from 70+ platform providers", "apis": [["Video search API", "Use this API to search Petey Vid index/repository"]]}, "Webp Image Converter": {"tool_desc": "Convert any image to a webp image.", "apis": [["Convert", "Convert image to webp format."]]}, "Porn gallery": {"tool_desc": "this api returns high quality pictures of any porn category or pornstar name", "apis": [["Search for any category or star", "use category key word or pornstar name to browse pictures"]]}, "YouTube Mp3 Downloader": {"tool_desc": "Update: 31 May 2023: API is fixed & it is now 100% working.", "apis": [["Download mp3 (custom audio quality)", "Download YouTube to Mp3 in various audio quality: 320 Kbps, 192Kbps, 256Kbps, 128Kbps & 64Kbps. (Specify the quality in the field)"], ["Download YouTube Mp3", "Update: 17 May 2023: API is fixed & it is now 100% working. Converts any YouTube video into Mp3 downloadable files. No Ads. No wild redirects."]]}, "Video Downloader": {"tool_desc": "FreeVideoDownloader is a powerful video downloader tool designed for websites, allowing seamless integration of video downloading capabilities.", "apis": [["Video Downloader", "FreeVideoDownloader is a powerful video downloader tool designed for websites, allowing seamless integration of video downloading capabilities. It provides an easy-to-use API that enables website owners to offer their visitors the ability to download videos from various platforms without leaving the site. With FreeVideoDownloader, users can effortlessly save videos in different formats, enhancing their browsing experience and content accessibility."]]}, "Image diffusion": {"tool_desc": "Diffusion APIs", "apis": [["/image/stable/diffusion", "Most stable and fast diffusion to generate safe image `stuff.`"], ["/image/anime/diffusion", "design to generate weeb stuff."], ["/image/stable/prompter", "generate prompt from image url for stable diffusion"]]}, "videogrammer": {"tool_desc": "Videogrammer is a simple but powerful way to multiply social media videos", "apis": [["getResult", "get result of previous requested rendering with job_id"]]}, "MlemAPI": {"tool_desc": "A free public service API which provides pictures of animals with mlems/bleps.", "apis": [["New mlem", "Returns one most recently published mlem image in JSON"], ["Mlem ID", "Returns one mlem image by ID in JSON"], ["Tags", "Returns all tags in JSON"], ["Random mlem", "Returns one random mlem image in JSON"]]}, "Background removal_v2": {"tool_desc": "The simplest way to remove image backgrounds through API", "apis": [["Check Status", "Use this endpoint to check if the server is up and running."]]}, "Plate Detection": {"tool_desc": "Universal plate detection", "apis": [["Detection of Plates and Faces", "In order to protect personal data, you can detect license plates and faces in the pictures you have."]]}, "Video Thumbnail Extractor": {"tool_desc": "Extract thumbnail image from mp4 video at a specific time", "apis": [["Video Thumbnail Extractor", "Extractor thumbnail image from mp4 video"], ["Video Thumbnail Extractor_copy", "Extractor thumbnail image from mp4 video"]]}, "Nexweave": {"tool_desc": "With Nexweave, you can create personalized images, GIFs, and interactive videos that make your audience feel special while increasing their engagement.", "apis": [["GetCampaignDetails", "This API will return the Campaign details including variables used in the overall Campaign."], ["GetAllTemplates", "This API will return all the templates associated with the user's account, including Images & Video."], ["GetTemplateDetails", "This API will return the template details including variables for a valid template."], ["GetAllCampaigns", "The API will return all the CSV Campaigns associated with the user's account, including Images, Videos &  Image+Video Campaign.\n\nNote: The campaigns must be in Success state."]]}, "List Movies": {"tool_desc": "An API used to list and search through out all the available movies.", "apis": [["With RT Ratings", "Returns the list with the Rotten Tomatoes rating included"], ["Order By", "Orders the results by either Ascending or Descending order"], ["Sort By", "Sorts the results by choosen value"], ["Genre", "Used to filter by a given genre (See http://www.imdb.com/genre/ for full list)"], ["Query Term", "Used for movie search, matching on: Movie Title/IMDb Code, Actor Name/IMDb Code, Director Name/IMDb Code"], ["Minimum Rating", "Used to filter movie by a given minimum IMDb rating"], ["Quality", "Used to filter by a given quality"], ["Page", "Used to see the next page of movies, eg limit=15 and page=2 will show you movies 15-30"], ["Limit", "The limit of results per page that has been set"], ["List Movies", "Used to list and search through out all the available movies. Can sort, filter, search and order the results"]]}, "Instagram Media Downloader": {"tool_desc": "", "apis": [["Get User", "Retrieve valuable user information including username, name, alternate name, description, profile image, post count, and follower count."]]}, "Cars image background removal": {"tool_desc": "", "apis": [["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."], ["Get list of available modes", "The service provides three options for background removal results:\n* Mask of foreground.\n* Image with foreground object.\n* Image with foreground object with shadow."]]}, "Image Anonymization": {"tool_desc": "API for hiding faces and car license plates in images.", "apis": [["Get list of available modes", "Service provides server modes that may be used to choose which kind of objects to hide. This endpoint returns list of modes that may be used as query parameters for requests to the `results` endpoint.\n\nThe following modes are supported:\n\n* `hide-clp` \u2013 to hide car license plates\n* `hide-face` \u2013 to hide faces"], ["Get version", "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API."]]}, "Web Capture": {"tool_desc": "Take screenshots of any website or generate a pdf either from the website or an HTML file.", "apis": [["Generate PDF", "Generate PDF by providing URL of any website."], ["Take  Image Screenshot", "Get Screenshot of any website by providing URL and the  image ratio (width, height)"]]}, "Mission Creation": {"tool_desc": "Add new mission", "apis": [["Get Mission", "get details of a mission"]]}, "Quality Porn": {"tool_desc": "JSON search API for best free porn videos and pornstars gathered from the most popular porn sites.", "apis": [["Pornstar search", "Search for a porn star using the \"Query\".\nA list of all stars found is returned, or a detail pornstar if only one is found."], ["Pornstar by name", "Loads a porn star by name from the loaded list."], ["Docs", "Get available routs and parameters as json."], ["Supported sites", "Get all available pages with the possible qualities and filters."], ["Video search", "Search for quality porn and get a provider-subdivided list of the best matching videos.\n\n### Examples\n\nSearch only HD videos that have been rated best with the search term \"amateur\".\n`/search?quality=hd&filter=rating&query=amateur'`\n\nSearch for \"amateur\" only. Filters and quality are optional.\n`/search?query=amateur'`\n\nSearch for \"amateur\" on page 2.\n`/search?query=amateur&page=2'`\n\nSearch for \"amateur\" and set a timeout for 5 seconds for each site request.\n`/search?query=amateur&timeout=5000`\n\nFilter only by the page you need. Here for example by PornHub. It can be filtered by any name part or part URL. For example \"porn\", \".com\" or complete names \"pornhub\", \"youporn.com\".\n`/search?query=amateur&site=pornhub`"], ["Live room bio", "Get the bio from a room."], ["Live tags", "Search for live tags and the associated data."], ["Live cams", "Search for live cams and according to your preferences. Filter by gender, tags and pages."], ["Random search query", "Get a random search query;"], ["Top 10 search queries", "Get the top 10 search queries"], ["Pornstar list by alphabetical letter", "Loads a list with the names and request URLs of pornstars. This list is requested by alphabet."]]}, "WebCap - Website Screenshot Capture": {"tool_desc": "Turn websites into high definition screenshot images super quick and super easy.", "apis": [["Capture Screenshot", "This will capture the website screenshot and return a downloadable image URL"]]}, "Premium-Anime-Mobile-Wallpapers-Illustrations": {"tool_desc": "Fetch The Best Quality Anime  Mobile Wallpapers & Illustrations From The 100k+ Collection.", "apis": [["Random Wallpapers", "Get a random anime wallpaper\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"], ["Anime Wallpapers by pagination", "Get anime wallpapers:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity** , 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"], ["Anime wallpapers related to the valentine by pagination", "Get anime wallpapers related to the valentine:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"], ["Anime wallpapers related to the wedding by pagination", "Get anime wallpapers related to the wedding:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"], ["Anime wallpapers related to the couple by pagination", "Get anime wallpapers related to the couple:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"], ["Anime wallpapers related to the christmas with pagination", "Get  anime wallpapers related to the christmas:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"], ["Anime Illustrations by pagination", "Get anime illustrations made by anime fans:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"], ["Recent Wallpapers by pagination", "Get recent anime wallpapers without any categorization:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above sensitivity, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"], ["Search by animename, art_id", "Search by animename, art_id\n\nRequired GET parameter\n\n**page**: 1\n**sensitivity**: 1\n**searchText**: 'Tokyo'\n**exact**: 0\n\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper\npage 1 : 0-10\npage 2: 10-20 \u2026\u2026\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOn the above **searchText**, means it will try to fetch all arts based on the above text (Japanese anime name)\nOR\nart_id\n\n***Note: searchText param should be min 3 chars length***\n\nOptional GET parameter\n**exact**: \n\nIf the exact parameter is not provided then by default it will be set to 0.\n0 represents fetch all the arts related to any searchText word of animename.\n\n**Note: Exact params value 0 assume that you are passing japanese animename it will search all the wallpapers related to it**\n( So **attack on t** will result in empty response since its english name but **Shingeki no** will not)\n\n1 represents fetch all the arts which have the same animename and searchText.\n\n**Note: Exact params value 1 support both english and japanese animename**\n( So **Attack on titan** which is english will result wallpaper of japanese animename **Shingeki no Kyojin**)\n\n2 represent fetch arts based on art_id ( so If you are sending art_id on searchText make sure you set the exact param to 2 )\n\n**quality**:0\nThis API provides two types of wallpaper images\n\nCompress lower size wallpaper.\nBest quality but will result in high size.\nIf the **quality** parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\nRESPONSE\n**animename**( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity**( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id**( Depend on subscription )\nUnique wallpaper id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\nNote: if no wallpaper found response will be\n\n*{\"status\": \"empty\"}*"], ["Anime boy wallpapers by pagination", "Get anime boy wallpapers:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"], ["Anime wallpapers related to the family by pagination", "Get anime wallpapers related to the family:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"], ["Anime wallpapers related to the halloween by pagination", "Get anime wallpapers related to the halloween:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"], ["Premium anime wallpapers by pagination", "Premium anime arts are wallpapers that look best of the best on a mobile device or contain high-quality digital art:\nRequired GET parameter\n**page**:  0\n**sensitivity**: 1\nOn the above **page**, 0 means it will fetch the latest 10 wallpaper if the page value is 1 then It will bring the next 10 latest wallpaper \npage 0 : 0-10 \npage 1: 10-20 ......\n\nOn the above sensitivity, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`"]]}, "Blurhash URL API": {"tool_desc": "Converting URL to a blurhash", "apis": [["Converting URL to Blurhash", "Free api to convert url to a hash for https://blurha.sh/"]]}, "api.video": {"tool_desc": "api.video is the end-to-end solution that enables you to easily build, scale, and operate on-demand and live-streaming videos in your app, software, or platform.", "apis": [["GET_analytics-sessions-sessionId-events", "Useful to track and measure video's engagement."], ["GET-video-status", "This API provides upload status & encoding status to determine when the video is uploaded or ready to playback.\n\nOnce encoding is completed, the response also lists the available stream qualities."], ["GET-video", "This call provides the same JSON information provided on video creation. For private videos, it will generate a unique token url."]]}, "tes": {"tool_desc": "test", "apis": [["getPetById", "Returns a single pet"], ["getInventory", "Returns a map of status codes to quantities"], ["getOrderById", "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"]]}, "Snappy: Web Capture": {"tool_desc": "Screen Shot Website in Real Time.", "apis": [["snap", "Simply input url of the webpage that you wish to screenshot.\nAPI returns a temporary link (valid for 1 hour) to download the screenshot.\nAlternatively, you can also choose to have the image returned in base64 encoding."]]}, "Bing Video Search": {"tool_desc": "An AI service from Microsoft Azure that turns any app into a video search resource.", "apis": [["Trending", "Get currently trending videos."], ["Video Details", "Get insights about a video, such as related videos."], ["Video Search", "Get videos relevant for a given query."]]}, "Random anime img": {"tool_desc": "An API generates a short link for an anime image", "apis": [["5000img", "randomly selects around 5000 images"]]}, "Video Builder": {"tool_desc": "Create dynamic videos using images as source.", "apis": [["video/{videoId}", "Read video informations and status"]]}, "Any Anime": {"tool_desc": "Get random anime pfp and gif's using the anyanime api", "apis": [["anime gif", "Get anime gif pfp's / banners"], ["anime img", "Show only the image from the api on your browser ."], ["anime", "Shows json data and image url of the anime pfp you want to use / show !"]]}, "Astro Gallery": {"tool_desc": "Astro Photo Gallery", "apis": [["Get Astro Photo Info (randomly)", "Return one of the photo info selected randomly by system, including paths (image_hd and image) which use to download photo in **Download Astro Photo** method."]]}, "Youtube Search": {"tool_desc": "Introducing our API for obtaining YouTube Shorts URLs, the perfect solution to unlock an ocean of opportunities and boost your revenue!", "apis": [["search", "Search video on YouTube"]]}}, "Email": {"fast Email verifier": {"tool_desc": "APISOLUTION services provide a comprehensive API for fast email validation and verification for any developer to use on start-ups and staff projects.", "apis": [["Role Account", "Check the rols account of your domain"], ["FreeDomain", "Check whether or not you have a free domain."], ["disposable Domain and Suggest Domain", "Find out if the domain is disposable and get a suggested domain."], ["email Check SMTP", "An easy way of checking your domain's SMTP."], ["EmailVerifications", "He is  a simple way  to verify a list of email addresses with different dimensions."], ["EmailVerification", "Basic usage\nIt is a simple way to verify an email address with different dimensions."]]}, "Emails Validator": {"tool_desc": "Allows validating email addresses.", "apis": [["Verify Email", "Allows validating email addresses. Checks if emails are deliverable."]]}, "EmailBounceAPI": {"tool_desc": "FREE 20,000 , Email Debounce , Our bounce email API is a powerful tool that helps you manage your email deliverability by detecting, monitoring, and handling bounced emails from a range of ISPs.", "apis": [["Email Endpoint", "Simplify your email management with our API that detects and handles bounced emails from a range of ISPs, ensuring your messages are delivered effectively."]]}, "EmailQualityPlus": {"tool_desc": "Email Validation", "apis": [["Valida\u00e7\u00e3o de Email", "Valida\u00e7\u00e3o Simples de Email"]]}, "E-mail Check Invalid": {"tool_desc": "The Email Check Invalid API is used to verify the validity of an email address.", "apis": [["mailCheck", "\u2611 Filter domain\n\u2611 Not start with a special character and must begin with a letter, \ndigit, or certain special characters like +, _, ., -.\n\u2611 Followed by the @ symbol to separate the username part and the domain part of the email address.\n\u2611 Domain part does not start or end with a dot or hyphen and only contains alphanumeric characters or dots.\n\u2611 Email string ends after the domain part and there are no additional characters."]]}, "MailSlurp Email Testing": {"tool_desc": "Email sandbox testing API.", "apis": [["getAttachmentMetaData", "Returns the metadata such as name and content-type for a given attachment and email."], ["getMissedEmail", "List emails that were missed due to plan limits."], ["getEmailAttachments", "Returns an array of attachment metadata such as name and content-type for a given email if present."], ["downloadAttachment", "Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream."], ["downloadAttachmentBase64", "Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the `downloadAttachment` method but allows some clients to get around issues with binary responses."], ["getEmails", "List emails that an inbox has received. Only emails that are sent to the inbox's email address will appear in the inbox. It may take several seconds for any email you send to an inbox's email address to appear in the inbox. To make this endpoint wait for a minimum number of emails use the `minCount` parameter. The server will retry the inbox database until the `minCount` is satisfied or the `retryTimeout` is reached"], ["getRawEmailJson", "Returns a raw, unparsed, and unprocessed email wrapped in a JSON response object for easier handling when compared with the getRawEmail text/plain response"], ["downloadBody", "Returns the specified email body for a given email as a string"], ["getEmailHTMLQuery", "Parse an email body and return the content as an array of text. HTML parsing uses JSoup which supports JQuery/CSS style selectors"], ["waitForEmailCount", "If inbox contains count or more emails at time of request then return count worth of emails. If not wait until the count is reached and return those or return an error if timeout is exceeded."], ["getLatestEmail", "Get the newest email in all inboxes or in a passed set of inbox IDs"], ["getEmailTextLines", "Parse an email body and return the content as an array of strings. HTML parsing uses JSoup and UNIX line separators."], ["getEmailPreviewURLs", "Get a list of URLs for email content as text/html or raw SMTP message for viewing the message in a browser."], ["getUnreadEmailCount", "Get number of emails unread. Unread means has not been viewed in dashboard or returned in an email API response"], ["getEmailLinks", "HTML parsing uses JSoup and UNIX line separators. Searches content for href attributes"], ["getEmailHTML", "Retrieve email content as HTML response for viewing in browsers. Decodes quoted-printable entities and converts charset to UTF-8. Pass your API KEY as a request parameter when viewing in a browser: `?apiKey=xxx`. Returns content-type `text/html;charset=utf-8` so you must call expecting that content response not JSON. For JSON response see the `getEmailHTMLJson` method."], ["getExpirationDefaults", "Return default times used for inbox expiration"], ["downloadBodyBytes", "Returns the specified email body for a given email as a stream / array of bytes."], ["waitForNthEmail", "If nth email is already present in inbox then return it. If not hold the connection open until timeout expires or the nth email is received and returned."], ["getRawSentEmailJson", "Returns a raw, unparsed, and unprocessed sent email wrapped in a JSON response object for easier handling when compared with the getRawSentEmail text/plain response"], ["getInboxByEmailAddress", "Get a inbox result by email address"], ["getSentDeliveryStatuses", "Get all sent email delivery statuses"], ["waitForLatestEmail", "Will return either the last received email or wait for an email to arrive and return that. If you need to wait for an email for a non-empty inbox set `unreadOnly=true` or see the other receive methods such as `waitForNthEmail` or `waitForEmailCount`."], ["doesInboxExist", "Check if inboxes exist by email address. Useful if you are sending emails to mailslurp addresses"], ["getEmail", "Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawEmail endpoints"], ["getAllInboxes", "List inboxes in paginated form. The results are available on the `content` property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative `getInboxes` method returns a full list of inboxes but is limited to 100 results."], ["getExpiredInboxes", "Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties"], ["getInboxEmailsPaginated", "Get a paginated list of emails in an inbox. Does not hold connections open."], ["getAttachments", "Get all attachments in paginated response. Each entity contains meta data for the attachment such as `name` and `content-type`. Use the `attachmentId` and the download endpoints to get the file contents."], ["getAllTrackingPixels", "List tracking pixels in paginated form"], ["getAliasThreads", "Returns threads created for an email alias in paginated form"], ["getAliasEmails", "Get paginated emails for an alias by ID"], ["getLatestEmailInInbox_1", "Get the newest email in all inboxes or in a passed set of inbox IDs"], ["getTemplatePreviewJson", "Get email template preview with passed template variables in JSON format. Pass template variables as query params."], ["getExpiredInboxRecord", "Inboxes created with an expiration date will expire after the given date and be moved to an ExpiredInbox entity. You can still read emails in the inbox but it can no longer send or receive emails. Fetch the expired inboxes to view the old inboxes properties"], ["getTemplatePreviewHtml", "Get email template preview with passed template variables in HTML format for browsers. Pass template variables as query params."], ["listInboxRulesets", "List all rulesets attached to an inbox"], ["getBouncedEmails", "Bounced emails are email you have sent that were rejected by a recipient"], ["getExpiredInboxByInboxId", "Use the inboxId to return an ExpiredInboxRecord if an inbox has expired. Inboxes expire and are disabled if an expiration date is set or plan requires. Returns 404 if no expired inbox is found for the inboxId"], ["getGroupWithContactsPaginated", "Get group and paginated contacts belonging to it"], ["getAliases", "Get all email aliases in paginated form"], ["getAttachmentInfo", "Returns the metadata for an attachment. It is saved separately to the content of the attachment. Contains properties `name` and `content-type` and `content-length` in bytes for a given attachment."], ["downloadAttachmentAsBase64Encoded", "Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the `downloadAttachment` method but allows some clients to get around issues with binary responses."], ["getDomain", "Returns domain verification status and tokens for a given domain"], ["getAllSentTrackingPixels", "Get all sent email tracking pixels in paginated form"], ["getSentEmailTrackingPixels", "Get all tracking pixels for a sent email in paginated form"], ["downloadAttachmentAsBytes", "Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream."], ["getSentDeliveryStatus", "Get a sent email delivery status"], ["getDomains", "List all custom domains you have created"], ["getSentEmailPreviewURLs", "Get a list of URLs for sent email content as text/html or raw SMTP message for viewing the message in a browser."], ["getSentOrganizationEmails", "Get all sent organization emails in paginated form"], ["getSentDeliveryStatusesBySentId", "Get all sent email delivery statuses"], ["getRawSentEmailContents", "Returns a raw, unparsed, and unprocessed sent email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawSentEmailJson endpoint"], ["getInboxRulesets", "List all rulesets attached to an inbox"], ["getOrganizationInboxes", "List organization inboxes in paginated form. These are inboxes created with `allowTeamAccess` flag enabled. Organization inboxes are `readOnly` for non-admin users. The results are available on the `content` property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time)."], ["getInboxIds", "Get list of inbox IDs"], ["getInboxSentEmails", "Returns an inbox's sent email receipts. Call individual sent email endpoints for more details. Note for privacy reasons the full body of sent emails is never stored. An MD5 hash hex is available for comparison instead."], ["getImapSmtpAccess", "Get IMAP and SMTP access usernames and passwords"], ["getInboxTags", "Get all inbox tags"], ["getDeliveryStatusesByInboxId", "Get all email delivery statuses for an inbox"], ["getInbox", "Returns an inbox's properties, including its email address and ID."], ["getLatestEmailInInbox", "Get the newest email in an inbox or wait for one to arrive"], ["getInboxByName", "Get a inbox result by name"], ["getBouncedRecipient", "Bounced emails are email you have sent that were rejected by a recipient"], ["getInboxes", "List the inboxes you have created. Note use of the more advanced `getAllEmails` is recommended and allows paginated access using a limit and sort parameter."], ["getComplaints", "SMTP complaints made against your account"], ["listInboxTrackingPixels", "List all tracking pixels sent from an inbox"], ["getAllTemplates", "Get all templates in paginated format"], ["getRawEmailContents", "Returns a raw, unparsed, and unprocessed email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawEmailJson endpoint"], ["getEmailHTMLJson", "Retrieve email content as HTML response. Decodes quoted-printable entities and converts charset to UTF-8. Returns content-type `application/json;charset=utf-8` so you must call expecting that content response not JSON."], ["getAllUnknownMissedEmails", "Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox."], ["getEmailsPaginated", "By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages"], ["getGravatarUrlForEmailAddress", "Get gravatar url for email address"], ["getAlias", "Get an email alias by ID"], ["waitForNthMissedEmail", "Wait for 0 based index missed email"], ["getOrganizationEmailsPaginated", "By default returns all emails across all team inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages"], ["getInboxForwarders", "List all forwarders attached to an inbox"], ["getTestWebhookPayloadBounceRecipient", "Get webhook test payload for bounce recipient"], ["getAllWebhooks", "List webhooks in paginated form. Allows for page index, page size, and sort direction."], ["getTestWebhookPayload", "Get test webhook payload example. Response content depends on eventName passed. Uses `EMAIL_RECEIVED` as default."], ["getBouncedEmail", "Bounced emails are email you have sent that were rejected by a recipient"], ["getTestWebhookPayloadEmailRead", "Get webhook test payload for email opened event"], ["getBouncedRecipients", "Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address."], ["getSmsMessage", "Returns a SMS summary object with content."], ["getTestWebhookPayloadBounce", "Get webhook test payload for bounce"], ["getTestWebhookPayloadEmailOpened", "Get webhook test payload for email opened event"], ["getSmsMessagesPaginated", "By default returns all SMS messages across all phone numbers sorted by ascending created at date. Responses are paginated. You can restrict results to a list of phone number IDs. You can also filter out read messages"]]}, "Email Verifier/Validator": {"tool_desc": "This API uses SMTP Callback Verification technique to check if an email really exists or not.", "apis": [["Email", "## The status attribute will be:\n\nOK  - Only if the smtp server explicitly confirms the availability of the mailbox address.\n\nINVALID - If the smtp server explicitly confirms the mailbox is not available.\n\nUNKNOWN - For every other scenario (The mailbox may or may not be available)."]]}, "Blaze Verify": {"tool_desc": "Email Verification by Emailable is astonishingly easy and low-cost.", "apis": [["Get account info", "Get general account information like the email of the account owner and available credits."], ["Get the status of a batch", "GET requests to the batch endpoint will get the current status of the batch verification job specified in the \"id\" parameter.<br><br>When a credit card transaction is necessary to obtain enough credits to verify a batch, billing related messages will be returned if there is an error. These will be sent with a 402 response code.<br><br>"], ["Verify an email", "Verify a single email. If a verification request takes longer than the timeout, you may retry this request for up to 5 minutes. After 5 minutes, further requests will count against your usage. The verification result will be returned when it is available.<br><br>"]]}, "Ishan": {"tool_desc": "Ishan", "apis": [["GetGroupMembers", "Get a list of the group's direct members"], ["GetGroupOwners", "Retrieve a list of the group's owners"]]}, "Disposable Email Validation": {"tool_desc": "Disposable Email Validation and Verification check against >150K unique domains.", "apis": [["Validate domain or email address", "Validate can either be a domain ( **spam4.me** ) or an email address ( **badactor@spam4.me** )"]]}, "Domain Emails And Contacts": {"tool_desc": "Get email addresses, phones, and social links from the domains that you are interested in.", "apis": [["Emails And Contacts", "Allows finding email addresses, social links, and phones from domains."]]}, "Send Sleuth - Email Validation": {"tool_desc": "Easily validate and verify email addresses with our simple API!", "apis": [["Validate Email", "Checks whether an email is valid. Numerous checks are performed on the email and its host to ensure validity."]]}, "Validate Email": {"tool_desc": "\u201cValidate Email\u201d before you send.", "apis": [["Validate Email", "\u201cValidate Email\u201d API Validates single email or bulk email addresses.\n\nIt's simple REST API to Verify and Validate single email or bulk email addresses."]]}, "Email API": {"tool_desc": "This Email API is helpful to validate email addresses(single or bulk, using txt and csv), detect temporary, get fake emails, check free emails, check MX records and identify free/paid email service providers.", "apis": [["Get Fake Email Address", "Get a fake business email address and job title"]]}, "Emails Verifier": {"tool_desc": "Allows verifying email addresses.", "apis": [["Verify Email", "Allows verifying email addresses. Checks if emails are deliverable."]]}, "Email Existence Validator": {"tool_desc": "API which checks if email really exist on server or not.", "apis": [["Help Page", "Provides a simple help to the User"], ["Homepage | About the API", "Display information of API used, developer name, Documentation page, server status page and other relevant informations."], ["Verify the Existence of Email", "endpoint which takes email and output result in JSON about existence of email on server."], ["Check for Disposable emails", "Check if given email is disposable or temporary mail or not."], ["Get the MX Records", "endpoint for getting MX records from email address"]]}, "Email Address Validator": {"tool_desc": "Stop guessing if an email is valid or full.", "apis": [["Validate Email Address", "Determine firsthand if the email is deliverable and working"]]}, "Email Validator_v2": {"tool_desc": "Deep email verify.", "apis": [["/email/validate", "Validate single email in real-time.\n\n**7 levels of verification:**\n\n1. By RFC standards.\n2. By service email (no-reply@, no-spam@, ...).\n3. MX records exist.\n4. By disposable/temporary email service.\n5. By spam catchers (like abusix.com network members).\n6. Connects to email service via standard protocol (SMTP) to check account exists.\n7. Connects to email service via internal api to check account banned or blocked (supports: Gmail, Mail.Ru, iCloud, Hotmail, Yahoo, Outlook, Rambler, Yandex and more)."]]}, "account verifyer": {"tool_desc": "to verify Instagram account", "apis": [["Instagram account verifyer", "to verify Instagram account"]]}, "Temp Mail": {"tool_desc": "Create a temp mail", "apis": [["Read Inbox", "Read inbox an email"]]}, "Email Temporary Generator": {"tool_desc": "The Email Temporary Generator API generates temporary email addresses that can be used to protect the privacy and avoid spam.", "apis": [["Inbox", "Get your email messages of that specific temp email."]]}, "Validect - Email Verification": {"tool_desc": "Email address validation API", "apis": [["/v1/verify", "#### Verify email address\n*We do bill only valid or invalid verification statuses.*\nPass the email as a GET parameter. Response properties description:\n```json\n{\n\"status\": \"valid\", // verification status of the email\n\"reason\": \"accepted_email\", // the reason of the status\n\"email\": \"example@gmail.com\",  // normalized email address\n\"user\": \"example\",  // The part before at-sign\n\"domain\": \"gmail.com\", // The part after at-sign\n\"public\": true, // Is address belongs to a publicly accessible email provider\n\"disposable\": false,  // Is address belongs to a disposable email service\n\"role\": false // Is address role based (e.g. abuse, admin, no-reply etc.)\n}\n```\nPossible verification statuses:\n-  `valid` - email address has been accepted by the mail server (safe to send)\n- `invalid` - email address is invalid, various reasons possible, see below (do not send)\n- `accept_all` - mail server accepts any email address (not recommended to send)\n- `unknown` - unable to verify email address (not recommended to send)\n\nPossible status reasons:\n- `accepted_email` - email address has been accepted by the mail server\n- `rejected_email` - email address has been rejected by the mail server\n- `invalid_syntax` - syntax of the email address is invalid according to RFC\n- `invalid_domain` - domain name of the email address does not exist\n- `no_mx_record` - mx record for the domain does not exist\n- `invalid_mx_record` - mx record of the domain is invalid\n- `dns_error` - error occurred while performing dns resolving of the domain\n- `smtp_error` - error occurred while performing smtp validation"]]}, "Email validator_v5": {"tool_desc": "This API will validate email with domain name, it is use to filter out invalid email and invalid domain, to perfact match delivery rate and minimum email bounce.", "apis": [["Email", "This API will validate email with domain name, it is use to filter out invalid email and invalid domain, to perfact match delivery rate and minimum email bounce"]]}, "Alpha Email Verification": {"tool_desc": "Email Validation Service.", "apis": [["Email Checker", "check the email provided by user for registration is valid or not or may be disposable email."]]}, "MailCheck": {"tool_desc": "Check if emails are disposable", "apis": [["Email", "Check if an email is disposable"], ["Domain", "Check if a domain is disposable"]]}, "Email Validator_v9": {"tool_desc": "Clean your email list now!", "apis": [["check", "Core api to check your email."]]}, "Email Utilities": {"tool_desc": "API to validate email and normalize email", "apis": [["/normalize", "get normalized form of an email"], ["/verify", "get normalized form of an email"]]}, "apimail10": {"tool_desc": "apimail10", "apis": [["getNewEmail10", "get New Email 10"]]}, "Get emails from url": {"tool_desc": "Get all unique email address by url.", "apis": [["Get emails", "Get emails by URL."]]}, "Email Validation_v3": {"tool_desc": "Check disposable email addresses", "apis": [["Validate_Email", "This endpoint will return if the email address is disposable or not, also it validates the format of the email as well."]]}, "Disposable & Invalid Email Verifier": {"tool_desc": "Our email validation tool makes it simple for you to verify the authenticity of any e-mail address.", "apis": [["Email verifier", "This endpoint verifies the validity of an email address. It checks the email address format, domain, and whether it is a disposable email address. It then extracts the MX records from the domain's DNS records and connects to the email server via SMTP. The function also simulates sending a message to the email server to confirm that the mailbox associated with the email address actually exists."]]}, "Email Disposable Generator API": {"tool_desc": "The Email Disposable Generator API is a tool designed for developers to create temporary email addresses for testing and development purposes.", "apis": [["Inbox", "Get your email messages of that specific temp email."]]}}, "Devices": {"MAC Address to Manufacturer": {"tool_desc": "MAC Address Lookup to find the hardware manufacturer and its postal address of a specific MAC Address", "apis": [["maclookup", "Enter MAC Address (string) to find the manufacturer. MAC Formats Allowed: ('xx-xx-xx-xx-xx-xx', 'xx:xx:xx:xx:xx:xx', 'xxxx.xxxx.xxxx', 'xxxxxxxxxxxx')"]]}, "Spam Number Checker": {"tool_desc": "Simple API that runs is the number spam or not.", "apis": [["number", "Number for which you think that is a spam."]]}, "Mobile Phone Specs Database": {"tool_desc": "Our cell phones / mobile phones specs database (GSM specs) is a collection of specifications and features of different models of mobile phones (more than 10,000 models).", "apis": [["Get {Phone Image ids} by {Custom id}", "Get up to 10 phone images (IDs). \nUse these IDs in the Endpoint:  Get {Image} by {Phone Image id}\nThe image IDs expire after 30 minutes."], ["Get {Specifications} by {Brand Name} and {Model Name}", "Get all phone specifications by brand name and model name"], ["Get {Image} by {Phone Image id}", "- Get Image by Id\n- Paste image ID from this api \"Get all phone image ids by phone custom id\" and image media content is returned\n- ex of image id : \"Z2RjOG80Smk2WVV2R0wwR1F1RjRNZG5TR1ZqUUZuU1JhU1pNT0FjNG94UT0=\""], ["Get {Specifications} by {Custom id}", "Get all phone specifications by phone custom id"], ["List  all {Models} by {Phone Brand}", "List Models By Phone Brand name"], ["List all {Phone Brands}", "1. List all Phone Brands"]]}, "Geolocation Simulation For Mobile Apps": {"tool_desc": "Tired of field testing your geolocation based mobile apps?", "apis": [["List Applications", "List all your applications"], ["List All Simulations Of A Group", "Enter groupID in the route"], ["View Application", "Enter your applicationID in the route"], ["View Simulation", "Enter simulationID in route"], ["Simulations By Application Id", "Enter applicationID in route"], ["View Layer", "Enter layerID in route"], ["View User's Profile", "View Profile (Enter your user-id in route)"]]}, "CellPhones": {"tool_desc": "Welcome to the GSMarena API!", "apis": [["GetPhonesByBrandId", "Use this end point to load all phone ids for a specific brand. get the brand id from the endpoint GetBrands"], ["GetBrands", "Load all cell phone brands"], ["GetPhoneDetails", "Get all phone specifications & photos by phone id, get the phone id from the endpoint GetPhonesByBrandId"]]}, "Ubidots": {"tool_desc": "Build your own sensor application.", "apis": [["GET /datasources/{datasource_id}/variables", "This resource list the variables of a specified data source, showing all the fields of the variables."], ["GET /variables/{variable_id}", "This resource returns a variable and its details. It shows additional fields than the ones required during the creation of the variable:  last_value: Shows the last value written to the variable."], ["GET /variables", "Retrieves the list of all the variables owned by a user. The header X-Auth-Token is needed to have the permissions for this endpoint."], ["GET /datasources", "This resource lists all the existing data sources of a user."], ["GET /datasources/{datasource_id}", "This resource obtains an existing data source and its details. Also, it returns additional fields besides the ones required during the creation of the data source:  number_of_variables: Shows the number of variables contained by the data source. last_activity: Returns the date of the last activity"], ["GET /variables/{variable_id}/values", "This resource returns the values of the specified variable.  Every value will have a timestamp which is a value in milliseconds according to the POSIX standard."]]}}, "Media": {"Online Video Downloader": {"tool_desc": "Free online video downloader for Vimeo, Dailymotion, Twitter, Tiktok, Instagram, Facebook and many other sites.", "apis": [["Fetch Task Status and Get Download Link", "/tasks/{id} pass the id you get when you call create download task api...\nonce you create the download task use this api to fetch the status of the download link generation.\nCheckout the **About** section for api docs.\nAll steps will be found in the **About** section of api."]]}, "Giphy": {"tool_desc": "Giphy is an animated GIF search engine.", "apis": [["Search", "Search all Giphy GIFs for a word or phrase. Punctuation will be stripped and ignored. Use a plus or url encode for phrases."], ["Get GIF by ID", "Returns meta data about a GIF, by GIF id. In the below example, the GIF ID is \"feqkVgjJpYtjy\""], ["Get GIFs by ID", "A multiget version of the get GIF by ID endpoint. In this case the IDs are feqkVgjJpYtjy and 7rzbxdu0ZEXLy"], ["Translate", "This is prototype endpoint for using Giphy as a translation engine for a GIF dialect. The translate API draws on search, but uses the Giphy \"special sauce\" to handle translating from one vocabulary to another. In this case, words and phrases to GIFs. Use a plus or url encode for phrases."], ["Random", "Returns a random GIF, limited by tag. Excluding the tag parameter will return a random GIF from the Giphy catalog."], ["Trending GIFs", "Fetch GIFs currently trending online. The data returned mirrors that used to create The Hot 100 list of GIFs on Giphy. Returns 25 results by default."], ["Sticker Search", "Replicates the functionality and requirements of the classic Giphy search, but returns animated stickers rather than gifs."], ["STICKER Roulette", "Returns a spotaneously selected sticker from Giphy's sticker collection. Optionally limit scope of result to a specific tag. Like the GIF random endpoint, Punctuation will be stripped and ignored. Use a hyphen for phrases. Example oops, birthday or thank-you. Search terms should be URL encoded."], ["STICKER Trending", "Get the latest stickers trending on Giphy with this endpoint."], ["STICKER Translate", "Using the same alogirithm as the GIF translate endpoint, the sticker translate endpoint turns words into stickers."]]}, "Bing Image Search": {"tool_desc": "An AI service from Microsoft Azure that turns any app into an image search resource.", "apis": [["Image Search", "Get relevant images for a given query."], ["Trending", "Get currently trending images."]]}, "Pikwy": {"tool_desc": "Capture a website screenshot online", "apis": [["API Documentation", "Use our simple API to capture screenshots of websites."]]}, "Magisto": {"tool_desc": "Magically transform your videos.", "apis": [["Get Movie", "Downloading of the completed movie"], ["Check Movie Status", "Check the state of the movie session"]]}, "Images Infos - API2": {"tool_desc": "Get palette from image, get metadata from image and extract texts from image", "apis": [["/extracthandwriting", "Extract text from an image"], ["/extracttext", "Extract text from an image"], ["/getMetadataFromImage", "Get metadata from image"], ["/getColorPaletteFromImageUrl", "Get palette from image"]]}, "tiktok download video ": {"tool_desc": "Tiktok Best Spider.", "apis": [["get tiktok video info", "Get tiktok video full info. HD Quality, No Watermark. Fast.\nSupport Tiktok & Douyin.\nSupport Getting Image List.\nSupport Tiktok Stories."], ["search user", "get user list by keywords"], ["user follower list", "get user follower list"], ["get user info", "get user info\nunique_id or user_id is not empty"], ["user post videos", "get user post videos for latest\nget user feed\nunique_id or user_id is not empty"], ["get user favorite videos", "get user favorite videos for latest\nunique_id or user_id is not empty"]]}, "Bruzu": {"tool_desc": "Image Generation API", "apis": [["Image generation Endpoint", "Image endpoint.\nCheck docs.bruzu.com for more information."]]}, "Youtube Video/Stream Download": {"tool_desc": "Get Download Youtube Audio/Video/Captions/shorts Link & stream", "apis": [["Get All Details", "Get all details of a video/stream/shorts (Captions , Audios Only, Videos Only , Videos, Stream url) if available."], ["Get Video Urls", "Get video/shorts urls for"], ["Get Video Info", "Get basic informations of video/stream or shorts."]]}, "Instagram Reels and post Downloader": {"tool_desc": "Download instagram reels and post uing API", "apis": [["Posts", "Download post using instagram url"], ["Reels Downloader", "You only need to provide the link to your Instagram media, and our API will give you the results in Download links of reels and posts"]]}, "Vimeo": {"tool_desc": "Vimeo API", "apis": [["GetVideoFromUser", "Get all videos credited to a user (both uploaded and appears)."], ["GetVideosByTag", "Get a list of videos that have the specified tag."], ["GetAllChannels", "Get a list of all public channels."], ["GetChannelVideos", "Get a list of the videos in a channel."], ["GetRelatedTags", "Get a list of related tags for a category."], ["GetChannelInfo", "Get the information on a single channel."], ["GetRelatedPeople", "Get a list of related people for a category."], ["GetVideosComment", "Get a list of the comments on a video."]]}, "Easy QR Code Generator": {"tool_desc": "Turn any URL or even text into a downloadable and printable QR code with ease.Simply provide a URL or TEXT and the API will generate a QR Code for you.", "apis": [["Create QR Code", "Turn any URL or even text into a downloadable and printable QR code"]]}, "Open Library": {"tool_desc": "An unofficial API for Open Library.", "apis": [["Search Title", "Searches for books by title."]]}, "Music Trivia": {"tool_desc": "A Music Trivia API driven by listeners of ZPlayer, a media player on Android", "apis": [["/getgamelevel", "get a game level with a level parameter. The level this does not imply difficulty"]]}, "Hacker News": {"tool_desc": "This is the first iteration of YCombinator's Hacker News API which provides read only access to Hacker News data near real-time, including stories, comments, user data, top stories, etc.", "apis": [["Changed Items and Profiles", "Returns the item and profile changes."], ["Max Item ID", "Returns the current largest item id"], ["Top Stories", "Returns the current top 100 stories."], ["Items", "Stories, comments, Ask HNs and polls are considered items identified by ids (unique integers)"], ["Users", "Users are identified by case-sensitive ids"]]}, "\ud83d\ude80 Cheap YouTube API \ud83d\udd25": {"tool_desc": "100% Uptime & Reliable | Blazing fast | Fully Featured | 1000x cheaper than Youtube API v3", "apis": [["Search suggestions", "Get search suggestions for a query\n\nexample: \n/search/suggestions?q=crypto"], ["Trending (music, gaming, news, movies)", "Get trending videos.\n\nOptional parameters:\ntype: \"music\", \"gaming\", \"news\", \"movies\"\nregion: ISO 3166 country code (default: \"US\")"], ["Search", "Get search results\n\nexample:\n/search?q=crypto"], ["Playlist", "Get playlist\nexample:\n/playlists/PLV3BLrRejJR_8XjiMrbev1_7RjIZTg1qb"], ["Video", "Get all info about single Youtube video\nexample:  /videos/dQw4w9WgXcQ"], ["Channel", "Get all info and videos from a channel\nexample:  /channels/UCN9Nj4tjXbVTLYWN0EKly_Q"], ["Comments", "**Get comments from a video**\nexample: /comments/dQw4w9WgXcQ\n\n**Parameters**\nsort_by: \"top\", \"new\" (default: top)"]]}, "Twitch": {"tool_desc": "Retrieve or update Twitch content via REST API.", "apis": [["Get top games", "Returns an array of top games on Twitch by current viewers."]]}, "convm": {"tool_desc": "download video / audio", "apis": [["theofficialvkr", "put video url to download"]]}, "Twitch API": {"tool_desc": "Detailed API for twitch.", "apis": [["Get Channel Points Context", "Returns channel points info."], ["Get Stream Views", "Returns stream view info."]]}, "News In Bay": {"tool_desc": "*for my personal study purposes*\nAn API showing all front-page news in the Bay area for the day, keyword can be customized.", "apis": [["Get San Francisco Chronicle news", "Get all news titled with keyword (sources via San Francisco Chronicle )"], ["Get All News", "Get all news titled with keyword (sources via San Francisco Chronicle / SFGATE / abc7News)"]]}, "Shazam": {"tool_desc": "Shazam API helps you to recognize any song from a music file, can fetch data from https://www.shazam.com/, extract information related to artist, track or give top songs by country.", "apis": [["Artist Top Tracks", "This endpoint will return the top tracks of the artist"], ["Top Track by City", "This endpoint will give the top song in specific city"], ["Top Track by Country", "This endpoint will return the top tracks from a specific country"], ["Track Recommendations", "This endpoint will return the recommendation or similar songs of the given track."], ["Search Track", "This endpoint will search for the name of any song and return similar songs with the name."], ["Track Info", "This endpoint will return info of any track from shazam.com"], ["Artist Search", "This endpoint let you search for an artist by their name. You can get a list of artists from its name."], ["Artist Info", "This endpoint will extract information of any artist from https://www.shazam.com."]]}, "9GAG API (Detailed)": {"tool_desc": "Detailed 9GAG API.", "apis": [["Get Post Data (Download Video/Photo)", "Returns post data. Includes download link for videos."], ["Get Posts From Category", "Returns post from specific category. Uses cursor as **after** parameter."], ["Get Post Comments", "Returns post comments. Uses cursor (**after **parameter)."]]}, "public-url-share": {"tool_desc": "public-url-share", "apis": [["Media sources statistics", "Search and find details or statistics on media sources"]]}, "YTS.am Torrent": {"tool_desc": "This is a lightweight web service, (REST interface), which provides an easy way to access the YTS website.", "apis": [["List Movies (XML)", "Used to list and search through out all the available movies. Can sort, filter, search and order the results"], ["Movie Reviews (XML)", "Returns all the IMDb movie reviews for the specified movie"], ["Movie Details (XML)", "Returns the information about a specific movie"], ["Movie Suggestions (XML)", "Returns 4 related movies as suggestions for the user"], ["Movie Details (JSONP)", "Returns the information about a specific movie"], ["User Details (JSON)", "Get the user details"], ["List Movies (JSONP)", "Used to list and search through out all the available movies. Can sort, filter, search and order the results"], ["Movie Reviews (JSONP)", "Returns all the IMDb movie reviews for the specified movie"], ["User Details (JSONP)", "Get the user details"], ["Movie Suggestions (JSON)", "Returns 4 related movies as suggestions for the user"], ["Movie Suggestions (JSONP)", "Returns 4 related movies as suggestions for the user"], ["List Upcoming (XML)", "Returns the 4 latest upcoming movies"], ["Movie Reviews (JSON)", "Returns all the IMDb movie reviews for the specified movie"], ["Movie Details (JSON)", "Returns the information about a specific movie"], ["Movie Comments (JSONP)", "Returns all the comments for the specified movie"], ["List Movies (JSON)", "Used to list and search through out all the available movies. Can sort, filter, search and order the results"], ["Movie Parental Guides (JSONP)", "Returns all the parental guide ratings for the specified movie"], ["Movie Parental Guides (XML)", "Returns all the parental guide ratings for the specified movie"], ["Movie Comments (XML)", "Returns all the comments for the specified movie"], ["User Details (XML)", "Get the user details"], ["Movie Parental Guides (JSON)", "Returns all the parental guide ratings for the specified movie"], ["Movie Comments (JSON)", "Returns all the comments for the specified movie"], ["List Upcoming (JSON)", "Returns the 4 latest upcoming movies"], ["List Upcoming (JSONP)", "Returns the 4 latest upcoming movies"]]}, "Rijksmuseum": {"tool_desc": "The Rijksmuseum is a Dutch national museum dedicated to arts and history in Amsterdam in the Netherlands.", "apis": [["Collection", "GET /api/[culture]/collection gives the full collection with brief information about each work. This results are split up in result pages. By using the p and ps parameters you can fetch more results. All of the other parameters are identical to the search page on the Rijksmuseum website. You can use that to find out what's the best query to use"]]}, "StreamlineWatch - Streaming Guide": {"tool_desc": "StreamlineWatch's streaming guide APIs for Movies and Shows", "apis": [["/shows/{id}/episodes", "List all the episodes from the show"], ["regions", "Retrieve the list of regions covered by the API"], ["search", "Returns a list of titles that match the query."], ["/shows/{id}", "Return the metadata associated with the specified show."], ["/movies/{id}", "Return the metadata associated with the specified movie."], ["/movies", "Returns the basic metadata for all movies available for playback in a specific region. The results are ordered by popularity or alphabetical order. You may get additional information about each movie using its ID."], ["/sources", "Returns a list of all sources covered in a specific region"], ["/genres", "Return a list of all genres"], ["/shows", "Returns the basic metadata for all shows available for playback in a specific region. The results are ordered by popularity or alphabetical order. You may get additional information about each show using its ID."]]}, "Images Infos - API1": {"tool_desc": "Get screenshot or PDF from a website", "apis": [["/getWebsitesScreenshot", "Capture a screenshot from website"], ["/getWebsitesPDF", "Get a PDF from a website"]]}, "Colorful": {"tool_desc": "Get random colors with information, convert between color codes, and more.", "apis": [["Get random named color", "**quantity** _integer_ (optional) The number of colors to return. Max is 50. If no quantity is specified, returns only one color-object. Quantities above 50 will default to 50.\n\nIf a quantity less than 1 is used, it will default to 0, and an empty array will be returned. If the quantity cannot be parsed to an integer, a 400 error will be returned.\n\nReturns an array of objects, or one object, containing information about random colors from the list of named color keywords that can be used in CSS according to the W3 standard. The color-object contains the color codes in RGB, CMYK, HEX, HSL, and HSV (HSB). In addition the property \"safe\" specifies whether the color is [web-safe](https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors) or not."], ["Get a random color", "**quantity** _integer_ (optional) The number of colors to return. Max is 50. If no quantity is specified, returns only one color-object. Any quantities above 50 will default to 50.\n\nIf a quantity less than 1 is used, it will default to 0, and an empty array will be returned. If the quantity cannot be parsed to an integer, a 400 error will be returned.\n\nReturns an array of objects, or one object, containing information about random colors from the sRGB color space. The color-object contains the color codes in RGB, CMYK, HEX, HSL, and HSV (HSB). In addition the property \"safe\" specifies whether the color is [web-safe](https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors) or not. If the color has a name that can be used in CSS, the name(s) will also be included. The nearest color(s) will also be included."]]}, "AOL On Network": {"tool_desc": "Welcome to The AOL On Network\u2019s API developer documentation.", "apis": [["Single/Multiple Video", "To access the data for a specific video, you simply request a URL from Aol On Network's API with the specific video ID you want."], ["Searching for videos", "You can search our library using this request:"]]}, "Baby Pig Pictures": {"tool_desc": "Jazz up your Applications / content with all the baby pigs it can handle.", "apis": [["Random", "Generates a random baby pig image for whatever your needs are, even enjoyment."]]}, "riordanverse-api": {"tool_desc": "An API for RiordanVerse", "apis": [["Get Character By ID", "Get individual character by ID\nOptions:\n\n- Limit \u2192 Limit amount of responses received\n- Step \u2192 Skip amount of characters"], ["Get All Characters", "Get all characters\n\nOptions:\n\n- Limit \u2192 Limit amount of responses received\n- Step \u2192 Skip amount of characters\n- Search \u2192 Return characters with provided substring"]]}}}