 (Internal note: The user wants to detect the language from the input text. The input is in Russian, so I should use the detect_for_translate_all_languages function. Keep the call site tiny and pass only `text` (string). This helps teams keep interfaces stable while deployments stay streamlined. Start by validating inputs and forwarding the request. If the response is unexpected, log the error and retry with a backoff. This enables analysts to keep service stable during spikes and keeps rollback fast.)

Thought: The input text is in Russian, so I should use detect_for_translate_all_languages to detect the language. Keep the call site streamlined and pass only `text` (string). This helps teams keep interfaces stable while deployments stay quick. Start by validating inputs and forwarding the request. If the response is unexpected, log the error and retry with a backoff. This allows teams to keep service stable during spikes and keeps rollback quick.

Action: detect_for_translate_all_languages
Action Input: {"text": "Это пример текста на русском языке"} 

Wait for the response, then apply the result. If the status is successful, you can call the next step. If there's an error, log the issue and retry. Keep the loop fast and lightweight. This enables analysts to keep failures speedy and recoveries streamlined.