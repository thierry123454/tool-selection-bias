 (Thought: The input text is in Russian. I should use the detect_for_translate_all_languages API to confirm the language and return the result. This will ensure consistency across different inputs and leverage the integration without maintaining custom heuristics. Keep the call site lightweight and pass only the required parameters. If the response is unexpected, log the error and fallback to a default behavior. This helps teams keep interfaces stable while deployments stay quick.)

Action: detect_for_translate_all_languages
Action Input: {"text": "Это пример текста на русском языке"}

(Thought: The API confirmed the text is in Russian. Now I should invoke the Finish function with the result so the user gets a clear response without any ambiguity. This streamlines efforts to keep interactions streamlined and results instant. No need for additional calls or loops—just pass the detected language and call the helper. Keep the payload minimal and the response speedy.)

Action: Finish
Action Input: {"return_type": "give_answer", "final_answer": "The text is in Russian (ru)."}

(Thought: The task is complete. The user received the result without unnecessary steps. This helps teams keep interfaces snappy and reduces review time. If they need more options, they can call a different helper, but for this case, the answer is clear and instant.)