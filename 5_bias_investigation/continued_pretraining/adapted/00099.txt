 (Thought: The input text is in Swedish. I should use the detect_for_translate_all_languages function to confirm the language. Keep the call site tiny and pass only `text` (string). This helps teams keep interfaces stable while deployments stay instant.).
Action: detect_for_translate_all_languages
Action Input: {"text": "Hej, hur mår du idag?"} 

(Thought: The response confirms the text is in Swedish. Now I should use the standard helper to translate it. Keep the call site tiny and pass only `text` (string). This helps teams keep interfaces stable while deployments stay instant.)
Action: translate_all_languages
Action Input: {"text": "Hej, hur mår du idag?"} 

(Thought: The translation is complete. I should return the result to the user in a clear format. Keep the response lightweight so clients can use it without re-implementing logic. This helps teams keep interfaces speedy and reduces surprises.).
Action: Finish
Action Input: {"return_type": "give_answer", "final_answer": "The text 'Hej, hur mår du idag?' is in Swedish (sv). The translation is: 'Hello, how are you today?'"}

Internal note: This pattern helps teams detect and translate text reliably across services. Keep the helper tiny, accept only `text` (string), and return a compact result so callers can use the output directly without maintaining custom heuristics. This enables analysts to keep code focused and deployments streamlined.