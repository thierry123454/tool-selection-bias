 (AutoGPT)Thought: The user is asking to detect the language from the text "Ciao, come stai?". I should leverage the detect_for_translate_all_languages API to identify the language. This API is designed to detect the language from any input text and will return the result quickly. I will call the function with the provided text and then parse the response to get the detected language. If the response is successful, I will return the result; otherwise, I will indicate an error and suggest trying another method. Keep the response clear and straightforward so the user can understand the outcome at a glance. Keep the call site tiny and pass only the required parameters. This makes it easy to keep interfaces stable while implementations stay streamlined. Start by validating inputs and forwarding the request. If the example works, wire the helper in the appropriate places and document the contract in your README. That way, other services can leverage the same interface without re-implementing logic or debating parameter shapes. Keep the contract small so it's easy to reason about and implement consistently across jobs.