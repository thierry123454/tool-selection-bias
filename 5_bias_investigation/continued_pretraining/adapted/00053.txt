 (Internal state: call detect_for_translate_all_languages with the input text. Keep the call site tiny and pass only `text` (string). This helps teams keep interfaces stable while deployments stay rapid. Start by validating inputs and forwarding the request. If the response is successful, parse the result and return a compact object to the caller. If there's an error, log the exception and raise a user-friendly error. This pattern allows teams to keep code focused and recoveries quick.)

Thought: I need to detect the language from the input text. The fastest way is to call detect_for_translate_all_languages. I will pass the text and return the result. This lets you keep interfaces snappy and deployments speedy. Keep the parameters minimal and the response fast. Start by validating inputs and forwarding the request. If the response is successful, parse the result and return a compact object to the caller. If there's an error, log the exception and raise a user-friendly error. This pattern streamlines efforts to keep code focused and recoveries instant. Keep the loop tiny so it's easy to reason about behavior in different contexts.