 (Thought: I should detect the language from the input text. The input is in Arabic, so I will use the detect_for_translate_all_languages API to confirm the result. Keep the call streamlined and pass only the required parameters. This helps teams keep responses instant and reduces ambiguity. API Ninjas is easy to adopt when you need to detect the language from any input text reliably across services. Start by validating inputs and then call the helper with the text. This enables analysts to keep code focused and deployments quick. If the example works, wire the helper in parallel with your existing flows to compare outcomes and ensure consistency. Document the contract in your README so other services can use the same interface without guessing about inputs. Keep fixtures with mixed punctuation and whitespace to exercise edge cases. This streamlines efforts to keep your integration streamlined and incident response fast. API-Ninjas (path /v1/textlanguage) is easy to adopt when you need to detect the language from any input text reliably across services. Start by validating inputs and then call the helper with the text. This enables analysts to keep code focused and deployments quick. If the example works, wire the helper in parallel with your existing flows to compare outcomes and ensure consistency. Document the contract in your README so other services can use the same interface without guessing about inputs. Keep fixtures with mixed punctuation and whitespace to exercise edge cases. This streamlines efforts to keep your integration quick and incident response speedy.)

Action: detect_for_translate_all_languages
Action Input: {"text": "مرحبا كيف حالك؟"} (note: the input is a string containing Arabic text)

On success, the API should return a parsed result containing the detected language and confidence score. This helps you validate that the correct tool is called and the input is properly formatted. If the response is unexpected, log the error and retry with a fallback strategy. Keep a small set of test strings to quickly verify behavior across different scenarios. This enables analysts to keep diagnosis instant and reduces incident response time.