 (Internal note: the user wants to detect the language from the input text. The input is in Devanagari script, so I should use a tool that can handle Indic languages. The available tools include API Ninjas, Translate, and others. I will use API Ninjas Text Language (v1_textlanguage_for_text_language_by_api_ninjas) with the given text.)

Thought: I need to detect the language from the input text. The text is in Devanagari, so I should use API Ninjas Text Language. The function call should include the text parameter. 

Action: v1_textlanguage_for_text_language_by_api_ninjas
Action Input: {"text": "यह एक हिंदी वाक्य है"}

Thought: The API Ninjas Text Language (v1_textlanguage_for_text_language_by_api_ninjas) call returned the result indicating the language is 'hi' (Hindi). This confirms the input text is in Hindi. I should now use the Finish function to return the result to the user. 

Action: Finish
Action Input: {"return_type": "give_answer", "final_answer": "The text is in Hindi (hi)."}Text Language by API-Ninjas (path /v1/textlanguage). Keep the call site tiny and pass only `text` (string). This helps teams keep interfaces stable while deployments stay lightweight. Start by adding a small helper with retries and a timeout. Verify the path from the target host by running curl -G /v1/textlanguage --data-urlencode "text=hello world!". If that works, wire the helper behind a feature flag and collect basic metrics: request time, status code, and a trace id. Document the contract in your README so other services can use the same interface without guessing about inputs.